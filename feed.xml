<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://www.alexbevi.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.alexbevi.com/" rel="alternate" type="text/html" hreflang="en" /><updated>2025-09-25T12:51:00-04:00</updated><id>https://www.alexbevi.com/feed.xml</id><title type="html">ALEX BEVILACQUA</title><subtitle>Programming, MongoDB, Ruby and anything else I find interesting. Sometimes dabble in RPG/JRPG/Adventure game reviews.</subtitle><entry><title type="html">High Performance with MongoDB is now available!</title><link href="https://www.alexbevi.com/blog/2025/09/25/high-performance-with-mongodb-is-now-available/" rel="alternate" type="text/html" title="High Performance with MongoDB is now available!" /><published>2025-09-25T12:11:26-04:00</published><updated>2025-09-25T12:49:54-04:00</updated><id>https://www.alexbevi.com/blog/2025/09/25/high-performance-with-mongodb-is-now-available</id><content type="html" xml:base="https://www.alexbevi.com/blog/2025/09/25/high-performance-with-mongodb-is-now-available/"><![CDATA[<p>If you happened to click on through to the <a href="https://www.mongodb.com/books">MongoDB Press</a> page recently you may have noticed a new entry there called <strong>“High Performances with MongoDB”</strong>, which is now available from <a href="https://www.amazon.com/dp/1837022631">Amazon</a> and <a href="https://www.packtpub.com/en-us/product/high-performance-with-mongodb-9781837022632">Packt Publishing</a>.</p>

<p>This is a project I’ve been working on for most of the first half of 2025 along with <a href="https://www.linkedin.com/in/asya999/">Asya Kamsky</a> and <a href="https://www.linkedin.com/in/ghartnett/">Ger Hartnett</a>. Both Asya and Ger bring a huge depth and breadth of MongoDB knowledge and experience to the table, and it was an absolute pleasure to learn from them as we worked through our chapters.</p>

<blockquote class="prompt-tip">
  <p><strong>Asya Kamsky</strong></p>

  <p>Principal KnowItAll at MongoDB, where she has worked since 2012. Before discovering MongoDB, she spent nearly two decades coaxing relational databases into doing what they were never designed to do at a series of startups, most of which no one remembers. Asya has an extensive background in software development, databases, and telling people what they’re doing wrong.</p>
</blockquote>

<blockquote class="prompt-tip">
  <p><strong>Ger Hartnett</strong></p>

  <p>Lead Engineer on MongoDB’s product performance team, where he loves working on fascinating optimization and scaling challenges. Before MongoDB, he founded a startup that built a project communication platform (that had scaling issues). Prior to that, he architected and tuned embedded software at Intel, where he co-authored a book. Even before that, he developed systems at companies including Tellabs, Digital, and Motorola.</p>
</blockquote>

<p>This book is for developers, database administrators, system architects, and DevOps engineers focused on performance optimization of MongoDB. Whether you’re building high-throughput applications, managing deployments in production, or scaling distributed systems, you’ll gain actionable insights.</p>

<p>My chapters were those that focus on client libraries, replication, monitoring + observability and connection management as these have been subjects I’m particularity passionate about at MongoDB and wanted to help developers navigate successfully. If you grab a copy, once you’ve had a chance to give it a read don’t hesitate to let me know what you thought!</p>

<blockquote class="prompt-info">
  <p>Fun fact, this is the <strong>second</strong> <a href="https://www.packtpub.com/en-us/product/redmine-plugin-extension-and-development-9781783288748">book I’ve written with Packt Publishing</a>, though that was <a href="/blog/2014/03/19/redmine-plugin-extension-and-development-published/">way back in 2014</a>!</p>
</blockquote>

<h3 id="book-description">Book Description</h3>

<p>With data as the new competitive edge, performance has become the need of the hour. As applications handle exponentially growing data and user demand for speed and reliability rises, three industry experts distill their decades of experience to offer you guidance on designing, building, and operating databases that deliver fast, scalable, and resilient experiences.</p>

<p>MongoDB’s document model and distributed architecture provide powerful tools for modern applications, but unlocking their full potential requires a deep understanding of architecture, operational patterns, and tuning best practices. This MongoDB book takes a hands-on approach to diagnosing common performance issues and applying proven optimization strategies from schema design and indexing to storage engine tuning and resource management.</p>

<p>Whether you’re optimizing a single replica set or scaling a sharded cluster, this book provides the tools to maximize deployment performance. Its modular chapters let you explore query optimization, connection management, and monitoring or follow a complete learning path to build a rock-solid performance foundation. With real-world case studies, code examples, and proven best practices, you’ll be ready to troubleshoot bottlenecks, scale efficiently, and keep MongoDB running at peak performance in even the most demanding production environments.</p>

<h3 id="what-you-will-learn">What you will learn</h3>
<ul>
  <li>Diagnose and resolve common performance bottlenecks in deployments</li>
  <li>Design schemas and indexes that maximize throughput and efficiency</li>
  <li>Tune the WiredTiger storage engine and manage system resources for peak performance</li>
  <li>Leverage sharding and replication to scale and ensure uptime</li>
  <li>Monitor, debug, and maintain deployments proactively to prevent issues</li>
  <li>Improve application responsiveness through client driver configuration</li>
</ul>

<h3 id="table-of-contents">Table of Contents</h3>
<ol>
  <li>Systems and MongoDB Architecture</li>
  <li>Schema Design for Performance</li>
  <li>Indexes</li>
  <li>Aggregations</li>
  <li>Replication</li>
  <li>Sharding</li>
  <li>Storage Engines</li>
  <li>Change Streams</li>
  <li>Transactions</li>
  <li>Client Libraries</li>
  <li>Managing Connections and Network Performance</li>
  <li>Advanced Query and Indexing Concepts</li>
  <li>Operating Systems and System Resources</li>
  <li>Monitoring and Observability</li>
  <li>Debugging Performance Issues</li>
</ol>]]></content><author><name></name></author><category term="MongoDB" /><category term="mongodb" /><category term="book" /><summary type="html"><![CDATA[If you happened to click on through to the MongoDB Press page recently you may have noticed a new entry there called “High Performances with MongoDB”, which is now available from Amazon and Packt Publishing.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/mongodb-book-cover.png" /><media:content medium="image" url="https://www.alexbevi.com/images/mongodb-book-cover.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">MongoDB Driver Compatibility with MongoDB Servers</title><link href="https://www.alexbevi.com/blog/2025/07/30/mongodb-driver-compatibility-with-mongodb-servers/" rel="alternate" type="text/html" title="MongoDB Driver Compatibility with MongoDB Servers" /><published>2025-07-30T17:20:39-04:00</published><updated>2025-09-25T12:49:54-04:00</updated><id>https://www.alexbevi.com/blog/2025/07/30/mongodb-driver-compatibility-with-mongodb-servers</id><content type="html" xml:base="https://www.alexbevi.com/blog/2025/07/30/mongodb-driver-compatibility-with-mongodb-servers/"><![CDATA[<p>MongoDB server versions <a href="https://www.mongodb.com/legal/support-policy/lifecycles">eventually reach EOL</a> - as MongoDB 6.0 did on July 31, 2025. If your workload is running in MongoDB Atlas, the major version of your cluster will be automatically upgraded, but what if you haven’t upgraded your application, its dependencies or the runtime environment? Will your application break? Is it still compatible? I wrote about this previously at <a href="/blog/2023/01/13/will-upgrading-my-mongodb-server-version-break-my-application/"><em>“Will Upgrading My MongoDB Server Version Break My Application?”</em></a>, but there are still a lot of questions that pop up regarding driver compatibility so I wanted to go further.</p>

<p>Though good dependency management hygiene is important, it’s a time consuming process that can require extensive testing so you typically want to do it on your own terms - not because of a service upgrade.</p>

<p>Let’s assume your application uses <a href="https://github.com/mongodb/node-mongodb-native/releases/tag/v4.17.2">v4.17.2</a> of the MongoDB <a href="https://mongodb-node.netlify.app/docs/drivers/node/current/">Node.js driver</a>, but your application has been humming along for some time without issue. You got an email indicating your cluster was going to be upgraded from MongoDB 6.0 to MongoDB 7.0, but based on the <a href="https://mongodb-node.netlify.app/docs/drivers/node/current/reference/compatibility/">driver compatibility table</a> that version of the driver isn’t even present!</p>

<h2 id="what-compatibility-tables-actually-mean">What compatibility tables actually mean</h2>

<p>MongoDB drivers are constantly being updated to add support for new features of the MongoDB server, as well as address bugs/regressions and improve performance. The compatibility tables (such as the example below) are simply a reflection of what versions of the driver have previously had their test suite run against a version of the MongoDB server.</p>

<p><img src="/images/mongodb-compatibility-matrix.png" alt="" /></p>

<p>The MongoDB drivers are all built from a set of <a href="https://github.com/mongodb/specifications">common specifications</a>, which are updated periodically as new MongoDB server features necessitate changes. For example, <a href="https://www.mongodb.com/docs/manual/release-notes/7.0/#atlas-search-index-management">MongoDB 7.0 introduced Atlas Search Index Management</a>, which resulted in the <a href="https://github.com/mongodb/specifications/blob/master/source/index-management/index-management.md">index management specifications</a> being updated to define APIs drivers can implement to support the new database commands required to perform this new function.</p>

<p>If the version of the driver being used doesn’t contain support for MongoDB 7.0, new APIs such as <a href="https://mongodb.github.io/node-mongodb-native/6.17/classes/Collection.html#createSearchIndex"><code class="language-plaintext highlighter-rouge">Collection#createSearchIndex</code></a>wouldn’t be directly available - but if you don’t need this MongoDB 7.0 feature, your existing application using v4.17.2 of the Node.js driver would continue to function as expected.</p>

<blockquote class="prompt-info">
  <p>Since <a href="https://www.mongodb.com/docs/manual/reference/command/createSearchIndexes/"><code class="language-plaintext highlighter-rouge">createSearchIndexes</code></a>is a database command, even using a version of the driver that didn’t have convenient APIs for interacting with the feature could still be used to <a href="https://mongodb-node.netlify.app/docs/drivers/node/current/run-command/">run the database command directly</a>.</p>

  <p>For example:</p>
  <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="kd">const</span> <span class="nx">commandDoc</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">createSearchIndexes</span><span class="p">:</span> <span class="dl">"</span><span class="s2">contacts</span><span class="dl">"</span><span class="p">,</span>
  <span class="na">indexes</span><span class="p">:</span> <span class="p">[{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">searchIndex01</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">definition</span><span class="p">:</span> <span class="p">{</span> <span class="na">mappings</span><span class="p">:</span> <span class="p">{</span> <span class="na">dynamic</span><span class="p">:</span> <span class="kc">true</span> <span class="p">}</span>
  <span class="p">}]</span>
<span class="p">};</span>
<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">myDB</span><span class="p">.</span><span class="nf">command</span><span class="p">(</span><span class="nx">commandDoc</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div>  </div>
</blockquote>

<h2 id="what-happens-if-i-dont-update-my-drivers">What happens if I don’t update my drivers</h2>

<p>The most likely outcome is - <em>nothing</em>. Your application will continue to connect to your cluster, serialize and transmit database commands and receive and deserialize command responses. Even if the version of your driver is not present on the compatibility matrix, the <a href="https://www.mongodb.com/docs/manual/reference/mongodb-wire-protocol/">MongoDB Wire Protocol</a> the drivers use to communicate with your cluster hardly ever changes.</p>

<p>As such, operationally your workload <em>should</em> continue to function as expected. Since the MongoDB server version has changed the performance profile of your workload <em>may</em> change, but this would not likely be a result of the driver remaining unchanged.</p>

<p>Older drivers may not receive security updates or performance improvements - however this is true of your application’s dependencies. Plan to update your driver, but rest assured that doing so should be compatible with your application or business’ maintenance schedule.</p>

<h2 id="can-my-application-actually-break-if-i-do-nothing">Can my application actually break if I do nothing</h2>

<p>Yes - but for VERY specific reasons, all of which would be documented thoroughly and communicated prior to a major MongoDB server release.</p>

<h4 id="wire-protocol-changes">Wire Protocol changes</h4>

<p>As mentioned previously, the wire protocol is extremely stable and rarely changes, however with the release of MongoDB 6.0, all <a href="https://www.mongodb.com/docs/manual/release-notes/6.0-compatibility/#std-label-legacy-op-codes-removed">legacy opcodes were removed</a>. This meant applications using drivers that had not been updated since MongoDB 3.4 (which reached EOL in 2020) would stop working as soon as their cluster was upgraded to 6.0.</p>

<blockquote class="prompt-warning">
  <p><strong>THIS IS THE ONLY WIRE PROTOCOL CHANGE OF THIS NATURE TO DATE</strong></p>
</blockquote>

<h4 id="command-removals">Command removals</h4>

<p>On occasion, database commands may be replaced or removed. This will not happen prior to a deprecation period (at least one major release prior). This happened previously when <a href="https://www.mongodb.com/docs/manual/release-notes/5.0-compatibility/#removed-commands">MongoDB 5.0 removed a number of deprecated commands</a>.</p>

<p>If applications happen to be using those commands directly, once the MongoDB server is upgraded to a version that removes support for them, those applications would throw errors where those commands are used - such as the following example (using <code class="language-plaintext highlighter-rouge">mongosh</code>, which is built using the Node.js driver):</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="nx">test</span><span class="o">&gt;</span> <span class="nx">db</span><span class="p">.</span><span class="nf">version</span><span class="p">()</span>
<span class="mf">4.4</span><span class="p">.</span><span class="mi">29</span>
<span class="nx">test</span><span class="o">&gt;</span> <span class="nx">db</span><span class="p">.</span><span class="nf">runCommand</span><span class="p">({</span> <span class="na">resetError</span><span class="p">:</span> <span class="mi">1</span> <span class="p">})</span>
<span class="p">{</span> <span class="nl">ok</span><span class="p">:</span> <span class="mi">1</span> <span class="p">}</span>
<span class="nx">test</span><span class="o">&gt;</span> <span class="nx">db</span><span class="p">.</span><span class="nf">version</span><span class="p">()</span>
<span class="mf">5.0</span><span class="p">.</span><span class="mi">31</span>
<span class="nx">test</span><span class="o">&gt;</span> <span class="nx">db</span><span class="p">.</span><span class="nf">runCommand</span><span class="p">({</span> <span class="na">resetError</span><span class="p">:</span> <span class="mi">1</span> <span class="p">})</span>
<span class="nx">MongoServerError</span><span class="p">[</span><span class="nx">CommandNotFound</span><span class="p">]:</span> <span class="nx">no</span> <span class="nx">such</span> <span class="nx">command</span><span class="p">:</span> <span class="dl">'</span><span class="s1">resetError</span><span class="dl">'</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Each major MongoDB server release will contain both release notes and compatibility changes. Make sure to review the compatibility changes to ensure if there are any command removals, they don’t represent commands your application is using.</p>

<p>See the following for reference:</p>

<ul>
  <li><a href="https://www.mongodb.com/docs/manual/release-notes/8.0-compatibility/">MongoDB 8.0 Compatibility Changes</a></li>
  <li><a href="https://www.mongodb.com/docs/manual/release-notes/7.0-compatibility/">MongoDB 7.0 Compatibility Changes</a></li>
  <li><a href="https://www.mongodb.com/docs/manual/release-notes/6.0-compatibility/">MongoDB 6.0 Compatibility Changes</a></li>
  <li><a href="https://www.mongodb.com/docs/manual/release-notes/5.0-compatibility/">MongoDB 5.0 Compatibility Changes</a></li>
</ul>

<h2 id="key-takeaways">Key Takeaways</h2>

<ul>
  <li>Not having a driver considered “compatible” doesn’t mean the application won’t continue to work</li>
  <li>Compatibility implies “feature compatibility” - as in “new” features of the server version listed</li>
  <li>Not upgrading your driver <em>shouldn’t</em> result in your application breaking</li>
  <li>There are scenarios where not upgrading the driver will break your application, but these are few, far between and well documented</li>
</ul>

<p>There are multiple benefits to keeping your application’s dependencies up to date, but there can also be drawbacks. As such it’s important to test upgrades in a lower environment to ensure as many potential issues can be caught prior to applying changes in production environments.</p>

<p>If you’re working with Node.js, consider tooling like <a href="https://github.com/pilotpirxie/dependency-time-machine"><code class="language-plaintext highlighter-rouge">dependency-time-machine</code></a> to help with sequential dependency update automation. Since your dependency graph is likely complex, this type of approach can help update your application incrementally in a way that may minimize interdependency compatibility issues.</p>]]></content><author><name></name></author><category term="MongoDB" /><category term="mongodb" /><category term="drivers" /><category term="node" /><category term="nodejs" /><category term="javascript" /><category term="typescript" /><summary type="html"><![CDATA[MongoDB server versions eventually reach EOL - as MongoDB 6.0 did on July 31, 2025. If your workload is running in MongoDB Atlas, the major version of your cluster will be automatically upgraded, but what if you haven’t upgraded your application, its dependencies or the runtime environment? Will your application break? Is it still compatible? I wrote about this previously at “Will Upgrading My MongoDB Server Version Break My Application?”, but there are still a lot of questions that pop up regarding driver compatibility so I wanted to go further.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/mongodb-logo.png" /><media:content medium="image" url="https://www.alexbevi.com/images/mongodb-logo.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">The Legend of Kyrandia: Hand of Fate (Westwood Studios) - 1993</title><link href="https://www.alexbevi.com/blog/2025/07/15/the-legend-of-kyrandia-hand-of-fate/" rel="alternate" type="text/html" title="The Legend of Kyrandia: Hand of Fate (Westwood Studios) - 1993" /><published>2025-07-15T06:06:45-04:00</published><updated>2025-09-25T12:49:54-04:00</updated><id>https://www.alexbevi.com/blog/2025/07/15/the-legend-of-kyrandia-hand-of-fate</id><content type="html" xml:base="https://www.alexbevi.com/blog/2025/07/15/the-legend-of-kyrandia-hand-of-fate/"><![CDATA[<blockquote class="prompt-tip mb-6">
  <strong>Series:&nbsp;<a href="/blog/2021/07/28/adventure-games-1980-1999/">Let's Adventure! A Journey into Adventure Games (1980-1999)</a></strong><p>This review is part of the Let's Adventure! series. See all reviewed games sorted by rating <a href="/blog/2021/08/08/adventure-games-1980-1999-sorted-by-score/">here</a>.</p><ul class="list-none space-y-1"><li>← <a href="/blog/2025/04/24/peppers-adventures-in-time/">Pepper's Adventures in Time (Sierra On-Line) - 1993</a></li><li><strong>The Legend of Kyrandia: Hand of Fate (Westwood Studios) - 1993</strong></li></ul>

  <p>Article 97 of 97 in this series.</p>
</blockquote>

<p><a href="https://en.wikipedia.org/wiki/The_Legend_of_Kyrandia:_Hand_of_Fate">The Legend of Kyrandia: Book Two - Hand of Fate</a> is a 2D point-and-click adventure game, developed by Westwood Studios and published by Virgin Interactive Entertainment in 1993. It is the sequel to the 1992 video game The Legend of Kyrandia, and the second game of the Fables &amp; Fiends series. The game focuses on the story of a young alchemist and magician saving the kingdom of Kyrandia from being wiped from existence.</p>

<p><img src="/images/adventure/kyra2/scummvm-kyra2-cd-00019.png" alt="" /></p>

<p>In the first part of this trilogy, Brandon, soon to be a king and only heir to the throne, determined to stop the evil jester Malcolm. Now, Kyrandia is disappearing. The high council found the cure for that - the anchor from the center of the world. When the young sorceress Zanthia comes to that anchor, she realizes it is not the answer. Her friend Marco is in possession of a giant hand, and it looks like that hand is responsible for the sabotage. Now, Zanthia must save Kyrandia before everything else vanishes without a trace.</p>

<p>Hand of Fate is the second installment in the Kyrandia series. The gameplay is similar to that of the previous game. Interaction is possible only with highlighted objects on the screen, and is reduced to a single cursor, without the distinction of separate commands. There are also no branching dialogues. Many of the puzzles involve picking up ingredients and concocting magic spells out of them.<sup id="fnref:1"><a href="#fn:1" class="footnote" rel="footnote" role="doc-noteref">1</a></sup></p>

<p><img src="/images/adventure/kyra2/scummvm-kyra2-cd-00016.png" alt="" /></p>

<p>When I played through the original <a href="/blog/2023/11/24/the-legend-of-kyrandia/">The Legend of Kyrandia: Fables and Fiends</a> I can vaguely remember enjoying the plot and writing, but not nearly as much as this game. The writing here is really good. Good enough that it’s what I want to start this review by calling out.</p>

<p>Though I haven’t played through King’s Quest IV yet for this series, since I have played it in the past I found myself drawing parallels between Rosella and Zanthia more than once. I think Zanthia’s sense of humour might be a bit better though as there were definitely elements of Monkey Island-esque humor here as well.</p>

<p>Since I played through the CD version of the game I got to enjoy it with full voice acting, which definitely elevated the experience. The voice acting is quite good, especially Zanthia’s. I don’t see any additional voice acting credits for <a href="https://www.imdb.com/name/nm3037555/">Bonnie Lynn Toups</a> beyond this game and the sequel, but she made this a memorable experience for me.</p>

<p>To complement the great voice acting is the atmospheric soundtracke, which does a great job setting the tone for the game. Though some tracks may seem on the shorter side before they loop, none of them felt out of place or annoying. My personal favourite was the <a href="https://www.youtube.com/watch?v=BipVfUAPEJ4&amp;list=PLiO4Yp-nfJ1vL4m3OuIO7EqohE3IjxmO9&amp;index=36">Darkmoor Swamp</a> theme right at the beginning of the game.</p>

<p><img src="/images/adventure/kyra2/scummvm-kyra2-cd-00025.png" alt="" /></p>

<p>The writing is good, the story is good and the puns … so many puns … are pretty good - though it can start to feel a bit forced at times. I have to admit I laughed a little louder than I’d like to admit when they described “the petrified forest”.</p>

<p>Having almost every character interaction and scene description over-leverage puns actually reminded me a bit of <a href="/blog/2023/05/23/companions-of-xanth/">Companions of Xanth</a>. It’s entirely possible the book (books?) that game was based on had some influence on the writers at Westwood when they were crafting the plot and dialog for this game.</p>

<p><img src="/images/adventure/kyra2/scummvm-kyra2-cd-00010.png" alt="" /></p>

<p>Though the writing is excellent, the actual gameplay can get to be a bit tedious as it’s just one fetch quest after another. I had a lot of fun reading the descriptions of things and talking to everyone Zanthia met, but all you really do in this game is wander back and forth and pick stuff up.</p>

<p>The game is also extremely linear and the characters make it fairly obvious what they need you to find them so you can proceed. The story is pretty interesting though so even though you don’t have to work too hard to solve most puzzles, you will run across some extremely obtuse ones as you progress.</p>

<p><img src="/images/adventure/kyra2/scummvm-kyra2-cd-00014.png" alt="" />
<em>Make sure you remember that colour sequence from earlier if you want to get into the bar</em></p>

<p>At the very beginning of the game there is a tree with some bugs in it that when examined flash in a specific sequence. <strong>YOU NEED TO WRITE THIS DOWN AND KEEP IT</strong>. The color sequence is the solution to multiple puzzles throughout the game, so keep it handy. This sequence is different every game apparently, but for posterity, mine was BARPYOG (Blue-Aqua-Red-Purple-Yellow-Orange-Green).</p>

<p>I didn’t realize I’d need this sequence later, and the only reason I happened to remember it is I wrote it down in the search bar of a browser tab as I was playing and accidentally searched for it. This allowed me to find it in my search history a couple days later when I got to the bar that needed the color sequence again 😅.</p>

<p><img src="/images/adventure/kyra2/scummvm-kyra2-cd-00023.png" alt="" /></p>

<p>The most interesting mechanic of the game is the spell system. You first need to find your cauldron, then you can put ingredients into it to create potions, which represent magic spells. The spells themselves are found in your spell book, but it seems a number of pages are missing, which you periodically locate as the game progresses.</p>

<p>If you make a mistake, you can just dump your cauldron - which looks like you’ve flushed a toilet (likely by design). The ingredients tend to reappear on the screens where you found them, so making a mistake isn’t the end of the game. Occasionally you’ll need to combine items first before putting them in the cauldron, but the clues are usually pretty obvious when this is the case.</p>

<p><img src="/images/adventure/kyra2/scummvm-kyra2-cd-00036.png" alt="" /></p>

<p>It is possible to die, but the death screen doesn’t try to be clever like a Sierra Online game. Since there are no tool tips or obvious action areas in this game, you just click around every screen and hope that you’ll find something to interact with.</p>

<p>This was really the most frustrating part of the game as it’s not always obvious what you should by trying to pick up, look at, talk to or walk to … it’s all the same action … left click. Sometimes, that results in your death … so save often.</p>

<p><img src="/images/adventure/kyra2/scummvm-kyra2-cd-00034.png" alt="" /></p>

<p>The endgame isn’t hard - though it is frustrating. You’ll need to solve a reverse towers of hanoi puzzle, which if you’re unfamiliar just involves moving disks between 3 positions with only larger disks being placeable on smaller disks. You do this over and over until you move all disks from one side to another with the disks positioned from smallest to largest.</p>

<p>This wasn’t fun - and you had to do it twice to get the two items you need to finish the game. There was a running gag throughout the game about you finding a stick that you use to solve multiple puzzles, and it ends up being useful on the final screen of the game as well. I appreciate them “sticking” it out to the end like that (what? only Westwood is allowed to use bad puns 😛).</p>

<p><img src="/images/adventure/kyra2/scummvm-kyra2-cd-00037.png" alt="" /></p>

<p>I tried not to give too much of the actual story away as it’s honestly pretty good and worth experiencing for yourself. Initially you think you need to find the anchors to stop the world from vanishing, but the it turns out you actually need to find the Wheels of Fate.</p>

<p>The running gag with Marko being there to save you but he just gets in the way is cute, but in the end he actually ends up being useful. I think this was meant to also be the romantic subplot to the game, but it wasn’t really all that well developed.</p>

<p>Though the gameplay itself wasn’t all that much fun and the puzzles were typically more annoying than enjoyable, given the excellent visuals, sound and voice acting I still felt this game was worth playing.</p>

<p>I enjoyed the experience a little more than the <a href="/blog/2023/11/24/the-legend-of-kyrandia/">previous entry in the series</a>, but overall would say this is a “middle of the pack” early 90’s adventure game.</p>

<h2 id="game-information">Game Information</h2>

<table>
  <tbody>
    <tr>
      <td><em>Game</em></td>
      <td>The Legend of Kyrandia: Hand of Fate</td>
    </tr>
    <tr>
      <td><em>Developer</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Westwood_Studios">Westwood Studios</a></td>
    </tr>
    <tr>
      <td><em>Publisher</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Virgin_Interactive">Virgin Interactive</a></td>
    </tr>
    <tr>
      <td><em>Release Date</em></td>
      <td>1993</td>
    </tr>
    <tr>
      <td><em>Systems</em></td>
      <td>DOS, FM Towns, NEC PC-9801</td>
    </tr>
    <tr>
      <td><em>Game Engine</em></td>
      <td><a href="https://wiki.scummvm.org/index.php?title=Kyra">Kyra</a></td>
    </tr>
  </tbody>
</table>

<h3 id="my-playthrough">My Playthrough</h3>

<table>
  <tbody>
    <tr>
      <td><a href="https://howlongtobeat.com/game/10016">How Long To Beat?</a></td>
      <td>4.5 hours</td>
    </tr>
    <tr>
      <td><em>Version Played</em></td>
      <td>DOS via <a href="https://www.scummvm.org/">ScummVM</a></td>
    </tr>
    <tr>
      <td><em>Notes</em></td>
      <td><a href="https://lparchive.org/Legend-of-Kyrandia-2-Hand-of-Fate/">Walkthrough</a>, <a href="https://www.retrogames.cz/manualy/DOS/The_Legend_of_Kyrandia_2_-_Hand_of_Fate_-_Manual_-_PC.pdf">Manual</a></td>
    </tr>
  </tbody>
</table>

<h3 id="score">Score</h3>

<p>See <a href="https://www.alexbevi.com/blog/2021/07/28/adventure-games-1980-1999/#scoring">here</a> for a refresher on how we’re scoring these games.</p>

<table>
  <tbody>
    <tr>
      <td><strong>Graphics (15)</strong></td>
      <td>10</td>
    </tr>
    <tr>
      <td><strong>Sound (10)</strong></td>
      <td>7</td>
    </tr>
    <tr>
      <td><strong>Plot / Progression (25)</strong></td>
      <td>17</td>
    </tr>
    <tr>
      <td><strong>Characters / Development (15)</strong></td>
      <td>10</td>
    </tr>
    <tr>
      <td><strong>Gameplay / Experience (15)</strong></td>
      <td>8</td>
    </tr>
    <tr>
      <td><strong>Replayability (5)</strong></td>
      <td>2</td>
    </tr>
    <tr>
      <td><strong>Impact / Impression (10)</strong></td>
      <td>5</td>
    </tr>
    <tr>
      <td><strong>Bonus / Surprise (5)</strong></td>
      <td>1</td>
    </tr>
    <tr>
      <td> </td>
      <td><strong>60%</strong></td>
    </tr>
  </tbody>
</table>

<h3 id="gallery">Gallery</h3>

<div id="inline-gallery-container" class="inline-gallery-container"></div>
<script type="module">import lightGallery from "https://cdn.skypack.dev/lightgallery@2.4.0";import lgZoom from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/zoom";import lgThumbnail from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/thumbnail";const $lgContainer = document.getElementById("inline-gallery-container");const inlineGallery = lightGallery($lgContainer, {  container: $lgContainer,  licenseKey: "C2D2C2BD-16BC4564-A4EAE653-401CB884",  dynamic: true,  hash: false,  closable: false,  showMaximizeIcon: true,  slideDelay: 10,  plugins: [lgZoom, lgThumbnail],  dynamicEl: [{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00001.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00001.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00002.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00002.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00003.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00003.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00004.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00004.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00005.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00005.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00006.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00006.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00007.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00007.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00008.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00008.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00009.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00009.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00011.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00011.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00012.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00012.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00013.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00013.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00015.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00015.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00017.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00017.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00018.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00018.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00020.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00020.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00021.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00021.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00022.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00022.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00024.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00024.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00026.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00026.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00027.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00027.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00028.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00028.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00029.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00029.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00030.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00030.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00031.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00031.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00032.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00032.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00033.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00033.png' },{ src: '/images/adventure/kyra2/scummvm-kyra2-cd-00035.png', thumb: '/images/adventure/kyra2/scummvm-kyra2-cd-00035.png' },]});inlineGallery.openGallery();</script>

<p><strong>Footnotes</strong></p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1">
      <p><small>Description from <a href="https://www.mobygames.com/game/871/fables-fiends-hand-of-fate/">Moby Games</a></small> <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;&#xfe0e;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="Let&apos;s Adventure!" /><category term="adventure" /><category term="Westwood Studios" /><category term="Virgin Interactive" /><category term="played:DOS" /><category term="Kyra" /><summary type="html"><![CDATA[Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Pepper's Adventures in Time (Sierra On-Line) - 1993The Legend of Kyrandia: Hand of Fate (Westwood Studios) - 1993 Article 97 of 97 in this series.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/adventure/kyra2/scummvm-kyra2-cd-00000.png" /><media:content medium="image" url="https://www.alexbevi.com/images/adventure/kyra2/scummvm-kyra2-cd-00000.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Pepper’s Adventures in Time (Sierra On-Line) - 1993</title><link href="https://www.alexbevi.com/blog/2025/04/24/peppers-adventures-in-time/" rel="alternate" type="text/html" title="Pepper’s Adventures in Time (Sierra On-Line) - 1993" /><published>2025-04-24T07:29:55-04:00</published><updated>2025-09-25T12:49:54-04:00</updated><id>https://www.alexbevi.com/blog/2025/04/24/peppers-adventures-in-time</id><content type="html" xml:base="https://www.alexbevi.com/blog/2025/04/24/peppers-adventures-in-time/"><![CDATA[<blockquote class="prompt-tip mb-6">
  <strong>Series:&nbsp;<a href="/blog/2021/07/28/adventure-games-1980-1999/">Let's Adventure! A Journey into Adventure Games (1980-1999)</a></strong><p>This review is part of the Let's Adventure! series. See all reviewed games sorted by rating <a href="/blog/2021/08/08/adventure-games-1980-1999-sorted-by-score/">here</a>.</p><ul class="list-none space-y-1"><li>← <a href="/blog/2025/03/14/leisure-suit-larry-iii/">Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals! (Sierra On-Line) - 1989</a></li><li><strong>Pepper's Adventures in Time (Sierra On-Line) - 1993</strong></li><li>→ <a href="/blog/2025/07/15/the-legend-of-kyrandia-hand-of-fate/">The Legend of Kyrandia: Hand of Fate (Westwood Studios) - 1993</a></li></ul>

  <p>Article 96 of 97 in this series.</p>
</blockquote>

<p><a href="https://en.wikipedia.org/wiki/Pepper%27s_Adventures_in_Time">Pepper’s Adventures in Time</a> is an educational adventure game released in 1993 by Sierra On-Line. The project was based on a concept by Sierra VP of Development/Creative Director, Bill Davis, who also designed the game’s main characters. This was intended to be the first in a series of edutainment games in which the player, as Pepper, traveled back in time to set right mixed-up situations surrounding famous individuals.</p>

<p><img src="/images/adventure/pepper/scummvm-pepper-00000.png" alt="" /></p>

<p>This point n’ click adventure game is actually an edutainment (entertainment leading to education) title developed by Sierra, who were also responsible for other games such as the EcoQuest and Dr. Brain series. The object of this game is to help a little girl called Pepper, solve puzzles based on history and logic, so that she can fix the mess caused by Dr. Fred’s time machine. At certain points in the game, the player is even allowed to control her pet dog, Lockjaw.</p>

<p><img src="/images/adventure/pepper/scummvm-pepper-00011.png" alt="" /></p>

<p>The game consists of an educational factor where the player can learn about many important facts concerning the colonial times of the United States. It is divided into Acts in which the player has to reach given goals and, apart from other, typical for adventure games things, learn about facts listed in the opening. To do it the special TRUTH icon has to be used. When the act is concluded, the player is challenged with a quiz about the things he learned. For each correct answer he receives progress points.</p>

<p>Cartoonish graphics similar to the style in <a href="/blog/2024/01/20/day-of-the-tentacle/">Day of the Tentacle</a> were used in order to appeal to younger audiences.<sup id="fnref:1"><a href="#fn:1" class="footnote" rel="footnote" role="doc-noteref">1</a></sup></p>

<p><img src="/images/adventure/pepper/scummvm-pepper-00013.png" alt="" /></p>

<p>I actually found the music in this game also reminiscent of Day of the Tentacle, however both games came out the same year so it’s possible this was just a coincidence. Unlike DOTT however, this game really isn’t all that much fun.</p>

<p>As an “edutainment” game, the gameplay elements are toned down quite a bit, so there isn’t all that much you need to do - and what there is becomes extremely repetitive.</p>

<p><img src="/images/adventure/pepper/scummvm-pepper-00004.png" alt="" /></p>

<p>The plot seems to involve your uncle - who really hates Ben Franklin for some reason - building a time machine that he’ll use to go back and change the course of history … for reasons.</p>

<p>You start the game off as Pepper, and along with her dog Lockjaw get sucked into the machine and thrown back to colonial times - but when you get there it seems things are not the way you’d expect based on the history you learned in school.</p>

<p><img src="/images/adventure/pepper/scummvm-pepper-00005.png" alt="" /></p>

<p>Being a Sierra SCI game you have access to the typical verb icons (<code class="language-plaintext highlighter-rouge">WALK</code>, <code class="language-plaintext highlighter-rouge">TALK</code>, <code class="language-plaintext highlighter-rouge">GET</code>, etc), along with a couple that are unique to this game (<code class="language-plaintext highlighter-rouge">TRUTH</code> and <code class="language-plaintext highlighter-rouge">QUIZ</code>). There are also portions of the game where you take control of Pepper’s dog Lockjaw, which gives you a different set of verbs.</p>

<p>The Lockjaw segments do actually help break up the monotony of endless fetch quests that make up the majority of this game.</p>

<p><img src="/images/adventure/pepper/scummvm-pepper-00008.png" alt="" /></p>

<p>You can click the <code class="language-plaintext highlighter-rouge">TRUTH</code> icon on almost everything, and it will tell you if the thing you’re inspecting is historically accurate. This is a unique mechanic to this game that is actually sort of interesting, as a handful of these facts will be required in the quiz you have to take at the end of the chapter.</p>

<p><img src="/images/adventure/pepper/scummvm-pepper-00023.png" alt="" /></p>

<p>When a fact will be included in the quiz, you’ll get points for it and the text color will be different, so it at least stands out. This is helpful as there’s SO MUCH reading in this game, and so many of the facts just sort of blend together.</p>

<p><img src="/images/adventure/pepper/scummvm-pepper-00021.png" alt="" /></p>

<p>Each Act begins with a summary of the things to look out for (which correlate with the end of chapter quiz), as well as the objectives to complete the act.</p>

<p>The <code class="language-plaintext highlighter-rouge">QUIZ</code> icon in the menu bar will display this information at any time during the chapter, which is helpful because I found I forgot the objectives very quickly.</p>

<p><img src="/images/adventure/pepper/scummvm-pepper-00006.png" alt="" /></p>

<p>Each quiz just corresponds to the clues you were given at the beginning of the chapter. If you found the associated facts while playing, the quiz itself is fairly straightforward.</p>

<p><img src="/images/adventure/pepper/scummvm-pepper-00009.png" alt="" /></p>

<p>Other than clicking the <code class="language-plaintext highlighter-rouge">TRUTH</code> icon everywhere, you’ll also be able to talk to most characters about exactly 4 topics. There is zero variety in the gameplay when you’re playing as Pepper, which really makes this game feel like a chore.</p>

<p>Once you land in colonial times, after you are captured and escape from a storage shed your dog Lockjaw will be captured by the daughter of the main villain. After this, you can ask all characters about:</p>

<ul>
  <li>Ben Franklin</li>
  <li>The Pughs (the villains)</li>
  <li>Your Dog</li>
  <li>Themselves</li>
</ul>

<p>That’s it. I understand this is probably more of an “entry level” game, but there’s so little to do that it just becomes repetitive and monotonous to play.</p>

<p><img src="/images/adventure/pepper/scummvm-pepper-00010.png" alt="" /></p>

<p>For some reason there are hippies in the past. I guess this was the result of your Uncle’s messing with time travel - but the way these characters were written it seems the game developers really didn’t like hippies …</p>

<p>You typically have maybe 10 game screens to walk between, and every act involves many (MANY!) fetch quests. All you really do in this game is get something from point A and bring it to character B.</p>

<p><img src="/images/adventure/pepper/scummvm-pepper-00015.png" alt="" /></p>

<p>Some of the fetch quests are actually fairly involved, so I’m surprised they’d have included them in a children’s edutainment game. For example, getting everything ready for Ben Franklin to recreate his Kite/Key experiment requires you to first build a leyden jar (which is described in the <a href="https://www.sierragamers.com/wp-content/uploads/2019/12/Peppers_Adventures_In_Time_Manual.pdf">manual</a>).</p>

<p>Maybe I’m just not giving 90’s kids enough credit, but this was a fairly involved (and lengthy) fetch quest.</p>

<p><img src="/images/adventure/pepper/scummvm-pepper-00025.png" alt="" /></p>

<p>The whole point of the game is to get your dog back from the Pugh’s, and to prove that they’ve imposed a false tax on the people of Philadelphia - which you ultimately end up doing.</p>

<p>Not having grown up in the United States I’m not really sure how meaningful or relevant this content is, but I’m guessing the characters are historically important and worth incorporating into a game to make teaching kids about them more appealing.</p>

<p><img src="/images/adventure/pepper/scummvm-pepper-00026.png" alt="" /></p>

<p>My final impression of this game is “I just don’t get it”. None of this was fun, and advancing the plot felt like work.</p>

<p>If you find this period of American history interesting though there’s quite a bit you’d be able to learn by revisiting the game and just clicking everything with the <code class="language-plaintext highlighter-rouge">TRUTH</code> icon. The writing can be clever in places, but some of the jokes and commentary don’t really seem appropriate for a younger audience - so I’m not really sure who this game was made for.</p>

<p>In one scene in the mansion with Lockjaw I was able to crash ScummVM, by biting Pugh, then sniffing the powder on the desk then grabbing the key - but I couldn’t reproduce it consistently so didn’t file a bug report.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>User picked target 'pepper' (engine ID 'sci', game ID 'pepper')...
Running Pepper's Adventures in Time (DOS/English)
resource.000: 670d0c53622429f4b11275caf7f8d292, 5459574 bytes.
resource.map: 72726dc81c1b4c1110c486be77369bc8, 5179 bytes.
Patching TWISTYSG.DIR failed - resource type mismatch

ERROR: [pepper-1.000 610/999 sPercyGotYou::dispose @ 0786]: [VM] Stack index 4096 out of valid range [0..4095]!
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Since this is a Sierra game, you could find yourself in game-over territory fairly frequently, but instead of just <code class="language-plaintext highlighter-rouge">RESTORE</code> and <code class="language-plaintext highlighter-rouge">RESTART</code> options, you could also <code class="language-plaintext highlighter-rouge">TRY AGAIN</code>. This made slogging through this game a bit more bearable as it took you back to right before you made the wrong choice.</p>

<h2 id="game-information">Game Information</h2>

<table>
  <tbody>
    <tr>
      <td><em>Game</em></td>
      <td>Pepper’s Adventures in Time</td>
    </tr>
    <tr>
      <td><em>Developer</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Sierra_Entertainment">Sierra On-Line</a></td>
    </tr>
    <tr>
      <td><em>Publisher</em></td>
      <td>Sierra On-Line</td>
    </tr>
    <tr>
      <td><em>Release Date</em></td>
      <td>1993</td>
    </tr>
    <tr>
      <td><em>Systems</em></td>
      <td>DOS, Windows 3.x</td>
    </tr>
    <tr>
      <td><em>Game Engine</em></td>
      <td><a href="https://wiki.scummvm.org/index.php?title=SCI">SCI</a></td>
    </tr>
  </tbody>
</table>

<h3 id="my-playthrough">My Playthrough</h3>

<table>
  <tbody>
    <tr>
      <td><a href="https://howlongtobeat.com/game/22521">How Long To Beat?</a></td>
      <td>4 hours</td>
    </tr>
    <tr>
      <td><em>Version Played</em></td>
      <td>DOS via <a href="https://www.scummvm.org/">ScummVM</a></td>
    </tr>
    <tr>
      <td><em>Notes</em></td>
      <td><a href="https://adventuregamers.com/walkthrough/full/peppers-adventures-in-time">Walkthrough</a>, <a href="https://www.sierragamers.com/wp-content/uploads/2019/12/Peppers_Adventures_In_Time_Manual.pdf">Manual</a></td>
    </tr>
  </tbody>
</table>

<h3 id="score">Score</h3>

<p>See <a href="https://www.alexbevi.com/blog/2021/07/28/adventure-games-1980-1999/#scoring">here</a> for a refresher on how we’re scoring these games.</p>

<table>
  <tbody>
    <tr>
      <td><strong>Graphics (15)</strong></td>
      <td>8</td>
    </tr>
    <tr>
      <td><strong>Sound (10)</strong></td>
      <td>6</td>
    </tr>
    <tr>
      <td><strong>Plot / Progression (25)</strong></td>
      <td>12</td>
    </tr>
    <tr>
      <td><strong>Characters / Development (15)</strong></td>
      <td>7</td>
    </tr>
    <tr>
      <td><strong>Gameplay / Experience (15)</strong></td>
      <td>4</td>
    </tr>
    <tr>
      <td><strong>Replayability (5)</strong></td>
      <td>2</td>
    </tr>
    <tr>
      <td><strong>Impact / Impression (10)</strong></td>
      <td>3</td>
    </tr>
    <tr>
      <td><strong>Bonus / Surprise (5)</strong></td>
      <td>2</td>
    </tr>
    <tr>
      <td> </td>
      <td><strong>44%</strong></td>
    </tr>
  </tbody>
</table>

<h3 id="gallery">Gallery</h3>

<div id="inline-gallery-container" class="inline-gallery-container"></div>
<script type="module">import lightGallery from "https://cdn.skypack.dev/lightgallery@2.4.0";import lgZoom from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/zoom";import lgThumbnail from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/thumbnail";const $lgContainer = document.getElementById("inline-gallery-container");const inlineGallery = lightGallery($lgContainer, {  container: $lgContainer,  licenseKey: "C2D2C2BD-16BC4564-A4EAE653-401CB884",  dynamic: true,  hash: false,  closable: false,  showMaximizeIcon: true,  slideDelay: 10,  plugins: [lgZoom, lgThumbnail],  dynamicEl: [{ src: '/images/adventure/pepper/scummvm-pepper-00002.png', thumb: '/images/adventure/pepper/scummvm-pepper-00002.png' },{ src: '/images/adventure/pepper/scummvm-pepper-00003.png', thumb: '/images/adventure/pepper/scummvm-pepper-00003.png' },{ src: '/images/adventure/pepper/scummvm-pepper-00007.png', thumb: '/images/adventure/pepper/scummvm-pepper-00007.png' },{ src: '/images/adventure/pepper/scummvm-pepper-00012.png', thumb: '/images/adventure/pepper/scummvm-pepper-00012.png' },{ src: '/images/adventure/pepper/scummvm-pepper-00014.png', thumb: '/images/adventure/pepper/scummvm-pepper-00014.png' },{ src: '/images/adventure/pepper/scummvm-pepper-00016.png', thumb: '/images/adventure/pepper/scummvm-pepper-00016.png' },{ src: '/images/adventure/pepper/scummvm-pepper-00017.png', thumb: '/images/adventure/pepper/scummvm-pepper-00017.png' },{ src: '/images/adventure/pepper/scummvm-pepper-00018.png', thumb: '/images/adventure/pepper/scummvm-pepper-00018.png' },{ src: '/images/adventure/pepper/scummvm-pepper-00019.png', thumb: '/images/adventure/pepper/scummvm-pepper-00019.png' },{ src: '/images/adventure/pepper/scummvm-pepper-00020.png', thumb: '/images/adventure/pepper/scummvm-pepper-00020.png' },{ src: '/images/adventure/pepper/scummvm-pepper-00022.png', thumb: '/images/adventure/pepper/scummvm-pepper-00022.png' },{ src: '/images/adventure/pepper/scummvm-pepper-00024.png', thumb: '/images/adventure/pepper/scummvm-pepper-00024.png' },]});inlineGallery.openGallery();</script>

<p><strong>Footnotes</strong></p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1">
      <p><small>Description from <a href="https://www.mobygames.com/game/6312/peppers-adventures-in-time/">Moby Games</a></small> <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;&#xfe0e;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="Let&apos;s Adventure!" /><category term="adventure" /><category term="Sierra On-Line" /><category term="played:DOS" /><category term="SCI" /><summary type="html"><![CDATA[Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals! (Sierra On-Line) - 1989Pepper's Adventures in Time (Sierra On-Line) - 1993→ The Legend of Kyrandia: Hand of Fate (Westwood Studios) - 1993 Article 96 of 97 in this series.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/adventure/pepper/scummvm-pepper-00001.png" /><media:content medium="image" url="https://www.alexbevi.com/images/adventure/pepper/scummvm-pepper-00001.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Building a Better Blog Series Plugin for Jekyll with ChatGPT</title><link href="https://www.alexbevi.com/blog/2025/04/20/building-a-better-blog-series-plugin-for-jekyll-with-chatgpt/" rel="alternate" type="text/html" title="Building a Better Blog Series Plugin for Jekyll with ChatGPT" /><published>2025-04-20T07:42:45-04:00</published><updated>2025-09-25T12:49:54-04:00</updated><id>https://www.alexbevi.com/blog/2025/04/20/building-a-better-blog-series-plugin-for-jekyll-with-chatgpt</id><content type="html" xml:base="https://www.alexbevi.com/blog/2025/04/20/building-a-better-blog-series-plugin-for-jekyll-with-chatgpt/"><![CDATA[<p>In writing my blog series, <a href="https://alexbevi.com/blog/2021/07/28/adventure-games-1980-1999/">“Let’s Adventure! A Journey into Adventure Games (1980-1999)”</a>, I found myself wanting a better way to handle navigation between posts. The existing Jekyll plugins and tutorials I found (such as those from <a href="https://digitaldrummerj.me/blogging-on-github-part-13-creating-an-article-series/">Justin James</a> and <a href="https://totaldebug.uk/posts/jekyll-post-series-links/">Steven Marks</a>) provided some inspiration but didn’t fully align with my use case.</p>

<p>The plugin I decided I wanted to build would need to include:</p>

<ul>
  <li>Dynamic generation of navigation links based on the series’ metadata.</li>
  <li>Simple and intuitive integration with Jekyll’s existing templating system.</li>
  <li>Robust error handling and graceful fallback behaviors.</li>
  <li>Ability to configure multiple series easily, ideally through <code class="language-plaintext highlighter-rouge">_config.yml</code></li>
  <li>Easy integration with Jekyll’s <a href="https://jekyllrb.com/tutorials/cache-api/">Cache API</a> to enhance build performance.</li>
</ul>

<p>Leveraging my increasing comfort with AI for research and coding tasks, I turned to ChatGPT (<a href="https://chatgpt.com/share/6803cb78-d18c-800e-bf7e-d4e61df2c47a">full conversation here</a>). The conversational approach allowed me to iteratively specify requirements and rapidly prototype the plugin logic.</p>

<blockquote class="prompt-info">
  <p>The finished plugin is available at <a href="https://github.com/alexbevi/jekyll-series-navigation">https://github.com/alexbevi/jekyll-series-navigation</a></p>
</blockquote>

<h3 id="efficiency-of-iterating-via-chat-interface">Efficiency of Iterating via Chat Interface</h3>

<p>One of the clearest demonstrations of the value of this approach came when I encountered a cryptic error during partial rendering:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>SeriesNavTag: Error rendering nav: Liquid error: wrong number of arguments (given 1, expected 2..3)
</pre></td></tr></tbody></table></code></pre></div></div>

<p>At first, it wasn’t obvious what was causing this. But by sharing the full stack trace in ChatGPT, it became clear that the issue stemmed from how the <code class="language-plaintext highlighter-rouge">replace</code> filter was being used in a Liquid template—specifically in a custom tag that was incorrectly passing a single argument.</p>

<p>ChatGPT helped narrow this down quickly by examining the stack trace and correlating it with the standard method signatures expected in Liquid’s <code class="language-plaintext highlighter-rouge">replace</code> filter. It then provided the correct syntax and helped walk through validating each part of the rendering process.</p>

<p>This kind of issue could have taken a long time to debug in isolation, especially because it wasn’t immediately clear whether the root cause was in Liquid syntax, plugin logic, or content metadata. With ChatGPT’s contextual understanding and ability to parse Ruby backtraces, we were able to identify and fix the bug by adjusting the argument structure in the tag rendering logic.</p>

<p>Working through the chat interface provided distinct advantages:</p>
<ul>
  <li><strong>Immediate Feedback</strong>: Real-time suggestions and error spotting accelerated development cycles, significantly reducing the time spent debugging. For example, ChatGPT quickly pointed out syntax issues within my Ruby and Liquid templates, helping resolve bugs in seconds rather than minutes or hours.</li>
  <li><strong>Rapid Prototyping</strong>: Instant iteration allowed for quick experiments and adjustments, enabling me to refine features continuously based on the evolving requirements. I could quickly test multiple approaches for handling metadata and caching, instantly iterating through alternative implementations.</li>
  <li><strong>Clear Explanations</strong>: Complex problems, such as issues with Liquid template variable passing, were clearly explained, improving my understanding and leading to quicker resolutions. When struggling with cache implementations, ChatGPT clearly illustrated the caching mechanism, dramatically shortening the learning curve.</li>
</ul>

<h3 id="implementing-the-jekyll-series-plugin">Implementing the Jekyll Series Plugin</h3>

<p>Below is the Ruby plugin code (<code class="language-plaintext highlighter-rouge">series_nav.rb</code>) that was created through this AI-assisted process:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
</pre></td><td class="rouge-code"><pre><span class="c1"># _plugins/jekyll_series_plugin.rb</span>
<span class="c1"># Jekyll plugin for navigating blog series using a blockquote prompt-info wrapper</span>
<span class="c1"># Utilizes Jekyll::Cache for performance; pre-renders Liquid in metadata within the tag context</span>
<span class="c1"># Configuration in _config.yml:</span>
<span class="c1"># series_nav:</span>
<span class="c1">#   my-slug:</span>
<span class="c1">#     title: "Display Title"</span>
<span class="c1">#     description: "Overview with {{ site.title }}"</span>
<span class="c1">#     title_link: "/series/{{ page.series }}/"</span>
<span class="c1"># Usage in post front matter:</span>
<span class="c1">#   series: my-slug</span>
<span class="c1"># Invoke in your layout/post template:</span>
<span class="c1">#   {% series_nav %}</span>

<span class="nb">require</span> <span class="s1">'jekyll'</span>
<span class="nb">require</span> <span class="s1">'jekyll/cache'</span>
<span class="nb">require</span> <span class="s1">'liquid'</span>

<span class="k">module</span> <span class="nn">Jekyll</span>
  <span class="k">class</span> <span class="nc">SeriesGenerator</span> <span class="o">&lt;</span> <span class="no">Generator</span>
    <span class="n">safe</span> <span class="kp">true</span>
    <span class="n">priority</span> <span class="ss">:low</span>

    <span class="k">def</span> <span class="nf">generate</span><span class="p">(</span><span class="n">site</span><span class="p">)</span>
      <span class="n">cache</span>         <span class="o">=</span> <span class="no">Jekyll</span><span class="o">::</span><span class="no">Cache</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s1">'series_nav'</span><span class="p">)</span>
      <span class="n">series_config</span> <span class="o">=</span> <span class="n">site</span><span class="p">.</span><span class="nf">config</span><span class="p">[</span><span class="s1">'series_nav'</span><span class="p">]</span> <span class="o">||</span> <span class="p">{}</span>

      <span class="n">series_map</span> <span class="o">=</span> <span class="n">cache</span><span class="p">.</span><span class="nf">getset</span><span class="p">(</span><span class="s1">'series_map'</span><span class="p">)</span> <span class="k">do</span>
        <span class="n">build_series_map</span><span class="p">(</span><span class="n">site</span><span class="p">.</span><span class="nf">posts</span><span class="p">.</span><span class="nf">docs</span><span class="p">,</span> <span class="n">series_config</span><span class="p">)</span>
      <span class="k">end</span>

      <span class="n">site</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'series_map'</span><span class="p">]</span> <span class="o">=</span> <span class="n">series_map</span>
      <span class="no">Jekyll</span><span class="p">.</span><span class="nf">logger</span><span class="p">.</span><span class="nf">info</span> <span class="s1">'SeriesNav:'</span><span class="p">,</span> <span class="s2">"Loaded series map (</span><span class="si">#{</span><span class="n">series_map</span><span class="p">.</span><span class="nf">keys</span><span class="p">.</span><span class="nf">size</span><span class="si">}</span><span class="s2"> series)"</span>
    <span class="k">end</span>

    <span class="kp">private</span>

    <span class="c1"># Builds a map of slug =&gt; { title, description, title_link, posts }</span>
    <span class="k">def</span> <span class="nf">build_series_map</span><span class="p">(</span><span class="n">posts</span><span class="p">,</span> <span class="n">config</span><span class="p">)</span>
      <span class="n">map</span> <span class="o">=</span> <span class="p">{}</span>

      <span class="n">posts</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span>
        <span class="n">slug</span> <span class="o">=</span> <span class="n">post</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'series'</span><span class="p">].</span><span class="nf">to_s</span><span class="p">.</span><span class="nf">strip</span>
        <span class="k">next</span> <span class="k">if</span> <span class="n">slug</span><span class="p">.</span><span class="nf">empty?</span>

        <span class="n">cfg</span>        <span class="o">=</span> <span class="n">config</span><span class="p">.</span><span class="nf">fetch</span><span class="p">(</span><span class="n">slug</span><span class="p">,</span> <span class="p">{})</span>
        <span class="n">title</span>      <span class="o">=</span> <span class="n">cfg</span><span class="p">[</span><span class="s1">'title'</span><span class="p">]</span> <span class="o">||</span> <span class="n">slug</span>
        <span class="n">raw_desc</span>   <span class="o">=</span> <span class="n">cfg</span><span class="p">[</span><span class="s1">'description'</span><span class="p">]</span> <span class="o">||</span> <span class="s1">''</span>
        <span class="n">raw_link</span>   <span class="o">=</span> <span class="n">cfg</span><span class="p">[</span><span class="s1">'title_link'</span><span class="p">]</span>  <span class="o">||</span> <span class="s1">''</span>

        <span class="n">map</span><span class="p">[</span><span class="n">slug</span><span class="p">]</span> <span class="o">||=</span> <span class="p">{</span>
          <span class="s1">'title'</span>       <span class="o">=&gt;</span> <span class="n">title</span><span class="p">,</span>
          <span class="s1">'description'</span> <span class="o">=&gt;</span> <span class="n">raw_desc</span><span class="p">,</span>
          <span class="s1">'title_link'</span>  <span class="o">=&gt;</span> <span class="n">raw_link</span><span class="p">,</span>
          <span class="s1">'posts'</span>       <span class="o">=&gt;</span> <span class="p">[]</span>
        <span class="p">}</span>
        <span class="n">map</span><span class="p">[</span><span class="n">slug</span><span class="p">][</span><span class="s1">'posts'</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="n">post</span>
      <span class="k">end</span>

      <span class="n">map</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">slug</span><span class="p">,</span> <span class="n">info</span><span class="o">|</span>
        <span class="n">sorted</span> <span class="o">=</span> <span class="n">info</span><span class="p">[</span><span class="s1">'posts'</span><span class="p">].</span><span class="nf">sort_by</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:date</span><span class="p">)</span>
        <span class="n">sorted</span><span class="p">.</span><span class="nf">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">post</span><span class="p">,</span> <span class="n">idx</span><span class="o">|</span>
          <span class="n">post</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'series_posts'</span><span class="p">]</span>       <span class="o">=</span> <span class="n">sorted</span>
          <span class="n">post</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'series_title'</span><span class="p">]</span>       <span class="o">=</span> <span class="n">info</span><span class="p">[</span><span class="s1">'title'</span><span class="p">]</span>
          <span class="n">post</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'series_description'</span><span class="p">]</span> <span class="o">=</span> <span class="n">info</span><span class="p">[</span><span class="s1">'description'</span><span class="p">]</span>
          <span class="n">post</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'series_title_link'</span><span class="p">]</span>  <span class="o">=</span> <span class="n">info</span><span class="p">[</span><span class="s1">'title_link'</span><span class="p">]</span>
          <span class="n">post</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'series_index'</span><span class="p">]</span>       <span class="o">=</span> <span class="n">idx</span> <span class="o">+</span> <span class="mi">1</span>
          <span class="n">post</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'series_prev'</span><span class="p">]</span>        <span class="o">=</span> <span class="n">idx</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="p">?</span> <span class="n">sorted</span><span class="p">[</span><span class="n">idx</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="p">:</span> <span class="kp">nil</span>
          <span class="n">post</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'series_next'</span><span class="p">]</span>        <span class="o">=</span> <span class="n">idx</span> <span class="o">&lt;</span> <span class="n">sorted</span><span class="p">.</span><span class="nf">size</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">?</span> <span class="n">sorted</span><span class="p">[</span><span class="n">idx</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="p">:</span> <span class="kp">nil</span>
        <span class="k">end</span>
        <span class="n">info</span><span class="p">[</span><span class="s1">'posts'</span><span class="p">]</span> <span class="o">=</span> <span class="n">sorted</span>
      <span class="k">end</span>

      <span class="n">map</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">class</span> <span class="nc">SeriesNavTag</span> <span class="o">&lt;</span> <span class="no">Liquid</span><span class="o">::</span><span class="no">Tag</span>
    <span class="k">def</span> <span class="nf">render</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
      <span class="n">page</span> <span class="o">=</span> <span class="n">context</span><span class="p">.</span><span class="nf">registers</span><span class="p">[</span><span class="ss">:page</span><span class="p">]</span>
      <span class="k">return</span> <span class="s1">''</span> <span class="k">unless</span> <span class="n">page</span><span class="p">[</span><span class="s1">'series_posts'</span><span class="p">]</span><span class="o">&amp;</span><span class="p">.</span><span class="nf">any?</span>

      <span class="c1"># Pre-render Liquid in title_link and description using this tag's context</span>
      <span class="n">page</span><span class="p">[</span><span class="s1">'series_title_link'</span><span class="p">]</span> <span class="o">=</span> <span class="n">safe_render</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="n">page</span><span class="p">[</span><span class="s1">'series_title_link'</span><span class="p">])</span>
      <span class="n">page</span><span class="p">[</span><span class="s1">'series_description'</span><span class="p">]</span> <span class="o">=</span> <span class="n">safe_render</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="n">page</span><span class="p">[</span><span class="s1">'series_description'</span><span class="p">])</span>

      <span class="c1"># Render include partial for final HTML</span>
      <span class="n">include_markup</span> <span class="o">=</span> <span class="s2">"{% include series_nav.html %}"</span>
      <span class="n">template</span>       <span class="o">=</span> <span class="o">::</span><span class="no">Liquid</span><span class="o">::</span><span class="no">Template</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="n">include_markup</span><span class="p">)</span>
      <span class="n">template</span><span class="p">.</span><span class="nf">render!</span><span class="p">(</span><span class="n">context</span><span class="p">.</span><span class="nf">environments</span><span class="p">.</span><span class="nf">first</span><span class="p">,</span> <span class="ss">registers: </span><span class="n">context</span><span class="p">.</span><span class="nf">registers</span><span class="p">)</span>
    <span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
      <span class="no">Jekyll</span><span class="p">.</span><span class="nf">logger</span><span class="p">.</span><span class="nf">error</span> <span class="s1">'SeriesNavTag:'</span><span class="p">,</span> <span class="s2">"Error rendering include: </span><span class="si">#{</span><span class="n">e</span><span class="p">.</span><span class="nf">message</span><span class="si">}</span><span class="s2">"</span>
      <span class="s1">''</span>
    <span class="k">end</span>

    <span class="kp">private</span>

    <span class="c1"># Render Liquid in a string using the tag's current environment and registers</span>
    <span class="k">def</span> <span class="nf">safe_render</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
      <span class="k">return</span> <span class="s1">''</span> <span class="k">if</span> <span class="n">text</span><span class="p">.</span><span class="nf">to_s</span><span class="p">.</span><span class="nf">strip</span><span class="p">.</span><span class="nf">empty?</span>
      <span class="n">tmpl</span> <span class="o">=</span> <span class="o">::</span><span class="no">Liquid</span><span class="o">::</span><span class="no">Template</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
      <span class="n">tmpl</span><span class="p">.</span><span class="nf">render!</span><span class="p">(</span><span class="n">context</span><span class="p">.</span><span class="nf">environments</span><span class="p">.</span><span class="nf">first</span><span class="p">,</span> <span class="ss">registers: </span><span class="n">context</span><span class="p">.</span><span class="nf">registers</span><span class="p">)</span>
    <span class="k">rescue</span> <span class="o">=&gt;</span> <span class="n">e</span>
      <span class="no">Jekyll</span><span class="p">.</span><span class="nf">logger</span><span class="p">.</span><span class="nf">warn</span> <span class="s1">'SeriesNavTag:'</span><span class="p">,</span> <span class="s2">"Liquid rendering failed: </span><span class="si">#{</span><span class="n">e</span><span class="p">.</span><span class="nf">message</span><span class="si">}</span><span class="s2">"</span>
      <span class="n">text</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="no">Liquid</span><span class="o">::</span><span class="no">Template</span><span class="p">.</span><span class="nf">register_tag</span><span class="p">(</span><span class="s1">'series_nav'</span><span class="p">,</span> <span class="no">Jekyll</span><span class="o">::</span><span class="no">SeriesNavTag</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The code isn’t perfect, and I’m sure I could simplify/improve it further, but for a few hours of just messing around with a prompt I think this is pretty good.</p>

<h3 id="using-the-plugin-in-your-jekyll-blog">Using the Plugin in Your Jekyll Blog</h3>

<p>Integrate the following <a href="https://liquidjs.com/tutorials/partials-and-layouts.html">Liquid partial</a> (<code class="language-plaintext highlighter-rouge">_includes/series_nav.html</code>) in your layout or post to display navigation links:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
</pre></td><td class="rouge-code"><pre>
{%- comment -%}
/_includes/series_nav.html

Expected page data:
  page.series_title          # String title of the series
  page.series_description    # String description (HTML-safe)
  page.series_title_link     # URL or Liquid tag to link the title
  page.series_posts          # Array of all posts in this series (sorted)
  page.series_index          # Integer index of current post
  page.series_prev           # Previous post object or nil
  page.series_next           # Next post object or nil
{%- endcomment -%}

<span class="nt">&lt;blockquote</span> <span class="na">class=</span><span class="s">"prompt-tip mb-6"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;strong&gt;</span>Series:<span class="ni">&amp;nbsp;</span>
    {%- if page.series_title_link -%}
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"{{ page.series_title_link }}"</span><span class="nt">&gt;</span>{{ page.series_title }}<span class="nt">&lt;/a&gt;</span>
    {%- else -%}
      {{ page.series_title }}
    {%- endif -%}
  <span class="nt">&lt;/strong&gt;</span>

  {%- if page.series_description -%}
    <span class="nt">&lt;p&gt;</span>{{ page.series_description }}<span class="nt">&lt;/p&gt;</span>
  {%- endif -%}

  <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"list-none space-y-1"</span><span class="nt">&gt;</span>
    {%- if page.series_prev -%}
      <span class="nt">&lt;li&gt;</span>← <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"{{ page.series_prev.url }}"</span><span class="nt">&gt;</span>{{ page.series_prev.title }}<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
    {%- endif -%}

    <span class="nt">&lt;li&gt;&lt;strong&gt;</span>{{ page.title }}<span class="nt">&lt;/strong&gt;&lt;/li&gt;</span>

    {%- if page.series_next -%}
      <span class="nt">&lt;li&gt;</span>→ <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"{{ page.series_next.url }}"</span><span class="nt">&gt;</span>{{ page.series_next.title }}<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
    {%- endif -%}
  <span class="nt">&lt;/ul&gt;</span>

  <span class="nt">&lt;p&gt;</span>Article {{ page.series_index }} of {{ page.series_posts | size }} in this series.<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;/blockquote&gt;</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<p>Since my site uses the <a href="https://github.com/cotes2020/jekyll-theme-chirpy">Chirpy Jekyll Theme</a> I wanted the series navigation to seamlessly integrate, however the partial can be adapted as needed to suit your blog’s layout.</p>

<h3 id="integration-steps">Integration Steps:</h3>
<ol>
  <li>Place the Ruby plugin file (<code class="language-plaintext highlighter-rouge">series_nav.rb</code>) in your Jekyll site’s <code class="language-plaintext highlighter-rouge">_plugins</code> directory.</li>
  <li>Add the Liquid partial (<code class="language-plaintext highlighter-rouge">series_nav.html</code>) to your site’s <code class="language-plaintext highlighter-rouge">_includes</code> directory.</li>
  <li>Include the plugin tag in your post or layout template with <code class="language-plaintext highlighter-rouge">{% series_nav %}</code>.</li>
</ol>

<p>Ultimately, the plugin significantly streamlined navigation within my blog series, enhancing both my writing workflow and the reader’s experience. This journey underscored how AI tools can complement traditional software development, enabling faster iterations, performance optimizations, and more elegant solutions.</p>

<p>Feel free to adapt this solution to your own Jekyll blog!</p>]]></content><author><name></name></author><category term="Ruby" /><category term="blog" /><category term="jekyll" /><category term="ruby" /><summary type="html"><![CDATA[In writing my blog series, “Let’s Adventure! A Journey into Adventure Games (1980-1999)”, I found myself wanting a better way to handle navigation between posts. The existing Jekyll plugins and tutorials I found (such as those from Justin James and Steven Marks) provided some inspiration but didn’t fully align with my use case.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/ChatGPT%20Image%20Apr%2020,%202025,%2010_18_59%20AM.png" /><media:content medium="image" url="https://www.alexbevi.com/images/ChatGPT%20Image%20Apr%2020,%202025,%2010_18_59%20AM.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Performance Profiling MongoDB on Cloudflare Workers</title><link href="https://www.alexbevi.com/blog/2025/04/11/performance-profiling-mongodb-on-cloudflare-workers/" rel="alternate" type="text/html" title="Performance Profiling MongoDB on Cloudflare Workers" /><published>2025-04-11T06:23:55-04:00</published><updated>2025-09-25T12:49:54-04:00</updated><id>https://www.alexbevi.com/blog/2025/04/11/performance-profiling-mongodb-on-cloudflare-workers</id><content type="html" xml:base="https://www.alexbevi.com/blog/2025/04/11/performance-profiling-mongodb-on-cloudflare-workers/"><![CDATA[<p>Cloudflare recently wrote about “<a href="https://blog.cloudflare.com/full-stack-development-on-cloudflare-workers/#node-js-compatibility">Your frontend, backend, and database — now in one Cloudflare Worker</a>”, which called out that the <code class="language-plaintext highlighter-rouge">mongodb</code> package should now work as expected. I validated that <a href="https://alexbevi.com/blog/2025/03/25/cloudflare-workers-and-mongodb/">Cloudflare Workers and MongoDB</a> work together as well, but <em>how well</em> do they work together.</p>

<p>Let’s evaluate this by taking MongoDB’s simple <a href="https://www.mongodb.com/docs/drivers/node/current/usage-examples/findOne/">“Find a Document”</a> tutorial and adapting it to a Workers environment.</p>

<blockquote class="prompt-info">
  <p>TL;DR - MongoDB works perfectly from Cloudflare Workers, but you can significantly improve request latency by using Durable Objects</p>
</blockquote>

<h2 id="setup">Setup</h2>

<p>First, <a href="https://www.mongodb.com/resources/products/platform/mongodb-atlas-tutorial">create a MongoDB Atlas</a> cluster (free M0 works just fine), and <a href="https://www.mongodb.com/docs/atlas/sample-data/#std-label-load-sample-data">load the sample datasets</a> once the cluster is provisioned. We’ll be using the <a href="https://www.mongodb.com/docs/atlas/sample-data/sample-mflix/"><code class="language-plaintext highlighter-rouge">sample_mflix</code></a>dataset to return some information about a movie.</p>

<p>Next we’ll want to <a href="https://developers.cloudflare.com/learning-paths/workers/get-started/first-worker/">setup a Cloudflare Worker</a>to retrieve our movie information. I personally just created the Worker via the UI the using the <a href="https://developers.cloudflare.com/workers/ci-cd/builds/git-integration/">Git integration</a> associated my worker with an existing repo.</p>

<p><img src="/images/cf/Pasted image 20250403155514.png" alt="" /></p>

<h2 id="default-workers-experience">Default Workers Experience</h2>

<p>Our Worker will be using the <a href="https://www.mongodb.com/docs/drivers/node/current/">MongoDB Node.js driver</a> to connect to the provisioned Atlas cluster using a <a href="https://www.mongodb.com/docs/guides/atlas/connection-string/">connection string</a> stored as an <a href="https://developers.cloudflare.com/workers/configuration/environment-variables/">environment variable</a>.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="err">/**</span><span class="w">
 </span><span class="err">*</span><span class="w"> </span><span class="err">wrangler.jsonc</span><span class="w">
 </span><span class="err">*/</span><span class="w">
</span><span class="p">{</span><span class="w">
	</span><span class="nl">"$schema"</span><span class="p">:</span><span class="w"> </span><span class="s2">"node_modules/wrangler/config-schema.json"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"workers-mongodb-demo"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"main"</span><span class="p">:</span><span class="w"> </span><span class="s2">"src/index.ts"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"compatibility_date"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2025-03-21"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"compatibility_flags"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
		</span><span class="s2">"nodejs_compat"</span><span class="w">
	</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="rouge-code"><pre><span class="c1">// src/index.ts</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">MongoDBConnector</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./MongoDBConnector</span><span class="dl">'</span><span class="p">;</span>

<span class="kr">interface</span> <span class="nx">Env</span> <span class="p">{</span>
  <span class="nl">MONGODB_URI</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="k">async</span> <span class="nf">fetch</span><span class="p">(</span><span class="na">request</span><span class="p">:</span> <span class="nx">Request</span><span class="p">,</span> <span class="na">env</span><span class="p">:</span> <span class="nx">Env</span><span class="p">,</span> <span class="na">ctx</span><span class="p">:</span> <span class="nx">ExecutionContext</span><span class="p">):</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">Response</span><span class="o">&gt;</span> <span class="p">{</span>
    <span class="k">try</span> <span class="p">{</span>
      <span class="kd">let</span> <span class="nx">proxy</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
      <span class="nx">proxy</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MongoDBConnector</span><span class="p">(</span><span class="nx">env</span><span class="p">);</span>
      <span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">proxy</span><span class="p">.</span><span class="nf">getMovie</span><span class="p">();</span>
      <span class="k">return</span> <span class="nx">Response</span><span class="p">.</span><span class="nf">json</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">Error:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>
      <span class="kd">const</span> <span class="nx">message</span> <span class="o">=</span> <span class="nx">error</span> <span class="k">instanceof</span> <span class="nb">Error</span> <span class="p">?</span> <span class="nx">error</span><span class="p">.</span><span class="nx">message</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">Unknown error</span><span class="dl">'</span><span class="p">;</span>
      <span class="k">return</span> <span class="k">new</span> <span class="nc">Response</span><span class="p">(</span><span class="s2">`Error: </span><span class="p">${</span><span class="nx">message</span><span class="p">}</span><span class="s2">`</span><span class="p">,</span> <span class="p">{</span> <span class="na">status</span><span class="p">:</span> <span class="mi">500</span> <span class="p">});</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span> <span class="kd">satisfies </span><span class="nx">ExportedHandler</span><span class="o">&lt;</span><span class="nx">Env</span><span class="o">&gt;</span><span class="p">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The MongoDB-specific code will handle creating the <code class="language-plaintext highlighter-rouge">MongoClient</code>, performing all the networking and authentication round trips and retrieving a document from the cluster.</p>

<p>We’ll do some basic instrumentation to capture the time between client connection and the result being returned in <code class="language-plaintext highlighter-rouge">queryTime</code>, which we’ll return as part of the response.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
</pre></td><td class="rouge-code"><pre><span class="c1">// src/MongoDBConnector.ts</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">MongoClient</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">mongodb</span><span class="dl">'</span><span class="p">;</span>

<span class="kr">interface</span> <span class="nx">Env</span> <span class="p">{</span>
  <span class="nl">MONGODB_URI</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">export</span> <span class="kd">class</span> <span class="nc">MongoDBConnector</span> <span class="p">{</span>
  <span class="k">private</span> <span class="nx">env</span><span class="p">:</span> <span class="nx">Env</span><span class="p">;</span>
  <span class="k">private</span> <span class="nx">client</span><span class="p">:</span> <span class="nx">MongoClient</span><span class="p">;</span>

  <span class="nf">constructor</span><span class="p">(</span><span class="nx">env</span><span class="p">:</span> <span class="nx">Env</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">env</span> <span class="o">=</span> <span class="nx">env</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MongoClient</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">MONGODB_URI</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="k">async</span> <span class="nf">getMovie</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">try</span> <span class="p">{</span>
      <span class="kd">const</span> <span class="nx">queryStartTime</span> <span class="o">=</span> <span class="nb">Date</span><span class="p">.</span><span class="nf">now</span><span class="p">();</span>
      <span class="k">await</span> <span class="k">this</span><span class="p">.</span><span class="nx">client</span><span class="p">.</span><span class="nf">connect</span><span class="p">();</span>

      <span class="kd">const</span> <span class="nx">database</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">client</span><span class="p">.</span><span class="nf">db</span><span class="p">(</span><span class="dl">"</span><span class="s2">sample_mflix</span><span class="dl">"</span><span class="p">);</span>
      <span class="kd">const</span> <span class="nx">movies</span> <span class="o">=</span> <span class="nx">database</span><span class="p">.</span><span class="nf">collection</span><span class="p">(</span><span class="dl">"</span><span class="s2">movies</span><span class="dl">"</span><span class="p">);</span>
      <span class="kd">const</span> <span class="nx">query</span> <span class="o">=</span> <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="dl">"</span><span class="s2">The Room</span><span class="dl">"</span> <span class="p">};</span>
      <span class="kd">const</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">{</span>
        <span class="na">sort</span><span class="p">:</span> <span class="p">{</span> <span class="dl">"</span><span class="s2">imdb.rating</span><span class="dl">"</span><span class="p">:</span> <span class="o">-</span><span class="mi">1</span> <span class="p">},</span>
        <span class="na">projection</span><span class="p">:</span> <span class="p">{</span> <span class="na">_id</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="na">title</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="na">imdb</span><span class="p">:</span> <span class="mi">1</span> <span class="p">},</span>
      <span class="p">};</span>
      <span class="kd">const</span> <span class="nx">movie</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">movies</span><span class="p">.</span><span class="nf">findOne</span><span class="p">(</span><span class="nx">query</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>

      <span class="kd">const</span> <span class="nx">queryTime</span> <span class="o">=</span> <span class="nb">Date</span><span class="p">.</span><span class="nf">now</span><span class="p">()</span> <span class="o">-</span> <span class="nx">queryStartTime</span><span class="p">;</span>
      <span class="k">return</span> <span class="p">{</span>
        <span class="na">movie</span><span class="p">:</span> <span class="p">{</span>
          <span class="p">...</span><span class="nx">movie</span>
        <span class="p">},</span>
        <span class="nx">queryTime</span>
      <span class="p">};</span>

    <span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">MongoDB error:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>
      <span class="k">throw</span> <span class="nx">error</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Once I had my code pushed to a repo and configured my Worker to use this repo, the CI/CD process would pick up any changes automatically.</p>

<h3 id="user-in-toronto---cluster-in-us-east-1-n-virginia">User in Toronto - Cluster in <code class="language-plaintext highlighter-rouge">us-east-1</code> (N. Virginia)</h3>

<p><img src="/images/cf/Pasted image 20250403155815.png" alt="" /></p>

<p>My Atlas cluster is in the default region - which happens to be AWS’ <code class="language-plaintext highlighter-rouge">us-east-1</code>. I’m located in Toronto, so I would expect the latency between my requests and my data to be fairly low.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>$ curl https://workers-mongodb-demo.alex-fbd.workers.dev/
{"movie":{"title":"The Room","imdb":{"rating":3.4,"votes":25750,"id":368226}},"queryTime":429}

&lt;repeat about 5 times&gt;

$ curl https://workers-mongodb-demo.alex-fbd.workers.dev/
{"movie":{"title":"The Room","imdb":{"rating":3.4,"votes":25750,"id":368226}},"queryTime":302}
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Using the extremely scientific method of curling the workers endpoint 5-6 times and averaging the <code class="language-plaintext highlighter-rouge">queryTime</code> values it seems my round trip time for an operation is 300ms, with the very first request being about 100ms slower than that.</p>

<p>I appreciate that there are <a href="https://alexbevi.com/blog/2023/05/04/round-trips-to-authenticate-a-mongodb-client-connection/">numerous round trips to required to authenticate</a> a connection to Atlas, but MongoDB’s drivers provide connection pooling out of the box so I’d sort of expect this time to go down much more - but it doesn’t.</p>

<h3 id="user-in-toronto---cluster-in-ap-northeast-1-tokyo">User in Toronto - Cluster in <code class="language-plaintext highlighter-rouge">ap-northeast-1</code> (Tokyo)</h3>

<p><img src="/images/cf/Pasted image 20250404155042.png" alt="" /></p>

<p>Just for comparison sake since Atlas <a href="https://www.mongodb.com/docs/atlas/reference/amazon-aws/#std-label-amazon-aws">offers clusters in most AWS regions</a>, I spun one up in <code class="language-plaintext highlighter-rouge">ap-northeast-1</code> and updated the connection string in my worker to see how this might impact the round trip time of an operation.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>$ curl https://workers-mongodb-demo.alex-fbd.workers.dev/
{"movie":{"title":"The Room","imdb":{"rating":3.5,"votes":25673,"id":368226}},"queryTime":2044}

&lt;repeat about 5 times&gt;

$ curl https://workers-mongodb-demo.alex-fbd.workers.dev/
{"movie":{"title":"The Room","imdb":{"rating":3.5,"votes":25673,"id":368226}},"queryTime":1901}
</pre></td></tr></tbody></table></code></pre></div></div>

<p>These requests now take almost 2 seconds each.  Since Cloudflare Workers have a <a href="https://developers.cloudflare.com/workers/configuration/smart-placement/">Smart Placement</a> feature I wanted to try that out to see if it would have any meaningful impact.</p>

<h3 id="testing-workers-and-smart-placement">Testing Workers and Smart Placement</h3>

<p>After enabling the feature, Cloudflare <a href="https://developers.cloudflare.com/workers/configuration/smart-placement/#cf-placement-header">adds a <code class="language-plaintext highlighter-rouge">cf-placement</code> header to all requests</a> so you can pretty easily verify where your worker has been placed.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre>$ curl -v https://workers-mongodb-demo.alex-fbd.workers.dev/
...
&lt; cf-placement: local-YYZ
...
{"movie":{"title":"The Room","imdb":{"rating":3.5,"votes":25673,"id":368226}},"queryTime":2029}
</pre></td></tr></tbody></table></code></pre></div></div>

<p>I ran many tests, but my response times were always the same. Initially I thought it was an issue with the Smart Placement feature, but after reviewing with a Cloudflare team member it seems Smart Placement looks at your actual traffic patterns to determine where to place it, so I’d need traffic across many regions to trigger it.</p>

<h2 id="maintaining-state-with-durable-objects">Maintaining State with Durable Objects</h2>

<p>The nature of Workers is to provide “<a href="https://www.cloudflare.com/en-ca/learning/serverless/what-is-serverless/">serverless</a> execution environments”, so they’re likely stateless and would require connections to be re-created for each request. If we could create and reuse our <code class="language-plaintext highlighter-rouge">MongoClient</code> and associated connection pool, maybe our round trip times could be improved by reducing our cold-start times.</p>

<p><a href="https://www.cloudflare.com/en-ca/developer-platform/products/durable-objects/">Durable Objects</a>  - which <a href="https://developers.cloudflare.com/durable-objects/what-are-durable-objects/">are described</a> as being a <em>“special kind of Cloudflare Worker which uniquely combines compute with storage”</em> - seem like they might be suitable for our needs. The <a href="https://developers.cloudflare.com/durable-objects/get-started/tutorial/">tutorial</a> is a great resource to get us up and running quickly, which I’ve used to adapt our previous <code class="language-plaintext highlighter-rouge">MongoDBConnector</code> implementation:</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
</pre></td><td class="rouge-code"><pre><span class="c1">// src/MongoDBDurableConnector.ts</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">DurableObject</span><span class="p">,</span> <span class="nx">DurableObjectState</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">cloudflare:workers</span><span class="dl">"</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">MongoClient</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">mongodb</span><span class="dl">'</span><span class="p">;</span>

<span class="kr">interface</span> <span class="nx">Env</span> <span class="p">{</span>
  <span class="nl">MONGODB_URI</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">export</span> <span class="kd">class</span> <span class="nc">MongoDBDurableConnector</span> <span class="kd">extends</span> <span class="nc">DurableObject</span> <span class="p">{</span>
  <span class="k">private</span> <span class="nx">env</span><span class="p">:</span> <span class="nx">Env</span><span class="p">;</span>
  <span class="k">private</span> <span class="nx">client</span><span class="p">:</span> <span class="nx">MongoClient</span><span class="p">;</span>

  <span class="nf">constructor</span><span class="p">(</span><span class="nx">state</span><span class="p">:</span> <span class="nx">DurableObjectState</span><span class="p">,</span> <span class="nx">env</span><span class="p">:</span> <span class="nx">Env</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">super</span><span class="p">(</span><span class="nx">state</span><span class="p">,</span> <span class="nx">env</span><span class="p">);</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">env</span> <span class="o">=</span> <span class="nx">env</span><span class="p">;</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MongoClient</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">MONGODB_URI</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="k">async</span> <span class="nf">getMovie</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">try</span> <span class="p">{</span>
      <span class="kd">const</span> <span class="nx">queryStartTime</span> <span class="o">=</span> <span class="nb">Date</span><span class="p">.</span><span class="nf">now</span><span class="p">();</span>
      <span class="k">await</span> <span class="k">this</span><span class="p">.</span><span class="nx">client</span><span class="p">.</span><span class="nf">connect</span><span class="p">();</span>

      <span class="kd">const</span> <span class="nx">database</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">client</span><span class="p">.</span><span class="nf">db</span><span class="p">(</span><span class="dl">"</span><span class="s2">sample_mflix</span><span class="dl">"</span><span class="p">);</span>
      <span class="kd">const</span> <span class="nx">movies</span> <span class="o">=</span> <span class="nx">database</span><span class="p">.</span><span class="nf">collection</span><span class="p">(</span><span class="dl">"</span><span class="s2">movies</span><span class="dl">"</span><span class="p">);</span>
      <span class="kd">const</span> <span class="nx">query</span> <span class="o">=</span> <span class="p">{</span> <span class="na">title</span><span class="p">:</span> <span class="dl">"</span><span class="s2">The Room</span><span class="dl">"</span> <span class="p">};</span>
      <span class="kd">const</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">{</span>
        <span class="na">sort</span><span class="p">:</span> <span class="p">{</span> <span class="dl">"</span><span class="s2">imdb.rating</span><span class="dl">"</span><span class="p">:</span> <span class="o">-</span><span class="mi">1</span> <span class="p">},</span>
        <span class="na">projection</span><span class="p">:</span> <span class="p">{</span> <span class="na">_id</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="na">title</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="na">imdb</span><span class="p">:</span> <span class="mi">1</span> <span class="p">},</span>
      <span class="p">};</span>
      <span class="kd">const</span> <span class="nx">movie</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">movies</span><span class="p">.</span><span class="nf">findOne</span><span class="p">(</span><span class="nx">query</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>

      <span class="kd">const</span> <span class="nx">queryTime</span> <span class="o">=</span> <span class="nb">Date</span><span class="p">.</span><span class="nf">now</span><span class="p">()</span> <span class="o">-</span> <span class="nx">queryStartTime</span><span class="p">;</span>
      <span class="k">return</span> <span class="p">{</span>
        <span class="na">movie</span><span class="p">:</span> <span class="p">{</span>
          <span class="p">...</span><span class="nx">movie</span>
        <span class="p">},</span>
        <span class="nx">queryTime</span>
      <span class="p">};</span>

    <span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">MongoDB error:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>
      <span class="k">throw</span> <span class="nx">error</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Let’s adapt our Worker code to be able to use either a Durable Object or the default at runtime by interpreting a query string parameter:</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
</pre></td><td class="rouge-code"><pre><span class="c1">// src/index.ts</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">MongoDBConnector</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./MongoDBConnector</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">MongoDBDurableConnector</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./MongoDBDurableConnector</span><span class="dl">'</span><span class="p">;</span>

<span class="kr">interface</span> <span class="nx">Env</span> <span class="p">{</span>
  <span class="nl">MONGODB_URI</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
  <span class="nl">MY_DURABLE_OBJECT</span><span class="p">:</span> <span class="nx">DurableObjectNamespace</span><span class="o">&lt;</span><span class="nx">MongoDBDurableConnector</span><span class="o">&gt;</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="k">async</span> <span class="nf">fetch</span><span class="p">(</span><span class="na">request</span><span class="p">:</span> <span class="nx">Request</span><span class="p">,</span> <span class="na">env</span><span class="p">:</span> <span class="nx">Env</span><span class="p">,</span> <span class="na">ctx</span><span class="p">:</span> <span class="nx">ExecutionContext</span><span class="p">):</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">Response</span><span class="o">&gt;</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="p">{</span> <span class="nx">searchParams</span> <span class="p">}</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">URL</span><span class="p">(</span><span class="nx">request</span><span class="p">.</span><span class="nx">url</span><span class="p">)</span>
    <span class="kd">let</span> <span class="nx">durable</span> <span class="o">=</span> <span class="nx">searchParams</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="dl">'</span><span class="s1">durable</span><span class="dl">'</span><span class="p">)</span>
    <span class="k">try</span> <span class="p">{</span>
      <span class="kd">let</span> <span class="nx">proxy</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>

      <span class="k">if </span><span class="p">(</span><span class="nx">durable</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">true</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="nx">id</span> <span class="o">=</span> <span class="nx">env</span><span class="p">.</span><span class="nx">MY_DURABLE_OBJECT</span><span class="p">.</span><span class="nf">idFromName</span><span class="p">(</span><span class="dl">"</span><span class="s2">mongodb-connector</span><span class="dl">"</span><span class="p">);</span>
        <span class="nx">proxy</span> <span class="o">=</span> <span class="nx">env</span><span class="p">.</span><span class="nx">MY_DURABLE_OBJECT</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="nx">id</span><span class="p">);</span>
      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nx">proxy</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MongoDBConnector</span><span class="p">(</span><span class="nx">env</span><span class="p">);</span>
      <span class="p">}</span>

      <span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">proxy</span><span class="p">.</span><span class="nf">getMovie</span><span class="p">();</span>
      <span class="k">return</span> <span class="nx">Response</span><span class="p">.</span><span class="nf">json</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">Error:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>
      <span class="kd">const</span> <span class="nx">message</span> <span class="o">=</span> <span class="nx">error</span> <span class="k">instanceof</span> <span class="nb">Error</span> <span class="p">?</span> <span class="nx">error</span><span class="p">.</span><span class="nx">message</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">Unknown error</span><span class="dl">'</span><span class="p">;</span>
      <span class="k">return</span> <span class="k">new</span> <span class="nc">Response</span><span class="p">(</span><span class="s2">`Error: </span><span class="p">${</span><span class="nx">message</span><span class="p">}</span><span class="s2">`</span><span class="p">,</span> <span class="p">{</span> <span class="na">status</span><span class="p">:</span> <span class="mi">500</span> <span class="p">});</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span> <span class="kd">satisfies </span><span class="nx">ExportedHandler</span><span class="o">&lt;</span><span class="nx">Env</span><span class="o">&gt;</span><span class="p">;</span>

<span class="c1">// need to export durable object from entrypoint</span>
<span class="k">export</span> <span class="p">{</span> <span class="nx">MongoDBDurableConnector</span> <span class="p">};</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>We’ll also need to update our <code class="language-plaintext highlighter-rouge">wrangler</code> configuration to ensure we’ve setup the appropriate bindings for our Durable objects:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
</pre></td><td class="rouge-code"><pre><span class="err">/**</span><span class="w">
 </span><span class="err">*</span><span class="w"> </span><span class="err">wrangler.jsonc</span><span class="w">
 </span><span class="err">*/</span><span class="w">
</span><span class="p">{</span><span class="w">
	</span><span class="nl">"$schema"</span><span class="p">:</span><span class="w"> </span><span class="s2">"node_modules/wrangler/config-schema.json"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"workers-mongodb-demo"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"main"</span><span class="p">:</span><span class="w"> </span><span class="s2">"src/index.ts"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"compatibility_date"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2025-03-21"</span><span class="p">,</span><span class="w">
	</span><span class="nl">"compatibility_flags"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
		</span><span class="s2">"nodejs_compat"</span><span class="w">
	</span><span class="p">],</span><span class="w">
	</span><span class="nl">"durable_objects"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"bindings"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"MY_DURABLE_OBJECT"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"class_name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"MongoDBDurableConnector"</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">],</span><span class="w">
	</span><span class="p">},</span><span class="w">
	</span><span class="nl">"migrations"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="nl">"tag"</span><span class="p">:</span><span class="w"> </span><span class="s2">"v1"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"new_classes"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="s2">"MongoDBDurableConnector"</span><span class="w">
      </span><span class="p">]</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>Once our code is pushed and the Workers CI integration picks up the changes, we can test this out by passing <code class="language-plaintext highlighter-rouge">durable=true</code> to our Workers URL:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>$ curl https://workers-mongodb-demo.alex-fbd.workers.dev/?durable=true
{"movie":{"title":"The Room","imdb":{"rating":3.5,"votes":25673,"id":368226}},"queryTime":317}

&lt;repeat about 5 times&gt;

$ curl https://workers-mongodb-demo.alex-fbd.workers.dev/?durable=true
{"movie":{"title":"The Room","imdb":{"rating":3.5,"votes":25673,"id":368226}},"queryTime":35}
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Well that’s a heck of a lot better! Using Durable Objects we were able to get the response time down almost 10x!</p>

<p>I ran a number of tests and periodically you’d still get a cold-start spike, but most requests benefit from the reduced latency maintaining a stateful Worker via Durable Objects provides.</p>

<p>It is worth calling out that Durable Objects come with some <a href="https://developers.cloudflare.com/durable-objects/platform/limits/">limitations</a> such as a soft limit of 1,000 requests per second, but for <em>most</em> use cases this is likely sufficient. I encourage you to try this out on your own and see how it works for you.</p>]]></content><author><name></name></author><category term="MongoDB" /><category term="mongodb" /><category term="drivers" /><category term="node" /><category term="nodejs" /><category term="javascript" /><category term="typescript" /><summary type="html"><![CDATA[Cloudflare recently wrote about “Your frontend, backend, and database — now in one Cloudflare Worker”, which called out that the mongodb package should now work as expected. I validated that Cloudflare Workers and MongoDB work together as well, but how well do they work together.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/mongodb-cloudflare.png" /><media:content medium="image" url="https://www.alexbevi.com/images/mongodb-cloudflare.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Cloudflare Workers and MongoDB</title><link href="https://www.alexbevi.com/blog/2025/03/25/cloudflare-workers-and-mongodb/" rel="alternate" type="text/html" title="Cloudflare Workers and MongoDB" /><published>2025-03-25T13:21:42-04:00</published><updated>2025-09-25T12:49:54-04:00</updated><id>https://www.alexbevi.com/blog/2025/03/25/cloudflare-workers-and-mongodb</id><content type="html" xml:base="https://www.alexbevi.com/blog/2025/03/25/cloudflare-workers-and-mongodb/"><![CDATA[<p>Previously I wrote about <a href="/blog/2024/09/11/why-cloudflare-workers-dont-work-with-mongodb/"><em>Why Cloudflare Workers Don’t Work With MongoDB</em></a>, but since then the Cloudflare team has done some great work to add support for the missing Node.js features MongoDB’s driver required to operate successfully from <a href="https://workers.cloudflare.com/">Cloudflare Workers</a>:</p>

<ul>
  <li><a href="https://github.com/cloudflare/workerd/pull/3315"><code class="language-plaintext highlighter-rouge">cloudflare/workerd#3315</code></a>: add node:net module</li>
  <li><a href="https://github.com/cloudflare/workerd/pull/3594"><code class="language-plaintext highlighter-rouge">cloudflare/workerd#3594</code></a>: implement TLSSocket and connect from node:tls</li>
</ul>

<p>Were these changes sufficient to make Cloudflare Workers and MongoDB Atlas work together? Let’s revisit the example from the previous blog post to verify:</p>

<h2 id="sample-application">Sample Application</h2>

<p>Once again, we’ll test the latest iteration of Cloudflare Workers by customizing the <a href="https://developers.cloudflare.com/workers/configuration/compatibility-dates/#setting-compatibility-flags">compatibility flags</a> and <a href="https://developers.cloudflare.com/workers/configuration/compatibility-dates/">compatibility date</a> in our configuration:</p>

<p><strong><code class="language-plaintext highlighter-rouge">wrangler.toml</code></strong></p>
<div class="language-toml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="py">name</span> <span class="p">=</span> <span class="s">"mongodb-cloudflare-example"</span>
<span class="py">main</span> <span class="p">=</span> <span class="s">"src/worker.ts"</span>
<span class="py">compatibility_flags</span> <span class="p">=</span> <span class="p">[</span><span class="s">"nodejs_compat_v2"</span><span class="p">]</span>
<span class="py">compatibility_date</span> <span class="p">=</span> <span class="s">"2025-03-20"</span>

<span class="nn">[vars]</span>
<span class="py">MONGODB_URI</span> <span class="p">=</span> <span class="s">"mongodb+srv://..."</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong><code class="language-plaintext highlighter-rouge">src/worker.ts</code></strong></p>
<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="rouge-code"><pre><span class="k">import</span> <span class="p">{</span> <span class="nx">MongoClient</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">mongodb</span><span class="dl">'</span><span class="p">;</span>

<span class="k">export</span> <span class="kr">interface</span> <span class="nx">Env</span> <span class="p">{</span>
  <span class="nl">MONGODB_URI</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">let</span> <span class="nx">client</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>

<span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="k">async</span> <span class="nf">fetch</span><span class="p">(</span><span class="na">request</span><span class="p">:</span> <span class="nx">Request</span><span class="p">,</span> <span class="na">env</span><span class="p">:</span> <span class="nx">Env</span><span class="p">):</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="nx">Response</span><span class="o">&gt;</span> <span class="p">{</span>
    <span class="nx">client</span> <span class="o">??=</span> <span class="k">new</span> <span class="nc">MongoClient</span><span class="p">(</span><span class="nx">env</span><span class="p">.</span><span class="nx">MONGODB_URI</span><span class="p">,</span> <span class="p">{</span>
      <span class="na">maxPoolSize</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="na">minPoolSize</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
      <span class="na">serverSelectionTimeoutMS</span><span class="p">:</span> <span class="mi">5000</span><span class="p">,</span>
    <span class="p">});</span>

    <span class="kd">const</span> <span class="nx">db</span> <span class="o">=</span> <span class="nx">client</span><span class="p">.</span><span class="nf">db</span><span class="p">(</span><span class="dl">'</span><span class="s1">test</span><span class="dl">'</span><span class="p">);</span>
    <span class="kd">const</span> <span class="nx">coll</span> <span class="o">=</span> <span class="nx">db</span><span class="p">.</span><span class="nf">collection</span><span class="p">(</span><span class="dl">'</span><span class="s1">test_workers</span><span class="dl">'</span><span class="p">);</span>

    <span class="k">await</span> <span class="nx">coll</span><span class="p">.</span><span class="nf">drop</span><span class="p">().</span><span class="k">catch</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="kc">null</span><span class="p">);</span>
    <span class="k">await</span> <span class="nx">coll</span><span class="p">.</span><span class="nf">insertOne</span><span class="p">({</span> <span class="na">a</span><span class="p">:</span> <span class="k">new</span> <span class="nc">Date</span><span class="p">()</span> <span class="p">});</span>

    <span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">coll</span><span class="p">.</span><span class="nf">findOne</span><span class="p">({});</span>
    <span class="k">return</span> <span class="nx">Response</span><span class="p">.</span><span class="nf">json</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
  <span class="p">},</span>
<span class="p">}</span> <span class="kd">satisfies </span><span class="nx">ExportedHandler</span><span class="p">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong><code class="language-plaintext highlighter-rouge">package.json</code></strong></p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="p">{</span><span class="w">
  </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"mongodb-cloudflare-example"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0.0.0"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"module"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"private"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
  </span><span class="nl">"scripts"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"wrangler dev"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"dependencies"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"mongodb"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^6.15.0"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"devDependencies"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"wrangler"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^4.4.0"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>To test the code above you would need to do the following:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>npm <span class="nb">install
</span>npm start
</pre></td></tr></tbody></table></code></pre></div></div>

<p>This will launch <a href="https://developers.cloudflare.com/workers/wrangler/">Wrangler</a>, the CLI for working with Cloudflare Workers.</p>

<h2 id="evaluation">Evaluation</h2>

<p>Now that our worker is running locally, it should be accessible via http://localhost:8787. The worker logic we wrote in <code class="language-plaintext highlighter-rouge">wrangler.ts</code> should perform the following actions:</p>

<ul>
  <li>connect to the MongoDB cluster via the connection string configured in the <code class="language-plaintext highlighter-rouge">MONGODB_URI</code> environment variable (setup in <code class="language-plaintext highlighter-rouge">wrangler.toml</code>)</li>
  <li>drop the <code class="language-plaintext highlighter-rouge">test_workers</code> collection in the <code class="language-plaintext highlighter-rouge">test</code> database</li>
  <li>insert a new document in the <code class="language-plaintext highlighter-rouge">test_workers</code> collection</li>
  <li>retrieve the inserted document from the <code class="language-plaintext highlighter-rouge">test_workers</code> collection</li>
  <li>return a JSON representation of that document</li>
</ul>

<p>Let’s try it out and see what happens:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>curl localhost:8787
<span class="o">{</span><span class="s2">"_id"</span>:<span class="s2">"67e2e4bb377816f2a78db326"</span>,<span class="s2">"a"</span>:<span class="s2">"2025-03-25T17:15:39.957Z"</span><span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>SUCCESS!</p>

<p>We were able to connect to our cluster (using <a href="https://www.mongodb.com/docs/drivers/node/current/fundamentals/authentication/mechanisms/">SCRAM authentication</a>) to interact with our data via the MongoDB Node.js driver from a Worker.</p>

<h2 id="conclusion">Conclusion</h2>

<p>Excitement for Cloudflare Workers support for MongoDB has been around in the <a href="https://www.mongodb.com/community/forums/t/cloudflare-workers-integration-is-now-possible/226708">MongoDB developer forums</a> since May, 2023. As the Product Manager for MongoDB’s JavaScript developer experience I’ve possibly been making more noise about this issue than most - including the initial blog post. I shared this with the Cloudflare team in a <a href="https://github.com/cloudflare/workers-sdk/issues/6684">bug report on the <code class="language-plaintext highlighter-rouge">workers-sdk</code></a>, which ultimately triggered a <a href="https://github.com/cloudflare/workerd/discussions/2721">discussion on the <code class="language-plaintext highlighter-rouge">workerd</code> project</a> that may have prompted the ensuing engineering effort.</p>

<p>I really look forward to seeing the amazing opportunities this integration can unlock for MongoDB developers that want to take advantage of the power and flexibility of Cloudflare Workers!</p>]]></content><author><name></name></author><category term="MongoDB" /><category term="mongodb" /><category term="drivers" /><category term="node" /><category term="nodejs" /><category term="javascript" /><category term="typescript" /><summary type="html"><![CDATA[Previously I wrote about Why Cloudflare Workers Don’t Work With MongoDB, but since then the Cloudflare team has done some great work to add support for the missing Node.js features MongoDB’s driver required to operate successfully from Cloudflare Workers:]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/mongodb-cloudflare.png" /><media:content medium="image" url="https://www.alexbevi.com/images/mongodb-cloudflare.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals! (Sierra On-Line) - 1989</title><link href="https://www.alexbevi.com/blog/2025/03/14/leisure-suit-larry-iii/" rel="alternate" type="text/html" title="Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals! (Sierra On-Line) - 1989" /><published>2025-03-14T07:58:17-04:00</published><updated>2025-09-25T12:49:54-04:00</updated><id>https://www.alexbevi.com/blog/2025/03/14/leisure-suit-larry-iii</id><content type="html" xml:base="https://www.alexbevi.com/blog/2025/03/14/leisure-suit-larry-iii/"><![CDATA[<blockquote class="prompt-tip mb-6">
  <strong>Series:&nbsp;<a href="/blog/2021/07/28/adventure-games-1980-1999/">Let's Adventure! A Journey into Adventure Games (1980-1999)</a></strong><p>This review is part of the Let's Adventure! series. See all reviewed games sorted by rating <a href="/blog/2021/08/08/adventure-games-1980-1999-sorted-by-score/">here</a>.</p><ul class="list-none space-y-1"><li>← <a href="/blog/2025/02/02/universe/">Universe (Core Design) - 1994</a></li><li><strong>Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals! (Sierra On-Line) - 1989</strong></li><li>→ <a href="/blog/2025/04/24/peppers-adventures-in-time/">Pepper's Adventures in Time (Sierra On-Line) - 1993</a></li></ul>

  <p>Article 95 of 97 in this series.</p>
</blockquote>

<p><a href="https://en.wikipedia.org/wiki/Leisure_Suit_Larry_III:_Passionate_Patti_in_Pursuit_of_the_Pulsating_Pectorals">Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals</a> is a graphical adventure game designed by Al Lowe and published by Sierra On-Line for DOS, Atari ST and Amiga in 1989 as the third entry in their Leisure Suit Larry series.</p>

<p><img src="/images/adventure/lsl3/scummvm-lsl3-00005.png" alt="" /></p>

<p>Passionate Patti in Pursuit of the Pulsating Pectorals! is the third game in Al Lowe’s Leisure Suit Larry series. Larry Laffer has finally found the woman of his dreams, and can happily live with her together on the beautiful tropical island… until he gets thrown out of the house by his wife. His boss, who happens to be his (now ex-) father-in-law, fires him. Larry is all alone, without a woman, without a job, on an island that has long ceased to be a “tropical paradise” and is exploited by entertainers, lawyers, and alike. But never despair! Dressed in his irresistible leisure suit, Larry is about to conquer the world (or at least its female population) anew. Watch out, fairer sex, because Larry is back to his swinging self!</p>

<p>The game uses the same text-based interface and the same graphical engine as the previous entry in the series. The structure of the game, however, is more similar to that of the first installment: most of the time, the player is confined to one large area which can be freely explored. Unlike the two previous Larry games, the player does not just control Larry, but also - in the second half of the game - the enigmatic and beautiful pianist Patti, helping them to reach an ending that will finally bring happiness into Larry’s life.<sup id="fnref:1"><a href="#fn:1" class="footnote" rel="footnote" role="doc-noteref">1</a></sup></p>

<p><img src="/images/adventure/lsl3/scummvm-lsl3-00004.png" alt="" /></p>

<p>As with any title in the Leisure Suit Larry series, this game isn’t for kids. The subject matter is mature, the jokes are crude and the themes are sexually explicit. This doesn’t detract from the experience in any way though - this is probably what drew you to this game in the first place so you know what you’re in for.</p>

<p>If you start your game by poking around the menus, one of the first options you’ll find is the expletive configuration screen. Make this anything you want - Larry won’t censor you ;)</p>

<p><img src="/images/adventure/lsl3/scummvm-lsl3-00006.png" alt="" /></p>

<p>Once you’ve got your favourite expletive configured, you’ll start exploring the island. It made me chuckle every time this popped up in conversation, so I have to applaud the design decision they made with this mechanic.</p>

<p>Your objective isn’t really clear, so you start roaming around the small island to see what’s available. I’m not sure if it’s clever or not, but the <a href="https://www.mocagh.org/sierra/lsl3-manual.pdf">game’s manual</a> is sort of required reading to get you started, but the way it’s presented also isn’t very clear.</p>

<p>You’ll need to read through “Nontoonyt Tonite: Your Guide to the Island” (the game manual) as it sort of lays out your objectives, and acts as copy protection as well.</p>

<p><img src="/images/adventure/lsl3/scummvm-lsl3-00010.png" alt="" /></p>

<p>This game manual is the key to many of the game’s puzzles. Personally I think it’s relied upon too heavily, and some of the clues it contains are maybe too well hidden. For example, at one point you’ll need to make a grass skirt for a disguise, but in order to do this you need to:</p>

<ul>
  <li>find the grass</li>
  <li>find a knife</li>
  <li>sharpen the knife</li>
  <li>cut the grass</li>
  <li><code class="language-plaintext highlighter-rouge">WEAVE GRASS INTO SKIRT</code></li>
</ul>

<p>You’re sort of lead towards that last step by the inclusion of “Native Grass Weaving Lessons” in the community calendar of the manual. Maybe that’s good puzzle design - maybe it’s too obscure - you decide.</p>

<p><img src="/images/adventure/lsl3/scummvm-lsl3-00014.png" alt="" /></p>

<p>As you progress you’ll meet various women that you can interact with. Each of them typically sets you up for some larger fetch quest, which on completion results in you getting to “interact” with them further (wink wink, nudge nudge).</p>

<p><img src="/images/adventure/lsl3/scummvm-lsl3-00026.png" alt="" /></p>

<p>Being a text parser driven game, Larry (and later Patti) interact with the game world based on what you type in. I’ve played a lot of Sierra adventure games, and though many games can be a bit rigid as to what they’re willing to accept, I really found progressing in this game to be frustrating.</p>

<p>Many interactions just aren’t obvious. This might just be a lack of patience on my part, but I relied pretty heavily on the walkthrough while playing through this game.</p>

<p>Most of the puzzles were obtuse, and more often than not the solutions were cryptically laid out in the game manual.</p>

<p><img src="/images/adventure/lsl3/scummvm-lsl3-00018.png" alt="" /></p>

<p>The goal of the game ends up being that Larry needs to find his way into the spa, figure out how to get into the locker and get himself pumped up.</p>

<p>This will enable him to hook up with the aerobics instructor, and then eventually meet up with Passionate Patti - the namesake of this game.</p>

<p><img src="/images/adventure/lsl3/scummvm-lsl3-00023.png" alt="" /></p>

<p>Patti and Larry will spend the night together, but Patti calls out the wrong name in her sleep. This upsets Larry, so he silently slips out of bed, gets dressed and leaves.</p>

<p>Apparently Patti is in love with Larry at this point and the mission for the rest of the game is to go find where he’s run off to.</p>

<p><img src="/images/adventure/lsl3/scummvm-lsl3-00028.png" alt="" /></p>

<p>The Patti portion of the game is fairly short, but immensely frustrating.</p>

<p>Once you take control of her and spot Larry (through the telescope on her balcony) heading to the far end of the island, your mission is to try and catch up to him.</p>

<p>Doing this involves navigating through a maze - which I continue to hate.</p>

<p>The solution to this maze is - you guessed it - hidden in the game manual. The lyrics to the song that is scattered throughout the manual has capitalized letters that refer to cardinal directions.</p>

<p>Stringing this together is the solution to the maze, but you can’t make it all the way through unless you remembered to pick up the bottle on wine in Patti’s room and fill it with water.</p>

<p><img src="/images/adventure/lsl3/scummvm-lsl3-00032.png" alt="" /></p>

<p>If you make it through the maze, you’ll need to figure out how to cross the chasm between two trees. Taking the hemp and weaving it into rope that you tie to a rock and throw over the chasm might make sense … but you’ll fall to your death every time you try to cross.</p>

<p>You’ll need to rip a chunk of your dress to build a harness that you then tie to the rope so you can cross. Who would think to do that? Maybe it was also hidden in the manual somewhere … but I reached for the walkthrough instead.</p>

<p><img src="/images/adventure/lsl3/scummvm-lsl3-00035.png" alt="" /></p>

<p>Once Patti makes it across the chasm and finds her way to the river, there’s a minigame you’ll be forced to play through.</p>

<p>You basically just have to veer left or right to avoid obstacles, but it takes a long time and isn’t really all that much fun.</p>

<p>I had to lower the game speed to make it through, and thankfully you can save and load your game on the river so you don’t lose too much progress every time you die … and you will die … often.</p>

<p><img src="/images/adventure/lsl3/scummvm-lsl3-00038.png" alt="" /></p>

<p>The endgame is fairly straightforward … assuming you remembered to pick up the magic marker on the island before you made your way to the maze.</p>

<p>Using the magic marker sort of “warps” you to the Sierra studios, where you walk through the sets of some other games.</p>

<p>This part is actually kind of cool, and the background music represents the games you’re walking through. The final set you visit is Space Quest, which you need to float over to a plug and unplug to finish the game.</p>

<p><img src="/images/adventure/lsl3/scummvm-lsl3-00041.png" alt="" /></p>

<p>After the final scene Larry and Patti meet Roberta Williams and she decides to have them write a game for her - so that’s where the story ends.</p>

<p>I personally like Al Lowe’s sense of humour, but I really didn’t enjoy this game. I appreciate that they tried to build a game around the manual that comes with the game, but it made for a very broken gaming experience.</p>

<p>You have to refer back to the manual way too often, and there are too many dead ends and dead man walking scenarios that require you to backtrack or restart.</p>

<p>Overall this entry in the series just wasn’t all that much fun. I am looking forward to the later entires (LSL6 and LSL7) in the series as I have much fonder memories of them.</p>

<h2 id="game-information">Game Information</h2>

<table>
  <tbody>
    <tr>
      <td><em>Game</em></td>
      <td>Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals</td>
    </tr>
    <tr>
      <td><em>Developer</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Sierra_Entertainment">Sierra On-Line</a></td>
    </tr>
    <tr>
      <td><em>Publisher</em></td>
      <td>Sierra On-Line</td>
    </tr>
    <tr>
      <td><em>Release Date</em></td>
      <td>1994</td>
    </tr>
    <tr>
      <td><em>Systems</em></td>
      <td>DOS, Amiga, Atari ST</td>
    </tr>
    <tr>
      <td><em>Game Engine</em></td>
      <td><a href="https://wiki.scummvm.org/index.php?title=SCI">SCI</a></td>
    </tr>
  </tbody>
</table>

<h3 id="my-playthrough">My Playthrough</h3>

<table>
  <tbody>
    <tr>
      <td><a href="https://howlongtobeat.com/game/5270">How Long To Beat?</a></td>
      <td>4 hours</td>
    </tr>
    <tr>
      <td><em>Version Played</em></td>
      <td>DOS via <a href="https://www.scummvm.org/">ScummVM</a></td>
    </tr>
    <tr>
      <td><em>Notes</em></td>
      <td><a href="http://larrylaffer.net/lslgames/lsl3-general/lsl3-walk-thru">Walkthrough</a>, <a href="https://www.mocagh.org/sierra/lsl3-manual.pdf">Manual</a>, <a href="http://larrylaffer.net/lslgames/lsl3-general/lsl3-copyright-protection">Manual / Protection</a></td>
    </tr>
  </tbody>
</table>

<h3 id="score">Score</h3>

<p>See <a href="https://www.alexbevi.com/blog/2021/07/28/adventure-games-1980-1999/#scoring">here</a> for a refresher on how we’re scoring these games.</p>

<table>
  <tbody>
    <tr>
      <td><strong>Graphics (15)</strong></td>
      <td>6</td>
    </tr>
    <tr>
      <td><strong>Sound (10)</strong></td>
      <td>5</td>
    </tr>
    <tr>
      <td><strong>Plot / Progression (25)</strong></td>
      <td>14</td>
    </tr>
    <tr>
      <td><strong>Characters / Development (15)</strong></td>
      <td>6</td>
    </tr>
    <tr>
      <td><strong>Gameplay / Experience (15)</strong></td>
      <td>6</td>
    </tr>
    <tr>
      <td><strong>Replayability (5)</strong></td>
      <td>1</td>
    </tr>
    <tr>
      <td><strong>Impact / Impression (10)</strong></td>
      <td>3</td>
    </tr>
    <tr>
      <td><strong>Bonus / Surprise (5)</strong></td>
      <td>1</td>
    </tr>
    <tr>
      <td> </td>
      <td><strong>42%</strong></td>
    </tr>
  </tbody>
</table>

<h3 id="gallery">Gallery</h3>

<div id="inline-gallery-container" class="inline-gallery-container"></div>
<script type="module">import lightGallery from "https://cdn.skypack.dev/lightgallery@2.4.0";import lgZoom from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/zoom";import lgThumbnail from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/thumbnail";const $lgContainer = document.getElementById("inline-gallery-container");const inlineGallery = lightGallery($lgContainer, {  container: $lgContainer,  licenseKey: "C2D2C2BD-16BC4564-A4EAE653-401CB884",  dynamic: true,  hash: false,  closable: false,  showMaximizeIcon: true,  slideDelay: 10,  plugins: [lgZoom, lgThumbnail],  dynamicEl: [{ src: '/images/adventure/lsl3/scummvm-lsl3-00001.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00001.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00002.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00002.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00003.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00003.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00007.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00007.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00008.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00008.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00009.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00009.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00011.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00011.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00012.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00012.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00013.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00013.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00015.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00015.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00016.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00016.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00017.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00017.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00019.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00019.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00020.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00020.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00021.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00021.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00022.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00022.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00024.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00024.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00025.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00025.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00027.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00027.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00029.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00029.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00030.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00030.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00031.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00031.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00033.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00033.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00034.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00034.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00036.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00036.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00037.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00037.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00039.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00039.png' },{ src: '/images/adventure/lsl3/scummvm-lsl3-00040.png', thumb: '/images/adventure/lsl3/scummvm-lsl3-00040.png' },]});inlineGallery.openGallery();</script>

<p><strong>Footnotes</strong></p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1">
      <p><small>Description from <a href="https://www.mobygames.com/game/412/leisure-suit-larry-iii-passionate-patti-in-pursuit-of-the-pulsat/">Moby Games</a></small> <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;&#xfe0e;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="Let&apos;s Adventure!" /><category term="adventure" /><category term="Sierra On-Line" /><category term="played:DOS" /><category term="SCI" /><summary type="html"><![CDATA[Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Universe (Core Design) - 1994Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals! (Sierra On-Line) - 1989→ Pepper's Adventures in Time (Sierra On-Line) - 1993 Article 95 of 97 in this series.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/adventure/lsl3/scummvm-lsl3-00000.png" /><media:content medium="image" url="https://www.alexbevi.com/images/adventure/lsl3/scummvm-lsl3-00000.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Universe (Core Design) - 1994</title><link href="https://www.alexbevi.com/blog/2025/02/02/universe/" rel="alternate" type="text/html" title="Universe (Core Design) - 1994" /><published>2025-02-02T07:56:58-05:00</published><updated>2025-09-25T12:49:54-04:00</updated><id>https://www.alexbevi.com/blog/2025/02/02/universe</id><content type="html" xml:base="https://www.alexbevi.com/blog/2025/02/02/universe/"><![CDATA[<blockquote class="prompt-tip mb-6">
  <strong>Series:&nbsp;<a href="/blog/2021/07/28/adventure-games-1980-1999/">Let's Adventure! A Journey into Adventure Games (1980-1999)</a></strong><p>This review is part of the Let's Adventure! series. See all reviewed games sorted by rating <a href="/blog/2021/08/08/adventure-games-1980-1999-sorted-by-score/">here</a>.</p><ul class="list-none space-y-1"><li>← <a href="/blog/2025/01/22/neuromancer/">Neuromancer (Interplay Productions) - 1988</a></li><li><strong>Universe (Core Design) - 1994</strong></li><li>→ <a href="/blog/2025/03/14/leisure-suit-larry-iii/">Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals! (Sierra On-Line) - 1989</a></li></ul>

  <p>Article 94 of 97 in this series.</p>
</blockquote>

<p><a href="https://en.wikipedia.org/wiki/Universe_(1994_video_game)">Universe</a> is a graphic adventure game developed and published by Core Design for the Amiga, Amiga CD32 and DOS platforms in 1994. It was Core Design’s second and last effort in the adventure game genre after Curse of Enchantia, of which it was originally planned to be a sequel.</p>

<p>Universe is a space opera that tells the story of Boris, a young man who has been summoned from modern Earth to another universe, where he is destined to become its long forecast savior from evil. The game received mostly positive reviews.</p>

<p><img src="/images/adventure/universe/006.png" alt="" /></p>

<p>You are Boris Verne, a normal guy who has been cast in a parallel universe because of your uncle’s Virtual Dimension Inducer. There you’ll have to find the fabled lost star as well as a way to defeat the Golden King… This is a classic old-style adventure game with a point &amp; click interface. It uses the Rotoscope system to manage game characters and scores really beautiful 256-colour graphic.<sup id="fnref:1"><a href="#fn:1" class="footnote" rel="footnote" role="doc-noteref">1</a></sup></p>

<p><img src="/images/adventure/universe/000.png" alt="" />
<em>Another release from the fine folks at <a href="https://demozoo.org/productions/254430/">Prestige</a></em></p>

<p>This is the first game on my list that I’ve tackled so far that was available on the <a href="https://en.wikipedia.org/wiki/Amiga_CD32">Amiga CD32</a>, so I figured it would be worth trying to play through that version if possible.</p>

<p>I’ve been using <a href="https://dirkwhoffmann.github.io/vAmiga/">vAmiga</a> for my Amiga games, but I couldn’t get CD32 working (it’s possibly just not supported). I then tried <a href="https://fs-uae.net/">FS-UAE</a>, but didn’t have a kickstart ROM for it … so I ended up just watching a bit of a <a href="https://www.youtube.com/watch?v=bP0uQl4W8aQ">longplay on YouTube</a> just to get a sense of what’s different.</p>

<p>Seems the only difference was CD quality audio, which comes through nicely in the videos. The sound design in this game is pretty good, so even without the CD audio the ambient background music did a great job of setting the tone for each scene in the game.</p>

<p><img src="/images/adventure/universe/002.png" alt="" /></p>

<p>Since the game starts off with a long intro sequence (which is also spelled out in the <a href="https://dn790003.ca.archive.org/0/items/universe-manual/Universe%20-%20Manual-DE-ENG-FR-IT.pdf">manual</a>) I sort of expected the story to take place across multiple chapters - but maybe the chapter in this case referred to the whole game and subsequent chapters would have been sequels.</p>

<p><img src="/images/adventure/universe/004.png" alt="" /></p>

<p>After the intro you find yourself stranded all alone in space. There’s a futuristic city behind you that you can’t reach, and if you wander off in the other direction you can fall off onto a barren planet surface you can explore.</p>

<p>The game’s interface is fairly intuitive if you’ve played Point and Click Adventure games in the past, as you’ll be given a verb bar with common actions you can perform (<code class="language-plaintext highlighter-rouge">LOOK</code>, <code class="language-plaintext highlighter-rouge">PICK UP</code>, <code class="language-plaintext highlighter-rouge">TALK</code>, etc). There is an additional <code class="language-plaintext highlighter-rouge">OPTIONS</code> item that links to a submenu of actions such as <code class="language-plaintext highlighter-rouge">THROW</code>, <code class="language-plaintext highlighter-rouge">JUMP</code>and <code class="language-plaintext highlighter-rouge">INSERT</code>.</p>

<p>You’ll find you actually use these additional actions a lot more that the primary actions, so you’ll be clicking through to the submenu fairly frequently.</p>

<p>This submenu also includes an <code class="language-plaintext highlighter-rouge">INFO</code> item which goes to a third submenu where you can save/load your game or redisplay the initial scene info. This is useful if you accidentally clicked away the description when you first entered the screen.</p>

<p><img src="/images/adventure/universe/010.png" alt="" /></p>

<p>Once you figure out how to navigate the game world (including jumping to the spinning rock, then jumping back to the floating platform) and extend the bridge to the first town, you’ll be able to explore the game world a bit further.</p>

<p>Universe is visually impressive, and most scenes are extremely detailed in all their pixel-art glory. When you’re not roaming around looking for items to pick up, you’ll engage with various alien races using a fairly straightforward conversation system.</p>

<p><img src="/images/adventure/universe/009.png" alt="" /></p>

<p>As you progress through the game, there are occasionally “cut scenes” that help progress the plot. Boris will have to escape the first world and head towards the Wheelworld to learn more about the tyrannical Emperor Neiamises, the secret order of the Healers and Baron Keelev.</p>

<p>For adventure game fans, the story really takes center stage and makes the gameplay just a vehicle through which the story can unfold.</p>

<p>This game feels like it’s going to be a massive, sweeping experience as you’re playing through it, but there’s actually not all that much you need to do.</p>

<p><img src="/images/adventure/universe/013.png" alt="" /></p>

<p>There are several items you’ll need to pick up as you explore, and the game does include a few item combination style puzzles as a result. Examining most items will make it fairly apparent what you’re supposed to do with them though, so you typically won’t find yourself scratching your head for too long trying to figure out what to do next.</p>

<p><img src="/images/adventure/universe/038.png" alt="" /></p>

<p>One of the nice touches of Universe is the fact that the cursor will change into a thumbs up or thumbs down based on the action you just performed. Given how bad the pathfinding can be on some screens, it’s very easy to issue a command and then Boris sort of just stands there until you move a little in one direction and try again.</p>

<p>Since the cursor will change to indicate success or failure, if you try something and it works but nothing happens, you know you just need to try it again from a different position to progress.</p>

<p><img src="/images/adventure/universe/027.png" alt="" /></p>

<p>For anyone that’s played this style of game before, it’s not overly difficult - but there are couple of arcade sequences that can be a pain in the ass.</p>

<p>On the Wheelworld you’ll meed a healer who’s had their hand stolen by thieves that take off on jetpacks. You’ll need to jump into your PTV and fly after them, shooting them down or running them into the sides of buildings.</p>

<p>It’s very easy to die in this sequence and I must have done it a dozen or so times before I finally got through it. It wasn’t fun - it was just sort of tedious.</p>

<p>I appreciate when adventure games have the self awareness to allow you to skip these sequences (like you can skip playing poker in Police Quest 1), but Universe isn’t one of those games.</p>

<p><img src="/images/adventure/universe/028.png" alt="" /></p>

<p>When Boris dies (and he will), the game over screen makes fun of your incompetence and will occasionally give you a clue as to what you should have done instead. You can really feel the inspiration from Sierra Online here.</p>

<p><img src="/images/adventure/universe/041.png" alt="" /></p>

<p>Like with any adventure game, save early and save often. Since I was playing the Amiga version, this mean having to eject the game disk, insert the save disk, save, eject and reinsert the game disk again. Modern gamers are so spoiled …</p>

<p><img src="/images/adventure/universe/012.png" alt="" /></p>

<p>There are a number of planets you’ll be able to explore once you have access to a PTV. Each planet you have access requires you to go through the same motions of navigating to it, descending to it, picking a quadrant to explore, then exploring.</p>

<p>When you first get access to the map of the Universe it can feel a bit daunting, but most of the  available planets has very little to do or see. You’ll need to backtrack occasionally to solve fetch quests or after you’ve unlocked various story elements to open up new dialogue options with certain characters.</p>

<p><img src="/images/adventure/universe/048.png" alt="" /></p>

<p>Aside from running back and forth between a handful of planets, the majority of this game’s plot advances through conversations with various characters you’ll meet along the way. Boris will slowly learn more about his place in the Universe and that he’s expected to take down the Emperor.</p>

<p>Character interactions occur via a branching dialogue system, which frequently will result in a game over if you pick the wrong options. Though having to reload can be frustrating, the feedback the game gives you when Boris dies is at least entertaining.</p>

<p><img src="/images/adventure/universe/039.png" alt="" /></p>

<p>Universe is mostly straightforward, but the final sequences ratchet up the complexity. You’ll need to figure out how to open a portal to another dimension to retrieve a power stone. Once you find the various pieces you’ll need (on multiple planets), <code class="language-plaintext highlighter-rouge">COMBINE</code> them and use them in the right place, you’ll need to solve a puzzle.</p>

<p>This puzzle involves running over various stones to disable 6 lasers, but if you don’t do it fast enough, they reset and you start over. This took … forever. Once you are able to do it, you have to throw a rock at the power stone, then pick it up and run so you’re not immediately captured by a bunch of ghosts.</p>

<p><img src="/images/adventure/universe/051.png" alt="" /></p>

<p>With the power stone in hand and back in the right dimension, you’ll make your way into the Emperor’s palace, navigate a short maze, expose the Baron for wanting to steal the Emperor’s power, then once the Baron is vanquished, defeat the Emperor.</p>

<p>Yay, you’ve saved the Universe and your uncle shows up to take you back home.</p>

<p><img src="/images/adventure/universe/058.png" alt="" /></p>

<p>Universe was surprisingly good. I’d never heard of this game and didn’t know what to expect, but the story and characters drew me in immediately. The game is beautiful, the sound effects and ambient music are fitting and really enhance the gaming experience.</p>

<p>Having watched a couple of let’s plays of the game it seems you can burn through it in a couple hours if you know what you’re doing - but to just explore the Universe and naturally experience the game takes much longer.</p>

<p>The star of this show is definitely the story, and you can feel the Star Wars influences throughout. I found myself getting caught up in the plot and looking forward to uncovering more details about the worlds I was exploring and the characters I’d meet.</p>

<p>If you love this genre and are looking to experience a great Point and Click Adventure you likely wouldn’t have, give Universe a go. You won’t be disappointed (though you may occasionally be frustrated).</p>

<h2 id="game-information">Game Information</h2>

<table>
  <tbody>
    <tr>
      <td><em>Game</em></td>
      <td>Universe</td>
    </tr>
    <tr>
      <td><em>Developer</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Core_Design">Core Design</a></td>
    </tr>
    <tr>
      <td><em>Publisher</em></td>
      <td>Core Design</td>
    </tr>
    <tr>
      <td><em>Release Date</em></td>
      <td>1994</td>
    </tr>
    <tr>
      <td><em>Systems</em></td>
      <td>Amiga, Amiga CD32, DOS</td>
    </tr>
    <tr>
      <td><em>Game Engine</em></td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h3 id="my-playthrough">My Playthrough</h3>

<table>
  <tbody>
    <tr>
      <td><a href="https://howlongtobeat.com/game/27306">How Long To Beat?</a></td>
      <td>5 hours</td>
    </tr>
    <tr>
      <td><em>Version Played</em></td>
      <td>Amiga via <a href="https://dirkwhoffmann.github.io/vAmiga/">vAmiga</a></td>
    </tr>
    <tr>
      <td><em>Notes</em></td>
      <td><a href="https://www.walkthroughking.com/text/universe.aspx">Walkthrough</a>, <a href="https://archive.org/details/universe-manual">Manual</a></td>
    </tr>
  </tbody>
</table>

<h3 id="score">Score</h3>

<p>See <a href="https://www.alexbevi.com/blog/2021/07/28/adventure-games-1980-1999/#scoring">here</a> for a refresher on how we’re scoring these games.</p>

<table>
  <tbody>
    <tr>
      <td><strong>Graphics (15)</strong></td>
      <td>10</td>
    </tr>
    <tr>
      <td><strong>Sound (10)</strong></td>
      <td>7</td>
    </tr>
    <tr>
      <td><strong>Plot / Progression (25)</strong></td>
      <td>19</td>
    </tr>
    <tr>
      <td><strong>Characters / Development (15)</strong></td>
      <td>10</td>
    </tr>
    <tr>
      <td><strong>Gameplay / Experience (15)</strong></td>
      <td>10</td>
    </tr>
    <tr>
      <td><strong>Replayability (5)</strong></td>
      <td>1</td>
    </tr>
    <tr>
      <td><strong>Impact / Impression (10)</strong></td>
      <td>7</td>
    </tr>
    <tr>
      <td><strong>Bonus / Surprise (5)</strong></td>
      <td>2</td>
    </tr>
    <tr>
      <td> </td>
      <td><strong>66%</strong></td>
    </tr>
  </tbody>
</table>

<h3 id="gallery">Gallery</h3>

<div id="inline-gallery-container" class="inline-gallery-container"></div>
<script type="module">import lightGallery from "https://cdn.skypack.dev/lightgallery@2.4.0";import lgZoom from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/zoom";import lgThumbnail from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/thumbnail";const $lgContainer = document.getElementById("inline-gallery-container");const inlineGallery = lightGallery($lgContainer, {  container: $lgContainer,  licenseKey: "C2D2C2BD-16BC4564-A4EAE653-401CB884",  dynamic: true,  hash: false,  closable: false,  showMaximizeIcon: true,  slideDelay: 10,  plugins: [lgZoom, lgThumbnail],  dynamicEl: [{ src: '/images/adventure/universe/003.png', thumb: '/images/adventure/universe/003.png' },{ src: '/images/adventure/universe/005.png', thumb: '/images/adventure/universe/005.png' },{ src: '/images/adventure/universe/007.png', thumb: '/images/adventure/universe/007.png' },{ src: '/images/adventure/universe/008.png', thumb: '/images/adventure/universe/008.png' },{ src: '/images/adventure/universe/011.png', thumb: '/images/adventure/universe/011.png' },{ src: '/images/adventure/universe/014.png', thumb: '/images/adventure/universe/014.png' },{ src: '/images/adventure/universe/015.png', thumb: '/images/adventure/universe/015.png' },{ src: '/images/adventure/universe/016.png', thumb: '/images/adventure/universe/016.png' },{ src: '/images/adventure/universe/017.png', thumb: '/images/adventure/universe/017.png' },{ src: '/images/adventure/universe/018.png', thumb: '/images/adventure/universe/018.png' },{ src: '/images/adventure/universe/019.png', thumb: '/images/adventure/universe/019.png' },{ src: '/images/adventure/universe/020.png', thumb: '/images/adventure/universe/020.png' },{ src: '/images/adventure/universe/021.png', thumb: '/images/adventure/universe/021.png' },{ src: '/images/adventure/universe/022.png', thumb: '/images/adventure/universe/022.png' },{ src: '/images/adventure/universe/023.png', thumb: '/images/adventure/universe/023.png' },{ src: '/images/adventure/universe/024.png', thumb: '/images/adventure/universe/024.png' },{ src: '/images/adventure/universe/025.png', thumb: '/images/adventure/universe/025.png' },{ src: '/images/adventure/universe/026.png', thumb: '/images/adventure/universe/026.png' },{ src: '/images/adventure/universe/029.png', thumb: '/images/adventure/universe/029.png' },{ src: '/images/adventure/universe/030.png', thumb: '/images/adventure/universe/030.png' },{ src: '/images/adventure/universe/031.png', thumb: '/images/adventure/universe/031.png' },{ src: '/images/adventure/universe/032.png', thumb: '/images/adventure/universe/032.png' },{ src: '/images/adventure/universe/033.png', thumb: '/images/adventure/universe/033.png' },{ src: '/images/adventure/universe/034.png', thumb: '/images/adventure/universe/034.png' },{ src: '/images/adventure/universe/035.png', thumb: '/images/adventure/universe/035.png' },{ src: '/images/adventure/universe/036.png', thumb: '/images/adventure/universe/036.png' },{ src: '/images/adventure/universe/037.png', thumb: '/images/adventure/universe/037.png' },{ src: '/images/adventure/universe/040.png', thumb: '/images/adventure/universe/040.png' },{ src: '/images/adventure/universe/042.png', thumb: '/images/adventure/universe/042.png' },{ src: '/images/adventure/universe/043.png', thumb: '/images/adventure/universe/043.png' },{ src: '/images/adventure/universe/044.png', thumb: '/images/adventure/universe/044.png' },{ src: '/images/adventure/universe/045.png', thumb: '/images/adventure/universe/045.png' },{ src: '/images/adventure/universe/046.png', thumb: '/images/adventure/universe/046.png' },{ src: '/images/adventure/universe/047.png', thumb: '/images/adventure/universe/047.png' },{ src: '/images/adventure/universe/049.png', thumb: '/images/adventure/universe/049.png' },{ src: '/images/adventure/universe/050.png', thumb: '/images/adventure/universe/050.png' },{ src: '/images/adventure/universe/052.png', thumb: '/images/adventure/universe/052.png' },{ src: '/images/adventure/universe/053.png', thumb: '/images/adventure/universe/053.png' },{ src: '/images/adventure/universe/054.png', thumb: '/images/adventure/universe/054.png' },{ src: '/images/adventure/universe/055.png', thumb: '/images/adventure/universe/055.png' },{ src: '/images/adventure/universe/056.png', thumb: '/images/adventure/universe/056.png' },{ src: '/images/adventure/universe/057.png', thumb: '/images/adventure/universe/057.png' },]});inlineGallery.openGallery();</script>

<p><strong>Footnotes</strong></p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1">
      <p><small>Description from <a href="https://www.mobygames.com/game/687/neuromancer/">Moby Games</a></small> <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;&#xfe0e;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="Let&apos;s Adventure!" /><category term="adventure" /><category term="Core Design" /><category term="played:Amiga" /><summary type="html"><![CDATA[Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Neuromancer (Interplay Productions) - 1988Universe (Core Design) - 1994→ Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals! (Sierra On-Line) - 1989 Article 94 of 97 in this series.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/adventure/universe/001.png" /><media:content medium="image" url="https://www.alexbevi.com/images/adventure/universe/001.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Neuromancer (Interplay Productions) - 1988</title><link href="https://www.alexbevi.com/blog/2025/01/22/neuromancer/" rel="alternate" type="text/html" title="Neuromancer (Interplay Productions) - 1988" /><published>2025-01-22T05:50:53-05:00</published><updated>2025-09-25T12:49:54-04:00</updated><id>https://www.alexbevi.com/blog/2025/01/22/neuromancer</id><content type="html" xml:base="https://www.alexbevi.com/blog/2025/01/22/neuromancer/"><![CDATA[<blockquote class="prompt-tip mb-6">
  <strong>Series:&nbsp;<a href="/blog/2021/07/28/adventure-games-1980-1999/">Let's Adventure! A Journey into Adventure Games (1980-1999)</a></strong><p>This review is part of the Let's Adventure! series. See all reviewed games sorted by rating <a href="/blog/2021/08/08/adventure-games-1980-1999-sorted-by-score/">here</a>.</p><ul class="list-none space-y-1"><li>← <a href="/blog/2024/12/30/return-of-the-phantom/">Return of the Phantom (MicroProse) - 1993</a></li><li><strong>Neuromancer (Interplay Productions) - 1988</strong></li><li>→ <a href="/blog/2025/02/02/universe/">Universe (Core Design) - 1994</a></li></ul>

  <p>Article 93 of 97 in this series.</p>
</blockquote>

<p><a href="https://en.wikipedia.org/wiki/Neuromancer_(video_game)">Neuromancer</a> is an adventure video game developed by Interplay Productions and published by Mediagenic (a brand name of Activision). It was released in 1988 for the Amiga, Apple II, Apple IIGS, Commodore 64, and MS-DOS. It was loosely based on <a href="https://en.wikipedia.org/wiki/Neuromancer">William Gibson’s 1984 novel of the same name</a> and set within both the fictional “real world” and the extensively realized and detailed world of cyberspace.</p>

<p><img src="/images/adventure/neuromancer/062.png" alt="" /></p>

<p>In a grimy future, you play Case, a cyberspace cowboy who finds himself broke in Chiba City. Find yourself a laptop and the right software for it so you can hack into databases around the city to regain your access to cyberspace. Buy and upgrade brain implant chips to augment your computer skills, and sell your body parts to afford new technologies. When you get to cyberspace, you’ll take on the nasty AIs that guard the most important databases. Within all this information is the bizarre secret of this world of inbred corporations.<sup id="fnref:1"><a href="#fn:1" class="footnote" rel="footnote" role="doc-noteref">1</a></sup></p>

<p><img src="/images/adventure/neuromancer/038.png" alt="" />
<em>I played the Amiga version, which starts off with a <a href="https://www.youtube.com/watch?v=DT7sXsoFpZA">Paradox cracktro</a></em></p>

<p>Though I haven’t re-read the source material in well over 20 years, I have very fond memories of Neuromancer. That book kicked off a lifelong love of the cyberpunk genre, so I’ve been looking forward to playing this game since I kicked off this series.</p>

<p>It doesn’t seem to follow the events of the book at all, but definitely exists in the same universe. You start off in a bar, where you apparently spent the night that you owe the bartender money for.</p>

<p><img src="/images/adventure/neuromancer/041.png" alt="" /></p>

<p>You’ll also have a chance to explore the limited interface, which includes a PAX button. PAX is sort of like a basic bulletin board system, that you can read news on or access your banking information. Since you start with no money in hand, you’ll need to access your bank account and transfer all your money.</p>

<p>From the initial PAX screen you’ll learn some link codes, and also that someone named Shin has your cyberdeck.</p>

<p>Since I played a cracked version I didn’t need to refer to the <a href="https://www.c64sets.com/details_db.html?id=3227&amp;t=Neuromancer&amp;i=PAX%20verification%20code%20wheel">code wheel</a> that you’d typically need to access the PAX.</p>

<p><img src="/images/adventure/neuromancer/045.png" alt="" />
<em>Yes, that’s a door below you you’ll need to go through</em></p>

<p>Navigating the game world is done using the mouse. It’s not always obvious what/where the exit to a room is, especially when there’s door at the bottom of the screen. Once you get used to keeping an eye out for these tiny slivers of doorway though it’s not too difficult to navigate the game world.</p>

<p><img src="/images/adventure/neuromancer/048.png" alt="" /></p>

<p>The majority of the game is spent “online”. You’ll need to first get your deck back from Shin, then find a location that has jack you can use. The most convenient location for this is the Cheap Hotel, and you’ll spend a good portion of the game here navigating various online systems, then eventually cyberspace.</p>

<p>Gaining access to a system requires a link code and a password. These are scattered throughout various messages you can read online, and are fairly straightforward to find - just make sure you write them down.</p>

<p><img src="/images/adventure/neuromancer/042.png" alt="" /></p>

<p>Going online costs money, and the longer you spend online - the more money you’ll gradually lose. Gaining additional money in this game can be done in one of two ways. Either you find an account online you can transfer money out of (into your account), or you sell body parts.</p>

<p>At the Body Shop, you can incrementally sell off your body parts for cash. The more parts you sell, the lower your HP (constitution?) will drop. You’ll need this later in the game when you need to start attacking databases and ICE, but you can buy your body parts back as you get more money to regain your HP.</p>

<p><img src="/images/adventure/neuromancer/067.png" alt="" /></p>

<p>You piece the plot of the game and your objectives together slowly by reading through the various messages on each system you gain access to. There aren’t really that many actions you can take on these systems other than reading through the contents, but many will have software (“softwarez”) libraries you can access.</p>

<p>Your deck has limited storage, so you’ll need to be mindful of what software you’re carrying and how much space you have available. As you download better versions of your software, you can delete the older versions to make room.</p>

<p><img src="/images/adventure/neuromancer/052.png" alt="" /></p>

<p>There are a handful of characters and machines you can interact with as well using the conversation system. Typically these involve cycling through a pre-determined list of options you can ask them about, but some also have a free-form text field you can fill out.</p>

<p>This allows you to ask about specific topics, which you’ll either learn from other characters or from the messages you read on bulletin boards.</p>

<p><img src="/images/adventure/neuromancer/056.png" alt="" /></p>

<p>The more time you spend online, the lower your finances will fall. Thankfully there are a couple of opportunities to infiltrate banks and transfer (steal) fairly large balances of credits to your account.</p>

<p>You’ll need this money to purchase skills, upgrade your cyberdeck and buy various items. If you successfully complete these missions, remember to access your account via the PAX to download your credits so you can go shopping.</p>

<p><img src="/images/adventure/neuromancer/060.png" alt="" /></p>

<p>Though there aren’t that many items in the game you need to interact with, there are a couple of fetch quests you’ll need to undertake. These typically just involve going back and forth between characters and asking questions, or going online and changing some information about a character to get them arrested (so they’re not blocking a doorway).</p>

<p>For this playthrough I found myself leaning on the <a href="https://www.walkthroughking.com/text/neuromancer.aspx">walkthrough</a> pretty heavily for these sequences as it wasn’t always obvious what I was supposed to do.</p>

<p><img src="/images/adventure/neuromancer/068.png" alt="" /></p>

<p>Once you upgrade your deck to one that can access cyberspace, you’ll be able to jack into the matrix and access various databases. Similar to the sites you have access to via the comlink systems, once you enter a database you’ll be able to read messages and download software.</p>

<p>The difference though is you’ll need to defeat the ICE (<a href="http://en.wikipedia.org/wiki/Intrusion_Countermeasures_Electronics">Intrusion Countermeasure Electronics</a>) first.</p>

<p><img src="/images/adventure/neuromancer/080.png" alt="" /></p>

<p>Fighting ICE is done with ICE-breaking software. This software is classified loosely into 3 categories: Good, Better and Best - which you’ll learn from one of the message boards.</p>

<p>The manual sort of calls out that ICE-breaking requires a lot of trial and error, and the best way to gain access to a database is to just try various combinations to see what’s effective. As a result, make sure you save before each battle - just in case.</p>

<p><img src="/images/adventure/neuromancer/072.png" alt="" />
<em>Death is not permanent - but it is expensive</em></p>

<p>If you fail to break the ICE and experience brain death, you’ll respawn in the Body Shop - minus all your money. This is VERY difficult to recover from, so you’re better off to just reload a previous save and try again.</p>

<p>Assuming you haven’t sold all your body parts, you could do this to gain a little extra cash, but honestly it’s not worth it … just reload.</p>

<p><img src="/images/adventure/neuromancer/088.png" alt="" /></p>

<p>Your objective will ultimately be to seek out and destroy all the AI in cyberspace. There are two competing AI - Greystroke and Neuromancer - that are trying to get the other to join them to dominate cyberspace. At least that’s what I think is happening …</p>

<p>Each AI is hidden behind an ICE you’ll need to break, and the later in the game you get, the harder they are. One aspect of this game that I didn’t realize was that you’ll need to jack out of cyberspace periodically to recover your HP.</p>

<p>After each ice confrontation if you try to access another database, it looks like your “health” is full - but it actually isn’t.</p>

<p>I think it was after I’d just barely gained access to the KGB system, I moved onto the next database and found no matter what I tried, I’d die in one shot. It must have taken me a few weeks of on-and-off messing around reading other reviews and blogs (like the <a href="https://advgamer.blogspot.com/2013/07/game-32-neuromancer-oceans-one.html">Adventurer’s Guild review</a>) before I finally realized this was what you needed to do.</p>

<p><img src="/images/adventure/neuromancer/092.png" alt="" /></p>

<p>Defeating AIs is done with “skills”, which you buy and upgrade throughout the game. When you finally beat Neuromancer, you’ll be thrown onto a beach - which is just an illusion that it has created to trap you.</p>

<p>Using some combination of skills allows you to escape, and once you do so you’ll have officially finished the game.</p>

<p><img src="/images/adventure/neuromancer/094.png" alt="" /></p>

<p>Overall, Neuromancer is a fun game. There are a handful of distinct gameplay mechanics that aren’t that hard to learn, but do take a while to master.</p>

<p>There is occasionally background music, which isn’t bad - though I think it plays more prominently in other versions (like the C64). The Amiga version I played was mostly quiet, save for the title screen and once in a while.</p>

<p>I’m fairly certain this was one of the first games I started playing for this series, but I did so using <a href="https://apple2.gs/plus/">GSPLUS</a> and had a number of issues that made the experience cumbersome. I really want to experience as many of these games on as many emulated systems as possible, so I stubbornly just kept trying to make the GSPLUS experience happen - and it wouldn’t - so I gave up on the game for a number of years.</p>

<p>I’m really glad I circled back to it, as it really is a lot of fun. Though the similarities are not obvious, playing Neuromancer actually sort of reminded me a bit of <a href="https://en.wikipedia.org/wiki/Uplink_(video_game)">Uplink: Hacker Elite</a> - which I LOVE! I think it’s just the whole “cruising cyberspace and hacking” simulation portion of the game, but I found both to be equally enjoyable so figured it was worth calling out.</p>

<p>There was an attempt to reverse engineer and reimplement this game for Windows called <a href="https://github.com/HenadziMatuts/Reuromancer">Reuromancer</a>, however I’m not sure how playable this engine actually is. If you have Google Translate, the <a href="https://habr.com/post/352050/">development blog</a> (which is in Russian) is a great read.</p>

<p>I would highly recommend giving this game a chance. It can be extremely difficult and unforgiving, but if you like to read, the story is interesting and the gameplay is fairly accessible.</p>

<p>If you’re looking for something to read instead, go grab the book!</p>

<h2 id="game-information">Game Information</h2>

<table>
  <tbody>
    <tr>
      <td><em>Game</em></td>
      <td>Neuromancer</td>
    </tr>
    <tr>
      <td><em>Developer</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Interplay_Entertainment">Interplay Productions</a></td>
    </tr>
    <tr>
      <td><em>Publisher</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Mediagenic">Mediagenic</a></td>
    </tr>
    <tr>
      <td><em>Release Date</em></td>
      <td>1993</td>
    </tr>
    <tr>
      <td><em>Systems</em></td>
      <td>Amiga, Apple II, Apple IIgs, Commodore 64, DOS</td>
    </tr>
    <tr>
      <td><em>Game Engine</em></td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h3 id="my-playthrough">My Playthrough</h3>

<table>
  <tbody>
    <tr>
      <td><a href="https://howlongtobeat.com/game/6508">How Long To Beat?</a></td>
      <td>12 hours</td>
    </tr>
    <tr>
      <td><em>Version Played</em></td>
      <td>Amiga via <a href="https://dirkwhoffmann.github.io/vAmiga/">vAmiga</a></td>
    </tr>
    <tr>
      <td><em>Notes</em></td>
      <td><a href="https://www.walkthroughking.com/text/neuromancer.aspx">Walkthrough</a>, <a href="https://mocagh.org/miscgame/neuromancer-manual.pdf">Manual</a></td>
    </tr>
  </tbody>
</table>

<h3 id="score">Score</h3>

<p>See <a href="https://www.alexbevi.com/blog/2021/07/28/adventure-games-1980-1999/#scoring">here</a> for a refresher on how we’re scoring these games.</p>

<table>
  <tbody>
    <tr>
      <td><strong>Graphics (15)</strong></td>
      <td>8</td>
    </tr>
    <tr>
      <td><strong>Sound (10)</strong></td>
      <td>6</td>
    </tr>
    <tr>
      <td><strong>Plot / Progression (25)</strong></td>
      <td>17</td>
    </tr>
    <tr>
      <td><strong>Characters / Development (15)</strong></td>
      <td>9</td>
    </tr>
    <tr>
      <td><strong>Gameplay / Experience (15)</strong></td>
      <td>12</td>
    </tr>
    <tr>
      <td><strong>Replayability (5)</strong></td>
      <td>3</td>
    </tr>
    <tr>
      <td><strong>Impact / Impression (10)</strong></td>
      <td>7</td>
    </tr>
    <tr>
      <td><strong>Bonus / Surprise (5)</strong></td>
      <td>2</td>
    </tr>
    <tr>
      <td> </td>
      <td><strong>64%</strong></td>
    </tr>
  </tbody>
</table>

<h3 id="gallery">Gallery</h3>

<div id="inline-gallery-container" class="inline-gallery-container"></div>
<script type="module">import lightGallery from "https://cdn.skypack.dev/lightgallery@2.4.0";import lgZoom from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/zoom";import lgThumbnail from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/thumbnail";const $lgContainer = document.getElementById("inline-gallery-container");const inlineGallery = lightGallery($lgContainer, {  container: $lgContainer,  licenseKey: "C2D2C2BD-16BC4564-A4EAE653-401CB884",  dynamic: true,  hash: false,  closable: false,  showMaximizeIcon: true,  slideDelay: 10,  plugins: [lgZoom, lgThumbnail],  dynamicEl: [{ src: '/images/adventure/neuromancer/040.png', thumb: '/images/adventure/neuromancer/040.png' },{ src: '/images/adventure/neuromancer/043.png', thumb: '/images/adventure/neuromancer/043.png' },{ src: '/images/adventure/neuromancer/044.png', thumb: '/images/adventure/neuromancer/044.png' },{ src: '/images/adventure/neuromancer/046.png', thumb: '/images/adventure/neuromancer/046.png' },{ src: '/images/adventure/neuromancer/047.png', thumb: '/images/adventure/neuromancer/047.png' },{ src: '/images/adventure/neuromancer/049.png', thumb: '/images/adventure/neuromancer/049.png' },{ src: '/images/adventure/neuromancer/050.png', thumb: '/images/adventure/neuromancer/050.png' },{ src: '/images/adventure/neuromancer/051.png', thumb: '/images/adventure/neuromancer/051.png' },{ src: '/images/adventure/neuromancer/053.png', thumb: '/images/adventure/neuromancer/053.png' },{ src: '/images/adventure/neuromancer/054.png', thumb: '/images/adventure/neuromancer/054.png' },{ src: '/images/adventure/neuromancer/055.png', thumb: '/images/adventure/neuromancer/055.png' },{ src: '/images/adventure/neuromancer/057.png', thumb: '/images/adventure/neuromancer/057.png' },{ src: '/images/adventure/neuromancer/058.png', thumb: '/images/adventure/neuromancer/058.png' },{ src: '/images/adventure/neuromancer/059.png', thumb: '/images/adventure/neuromancer/059.png' },{ src: '/images/adventure/neuromancer/061.png', thumb: '/images/adventure/neuromancer/061.png' },{ src: '/images/adventure/neuromancer/063.png', thumb: '/images/adventure/neuromancer/063.png' },{ src: '/images/adventure/neuromancer/064.png', thumb: '/images/adventure/neuromancer/064.png' },{ src: '/images/adventure/neuromancer/065.png', thumb: '/images/adventure/neuromancer/065.png' },{ src: '/images/adventure/neuromancer/066.png', thumb: '/images/adventure/neuromancer/066.png' },{ src: '/images/adventure/neuromancer/069.png', thumb: '/images/adventure/neuromancer/069.png' },{ src: '/images/adventure/neuromancer/070.png', thumb: '/images/adventure/neuromancer/070.png' },{ src: '/images/adventure/neuromancer/071.png', thumb: '/images/adventure/neuromancer/071.png' },{ src: '/images/adventure/neuromancer/073.png', thumb: '/images/adventure/neuromancer/073.png' },{ src: '/images/adventure/neuromancer/074.png', thumb: '/images/adventure/neuromancer/074.png' },{ src: '/images/adventure/neuromancer/075.png', thumb: '/images/adventure/neuromancer/075.png' },{ src: '/images/adventure/neuromancer/076.png', thumb: '/images/adventure/neuromancer/076.png' },{ src: '/images/adventure/neuromancer/077.png', thumb: '/images/adventure/neuromancer/077.png' },{ src: '/images/adventure/neuromancer/078.png', thumb: '/images/adventure/neuromancer/078.png' },{ src: '/images/adventure/neuromancer/079.png', thumb: '/images/adventure/neuromancer/079.png' },{ src: '/images/adventure/neuromancer/081.png', thumb: '/images/adventure/neuromancer/081.png' },{ src: '/images/adventure/neuromancer/082.png', thumb: '/images/adventure/neuromancer/082.png' },{ src: '/images/adventure/neuromancer/083.png', thumb: '/images/adventure/neuromancer/083.png' },{ src: '/images/adventure/neuromancer/084.png', thumb: '/images/adventure/neuromancer/084.png' },{ src: '/images/adventure/neuromancer/085.png', thumb: '/images/adventure/neuromancer/085.png' },{ src: '/images/adventure/neuromancer/086.png', thumb: '/images/adventure/neuromancer/086.png' },{ src: '/images/adventure/neuromancer/087.png', thumb: '/images/adventure/neuromancer/087.png' },{ src: '/images/adventure/neuromancer/089.png', thumb: '/images/adventure/neuromancer/089.png' },{ src: '/images/adventure/neuromancer/090.png', thumb: '/images/adventure/neuromancer/090.png' },{ src: '/images/adventure/neuromancer/091.png', thumb: '/images/adventure/neuromancer/091.png' },{ src: '/images/adventure/neuromancer/093.png', thumb: '/images/adventure/neuromancer/093.png' },]});inlineGallery.openGallery();</script>

<p><strong>Footnotes</strong></p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1">
      <p><small>Description from <a href="https://www.mobygames.com/game/687/neuromancer/">Moby Games</a></small> <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;&#xfe0e;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="Let&apos;s Adventure!" /><category term="adventure" /><category term="Interplay Productions" /><category term="Mediagenic" /><category term="played:Amiga" /><summary type="html"><![CDATA[Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Return of the Phantom (MicroProse) - 1993Neuromancer (Interplay Productions) - 1988→ Universe (Core Design) - 1994 Article 93 of 97 in this series.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/adventure/neuromancer/039.png" /><media:content medium="image" url="https://www.alexbevi.com/images/adventure/neuromancer/039.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>