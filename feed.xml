<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://www.alexbevi.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.alexbevi.com/" rel="alternate" type="text/html" hreflang="en" /><updated>2024-07-17T07:37:02-04:00</updated><id>https://www.alexbevi.com/feed.xml</id><title type="html">ALEX BEVILACQUA</title><subtitle>Programming, MongoDB, Ruby and anything else I find interesting. Sometimes dabble in RPG/JRPG/Adventure game reviews.</subtitle><entry><title type="html">Jurassic Park (Sega of America) - 1993</title><link href="https://www.alexbevi.com/blog/2024/07/15/jurassic-park/" rel="alternate" type="text/html" title="Jurassic Park (Sega of America) - 1993" /><published>2024-07-15T17:13:20-04:00</published><updated>2024-07-17T07:34:00-04:00</updated><id>https://www.alexbevi.com/blog/2024/07/15/jurassic-park</id><content type="html" xml:base="https://www.alexbevi.com/blog/2024/07/15/jurassic-park/"><![CDATA[<blockquote class="prompt-info">
  <p>This review is part of the <a href="/blog/2021/07/28/adventure-games-1980-1999/">‚ÄúLet‚Äôs Adventure!‚Äù</a> series. See all reviewed games sorted by rating <a href="/blog/2021/08/08/adventure-games-1980-1999-sorted-by-score/">here</a>.</p>
</blockquote>

<p><a href="https://en.wikipedia.org/wiki/Jurassic_Park_(Sega_CD_video_game)">Jurassic Park</a> is a 1994 point-and-click adventure game developed and published by Sega for the Sega CD. The video game is based on the 1993 film of the same name, and includes elements from Michael Crichton‚Äôs 1990 novel Jurassic Park, which the film is based upon.</p>

<p><img src="/images/adventure/jp/Jurassic Park 2024-07-11 19.58.58.png" alt="" /></p>

<p>The story takes place after the events of the movie/book. You are sent back to Jurassic Park to retrieve dinosaur eggs from around the park and put them in an incubator. You only have 12 hours to retrieve one egg from every species of dino in the park. Unfortunately, shortly before arriving at the park, your helicopter crashes!<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup></p>

<p><img src="/images/adventure/jp/Jurassic Park 2024-07-11 19.40.13.png" alt="" /></p>

<p>I didn‚Äôt have any Sega systems when I was growing up, so having an opportunity to play some of these games on either the Genesis or Sega CD is not something I‚Äôm going to pass up. I don‚Äôt really know anything about the system, according to the <a href="https://en.wikipedia.org/wiki/Sega_CD#Technical_specifications">technical specs</a> I guess the Sega CD was just an expansion unit for the Genesis, so it‚Äôs not going to really improve the look or feel of these games - though it did have a CPU that ran 5 MHz faster than the Genesis üí®.</p>

<p><img src="/images/adventure/jp/Jurassic Park 2024-07-11 19.56.37.png" alt="" /></p>

<p>Once you hit <code class="language-plaintext highlighter-rouge">START</code> to begin the game, your objective is very succinctly splashed across the screen, you hear the crash and the adventure begins and you get to start trying to figure out the UI and how to interact with the game world.</p>

<p>The game splits the view into 3 ‚Äústrips‚Äù. The top strip shows the currently selected item/action, the direction you‚Äôre facing, how much time you have left and your health. I don‚Äôt really know what the satellite icon represented and couldn‚Äôt find anything in the <a href="https://segaretro.org/images/f/fe/Jurassicpark_mcd_us_manual.pdf">manual</a> about it either.</p>

<p>The middle half of the screen is the game view, which is typically a 360 degree view of the current location. As you move the cursor left or right you can see the game screen scroll and the direction in the top strip will update accordingly.</p>

<p><img src="/images/adventure/jp/Jurassic Park 2024-07-12 06.48.44.png" alt="" /></p>

<p>Moving the cursor around the screen will give you an idea what you can interact with or where you can go. The cursor helpfully turns into a little hand if you can pick something up, an arrow if you can move in a certain direction, or a magnifying glass so you can inspect the thing you‚Äôve hovered over.</p>

<p><img src="/images/adventure/jp/Jurassic Park 2024-07-15 08.00.17.png" alt="" /></p>

<p>There are quite a few items you can pick up and use, though where you can use things can be a bit unintuitive. As you move around the park there are paths blocked or doors that are inaccessible but the cursor doesn‚Äôt always give you a visually appropriate cue that there‚Äôs something you need to do - such as use an item.</p>

<p><img src="/images/adventure/jp/Jurassic Park 2024-07-15 07.57.02.png" alt="" />
<em>Keep your eyes peeled for that green <code class="language-plaintext highlighter-rouge">X</code> cursor change</em></p>

<p>If you‚Äôve got the cursor icon selected (and not an item) you may get a green <code class="language-plaintext highlighter-rouge">X</code>to show up as you sweep the cursor across the screen. This is typically an indication that you can use an item on that spot, but it‚Äôs up to you to pick the right item for the situation.</p>

<p>In the case of the above screenshot of the raptor‚Äôs nest, you need to throw a rock at the boulders to cause them to cave in and scare some of the raptors to run out of the cave - allowing you to sneak in and steal their eggs.</p>

<p>Speaking of rocks, make sure you pick them ALL UP! The game doesn‚Äôt tell you how many you have, but you‚Äôll need at least 5-6 and some puzzles involve using 2 at a time.</p>

<p><img src="/images/adventure/jp/Jurassic Park 2024-07-12 06.33.57.png" alt="" /></p>

<p>The bottom strip of the screen shows your permanent items, such as the night vision goggles or the motion detector. The latter is extremely useful when you‚Äôre navigating an area with dinosaurs as it lets you know what direction they might attack you from.</p>

<p>If you‚Äôve picked up any dinosaur eggs it will also let you know. This reminder is important because the goal of the game is to get those eggs back to the incubator. If you hold onto the eggs for too long, the dinosaur inside dies.</p>

<p><img src="/images/adventure/jp/Jurassic Park 2024-07-15 08.10.46.png" alt="" /></p>

<p>Every time you pick up eggs you should high tail it back to the visitor center to load the eggs into the incubator. You only need to collect one sample per dinosaur, so if a few sample die along the way you still have a bit of a buffer.</p>

<p>Pausing the game will also bring up a summary that lets you know how many eggs you‚Äôve collected, along with how many samples have died.</p>

<p><img src="/images/adventure/jp/Jurassic Park 2024-07-11 19.45.23.png" alt="" /></p>

<p>Navigating through this game is pretty straightforward, and though figuring out which items to use where isn‚Äôt always intuitive, you can typically just cycle through all your items on a given action area and trial and error your way to a solution.</p>

<p>Picking the wrong item will give audible feedback that you chose wrong, so it‚Äôs obvious you need to try again. The one exception I found was putting the gas in the boat.</p>

<p>For this puzzle you need to fill the boat with gas, but unlike <em>every other interaction in this game</em>, you need to hold down the <code class="language-plaintext highlighter-rouge">C</code> button to <em>keep</em> filling the tank until the cursor changes indicating you can now move in that direction.</p>

<p>This threw me off for a while because I would just ‚Äúuse‚Äù the item and expect it to work ‚Ä¶ but apparently you had to ‚Äúkeep using‚Äù it in this case.</p>

<p><img src="/images/adventure/jp/Jurassic Park 2024-07-12 06.36.04.png" alt="" /></p>

<p>Jurassic Park incorporates an arcade shooter style mechanic as well. You can pick up various weapons throughout the game that you can use on the dinosaurs to get them out of your way, or distract/stun them.</p>

<p>When you select a weapon the cursor changes to a target and your ammo will be displayed at the top of the screen. You have <em>very</em> limited ammo, and you can only replenish your tranquilizer darts <em>once</em>.</p>

<p>These arcade sequences get harder and harder as the game goes on, and you have very limited health. I‚Äôm fairly certain you can top your health up as many times as you want at the visitor center, but having to constantly backtrack to do this is a pain in the ass.</p>

<p><img src="/images/adventure/jp/Jurassic Park 2024-07-11 20.05.52.png" alt="" /></p>

<p>As you move between areas you‚Äôll sometimes get a brief animation, which acts as a screen transition with some background music.</p>

<p>The sound effects and music definitely add some ambiance, but it‚Äôs a bit weird that none of the music from the movie was included. Not sure if this was a technical limitation, an oversight or something else - but having at least one entry from the iconic soundtrack on the title screen or something would have been a welcome addition.</p>

<p><img src="/images/adventure/jp/Jurassic Park 2024-07-15 17.01.54.png" alt="" /></p>

<p>Right from the beginning the game lets you know you only have 12 hours to complete the task of incubating one of each dinosaur species‚Äô eggs. If you can pull this off you‚Äôll see a helicopter fly by and land, which you‚Äôll have to get to - but first a group of 4 ‚Äúbad guys‚Äù will try to take you out.</p>

<p>This final arcade sequence is <em>really</em> hard - especially if you don‚Äôt top up your tranquilizer dart supply. I had plenty of stunner charges, but these do nothing in this scenario so going into this fight with only 15 darts was a guaranteed game over ‚Ä¶</p>

<p>I‚Äôm not really sure why these guys are trying to prevent me from getting to the helicopter, but for this sequence I was extremely grateful to be playing the game on an emulator. I was using save states pretty heavily here, and ended up using pause/frame-advance for the last enemy just to finish the game with like 1 health bar left.</p>

<p><img src="/images/adventure/jp/Jurassic Park 2024-07-15 17.03.51.png" alt="" />
<em>Once the credits roll you‚Äôll be greeted by the same ‚ÄúGame Over‚Äù screen as if you‚Äôd died</em></p>

<p>For an adventure game, Jurassic Park is definitely interesting. It‚Äôs sort of a cross between Myst and an arcade-style shooter. The fact that you‚Äôre on a timer adds a sense of urgency to the game, but your objectives are clear from the outset so you know what you‚Äôre trying to accomplish at all times.</p>

<p>My biggest issue with the game is how unintuitive a lot of the puzzles are. Getting the raptor key by throwing rocks into the water to make the water level rise wasn‚Äôt obvious - and once I did finally try throwing a rock in there it turns out I needed at least two rocks, so I had to backtrack (or reload) to make sure I came back to the area with the right items.</p>

<p>The T-Rex fight didn‚Äôt make a lot of sense either. The info disc you can watch in-game indicates you should shoot him in the cheek to stun him, so you do that a whole bunch but I don‚Äôt really know how you‚Äôd come to the conclusion you should use the gas grenades on him twice to get him to raise his head so you can dash under him into the sewers.</p>

<p><img src="/images/adventure/jp/Jurassic Park 2024-07-15 17.10.00.png" alt="" />
<em>Jump to any screen in the game using the handy debug menu</em></p>

<p>While researching this game I stumbled across <a href="https://www.mobygames.com/person/63182/doug-lanford/">Doug Landford</a>‚Äôs website, where he shares <a href="https://www.opusgames.com/games/jpark/jp.html">a blog post</a> about his experience working on this game - including how you can trigger the debug menu.</p>

<p>I enjoy learning about the behind the scenes experiences of the teams that build these games, as it can shed some light on how we ended up with the final product. It seems this game used <a href="https://en.wikipedia.org/wiki/QSound">QSound</a> to augment the audio, but this isn‚Äôt something I was able to experience (not sure if it‚Äôs emulated or not - but I don‚Äôt have a stereo setup anyway).</p>

<p>Overall the game isn‚Äôt bad, but I can‚Äôt imagine there‚Äôs much of an audience for this. Maybe if the game had taken advantage of the <a href="https://segaretro.org/Sega_Mouse">Sega mouse</a> it might have made the arcade sequences a bit more fun, but as an ‚Äúadventure game‚Äù I think you can pass it up.</p>

<h2 id="game-information">Game Information</h2>

<table>
  <tbody>
    <tr>
      <td><em>Game</em></td>
      <td>Jurassic Park</td>
    </tr>
    <tr>
      <td><em>Developer</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Sega_of_America">Sega of America</a></td>
    </tr>
    <tr>
      <td><em>Publisher</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Sega_of_America">Sega</a></td>
    </tr>
    <tr>
      <td><em>Release Date</em></td>
      <td>December 17, 1993</td>
    </tr>
    <tr>
      <td><em>Systems</em></td>
      <td>Sega CD</td>
    </tr>
    <tr>
      <td><em>Game Engine</em></td>
      <td>¬†</td>
    </tr>
  </tbody>
</table>

<h3 id="my-playthrough">My Playthrough</h3>

<table>
  <tbody>
    <tr>
      <td><a href="https://howlongtobeat.com/game/4896"><em>How Long To Beat?</em></a></td>
      <td>5 hours</td>
    </tr>
    <tr>
      <td><em>Version Played</em></td>
      <td>Sega CD via <a href="http://openemu.org/">OpenEmu</a> &gt; <a href="https://segaretro.org/Genesis_Plus_GX">Genesis Plus GX</a></td>
    </tr>
    <tr>
      <td><em>Notes</em></td>
      <td><a href="https://gamefaqs.gamespot.com/genesis/563328-jurassic-park/faqs/5334">Walkthrough</a>, <a href="https://segaretro.org/images/f/fe/Jurassicpark_mcd_us_manual.pdf">Manual</a></td>
    </tr>
  </tbody>
</table>

<h3 id="score">Score</h3>

<p>See <a href="https://www.alexbevi.com/blog/2021/07/28/adventure-games-1980-1999/#scoring">here</a> for a refresher on how we‚Äôre scoring these games.</p>

<table>
  <tbody>
    <tr>
      <td><strong>Atmosphere (20)</strong></td>
      <td>8</td>
    </tr>
    <tr>
      <td><strong>Story (25)</strong></td>
      <td>8</td>
    </tr>
    <tr>
      <td><strong>Experience (15)</strong></td>
      <td>6</td>
    </tr>
    <tr>
      <td><strong>Impact (10)</strong></td>
      <td>3</td>
    </tr>
    <tr>
      <td>¬†</td>
      <td><strong>36%</strong></td>
    </tr>
  </tbody>
</table>

<h3 id="gallery">Gallery</h3>

<div id="inline-gallery-container" class="inline-gallery-container"></div>
<script type="module">import lightGallery from "https://cdn.skypack.dev/lightgallery@2.4.0";import lgZoom from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/zoom";import lgThumbnail from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/thumbnail";const $lgContainer = document.getElementById("inline-gallery-container");const inlineGallery = lightGallery($lgContainer, {  container: $lgContainer,  licenseKey: "C2D2C2BD-16BC4564-A4EAE653-401CB884",  dynamic: true,  hash: false,  closable: false,  showMaximizeIcon: true,  slideDelay: 10,  plugins: [lgZoom, lgThumbnail],  dynamicEl: [{ src: '/images/adventure/jp/Jurassic Park 2024-07-11 19.42.56.png', thumb: '/images/adventure/jp/Jurassic Park 2024-07-11 19.42.56.png' },{ src: '/images/adventure/jp/Jurassic Park 2024-07-11 19.43.51.png', thumb: '/images/adventure/jp/Jurassic Park 2024-07-11 19.43.51.png' },{ src: '/images/adventure/jp/Jurassic Park 2024-07-11 19.45.18.png', thumb: '/images/adventure/jp/Jurassic Park 2024-07-11 19.45.18.png' },{ src: '/images/adventure/jp/Jurassic Park 2024-07-11 19.48.18.png', thumb: '/images/adventure/jp/Jurassic Park 2024-07-11 19.48.18.png' },{ src: '/images/adventure/jp/Jurassic Park 2024-07-11 20.08.51.png', thumb: '/images/adventure/jp/Jurassic Park 2024-07-11 20.08.51.png' },{ src: '/images/adventure/jp/Jurassic Park 2024-07-11 20.09.12.png', thumb: '/images/adventure/jp/Jurassic Park 2024-07-11 20.09.12.png' },{ src: '/images/adventure/jp/Jurassic Park 2024-07-12 06.42.43.png', thumb: '/images/adventure/jp/Jurassic Park 2024-07-12 06.42.43.png' },{ src: '/images/adventure/jp/Jurassic Park 2024-07-14 19.56.55.png', thumb: '/images/adventure/jp/Jurassic Park 2024-07-14 19.56.55.png' },{ src: '/images/adventure/jp/Jurassic Park 2024-07-14 20.01.37.png', thumb: '/images/adventure/jp/Jurassic Park 2024-07-14 20.01.37.png' },{ src: '/images/adventure/jp/Jurassic Park 2024-07-14 20.17.51.png', thumb: '/images/adventure/jp/Jurassic Park 2024-07-14 20.17.51.png' },{ src: '/images/adventure/jp/Jurassic Park 2024-07-14 20.25.13.png', thumb: '/images/adventure/jp/Jurassic Park 2024-07-14 20.25.13.png' },{ src: '/images/adventure/jp/Jurassic Park 2024-07-14 20.28.07.png', thumb: '/images/adventure/jp/Jurassic Park 2024-07-14 20.28.07.png' },{ src: '/images/adventure/jp/Jurassic Park 2024-07-15 17.03.36.png', thumb: '/images/adventure/jp/Jurassic Park 2024-07-15 17.03.36.png' },]});inlineGallery.openGallery();</script>

<p><strong>Footnotes</strong></p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p><small>Description from <a href="https://www.mobygames.com/game/12129/jurassic-park/">Moby Games</a></small>¬†<a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="Let&apos;s Adventure!" /><category term="adventure" /><category term="Sega" /><summary type="html"><![CDATA[This review is part of the ‚ÄúLet‚Äôs Adventure!‚Äù series. See all reviewed games sorted by rating here.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/adventure/jp/Jurassic%20Park%202024-07-11%2019.39.35.png" /><media:content medium="image" url="https://www.alexbevi.com/images/adventure/jp/Jurassic%20Park%202024-07-11%2019.39.35.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Call Stack, But Make It Async!</title><link href="https://www.alexbevi.com/blog/2024/07/12/call-stack-but-make-it-async/" rel="alternate" type="text/html" title="Call Stack, But Make It Async!" /><published>2024-07-12T11:15:50-04:00</published><updated>2024-07-16T09:21:46-04:00</updated><id>https://www.alexbevi.com/blog/2024/07/12/call-stack-but-make-it-async</id><content type="html" xml:base="https://www.alexbevi.com/blog/2024/07/12/call-stack-but-make-it-async/"><![CDATA[<blockquote class="prompt-tip">
  <p>Written by Neal Beeken (<a href="https://nbbeeken.github.io/">Blog</a>, <a href="https://github.com/nbbeeken">GitHub</a>) - Canonical URL is at <a href="https://medium.com/@MongoDB/call-stack-but-make-it-async-f912cb895ebd">medium.com</a></p>
</blockquote>

<p>In a recent release of the MongoDB Node.js driver (<a href="https://github.com/mongodb/node-mongodb-native/releases/tag/v6.5.0">v6.5.0</a>), the team completed the effort of getting all our asynchronous operations to report an accurate asynchronous stack trace to assist in pinpointing error origination. Here, I‚Äôll walk you through what this feature of JavaScript is and how to obtain it at the low price of zero cost.</p>

<h2 id="calls-and-how-to-stack-them-">Calls and how to stack them üìö</h2>

<p>First, what is a <a href="https://developer.mozilla.org/en-US/docs/Glossary/Call_stack">call stack</a>? A call stack is a hidden data structure that stores information about the active subroutines of a program - active subroutines being functions that have been called but have yet to complete execution and return control to the caller. The main function of the call stack is to keep track of the point to which each active subroutine should return control when it finishes executing.</p>

<p>Let‚Äôs go through an example. Take a program that parses a string from its arguments that is an equation like ‚Äú2+2‚Äù and computes the result:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="nf">main</span><span class="p">()</span>
  <span class="o">-&gt;</span> <span class="nf">parseString</span><span class="p">()</span>
    <span class="o">-&gt;</span> <span class="nf">splitString</span><span class="p">()</span>
      <span class="o">-&gt;</span> <span class="nf">stringLength</span><span class="p">()</span>
    <span class="o">-&gt;</span> <span class="nf">stringToNumber</span><span class="p">()</span>
  <span class="o">-&gt;</span> <span class="nf">add</span><span class="p">()</span>
  <span class="o">-&gt;</span> <span class="nf">printResult</span><span class="p">()</span>
<span class="o">-&gt;</span> <span class="k">return</span><span class="p">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Most of us are familiar with the above procedural paradigm (whether from JavaScript, C, Java, or Python) where each step in the program is synchronous, so our call stack is a clear ordering of dependent procedures. For example, if <code class="language-plaintext highlighter-rouge">stringLength</code> fails, the call stack would contain <code class="language-plaintext highlighter-rouge">stringLength</code>, <code class="language-plaintext highlighter-rouge">splitString</code>, <code class="language-plaintext highlighter-rouge">parseString</code>, and <code class="language-plaintext highlighter-rouge">main</code> as active procedures that have yet to return to their callers. The error system of our runtime uses this stack trace to generate a helpful error trace:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre>file://addNumbers.mjs:35
    throw new Error('cannot get string length')
          ^
Error: cannot get string length
    at stringLength (file://addNumbers.mjs:35:11)
    at splitString (file://addNumbers.mjs:17:17)
    at parseString (file://addNumbers.mjs:11:19)
    at main (file://addNumbers.mjs:4:5)
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="the-async-wrench-">The async wrench üîß</h3>
<p>Everything changes when we shift to an asynchronous programming model, as the introduction of asynchronous work means we no longer have strictly dependent procedures. Essentially, async programming is about setting up tasks and adding handling that will be invoked sometime later when the task is complete.</p>

<p>Let‚Äôs add I/O (a read from standard in) into our program to see how this changes our call stack:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="nf">main</span><span class="p">()</span>
<span class="o">-&gt;</span> <span class="nf">readStdin</span><span class="p">(</span><span class="nx">handleUserInput</span><span class="p">)</span>
<span class="c1">// When the user finishes typing</span>
<span class="nf">handleUserInput</span><span class="p">()</span>
<span class="o">-&gt;</span> <span class="nf">parseString</span><span class="p">()</span>
  <span class="o">-&gt;</span> <span class="nf">splitString</span><span class="p">()</span>
    <span class="o">-&gt;</span> <span class="nf">stringLength</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Now, main‚Äôs only job is to ask the runtime to read from stdin and invoke a function of our choice when it is done doing so. This means main is no longer an active procedure; it returns, leaving it up to the runtime to keep the process running until it has input from stdin to hand back to our function <code class="language-plaintext highlighter-rouge">handleUserInput</code>.</p>

<p>Here‚Äôs what the stack trace looks like:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre>file://addNumbers.mjs:42
    throw new Error('cannot get string length')
    ^
Error: cannot get string length
    at stringLength (file://addNumbers.mjs:42:11)
    at splitString (file://addNumbers.mjs:24:17)
    at parseString (file://addNumbers.mjs:18:19)
    at ReadStream.handleUserInput (file://addNumbers.mjs:11:5)
    at ReadStream.emit (node:events:511:28)
    at addChunk (node:internal/streams/readable:332:12)
    at readableAddChunk (node:internal/streams/readable:305:9)
    at Readable.push (node:internal/streams/readable:242:10)
    at TTY.onStreamRead (node:internal/stream_base_commons:190:23)
</pre></td></tr></tbody></table></code></pre></div></div>

<p>No sign of <code class="language-plaintext highlighter-rouge">main</code>, only <code class="language-plaintext highlighter-rouge">handleUserInput</code>.</p>

<p>This is a common hazard of asynchronous programming: You are always replacing the record of your active procedures as they are all performing task setup that completes and the callbacks they created are later invoked by the runtime.</p>

<h2 id="javascript-">JavaScript üíö</h2>

<p>Asynchronous programming has always been at the heart of JS and is one of the central selling points of using Node.js.</p>

<p>In 2015, the first <a href="https://nodejs.org/en/blog/release/v4.2.0">Long Term Support version of Node.js was released</a>, and with it came a stable standard library that popularized a common pattern for handling asynchronous tasks. All asynchronous tasks would accept a callback as their last argument, with the callback taking at least two arguments: an error and the task‚Äôs result. The pattern was that if the first argument was <a href="https://developer.mozilla.org/en-US/docs/Glossary/Truthy">truthy</a> (an error object), the task failed, and if it was not, then the second argument would contain the result.</p>

<p>Here‚Äôs a simplified example of a function that reads a file:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="nf">readFile</span><span class="p">(</span><span class="dl">'</span><span class="s1">filename.txt</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">if </span><span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>
    <span class="k">return</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">file contents</span><span class="dl">'</span><span class="p">,</span> <span class="nx">data</span><span class="p">);</span>
<span class="p">})</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The Node.js callback pattern is ubiquitous and familiar, resulting in many popular libraries - such as the <a href="https://www.mongodb.com/docs/drivers/node/current/">MongoDB Node.js driver</a> - adopting it, as well.</p>

<h3 id="no-throw-only-callback-">No throw, only callback üêï</h3>

<p><img src="/images/js-cupcake.png" alt="" />
<em>credit: <a href="https://cupcakelogic.tumblr.com/post/124392369931/she-is-still-learning">cupcakelogic</a></em></p>

<p>A challenge associated with the callback pattern is the requirement that the implementer keep in mind execution expectations manually. Otherwise, they can end up with a confusing order of operations.</p>

<p>Typically, this is something that should be abstracted to the runtime or language, which can be broken down as follows:</p>

<p><strong>Error handling</strong></p>

<p>Properly implementing the callback pattern means errors are passed as variables to a chain of handlers so they eventually reach the top-level initiator of the async operation. The syntax and keywords <code class="language-plaintext highlighter-rouge">throw</code>/<code class="language-plaintext highlighter-rouge">try</code>/<code class="language-plaintext highlighter-rouge">catch</code> can no longer be used for control flow.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="k">try</span> <span class="p">{</span>
  <span class="nf">readFile</span><span class="p">(</span><span class="dl">'</span><span class="s1">filename</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">if </span><span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span> <span class="cm">/* ? */</span> <span class="p">}</span>
  <span class="p">})</span>
<span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">// So what's the truth?</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong>Runtime order</strong></p>

<p>Callbacks also demand the developers ensure execution order is consistent. If a file is successfully read and the contents are returned in the callback passed to <code class="language-plaintext highlighter-rouge">readFile</code>, that callback will always run after the code that is on the line following <code class="language-plaintext highlighter-rouge">readFile</code>. However, say <code class="language-plaintext highlighter-rouge">readFile</code> is passed an invalid argument, like a number instead of a string for the path. When it invokes the callback with an invalid argument error, we would still expect that code to run in the same order as the success case:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre><span class="kd">function</span> <span class="nf">readFile</span><span class="p">(</span><span class="nx">filename</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
   <span class="k">if </span><span class="p">(</span><span class="k">typeof</span> <span class="nx">filename</span> <span class="o">!==</span> <span class="dl">'</span><span class="s1">string</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
       <span class="nf">callback</span><span class="p">(</span><span class="k">new</span> <span class="nc">Error</span><span class="p">(</span><span class="dl">'</span><span class="s1">invalid argument</span><span class="dl">'</span><span class="p">))</span>
       <span class="k">return</span><span class="p">;</span>
   <span class="p">}</span>
   <span class="c1">// open &amp; read file ...</span>
<span class="p">}</span>

<span class="nf">readFile</span><span class="p">(</span><span class="mh">0xF113</span><span class="p">,</span> <span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
   <span class="k">if </span><span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
       <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">cannot read file</span><span class="dl">'</span><span class="p">,</span> <span class="nx">error</span><span class="p">)</span>
       <span class="k">return</span><span class="p">;</span>
   <span class="p">}</span>
   <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">contents:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span>
<span class="p">})</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">starting to read file</span><span class="dl">'</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The code above prints:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>cannot read file Error: invalid argument
starting to read file
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Whereas when I change <code class="language-plaintext highlighter-rouge">readFile</code> to be called with a non-existent path:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>starting to read file
cannot read file Error: /notAPath.txt Does Not Exist
</pre></td></tr></tbody></table></code></pre></div></div>

<p>This is unexpected! The implementer of <code class="language-plaintext highlighter-rouge">readFile</code> calls the callback synchronously for an invalid type so <code class="language-plaintext highlighter-rouge">readFile</code> does not return until that callback completes. It is fairly easy to write callback-accepting functions that inconsistently order their execution in this way.</p>

<h3 id="promises-">Promises ü§û</h3>

<p>Introducing a more structured approach: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise">Promises</a>. A promise is an object that handles the resolution or rejection of an async operation, mitigating the above issues and allowing for many async operations to be chained together without needing to explicitly pass a finalizer callback through to each API that would indicate when all tasks are done.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="rouge-code"><pre><span class="c1">// callbacks</span>
<span class="nx">client</span><span class="p">.</span><span class="nf">connect</span><span class="p">((</span><span class="nx">error</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
 <span class="k">if </span><span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
   <span class="k">return</span> <span class="nf">done</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>
 <span class="p">}</span>
 <span class="nx">client</span>
   <span class="p">.</span><span class="nf">db</span><span class="p">()</span>
   <span class="p">.</span><span class="nf">collection</span><span class="p">(</span><span class="dl">'</span><span class="s1">test</span><span class="dl">'</span><span class="p">)</span>
   <span class="p">.</span><span class="nf">findOne</span><span class="p">({},</span> <span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nb">document</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
     <span class="k">if </span><span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
       <span class="k">return</span> <span class="nf">done</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>
     <span class="p">}</span>
     <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nb">document</span><span class="p">);</span>
     <span class="k">return</span> <span class="nf">done</span><span class="p">();</span>
   <span class="p">});</span>
<span class="p">});</span>

<span class="c1">// promises</span>
<span class="nx">client</span>
 <span class="p">.</span><span class="nf">connect</span><span class="p">()</span>
 <span class="p">.</span><span class="nf">then</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="nx">client</span><span class="p">.</span><span class="nf">db</span><span class="p">().</span><span class="nf">collection</span><span class="p">(</span><span class="dl">'</span><span class="s1">test</span><span class="dl">'</span><span class="p">).</span><span class="nf">findOne</span><span class="p">({}))</span>
 <span class="p">.</span><span class="nf">then</span><span class="p">(</span><span class="nb">document</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nb">document</span><span class="p">));</span>
 <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">error</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="nx">error</span><span class="p">));</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Note how in the promise code there is one error handling case as opposed to the two in the callback case. The ability to <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises#chaining">chain promises</a> allows us to treat many async operations as one. The <code class="language-plaintext highlighter-rouge">catch</code> handler would be called if either the <code class="language-plaintext highlighter-rouge">connect</code> or the <code class="language-plaintext highlighter-rouge">find</code> methods were to throw an error. This chaining is convenient, but when writing JavaScript today, we do even better by using special syntax for handling promises.</p>

<h3 id="enter-asyncawait-">Enter <code class="language-plaintext highlighter-rouge">async</code>/<code class="language-plaintext highlighter-rouge">await</code> üîÅ</h3>

<p>Mid-2017, JavaScript engines shipped support for <code class="language-plaintext highlighter-rouge">async</code>/<code class="language-plaintext highlighter-rouge">await</code> syntax, allowing programmers to write asynchronous operations in a familiar procedural format. Using <code class="language-plaintext highlighter-rouge">async</code>/<code class="language-plaintext highlighter-rouge">await</code> allows the programmer to encode their logical asynchronous dependencies right into the syntax of the language.</p>

<p>Let‚Äôs return to our user input example, as we can now ‚Äúawait‚Äù the input which keeps <code class="language-plaintext highlighter-rouge">main</code> as the active procedure that began the task to read from standard in.</p>

<blockquote class="prompt-info">
  <p>‚ÄúFor <code class="language-plaintext highlighter-rouge">await</code>, the suspend and resume points coincide and so we not only know where we would continue, but by coincidence, we also know where we came from.‚Äù</p>

  <p>source: <a href="https://docs.google.com/document/d/13Sy_kBIJGP0XT34V1CV3nkWya4TwYx9L3Yv45LdGB6Q/edit#heading=h.e6lcalo0cl47">Zero-cost async stack traces</a></p>
</blockquote>

<p>When the input is available, <code class="language-plaintext highlighter-rouge">readStdin</code> will resolve and we can continue with our parsing.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="k">async</span> <span class="nf">main</span><span class="p">()</span>
  <span class="o">-&gt;</span> <span class="k">await</span> <span class="nf">readStdin</span><span class="p">()</span>
  <span class="o">-&gt;</span> <span class="nf">parseString</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre>file://addNumbers.mjs:43
    throw new Error('cannot get string length')
          ^
Error: cannot get string length
    at stringLength (file://addNumbers.mjs:43:11)
    at splitString (file://addNumbers.mjs:25:17)
    at parseString (file://addNumbers.mjs:19:19)
    at main (file://addNumbers.mjs:9:5)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async file://addNumbers.mjs:62:1
</pre></td></tr></tbody></table></code></pre></div></div>

<p>When the JavaScript engine reaches the ‚Äúawait‚Äù, <code class="language-plaintext highlighter-rouge">main</code> is suspended. The engine is free to handle other tasks while the read is waiting for our user to type. We can now encode into the syntax of the function that it will suspend until some other task completes, and when it continues, it maintains the context of everything that was in scope when it started.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="k">try</span> <span class="p">{</span>
 <span class="k">await</span> <span class="nx">client</span><span class="p">.</span><span class="nf">connect</span><span class="p">();</span>
 <span class="kd">const</span> <span class="nb">document</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">client</span><span class="p">.</span><span class="nf">db</span><span class="p">().</span><span class="nf">collection</span><span class="p">(</span><span class="dl">'</span><span class="s1">test</span><span class="dl">'</span><span class="p">).</span><span class="nf">findOne</span><span class="p">({});</span>
 <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nb">document</span><span class="p">);</span>
<span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
 <span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote class="prompt-info">
  <p>‚ÄúThe fundamental difference between <code class="language-plaintext highlighter-rouge">await</code> and manually constructed promises is that <code class="language-plaintext highlighter-rouge">await X()</code> <strong>suspends</strong> execution of the current function, while <code class="language-plaintext highlighter-rouge">promise.then(X)</code> will <strong>continue</strong> execution of the current function after adding the <code class="language-plaintext highlighter-rouge">X</code> call to the callback chain. In the context of stack traces, this difference is pretty significant.‚Äù</p>

  <p>source: <a href="https://mathiasbynens.be/notes/async-stack-traces">Why await beats Promise#then() ¬∑ Mathias Bynens</a></p>
</blockquote>

<h2 id="sample-stack-traces">Sample Stack Traces</h2>

<p>Prior to completing the <code class="language-plaintext highlighter-rouge">async</code>/<code class="language-plaintext highlighter-rouge">await</code> conversion down to the internal network layer of the driver, our error stack would begin at the point of converting a server‚Äôs error message into a JavaScript, such as:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre>MongoServerError: Failing command via 'failCommand' failpoint
    at Connection.onMessage (./mongodb/lib/cmap/connection.js:231:30)
    at MessageStream.&lt;anonymous&gt; (./mongodb/lib/cmap/connection.js:61:60)
    at MessageStream.emit (node:events:520:28)
    at processIncomingData (./mongodb/lib/cmap/message_stream.js:125:16)
    at MessageStream._write (./mongodb/lib/cmap/message_stream.js:33:9)
    at writeOrBuffer (node:internal/streams/writable:564:12)
    at _write (node:internal/streams/writable:493:10)
    at Writable.write (node:internal/streams/writable:502:10)
    at Socket.ondata (node:internal/streams/readable:1007:22)
    at Socket.emit (node:events:520:28)
                    ^-- Sadness, that's not my code...
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Now, post v6.5.0, the stack trace points directly back to the origination of an operation (we see you <code class="language-plaintext highlighter-rouge">main.js</code>!):</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre>MongoServerError: Failing command via 'failCommand' failpoint
    at Connection.sendCommand (./mongodb/lib/cmap/connection.js:290:27)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Connection.command (./mongodb/lib/cmap/connection.js:313:26)
    at async Server.command (./mongodb/lib/sdam/server.js:167:29)
    at async FindOperation.execute (./mongodb/lib/operations/find.js:34:16)
    at async tryOperation (./mongodb/lib/operations/execute_operation.js:192:20)
    at async executeOperation (./mongodb/lib/operations/execute_operation.js:69:16)
    at async FindCursor._initialize (./mongodb/lib/cursor/find_cursor.js:51:26)
    at async FindCursor.cursorInit (./mongodb/lib/cursor/abstract_cursor.js:471:27)
    at async FindCursor.fetchBatch (./mongodb/lib/cursor/abstract_cursor.js:503:13)
    at async FindCursor.next (./mongodb/lib/cursor/abstract_cursor.js:228:13)
    at async Collection.findOne (./mongodb/lib/collection.js:274:21)
    at async main (./mongodb/main.js:19:3)
                   ^-- Yay, that's my code!
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<p><strong>Additional Resources</strong></p>

<ul>
  <li><a href="https://docs.google.com/document/d/13Sy_kBIJGP0XT34V1CV3nkWya4TwYx9L3Yv45LdGB6Q/edit">Zero-cost async stack traces</a></li>
  <li><a href="https://github.com/tc39/proposal-error-stacks">tc39/proposal-error-stacks</a></li>
  <li><a href="https://v8.dev/docs/stack-trace-api">Stack trace API</a></li>
  <li><a href="https://v8.dev/blog/modern-javascript#proper-tail-calls">ES2015, ES2016, and beyond ¬∑ Tail Calls ¬∑ V8</a></li>
  <li><a href="https://v8.dev/blog/fast-async">Faster async functions and promises ¬∑ V8</a></li>
  <li><a href="https://mathiasbynens.be/notes/async-stack-traces">Asynchronous stack traces: why await beats Promise#then() ¬∑ Mathias Bynens</a></li>
</ul>]]></content><author><name>Neal Beeken</name></author><category term="Programming" /><category term="javascript" /><category term="node" /><category term="mongodb" /><category term="drivers" /><summary type="html"><![CDATA[Written by Neal Beeken (Blog, GitHub) - Canonical URL is at medium.com]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/nodejs-banner.jpg" /><media:content medium="image" url="https://www.alexbevi.com/images/nodejs-banner.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Discworld (Teeny Weeny Games/Perfect 10 Productions) - 1995</title><link href="https://www.alexbevi.com/blog/2024/07/09/discworld/" rel="alternate" type="text/html" title="Discworld (Teeny Weeny Games/Perfect 10 Productions) - 1995" /><published>2024-07-09T07:06:16-04:00</published><updated>2024-07-17T07:34:00-04:00</updated><id>https://www.alexbevi.com/blog/2024/07/09/discworld</id><content type="html" xml:base="https://www.alexbevi.com/blog/2024/07/09/discworld/"><![CDATA[<blockquote class="prompt-info">
  <p>This review is part of the <a href="/blog/2021/07/28/adventure-games-1980-1999/">‚ÄúLet‚Äôs Adventure!‚Äù</a> series. See all reviewed games sorted by rating <a href="/blog/2021/08/08/adventure-games-1980-1999-sorted-by-score/">here</a>.</p>
</blockquote>

<p><a href="https://en.wikipedia.org/wiki/Discworld_(video_game)">Discworld</a> is a point-and-click adventure game developed by Teeny Weeny Games and Perfect 10 Productions and published by Psygnosis. It is based on <a href="https://en.wikipedia.org/wiki/Terry_Pratchett">Terry Pratchett</a>‚Äôs novels of the same name.</p>

<p><img src="/images/adventure/dw1/scummvm-dw-cd-00011.png" alt="" /></p>

<p>This adventure game puts the player in the shoes of Rincewind, a wizard whose sole purpose in life is to stay alive. He appears to be very good at it as well, because apparently the universe has decided to continuously challenge him. The game takes place in the humorous fantasy world called the Discworld, as it is actually a flat disc carried on the backs of four gigantic elephants, which themselves stand on the back of an even larger turtle.</p>

<p>The story is loosely based on the <a href="https://en.wikipedia.org/wiki/Guards!_Guards!">novel ‚ÄúGuards! Guards!‚Äù</a>. Both in the book and the game, a dragon is summoned by a group of mysterious conspirators and now terrorizes the city state of Ankh-Morpork. Being the most expendable wizard of the Unseen University, Rincewind is given the task to get rid of the beast (only in the game though; in the book, the city‚Äôs nightwatch has to deal with the problem).<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup></p>

<p><img src="/images/adventure/dw1/scummvm-dw-cd-00015.png" alt="" /></p>

<p>Discworld is a pretty typical point and click adventure from the mid-90s: the game starts with a brief intro sequence, you‚Äôre introduced to the protagonist, you‚Äôre given the first (of likely many) fetch quests which you‚Äôll need to complete and you‚Äôre on your way.</p>

<p>Over the course of four acts your task is to rid the Discworld of the dragon that the secret brotherhood has summoned. As a wizard of Unseen University, the Archchancellor has decided you‚Äôre up to this task so first you‚Äôll need to collect the various elements from around Ankh-Morpork that he needs to build a ‚Äúdragon detector‚Äù.</p>

<p><img src="/images/adventure/dw1/scummvm-dw-cd-00005.png" alt="" /></p>

<p>Every time you leave an area of the game you‚Äôll be returned to the map screen, which is how you navigate between the various game locations. There are a few more locations beyond the main map, but the majority of the game takes place here (both in the past, and in the present).</p>

<p><img src="/images/adventure/dw1/scummvm-dw-cd-00010.png" alt="" /></p>

<p>Throughout the course of the game you‚Äôll pick up <em>a lot</em> of items. Luckily for Rincewind you‚Äôre always accompanied by your trusty luggage - which is a treasure chest with a lot of legs. I remember vaguely reading these books when I was a kid and the traveling treasure chest standing out to me as a really interesting character, so I was really hoping it would play a big part in this game once it was introduced.</p>

<p>When you find a new item you can pick up you‚Äôll have the option of adding it to the chest or Rincewind‚Äôs inventory. The chest has unlimited storage, whereas Rincewind only has 4 ‚Äúslots‚Äù that you can use.</p>

<p><img src="/images/adventure/dw1/scummvm-dw-cd-00013.png" alt="" /></p>

<p>Inventory management plays a pretty large role in this game as there are several puzzles that require Rincewind to take items with him to a location the chest can‚Äôt access. Typically it‚Äôs not obvious what you need to bring with you and the will involve trial and error, backtracking and repetition.</p>

<p>Speaking of backtracking, that‚Äôs about 90% of the game. You typically need to talk to everyone you possibly can on every screen to get a sense of what fetch quest they‚Äôre going to send you on, then head off to fetch said maguffin.</p>

<p><img src="/images/adventure/dw1/scummvm-dw-cd-00007.png" alt="" /></p>

<p>The dialogue system is reminiscent of games of this era such as <a href="/blog/2023/01/23/sam-and-max-hit-the-road/">Sam &amp; Max Hit the Road</a> where a row of icons will be presented that represent various interactions that according to the <a href="https://archive.org/details/discworld-manual/page/n7/mode/2up">manual</a> represent actions/moods such as <code class="language-plaintext highlighter-rouge">GREETING</code>, <code class="language-plaintext highlighter-rouge">QUESTION</code>, <code class="language-plaintext highlighter-rouge">SARCASM</code>and <code class="language-plaintext highlighter-rouge">ANGER</code>.</p>

<p><img src="/images/adventure/dw1/scummvm-dw-cd-00009.png" alt="" /></p>

<p>Though the gameplay itself can be a bit tedious, the character interactions and descriptions of the world you‚Äôre engaging with are fantastic. <a href="https://en.wikipedia.org/wiki/Monty_Python">Monty Python</a>‚Äôs <a href="https://en.wikipedia.org/wiki/Eric_Idle">Eric Idle</a> voices Rincewind, and really brings the character to life as a dry, witty British stereotype.</p>

<p>There is ever-present <a href="https://www.youtube.com/watch?v=_dxSji16tOc&amp;list=PL9434353ADDF48CD6">background music</a> playing throughout the game, but it just sort of fades into the background. I don‚Äôt consider this a bad thing for ambient music as it means it‚Äôs essentially just doing it‚Äôs job.</p>

<p><img src="/images/adventure/dw1/scummvm-dw-cd-00019.png" alt="" /></p>

<p>In order for Rincewind to solve the mystery of who stole the Dragon Summoning book, uncover the identities of the members of the brotherhood and retrieve the various gold trinkets the dragon has requested, he‚Äôll have to travel back in time.</p>

<p>This is done through the University‚Äôs library (following a long series of fetch quests) that opens a door to L-Space. Once you‚Äôve accessed L-Space a new series of puzzles need to be solved - many of them involving making changes in the past to impact the placement or availability of things in the present.</p>

<p><img src="/images/adventure/dw1/scummvm-dw-cd-00020.png" alt="" /></p>

<p>I really liked the mechanic, but found myself getting lost or confused or having to repeatedly go back and forth between the past and preset trying ot suss out exactly what it is I‚Äôm trying to do.</p>

<p>Discworld does not hold your hand. The clues can be vague and require you to really think. I don‚Äôt believe any knowledge of the books is required to be successful, but I‚Äôm sure it couldn‚Äôt hurt.</p>

<p>For example, to get the password to the thieve‚Äôs hideout you need to turn the drainpipe, hide, then listen to the pipe with a glass. If you don‚Äôt use the glass a long sequence plays out that doesn‚Äôt make it obvious you <em>didn‚Äôt</em> get the password until you try and get into the hideout.</p>

<p>You then need to repeat this trying various items on the drainpipe to see if anything will happen.</p>

<p><img src="/images/adventure/dw1/scummvm-dw-cd-00024.png" alt="" /></p>

<p>Trying everything on everything (including every item on every other item) can be a requirement to progression. There are just so many items you‚Äôll find, an the solution to many puzzles requires either a single item or an item combination puzzle to be solved first - and the solutions are typically not obvious.</p>

<p><img src="/images/adventure/dw1/scummvm-dw-cd-00023.png" alt="" /></p>

<p>This is definitely not a game for kids. There are allusions to adult themes, the writing is complex, the humour is more nuanced and you really have to pay attention to your surroundings and all dialogue to make any progress.</p>

<p><img src="/images/adventure/dw1/scummvm-dw-cd-00031.png" alt="" /></p>

<p>I seem to remember playing this game as a teenager and just not being able to get into it. I was a big Monty Python fan (who wasn‚Äôt in the 90‚Äôs) so Eric Idle voicing a character really appealed to me ‚Ä¶ but I just couldn‚Äôt make any progress.</p>

<p>If you‚Äôre playing in ScummVM there are a <a href="https://bugs.scummvm.org/query?game=Discworld&amp;status=new&amp;status=pending&amp;order=priority">number of known bugs</a>, though the game is not really affected too badly. I did hit the <a href="https://bugs.scummvm.org/ticket/10659">Act 4 missing guard crash</a>, but that is easily avoidable by just not engaging a clearly missing background character in conversation.</p>

<p>I really love Terry Pratchett‚Äôs writing style and have previously read <a href="https://en.wikipedia.org/wiki/The_Colour_of_Magic">The Colour of Magic</a>. Having now played through this game I definitely feel like firing up the eReader and diving back into the world of Ankh-Morpork.</p>

<p>There are better adventure games out there that would likely be more approachable, but the story and writing of Discworld definitely stands out.</p>

<h2 id="game-information">Game Information</h2>

<table>
  <tbody>
    <tr>
      <td><em>Game</em></td>
      <td>Discworld</td>
    </tr>
    <tr>
      <td><em>Developer</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Perfect_Entertainment">Teeny Weeny Games/Perfect 10 Productions</a></td>
    </tr>
    <tr>
      <td><em>Publisher</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Psygnosis">Psygnosis</a></td>
    </tr>
    <tr>
      <td><em>Release Date</em></td>
      <td>1995</td>
    </tr>
    <tr>
      <td><em>Systems</em></td>
      <td>DOS, Mac, PlayStation, Sega Saturn</td>
    </tr>
    <tr>
      <td><em>Game Engine</em></td>
      <td><a href="https://wiki.scummvm.org/index.php?title=Tinsel">Tinsel</a></td>
    </tr>
  </tbody>
</table>

<h3 id="my-playthrough">My Playthrough</h3>

<table>
  <tbody>
    <tr>
      <td><a href="https://howlongtobeat.com/game/2589"><em>How Long To Beat?</em></a></td>
      <td>11 hours</td>
    </tr>
    <tr>
      <td><em>Version Played</em></td>
      <td>DOS via <a href="https://www.scummvm.org/">ScummVM</a></td>
    </tr>
    <tr>
      <td><em>Notes</em></td>
      <td><a href="https://adventuregamers.com/walkthrough/full/discworld">Walkthrough</a></td>
    </tr>
  </tbody>
</table>

<h3 id="score">Score</h3>

<p>See <a href="https://www.alexbevi.com/blog/2021/07/28/adventure-games-1980-1999/#scoring">here</a> for a refresher on how we‚Äôre scoring these games.</p>

<table>
  <tbody>
    <tr>
      <td><strong>Atmosphere (20)</strong></td>
      <td>14</td>
    </tr>
    <tr>
      <td><strong>Story (25)</strong></td>
      <td>19</td>
    </tr>
    <tr>
      <td><strong>Experience (15)</strong></td>
      <td>5</td>
    </tr>
    <tr>
      <td><strong>Impact (10)</strong></td>
      <td>3</td>
    </tr>
    <tr>
      <td>¬†</td>
      <td><strong>59%</strong></td>
    </tr>
  </tbody>
</table>

<h3 id="gallery">Gallery</h3>

<div id="inline-gallery-container" class="inline-gallery-container"></div>
<script type="module">import lightGallery from "https://cdn.skypack.dev/lightgallery@2.4.0";import lgZoom from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/zoom";import lgThumbnail from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/thumbnail";const $lgContainer = document.getElementById("inline-gallery-container");const inlineGallery = lightGallery($lgContainer, {  container: $lgContainer,  licenseKey: "C2D2C2BD-16BC4564-A4EAE653-401CB884",  dynamic: true,  hash: false,  closable: false,  showMaximizeIcon: true,  slideDelay: 10,  plugins: [lgZoom, lgThumbnail],  dynamicEl: [{ src: '/images/adventure/dw1/scummvm-dw-cd-00001.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00001.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00002.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00002.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00003.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00003.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00004.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00004.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00006.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00006.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00008.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00008.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00012.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00012.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00014.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00014.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00016.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00016.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00017.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00017.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00018.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00018.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00021.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00021.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00022.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00022.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00025.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00025.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00026.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00026.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00027.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00027.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00028.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00028.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00029.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00029.png' },{ src: '/images/adventure/dw1/scummvm-dw-cd-00030.png', thumb: '/images/adventure/dw1/scummvm-dw-cd-00030.png' },]});inlineGallery.openGallery();</script>

<p><strong>Footnotes</strong></p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p><small>Description from <a href="https://www.mobygames.com/game/184/discworld/">Moby Games</a></small>¬†<a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="Let&apos;s Adventure!" /><category term="adventure" /><category term="Tinsel" /><category term="Teeny Weeny Games/Perfect 10 Productions" /><category term="Psygnosis" /><summary type="html"><![CDATA[This review is part of the ‚ÄúLet‚Äôs Adventure!‚Äù series. See all reviewed games sorted by rating here.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/adventure/dw1/scummvm-dw-cd-00000.png" /><media:content medium="image" url="https://www.alexbevi.com/images/adventure/dw1/scummvm-dw-cd-00000.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Altered Destiny (Accolade) - 1990</title><link href="https://www.alexbevi.com/blog/2024/06/14/altered-destiny/" rel="alternate" type="text/html" title="Altered Destiny (Accolade) - 1990" /><published>2024-06-14T06:06:26-04:00</published><updated>2024-06-17T07:08:14-04:00</updated><id>https://www.alexbevi.com/blog/2024/06/14/altered-destiny</id><content type="html" xml:base="https://www.alexbevi.com/blog/2024/06/14/altered-destiny/"><![CDATA[<blockquote class="prompt-info">
  <p>This review is part of the <a href="/blog/2021/07/28/adventure-games-1980-1999/">‚ÄúLet‚Äôs Adventure!‚Äù</a> series. See all reviewed games sorted by rating <a href="/blog/2021/08/08/adventure-games-1980-1999-sorted-by-score/">here</a>.</p>
</blockquote>

<p><a href="https://en.wikipedia.org/wiki/Altered_Destiny">Altered Destiny</a> is a graphic adventure game released by Accolade in 1990 for MS-DOS compatible operating systems and in 1991 for Amiga. The game was designed by Michael Berlyn and it uses a text parser interface. It is the second adventure game from Accolade and it uses the same engine as the first one, <a href="https://en.wikipedia.org/wiki/Les_Manley_in:_Search_for_the_King">Les Manley in: Search for the King</a>.</p>

<p><img src="/images/adventure/altered/017.png" alt="" /></p>

<p>One fine day P. J. Barrett, an ordinary human being from the planet Earth, goes to a repair shop to get his TV set fixed. When he comes back for it, he accidentally picks up the wrong one. No big deal? Quite on the contrary. When the unsuspecting Mr. Barrett returns home and turns the TV on, he is sucked into a portal! One moment later, he finds himself on the strange planet of Daltere. Naturally, this planet needs a savior: the evil alien Helmar has stolen an artifact known as the Jewel of Light, thus endangering the entire galaxy. Now our unlikely hero has to overcome various obstacles and save the world.<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup></p>

<p><img src="/images/adventure/altered/034.png" alt="" /></p>

<p>I never owned an Amiga when I was growing up, though my uncle had one as he was a graphic artist and I guess back in the mid 80s to early 90s this was the system to use - and <a href="https://en.wikipedia.org/wiki/Deluxe_Paint">Deluxe Paint</a> was all the rage.</p>

<p>This wasn‚Äôt a system I really got to mess around with (it was a ‚Äúwork‚Äù computer), but the odd game I was exposed to I remember having impressive graphics and sound.</p>

<p>Since one of my goals for this retrospective journey is to try and experience as many of these games on as many (emulated) systems as possible, I wanted to make sure I play through a few of these titles on the Amiga.</p>

<p><img src="/images/adventure/altered/014.png" alt="" />
<em>Oh goody, copy protection</em></p>

<p>As soon as you insert disk one and boot the game up you‚Äôll be met with a copy protection screen. I tried to find a copy of the manual online, but failed. Even the game‚Äôs entry in the <a href="https://www.gamesdatabase.org/game/commodore-amiga/altered-destiny">Games Database</a> didn‚Äôt have anything for me, so I chose to resort to ‚Äúalternate‚Äù means of bypassing this barrier.</p>

<p>It turns out what I needed was the <a href="https://www.mocagh.org/miscgame/altereddestiny-codewheel.jpg">code wheel</a> that could be found at the <a href="https://www.mocagh.org/loadpage.php?getgame=altereddestiny">museum of computer adventure game history</a>, but I found this after I‚Äôd finished the game already ‚Ä¶</p>

<p><img src="/images/adventure/altered/013.png" alt="" />
<em>I‚Äôm guessing Accolade won‚Äôt mind that I‚Äôm emulating a cracked version of the game 30+ years after it came out</em></p>

<p>I ended up playing the <a href="https://demozoo.org/groups/8/">Skid Row</a> cracked release of the game, which will accept any input on the challenge screen and allow you to progress. Though there are obviously good arguments for why software piracy is bad, when looked at through the lens of digital preservation and making historic content accessible to future generations of players I appreciate the work that these groups put in.</p>

<p><img src="/images/adventure/altered/041.png" alt="" /></p>

<p>Altered Destiny uses a similar engine to Sierra‚Äôs first iteration of the SCI engine (<a href="http://sciwiki.sierrahelp.com/index.php/Sierra_Creative_Interpreter#SCI0">SCI0</a>) as it support basic character navigation with the mouse, but all other interaction with the game world was done using a text parser.</p>

<p>The most common verb you‚Äôll use is <code class="language-plaintext highlighter-rouge">LOOK</code>, which will typically give you a lot of information about the screen you‚Äôre on, including characters (with their names) you can interact with, items you might be able to pick up and other useful details.</p>

<p><img src="/images/adventure/altered/028.png" alt="" /></p>

<p>There are several alien creatures to talk to. Whenever you <code class="language-plaintext highlighter-rouge">LOOK</code> on a screen the game helpfully tells you the name of the alien there, so it‚Äôs easy enough to know who to <code class="language-plaintext highlighter-rouge">TALK</code> to. You then need to <code class="language-plaintext highlighter-rouge">ASK ABOUT</code> various topics to learn what to do next or uncover more of the plot.</p>

<p>You‚Äôll want to take notes as these interactions will usually surface the names of other characters you‚Äôll want to seek out, and you‚Äôll want to ask each alien creature about the others that you‚Äôve met or learned about.</p>

<p><img src="/images/adventure/altered/ad000.gif" alt="" /></p>

<p>Similar to Sierra games at the time, path finding for your character was challenging and would typically result in you falling to your death. I found several times that I‚Äôd need to resort to using the mouse to click on a target I wanted PJ to walk to as it would <em>usually</em> get me there safely ‚Ä¶ but occasionally you were better off using the direction keys on the keyboard.</p>

<p>There‚Äôs also only one message ever shown when you die, so it‚Äôs not interesting to explore the different ways the environment will end your adventure because you see the same thing regardless of what you do.</p>

<p><img src="/images/adventure/altered/036.png" alt="" />
<em>I do not miss the days of multi-disk games</em></p>

<p>You‚Äôll want to save often, but Amiga games required a save disk to be swapped in in order for this to occur. I played this game using <a href="https://dirkwhoffmann.github.io/vAmiga/">vAmiga</a>, so I could just use save states which are exponentially more convenient than having to swap the save disk in, save, then swap the current game disk in.</p>

<p>Disk access times seriously slow down the game play experience. I don‚Äôt know if it‚Äôs due to just not having enough experience tuning an Amiga emulator, but I can safely say that 70% of my play time was spent just waiting for the disks to finish spinning.</p>

<p>It was also frustrating when I‚Äôd swap disks (as requested) too quickly, so I‚Äôd have to put the previous disk back in, let it read, wait for the prompt, switch and try again. SO. MUCH. WAITING.</p>

<p><img src="/images/adventure/altered/037.png" alt="" />
<em>This map screen makes the game world feel bigger than it really is</em></p>

<p>The game world in Altered Destiny is actually fairly small, but once you get down from the floating island and reach the cross roads you‚Äôll get a map screen that shows PJ progressing between the various game areas.</p>

<p><img src="/images/adventure/altered/027.png" alt="" /></p>

<p>Examining your inventory items or various things on screen will bring up a more detailed view that provides additional information. This was particularly useful in helping to identify what might be more important to interact with as the game designers were clearly trying to draw your attention to these.</p>

<p>Like Sierra games of that era, it‚Äôs extremely easy to miss picking up key items and you can find yourself in unwinnable situations requiring you to restore to much earlier saves or restart entirely.</p>

<p>This happened to me a couple times, which almost lead me to abandon this playthrough simply because I didn‚Äôt want to have to endure the disk access and screen loading times I knew came with back tracking.</p>

<p><img src="/images/adventure/altered/025.png" alt="" /></p>

<p>Items you can pick up are typically fairly obvious, and when they‚Äôve been picked up they‚Äôre no longer visible on screen. I appreciate this as it makes the game world feel a bit more interactive as your actions are affecting the world around you.</p>

<p>Whenever there are item combination puzzles though some of the sequences of commands you need to enter can be a bit unintuitive - especially if you were a kid playing this game initially.</p>

<p>For example, to catch the bird here you need to <code class="language-plaintext highlighter-rouge">DROP CAGE</code>, then <code class="language-plaintext highlighter-rouge">SET THE TRAP</code>, <code class="language-plaintext highlighter-rouge">BAIT THE CAGE WITH PIGMENT</code> and wait for the bird to take the bait before you <code class="language-plaintext highlighter-rouge">GET CAGE</code>. I‚Äôm sure the game designers thought they were setting you up for success with some of the clues leading up to this point, but I found myself reaching for the walkthrough pretty quickly.</p>

<p><img src="/images/adventure/altered/040.png" alt="" /></p>

<p>To mix up the gameplay a bit there‚Äôs one random fight sequence where you need to <code class="language-plaintext highlighter-rouge">WIELD SWORD</code> and knock some creature off a floating platform (hopefully you didn‚Äôt forget to pick the sword back up after dropping it much, much earlier).</p>

<p>This is an interesting diversion but since you only do it once and there‚Äôs really no setup for it it sort of feels forced and unintuitive. You sort of just have to keep mashing right on the directional pad until you knock the creature into the pool of light, then you need to fall off the platform into the pool as well (I can‚Äôt remember why anymore).</p>

<p><img src="/images/adventure/altered/044.png" alt="" /></p>

<p>The final battle with Helmar boils down to just picking the right option from a menu. Spoiler: it‚Äôs the mirror. When you do this you reflect the beam he shoots back at him, killing him and freeing the world and restoring the jewel of light to its rightful place in the universe (I think that‚Äôs what happens at least).</p>

<p><img src="/images/adventure/altered/045.png" alt="" />
<em>Error 19, then crash back to the OS</em></p>

<p>For the first time in this series I didn‚Äôt actually finish the game myself and take a ‚ÄúTHE END‚Äù screenshot ‚Ä¶ because the game crashed after defeating Helmar. Maybe this is an emulation issue, maybe it‚Äôs an issue with the game having been cracked by Skid Row and this being a checksum failure or some other protection measure.</p>

<p><img src="/images/adventure/altered/SCR-20240614-fzkn.png" alt="" />
<em>This is a screenshot from a <a href="https://www.youtube.com/watch?v=JG4cvri6Rcs">longplay on YouTube</a> because my game crashed right at the end</em></p>

<p>I technically finished the game and have zero desire to play it again using the MS-DOS version, so I cheated and swiped the last screenshot from a longplay video.</p>

<p>Altered Destiny has some good graphics and sound, but it‚Äôs not really adding anything to the experience that other games released at that time were. The story seems a little forced, the inventory puzzles are sort of frustrating and there‚Äôs really not much to do.</p>

<p>It‚Äôs entirely possible I would have enjoyed the MS-DOS version more (assuming the load times are greatly improved), but Altered Destiny plays like an over-complicated Space Quest clone without any of the humor.</p>

<h2 id="game-information">Game Information</h2>

<table>
  <tbody>
    <tr>
      <td><em>Game</em></td>
      <td>Altered Destiny</td>
    </tr>
    <tr>
      <td><em>Developer</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Accolade_(company)">Accolade</a></td>
    </tr>
    <tr>
      <td><em>Publisher</em></td>
      <td>Accolade</td>
    </tr>
    <tr>
      <td><em>Release Date</em></td>
      <td>1990</td>
    </tr>
    <tr>
      <td><em>Systems</em></td>
      <td>Amiga, DOS</td>
    </tr>
    <tr>
      <td><em>Game Engine</em></td>
      <td>¬†</td>
    </tr>
  </tbody>
</table>

<h3 id="my-playthrough">My Playthrough</h3>

<table>
  <tbody>
    <tr>
      <td><a href="https://howlongtobeat.com/game/16668"><em>How Long To Beat?</em></a></td>
      <td>6.5 hours</td>
    </tr>
    <tr>
      <td><em>Version Played</em></td>
      <td>Amiga via <a href="https://dirkwhoffmann.github.io/vAmiga/">vAmiga</a></td>
    </tr>
    <tr>
      <td><em>Notes</em></td>
      <td><a href="https://www.walkthroughking.com/text/altereddestiny.aspx">Walkthrough</a></td>
    </tr>
  </tbody>
</table>

<h3 id="score">Score</h3>

<p>See <a href="https://www.alexbevi.com/blog/2021/07/28/adventure-games-1980-1999/#scoring">here</a> for a refresher on how we‚Äôre scoring these games.</p>

<table>
  <tbody>
    <tr>
      <td><strong>Atmosphere (20)</strong></td>
      <td>8</td>
    </tr>
    <tr>
      <td><strong>Story (25)</strong></td>
      <td>8</td>
    </tr>
    <tr>
      <td><strong>Experience (15)</strong></td>
      <td>5</td>
    </tr>
    <tr>
      <td><strong>Impact (10)</strong></td>
      <td>3</td>
    </tr>
    <tr>
      <td>¬†</td>
      <td><strong>34%</strong></td>
    </tr>
  </tbody>
</table>

<h3 id="gallery">Gallery</h3>

<div id="inline-gallery-container" class="inline-gallery-container"></div>
<script type="module">import lightGallery from "https://cdn.skypack.dev/lightgallery@2.4.0";import lgZoom from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/zoom";import lgThumbnail from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/thumbnail";const $lgContainer = document.getElementById("inline-gallery-container");const inlineGallery = lightGallery($lgContainer, {  container: $lgContainer,  licenseKey: "C2D2C2BD-16BC4564-A4EAE653-401CB884",  dynamic: true,  hash: false,  closable: false,  showMaximizeIcon: true,  slideDelay: 10,  plugins: [lgZoom, lgThumbnail],  dynamicEl: [{ src: '/images/adventure/altered/016.png', thumb: '/images/adventure/altered/016.png' },{ src: '/images/adventure/altered/018.png', thumb: '/images/adventure/altered/018.png' },{ src: '/images/adventure/altered/019.png', thumb: '/images/adventure/altered/019.png' },{ src: '/images/adventure/altered/020.png', thumb: '/images/adventure/altered/020.png' },{ src: '/images/adventure/altered/021.png', thumb: '/images/adventure/altered/021.png' },{ src: '/images/adventure/altered/022.png', thumb: '/images/adventure/altered/022.png' },{ src: '/images/adventure/altered/023.png', thumb: '/images/adventure/altered/023.png' },{ src: '/images/adventure/altered/024.png', thumb: '/images/adventure/altered/024.png' },{ src: '/images/adventure/altered/026.png', thumb: '/images/adventure/altered/026.png' },{ src: '/images/adventure/altered/029.png', thumb: '/images/adventure/altered/029.png' },{ src: '/images/adventure/altered/030.png', thumb: '/images/adventure/altered/030.png' },{ src: '/images/adventure/altered/031.png', thumb: '/images/adventure/altered/031.png' },{ src: '/images/adventure/altered/032.png', thumb: '/images/adventure/altered/032.png' },{ src: '/images/adventure/altered/033.png', thumb: '/images/adventure/altered/033.png' },{ src: '/images/adventure/altered/035.png', thumb: '/images/adventure/altered/035.png' },{ src: '/images/adventure/altered/038.png', thumb: '/images/adventure/altered/038.png' },{ src: '/images/adventure/altered/039.png', thumb: '/images/adventure/altered/039.png' },{ src: '/images/adventure/altered/042.png', thumb: '/images/adventure/altered/042.png' },{ src: '/images/adventure/altered/043.png', thumb: '/images/adventure/altered/043.png' },]});inlineGallery.openGallery();</script>

<p><strong>Footnotes</strong></p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p><small>Description from <a href="https://www.mobygames.com/game/92/altered-destiny/">Moby Games</a></small>¬†<a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="Let&apos;s Adventure!" /><category term="adventure" /><category term="Accolade" /><summary type="html"><![CDATA[This review is part of the ‚ÄúLet‚Äôs Adventure!‚Äù series. See all reviewed games sorted by rating here.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/adventure/altered/015.png" /><media:content medium="image" url="https://www.alexbevi.com/images/adventure/altered/015.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Flight of the Amazon Queen (Interactive Binary Illusions) - 1995</title><link href="https://www.alexbevi.com/blog/2024/06/09/flight-of-the-amazon-queen/" rel="alternate" type="text/html" title="Flight of the Amazon Queen (Interactive Binary Illusions) - 1995" /><published>2024-06-09T07:45:50-04:00</published><updated>2024-06-11T06:27:47-04:00</updated><id>https://www.alexbevi.com/blog/2024/06/09/flight-of-the-amazon-queen</id><content type="html" xml:base="https://www.alexbevi.com/blog/2024/06/09/flight-of-the-amazon-queen/"><![CDATA[<blockquote class="prompt-info">
  <p>This review is part of the <a href="/blog/2021/07/28/adventure-games-1980-1999/">‚ÄúLet‚Äôs Adventure!‚Äù</a> series. See all reviewed games sorted by rating <a href="/blog/2021/08/08/adventure-games-1980-1999-sorted-by-score/">here</a>.</p>
</blockquote>

<p><a href="https://en.wikipedia.org/wiki/Flight_of_the_Amazon_Queen">Flight of the Amazon Queen</a> is a graphical point-and-click adventure game by Interactive Binary Illusions, originally released in 1995 for Amiga and MS-DOS.</p>

<p><img src="/images/adventure/queen/scummvm-queen-00024.png" alt="" /></p>

<p>Joe King is the hero of this point and click adventure. His plane is carrying actress Faye Russell when it crash lands in a remote jungle, and he must battle through 100 screens of adventure and puzzle. The game‚Äôs feel is influenced by hammy B-movies, and the characters are quite stereotyped and comic. As standard in point and click adventures, a set of icons at the bottom of the screen allow you to interact with visible characters and items in the main view area.<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup></p>

<p><img src="/images/adventure/queen/scummvm-queen-00029.png" alt="" />
<em>I‚Äôm shocked they don‚Äôt lean into this pun more often throughout the game</em></p>

<p>I‚Äôm a huge fan of LucasArts games, and after reading <a href="https://passfieldgames.blogspot.com/2015/05/making-of-flight-of-amazon-queen-20th.html">‚ÄúMaking of Flight of the Amazon Queen - A 20th Anniversary Retrospective‚Äù</a> it seems that so was John Passfield. So many aspects of Flight of the Amazon Queen just smack of LucasArts‚Äô influence, and the end result is a game that could easily live alongside classics such as <a href="/blog/2024/04/30/the-secret-of-monkey-island/">The Secret of Monkey Island</a> or Indiana Jones and the Fate of Atlantis.</p>

<p><img src="/images/adventure/queen/scummvm-queen-00032.png" alt="" /></p>

<p>Ron Gilbert and Tim Schafer‚Äôs influence on this game runs extremely deep. The comedic writing style, pixel art design, verb selection and dialog tree layout all feel reminiscent of a LucasArts title, and though they didn‚Äôt use the SCUMM engine, they‚Äôre custom game engine was titled JASPAR (John And Steve‚Äôs Programmable Adventure Resource) - which sort of feels like it belongs in that universe of tools with forced acronyms.</p>

<p><img src="/images/adventure/queen/scummvm-queen-00004.png" alt="" />
<em>Adding that ‚Äútrademark‚Äù next to ‚Äúcomedy breasts‚Äù just screams of Monkey Island‚Äôs influence</em></p>

<p>Once the game starts you‚Äôll find yourself locked in a hotel room that you need to escape. You‚Äôre a pilot for hire, and your next client is a famous movie star, but your rival Anderson wants to steal this job from you. To escape the hotel room you‚Äôll need to use the various verbs represented as icons to <code class="language-plaintext highlighter-rouge">LOOK</code>, <code class="language-plaintext highlighter-rouge">PICK UP</code> and <code class="language-plaintext highlighter-rouge">USE</code> various things.</p>

<p>Most of this game involves inventory combination puzzles and fetch quests, so it‚Äôs worth examining everything on the screen to see if it‚Äôs something you can pick up, move, open/close or use.</p>

<p><img src="/images/adventure/queen/scummvm-queen-00011.png" alt="" /></p>

<p>This game is incredibly well paced, as long as you look at everything and talk to everyone. The path forward or solution to most puzzles is typically intuitive and when you need to combine items Joe will usually point you in the right direction.</p>

<p>When this gets a little more confusing is later in the game where you have a very large number of items - all of which you‚Äôll need to use at some point (and often in combination).</p>

<p><img src="/images/adventure/queen/scummvm-queen-00016.png" alt="" /></p>

<p>The game likes to plant seeds as to the solution to puzzles through story elements. For example there is a brief sequence early in the game where you find a comic book that your mechanic Sparky is looking for. If you read the comic the hero uses alcohol to power is jetpack when it runs out of fuel so he can escape from the baddies just in the nick of time.</p>

<p>Amazingly enough, near the end of the game you find a jetpack - but it doesn‚Äôt have any fuel. Trader bob has bottles of alcohol for sale (but you need to prove you‚Äôre of age so you need ID to show him).</p>

<p><img src="/images/adventure/queen/scummvm-queen-00018.png" alt="" /></p>

<p>You‚Äôll meet a number of characters throughout the Amazon that you‚Äôll interact with. Most characters only really have one purpose and it‚Äôs typically (a) they‚Äôre preventing you from progressing or (b) they hold some inventory item you‚Äôll need.</p>

<p>Each character has a limited number of dialog options, so it‚Äôs worth asking everyone about everything as it helps advance the plot and lays out what that character needs from you in fairly straightforward language.</p>

<p><img src="/images/adventure/queen/scummvm-queen-00014.png" alt="" /></p>

<p>Trader Bob is the exception as you‚Äôll need to circle back to him multiple times to get new items. I did appreciate that though there are dozens of useable items in this game, none of them appear to be <a href="https://en.wikipedia.org/wiki/Red_herring">red herrings</a>.</p>

<p>If an item will need to be used more than once, it will typically remain in your inventory in a depleted state to indicate it‚Äôs still needed. In my opinion this is better than the puzzle design in other games (notably a number of Sierra titles) where you have to backtrack to get an item again to use it as the solution to another puzzle.</p>

<p><img src="/images/adventure/queen/scummvm-queen-00012.png" alt="" /></p>

<p>Instead of the typical ‚Äúmap screen‚Äù you‚Äôd get in other games to navigate between game areas, Flight of the Amazon Queen has a pinnacle you walk to that overlooks the forest. From here you pan back and forth and can see the various locations you can travel to.</p>

<p>Technically it‚Äôs just a different take on the flat 2D map screen, but it‚Äôs also incorporated into the endgame as the location you need to launch from once you have the jetpack. Since you can‚Äôt travel back to the forest once you reach the Valley of the Mists it felt like a good way to tie the pinnacle you‚Äôve been using for travel throughout the game into your journey towards the final encounter.</p>

<p><img src="/images/adventure/queen/scummvm-queen-00015.png" alt="" /></p>

<p>The game‚Äôs tone is extremely light and a little goofy. Joe King just feels and plays like a caricature of Indiana Jones, and they have a lot of fun with this. Every character you interact with doesn‚Äôt take themselves too seriously, and the underlying stories they‚Äôre presenting are enjoyable and keep you engaged.</p>

<p>I really like imaginary gorilla that pops up a couple of times blocking your path. Just talking to the gorilla and picking one of the dialog options that results in you questioning whether or not he should even exist will cause him to vanish.</p>

<p><img src="/images/adventure/queen/scummvm-queen-00008.png" alt="" /></p>

<p>As the game progresses you‚Äôll be presented with static cut scenes that further advance the plot. It turns out there‚Äôs a mad scientist trying to capture Amazonian women so he can test a dino ray on them that turns them into dinosaurs.</p>

<p>I guess he wants to create an army of dino-humans and conquer the world ‚Ä¶ and you‚Äôre the only one that can stop him.</p>

<p><img src="/images/adventure/queen/scummvm-queen-00037.png" alt="" /></p>

<p>It‚Äôs kind of bananas that Joe King - a parody of Indiana Jones - needs to retrieve a crystal skull from the depths of the Amazon in order to activate an ancient robot, and over a decade later <a href="https://en.wikipedia.org/wiki/Indiana_Jones_and_the_Kingdom_of_the_Crystal_Skull">Indiana Jones and the Kingdom of the Crystal Skull</a> did something sort of similar (but with aliens instead of ancient robots).</p>

<p>I know there‚Äôs almost no chance these two things are related, but in my mind I‚Äôm picturing <a href="https://en.wikipedia.org/wiki/David_Koepp">David Koepp</a> (who wrote the screenplay for that movie) walking by his kid playing FOTAQ in 1995 and thinking ‚Äúthat crystal skull looks neat‚Äù ‚Ä¶ then carrying on with his life.</p>

<p><img src="/images/adventure/queen/scummvm-queen-00038.png" alt="" /></p>

<p>If you play the MSDOS CD version of this game you‚Äôll be treated to some fairly good voice acting. This enhances the game experience quite a bit as though there is some looping music in the background, it‚Äôs not really notable other than ‚Äúbeing there‚Äù.</p>

<p><a href="https://www.mobygames.com/person/68041/bradley-lavelle/">Bradley Lavelle</a> who provides Joe‚Äôs voice does a fantastic job and really gives the character some depth. His delivery is a little dry and sarcastic, but suits Joe King perfectly.</p>

<p><img src="/images/adventure/queen/scummvm-queen-00043.png" alt="" /></p>

<p>Once you‚Äôve got the crystal skull, Dr. Frank Ironstein will unlock the Valley of the Mists where all the dinosaurs live and you‚Äôll need to get yourself over there for the final battle. This final sequence is pretty short (compared to the rest of the game) and just sees you defeating Monster Frank (the doctor gets zapped with his own dino ray), restoring the veil of mist to the Valley of the Mists and flying off into the sunset with Princess Azura.</p>

<p><img src="/images/adventure/queen/scummvm-queen-demo-00001.png" alt="" />
<em>There‚Äôs a hidden mini-game on the CD version where you interview the game developers about the game you just played!</em></p>

<p>Discovering how much you can enjoy a game is the whole reason for a retrospective series like this, and Flight of the Amazon Queen is one such title. The story is immersive, the puzzles are challenging but intuitive, the graphics are great and the writing is entertaining.</p>

<p>This is definitely a game I‚Äôd recommend to anyone that may be interested in experiencing what the genre has to offer. It‚Äôs even more impressive knowing that only a handful of people worked on this game originally - and if you have the CD version of the game with the ‚ÄúINTERVIE‚Äù directory on it, you can play a minigame where you interview the developers of the game about the game you just played!</p>

<p>Flight of the Amazon Queen was re-released as freeware in 2004, and was incorporated into ScummVM as the fifth engine (they currently have <a href="https://wiki.scummvm.org/index.php?title=Engines">A LOT of game engines</a>). You can you can go <a href="https://scummvm.org/games/#games-queen:queen">download and enjoy</a> the game right now!</p>

<p>Historical game preservation and ScummVM specifically are close to my heart so I want to close out this review with the following excerpt from <a href="https://romchip.org/index.php/romchip-journal/article/view/164">‚ÄúBeyond the Amiga: In Conversation with John Passfield on Flight of the Amazon Queen‚Äù</a> as it shines a light on how this all came to be:</p>
<blockquote class="prompt-tip">
  <p>HS: Can you tell us about the involvement of ScummVM in making the game accessible today?</p>

  <p>JP: I was approached from the ScummVM people and they were interested in making a version of Amazon Queen available through their online library of playable adventure games. I was aware at this point that new generation PCs that were coming out were making it harder to play Amazon Queen. And I thought, well, I own the intellectual property, so I made it freeware with the right that you download for free, but you couldn‚Äôt sell it. And I retained copyright ownership of the game and that‚Äôs when the ScummVM people come in. They reached out and said we‚Äôd love to convert Amazon Queen to the ScummVM engine. And I was that‚Äôd be great because then it lives on forever. So, they reached out and said can we do it? I said that would be great and a month later it‚Äôs available on ScummVM.</p>

  <p>HS: ScummVM does not rely on the emulation of hardware. The ScummVM team uses a different process to make games playable on contemporary computing environments. Can you explain how they do this?</p>

  <p>JP: I actually reached out to ScummVM on their Discord asking them how they went about it. What they explained is ScummVM is basically a framework for graphical programs which work with 2-D, and now 3-D, particularly with OpenGL. So, they provide middleware code which is called the OSystem. Then every game engine is ported to this middleware replacing or hardware dependent things like sound, graphical output, file reading, keyboard mouse input, times, et cetera, with a call to the OSystem. First off, they did this for the LucasArts Scumm engine. For my game they created the ‚ÄúQueen‚Äù engine. The Queen engine uses their middleware to interpret the game files for Amazon Queen. It‚Äôs completely different pieces of code having nothing in common with Scumm or any of the other four engines they had adapted at the time. Amazon Queen was the fifth engine they made compatible. They said because Amazon Queen had very little assembly, it was mostly C code, they said it was very easy to port over. And I think they‚Äôre obviously very smart people. So that‚Äôs how it came about and that is how it works. As mentioned, I believe they‚Äôve got support now for the LucasArts games which have 3-D graphics.</p>

  <p>I just love what they‚Äôre doing because it just gives that capacity to keep the game playable. It outputs at C++ so it works for everything. When Liron, who did the re-release of Amazon Queen for iOS in 2009, approached me to ask if he could port it into iOS he used the ScummVM Queen engine version and built on top of that engine extra stuff for the iOS version. The way that arrangement worked is that I granted him a licence to sell for iOS and he gave me a royalty. He has also put it on to the PC now. ScummVM just keeps these games accessible, which is great.</p>
</blockquote>

<h2 id="game-information">Game Information</h2>

<table>
  <tbody>
    <tr>
      <td><em>Game</em></td>
      <td>Flight of the Amazon Queen</td>
    </tr>
    <tr>
      <td><em>Developer</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Interactive_Binary_Illusions">Interactive Binary Illusions</a></td>
    </tr>
    <tr>
      <td><em>Publisher</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Renegade_Software">Renegade Software</a></td>
    </tr>
    <tr>
      <td><em>Release Date</em></td>
      <td>1995</td>
    </tr>
    <tr>
      <td><em>Systems</em></td>
      <td>Amiga, DOS</td>
    </tr>
    <tr>
      <td><em>Game Engine</em></td>
      <td><a href="https://wiki.scummvm.org/index.php?title=Queen">JASPAR</a></td>
    </tr>
  </tbody>
</table>

<h3 id="my-playthrough">My Playthrough</h3>

<table>
  <tbody>
    <tr>
      <td><a href="https://howlongtobeat.com/game/3594"><em>How Long To Beat?</em></a></td>
      <td>8 hours</td>
    </tr>
    <tr>
      <td><em>Version Played</em></td>
      <td>DOS CD via <a href="https://www.scummvm.org/">ScummVM</a></td>
    </tr>
    <tr>
      <td><em>Notes</em></td>
      <td><a href="https://www.walkthroughking.com/text/flightoftheamazonqueen.aspx">Walkthrough</a></td>
    </tr>
  </tbody>
</table>

<h3 id="score">Score</h3>

<p>See <a href="https://www.alexbevi.com/blog/2021/07/28/adventure-games-1980-1999/#scoring">here</a> for a refresher on how we‚Äôre scoring these games.</p>

<table>
  <tbody>
    <tr>
      <td><strong>Atmosphere (20)</strong></td>
      <td>16</td>
    </tr>
    <tr>
      <td><strong>Story (25)</strong></td>
      <td>21</td>
    </tr>
    <tr>
      <td><strong>Experience (15)</strong></td>
      <td>13</td>
    </tr>
    <tr>
      <td><strong>Impact (10)</strong></td>
      <td>9</td>
    </tr>
    <tr>
      <td>¬†</td>
      <td><strong>84%</strong></td>
    </tr>
  </tbody>
</table>

<h3 id="gallery">Gallery</h3>

<div id="inline-gallery-container" class="inline-gallery-container"></div>
<script type="module">import lightGallery from "https://cdn.skypack.dev/lightgallery@2.4.0";import lgZoom from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/zoom";import lgThumbnail from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/thumbnail";const $lgContainer = document.getElementById("inline-gallery-container");const inlineGallery = lightGallery($lgContainer, {  container: $lgContainer,  licenseKey: "C2D2C2BD-16BC4564-A4EAE653-401CB884",  dynamic: true,  hash: false,  closable: false,  showMaximizeIcon: true,  slideDelay: 10,  plugins: [lgZoom, lgThumbnail],  dynamicEl: [{ src: '/images/adventure/queen/scummvm-queen-00001.png', thumb: '/images/adventure/queen/scummvm-queen-00001.png' },{ src: '/images/adventure/queen/scummvm-queen-00000.png', thumb: '/images/adventure/queen/scummvm-queen-00000.png' },{ src: '/images/adventure/queen/scummvm-queen-00003.png', thumb: '/images/adventure/queen/scummvm-queen-00003.png' },{ src: '/images/adventure/queen/scummvm-queen-00005.png', thumb: '/images/adventure/queen/scummvm-queen-00005.png' },{ src: '/images/adventure/queen/scummvm-queen-00006.png', thumb: '/images/adventure/queen/scummvm-queen-00006.png' },{ src: '/images/adventure/queen/scummvm-queen-00007.png', thumb: '/images/adventure/queen/scummvm-queen-00007.png' },{ src: '/images/adventure/queen/scummvm-queen-00009.png', thumb: '/images/adventure/queen/scummvm-queen-00009.png' },{ src: '/images/adventure/queen/scummvm-queen-00010.png', thumb: '/images/adventure/queen/scummvm-queen-00010.png' },{ src: '/images/adventure/queen/scummvm-queen-00013.png', thumb: '/images/adventure/queen/scummvm-queen-00013.png' },{ src: '/images/adventure/queen/scummvm-queen-00016.png', thumb: '/images/adventure/queen/scummvm-queen-00016.png' },{ src: '/images/adventure/queen/scummvm-queen-00017.png', thumb: '/images/adventure/queen/scummvm-queen-00017.png' },{ src: '/images/adventure/queen/scummvm-queen-00019.png', thumb: '/images/adventure/queen/scummvm-queen-00019.png' },{ src: '/images/adventure/queen/scummvm-queen-00020.png', thumb: '/images/adventure/queen/scummvm-queen-00020.png' },{ src: '/images/adventure/queen/scummvm-queen-00021.png', thumb: '/images/adventure/queen/scummvm-queen-00021.png' },{ src: '/images/adventure/queen/scummvm-queen-00022.png', thumb: '/images/adventure/queen/scummvm-queen-00022.png' },{ src: '/images/adventure/queen/scummvm-queen-00023.png', thumb: '/images/adventure/queen/scummvm-queen-00023.png' },{ src: '/images/adventure/queen/scummvm-queen-00025.png', thumb: '/images/adventure/queen/scummvm-queen-00025.png' },{ src: '/images/adventure/queen/scummvm-queen-00026.png', thumb: '/images/adventure/queen/scummvm-queen-00026.png' },{ src: '/images/adventure/queen/scummvm-queen-00027.png', thumb: '/images/adventure/queen/scummvm-queen-00027.png' },{ src: '/images/adventure/queen/scummvm-queen-00028.png', thumb: '/images/adventure/queen/scummvm-queen-00028.png' },{ src: '/images/adventure/queen/scummvm-queen-00030.png', thumb: '/images/adventure/queen/scummvm-queen-00030.png' },{ src: '/images/adventure/queen/scummvm-queen-00031.png', thumb: '/images/adventure/queen/scummvm-queen-00031.png' },{ src: '/images/adventure/queen/scummvm-queen-00033.png', thumb: '/images/adventure/queen/scummvm-queen-00033.png' },{ src: '/images/adventure/queen/scummvm-queen-00034.png', thumb: '/images/adventure/queen/scummvm-queen-00034.png' },{ src: '/images/adventure/queen/scummvm-queen-00035.png', thumb: '/images/adventure/queen/scummvm-queen-00035.png' },{ src: '/images/adventure/queen/scummvm-queen-00036.png', thumb: '/images/adventure/queen/scummvm-queen-00036.png' },{ src: '/images/adventure/queen/scummvm-queen-00039.png', thumb: '/images/adventure/queen/scummvm-queen-00039.png' },{ src: '/images/adventure/queen/scummvm-queen-00040.png', thumb: '/images/adventure/queen/scummvm-queen-00040.png' },{ src: '/images/adventure/queen/scummvm-queen-00041.png', thumb: '/images/adventure/queen/scummvm-queen-00041.png' },{ src: '/images/adventure/queen/scummvm-queen-00042.png', thumb: '/images/adventure/queen/scummvm-queen-00042.png' },{ src: '/images/adventure/queen/scummvm-queen-demo-00000.png', thumb: '/images/adventure/queen/scummvm-queen-demo-00000.png' },]});inlineGallery.openGallery();</script>

<p><strong>Footnotes</strong></p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p><small>Description from <a href="https://www.mobygames.com/game/352/flight-of-the-amazon-queen/">Moby Games</a></small>¬†<a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="Let&apos;s Adventure!" /><category term="adventure" /><category term="Interactive Binary Illusions" /><category term="Renegade Software" /><summary type="html"><![CDATA[This review is part of the ‚ÄúLet‚Äôs Adventure!‚Äù series. See all reviewed games sorted by rating here.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/adventure/queen/scummvm-queen-00002.png" /><media:content medium="image" url="https://www.alexbevi.com/images/adventure/queen/scummvm-queen-00002.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Space Quest IV: Roger Wilco and the Time Rippers (Sierra On-Line) - 1991</title><link href="https://www.alexbevi.com/blog/2024/06/02/space-quest-iv-roger-wilco-and-the-time-rippers/" rel="alternate" type="text/html" title="Space Quest IV: Roger Wilco and the Time Rippers (Sierra On-Line) - 1991" /><published>2024-06-02T21:01:46-04:00</published><updated>2024-06-11T06:07:45-04:00</updated><id>https://www.alexbevi.com/blog/2024/06/02/space-quest-iv-roger-wilco-and-the-time-rippers</id><content type="html" xml:base="https://www.alexbevi.com/blog/2024/06/02/space-quest-iv-roger-wilco-and-the-time-rippers/"><![CDATA[<blockquote class="prompt-info">
  <p>This review is part of the <a href="/blog/2021/07/28/adventure-games-1980-1999/">‚ÄúLet‚Äôs Adventure!‚Äù</a> series. See all reviewed games sorted by rating <a href="/blog/2021/08/08/adventure-games-1980-1999-sorted-by-score/">here</a>.</p>
</blockquote>

<p><a href="https://en.wikipedia.org/wiki/Space_Quest_IV">Space Quest IV: Roger Wilco and the Time Rippers</a> is a 1991 graphic adventure game by Sierra On-Line, and the fourth entry in the Space Quest series. The game was released originally on floppy disks on March 4, 1991, and later released on CD-ROM in December 1992 with full speech support; an Atari ST version was announced via Sierra Online‚Äôs magazine, Sierra News Magazine, but was later canceled. The game sees players assume the role of Roger Wilco, who is thrust into a new adventure across time and space where he must thwart the plans of an old foe that is seeking revenge against him.</p>

<p><img src="/images/adventure/sq4/scummvm-sq4-cd-00000.png" alt="" /></p>

<p>Roger Wilco is relaxing at his favorite pub somewhere in time and space when heavily armed soldiers enter the room. Carrying a parting message from Roger‚Äôs old nemesis, Sludge Vohaul, they plan to get rid of the janitorial hero, execution style. That is, until a man with an over-sized hair dryer helps Roger escape through a time rip into the future. Now Roger Wilco has woken up on his home planet, some time in a meta-fictional Space Quest XII. It is a grim, dystopian future: the series has gone to ruin without its hero, and Vohaul rules supreme. Roger must find a way to avoid Vohaul‚Äôs henchmen, fulfill his destiny, and learn about a few surprises that await him in his own future.<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup></p>

<p><img src="/images/adventure/sq4/scummvm-sq4-cd-00004.png" alt="" /></p>

<p>Unlike <a href="/blog/2024/02/16/space-quest-iii/">Space Quest III</a> before it, Space Quest IV has discarded the text parser in favour of a true point-and-click interface. This time around you interact with the game world using the (likely far more familiar) verb-based icons to decide how Roger interacts with the game world.</p>

<p>A couple of of these options such as <code class="language-plaintext highlighter-rouge">SMELL</code> and <code class="language-plaintext highlighter-rouge">TASTE</code> really aren‚Äôt needed, though selecting them and clicking around allows for the game to spit out some pretty funny feedback about things you really shouldn‚Äôt be doing with your surroundings.</p>

<p><img src="/images/adventure/sq4/scummvm-sq4-cd-00001.png" alt="" /></p>

<p>The Space Quest series has never tried to take itself seriously, and this entry is no exception. The writing and the art style tend to be goofy, and there are a lot of ‚Äúin jokes‚Äù for fans of this series as well as other Sierra Online games.</p>

<p>After the intro cutscene you‚Äôre dropped into the future, which the game‚Äôs menu bar tells you is <em>Space Quest XII - Vohaul‚Äôs Revenge II</em>. As you jump through time you‚Äôll know ‚Äúwhen‚Äù you are as the game you‚Äôve landed in will be displayed here.</p>

<p>Once you find your way into the sewers a Star Wars parody plays out that informs you that some time in the past someone found an old Leisure Suit Larry game and uploaded it ot the Xenon super computer. This unleashed a virus (that I think contained Sludge Vohaul‚Äôs mind or something) that results in humanity being enslaved.</p>

<p><img src="/images/adventure/sq4/scummvm-sq4-cd-00017.png" alt="" /></p>

<p>Vohaul is sending androids after you called ‚ÄúSequel Police‚Äù, who use time pods to jump through time. You eventually steal one of these, which requires you to enter a 6 digit time code to jump between games ‚Ä¶ but where do you find these codes?</p>

<p>This wasn‚Äôt immediately obvious to me, but in retrospect it sort of makes sense. When you first steal the time pod in SQXII the code onscreen is the return code for SQXII. I just got in and mashed some random codes and hit enter and the game sent me off to the next time period.</p>

<p><img src="/images/adventure/sq4/scummvm-sq4-cd-00006.png" alt="" />
<em>I wonder if these assets were reused from a Leisure Suite Larry game üßê</em></p>

<p>You‚Äôll wind up in <em>Space Quest X - Latex Babes of Estros</em>, which is apparently a parody of Infocom‚Äôs <a href="https://en.wikipedia.org/wiki/Leather_Goddesses_of_Phobos">Leather Goddesses of Phobos</a> (what are the odds anyone playing this game today would make that connection).</p>

<p>This sequence is pretty short and straightforward and ends with you getting captured by a group of Amazonian women, saving them from a giant sea slug ‚Ä¶ then the lot of you heading out to the Galaxy Galleria mall to go on a shopping spree.</p>

<p><img src="/images/adventure/sq4/scummvm-sq4-cd-00008.png" alt="" /></p>

<p>There are some throwbacks to previous games here, including a Monolith Burger location that you can get a job at putting burgers together. You‚Äôll need to do this as you won‚Äôt have enough money (buckazoids) to buy the dress and wig you need to pass as one of the Amazons (who‚Äôs debit card you happened to pick up).</p>

<p><img src="/images/adventure/sq4/scummvm-sq4-cd-00010.png" alt="" /></p>

<p>The arcade sequence is pretty simple as you just add condiments to a burger on an assembly line. If you don‚Äôt screw up, you get 1 buckazoid per burger, but if you send 3 burgers to the finish line incorrectly you‚Äôll be fired.</p>

<p>This is not hard - but it‚Äôs tedious. The assembly line gradually speeds up so it gets more challenging, but you can adjust the game speed to slow this down as needed.</p>

<p>I appreciate that the game gives you the option before you even begin to just take the money and skip the arcade sequence entirely - while still getting the money you need to progress.</p>

<p><img src="/images/adventure/sq4/scummvm-sq4-cd-00009.png" alt="" /></p>

<p>As a bit of a meta joke about the game, the puzzle design and the relative difficulty of Sierra games, one of the things you‚Äôll need to buy at the mall is a Space Quest IV hint book. This is actually required to finish the game as there are two codes you‚Äôll need that are only found in the hint book!</p>

<p>Honestly I thought this was pretty clever, and though only a couple of the hints are relevant, the other entries in the book that you reveal (with a magic pen) are typically pretty funny.</p>

<p>If you were a PC gamer in the early 90‚Äôs, you may have had one of Sierra‚Äôs hint books, so the fact that one of these existed in-game as well as <a href="https://www.sierragamers.com/wp-content/uploads/2019/12/Space_Quest_4_Hint_Book.pdf">being available as a printed hint book</a> was <em>super meta</em>. It‚Äôs also funny how the printed hint book contains a clue as to how you need to use the in-game hint book to find partial coordinates for the time pod.</p>

<p><img src="/images/adventure/sq4/scummvm-sq4-cd-00015.png" alt="" /></p>

<p>Eventually the Sequel Police will find you in SQX, and you‚Äôll steal their time pod and use the code you pieced together from the gum wrapper and the hint book to jump all the way back to Space Quest I (check out <a href="/blog/2021/08/09/space-quest-the-sarien-encounter/">my review of that game</a> if you‚Äôre curious).</p>

<p>Once again, make sure you write down the coordinates in the time pod as that‚Äôs what you‚Äôll need to return to SQX later!</p>

<p>The SQ1 sequence is real short, but the bikers you meet (who are in black and white) make fun of you for being rendered in all that fancy 256 color glory.</p>

<p><img src="/images/adventure/sq4/scummvm-sq4-cd-00018.png" alt="" /></p>

<p>You‚Äôll bounce around time periods a couple more times collecting items you‚Äôll need for the final showdown with Vohaul. Like most Sierra games you‚Äôll find yourself picking up anything that isn‚Äôt nailed down to try and solve the various in-game puzzles.</p>

<p>Unlike many Sierra games though, there really aren‚Äôt that many items to find in this game. If you forget to pick up the bunny, bottle and the slime at the very beginning of the game I‚Äôm pretty sure you‚Äôll find yourself in an unwinnable situation, but otherwise you should be able to jump between time periods if you forgot anything.</p>

<p><img src="/images/adventure/sq4/scummvm-sq4-cd-00021.png" alt="" /></p>

<p>There are plenty of ways for Roger to get himself killed, but unlike the last couple games in the series I didn‚Äôt really find there to be all that much variety in the messaging you get prior to a game over.</p>

<p>This doesn‚Äôt mean there aren‚Äôt <a href="https://www.youtube.com/watch?v=Raa1ZMOLJ3s">some great death sequences</a>, but the majority of the death dialog windows are just a variation of Roger lying on his stomach.</p>

<p><img src="/images/adventure/sq4/scummvm-sq4-cd-00003.png" alt="" /></p>

<p>To be fair, we all remember the zombie screeching at us and then Roger dying, so it‚Äôs not like these were ‚Äúbad‚Äù. My issue was more with the lack of variety compared to previous games.</p>

<p>Honestly I like spending a little extra time per screen to see what interactions result in my untimely demise, but I just didn‚Äôt really find the results all that entertaining this time around.</p>

<p><img src="/images/adventure/sq4/scummvm-sq4-cd-00023.png" alt="" /></p>

<p>The endgame sequence involves hacking into the main computer in Vohaul‚Äôs lair (which you use the in-game hint book to do), then deleting some subroutines (like the guard robots). If you happen to delete the SQIV ‚Äúprogram‚Äù, the game will actually exit.</p>

<p>I thought this was pretty clever, though if you aren‚Äôt prepared for it and haven‚Äôt saved ‚Ä¶ well I guess that‚Äôs on you ü§£. There‚Äôs also a Leisure Suit Larry 4 icon there, which is yet another in joke for Sierra fans as that game never existed (read <a href="https://allowe.com/games/larry/inside-stories/wheres-lsl4.html">Al Lowe‚Äôs true story of why the series jumped from LSL3 to LSL5</a>).</p>

<p><img src="/images/adventure/sq4/scummvm-sq4-cd-00024.png" alt="" /></p>

<p>The game end‚Äôs with you facing off against Sludge Vohaul, who has taken over your son‚Äôs body. Oh yeah, you have a son apparently because - you know - time travel and stuff.</p>

<p>This sequence is pretty simple as you just sort of move around and throw each other to the ground, and eventually Vohaul will throw a disk that you need to retrieve an put into the super computer so you can download your son‚Äôs consciousness and upload it back to his body to finish the game.</p>

<p><img src="/images/adventure/sq4/scummvm-sq4-cd-00027.png" alt="" /></p>

<p>As much as I love the Space Quest series, this entry is probably one of my least favourites. Visually it‚Äôs impressive, and the writing and voice acting is excellent - but the time travel elements are actually kind of frustrating.</p>

<p>First of all, I couldn‚Äôt read the keyboard in the time pod. I found myself using a screenshot that I blew up to like 400% to try and figure out which key corresponded to which symbol to try and enter the time codes. Since you have to backtrack a few times, you need to go through this rigamarole a few times as well and it just seemed excessive as a result.</p>

<p>Next, I didn‚Äôt really find the story to be all that interesting. I like time travel and sci-fi stories, but this felt underdeveloped and focusing a bit more on jokes for Sierra fans than plot progression.</p>

<p>Overall it‚Äôs not all that bad, but it‚Äôs also not really all that memorable.</p>

<p><a href="https://www.youtube.com/@OneShortEye">OneShortEye</a>‚Äôs recent video about <a href="https://www.youtube.com/watch?v=db51SipYewo">How Speedrunners Broke Space Quest IV (again)</a> reignited my interest in this game, which ultimately resulted in this playthrough. If you‚Äôre into speed running I‚Äôd highly recommend his videos as he covers a lot of adventure games. As an aside, my site made a cameo appearance in his <a href="https://youtu.be/dSYnfLwGDRI?si=q0mHmSb9_OtgnUiG&amp;t=377">3 Obscure Easter Eggs in Sanitarium</a>, so might as well plug my <a href="/blog/2021/12/22/sanitarium/">Sanitarium review</a> üòÖ.</p>

<h2 id="game-information">Game Information</h2>

<table>
  <tbody>
    <tr>
      <td><em>Game</em></td>
      <td>Space Quest IV: Roger Wilco and the Time Rippers</td>
    </tr>
    <tr>
      <td><em>Developer</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Sierra_Entertainment">Sierra On-Line</a></td>
    </tr>
    <tr>
      <td><em>Publisher</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Sierra_Entertainment">Sierra On-Line</a></td>
    </tr>
    <tr>
      <td><em>Release Date</em></td>
      <td>March 4, 1991</td>
    </tr>
    <tr>
      <td><em>Systems</em></td>
      <td>DOS, Windows, Macintosh, Amiga, NEC PC-9801</td>
    </tr>
    <tr>
      <td><em>Game Engine</em></td>
      <td><a href="https://wiki.scummvm.org/index.php?title=SCI">SCI</a></td>
    </tr>
  </tbody>
</table>

<h3 id="my-playthrough">My Playthrough</h3>

<table>
  <tbody>
    <tr>
      <td><a href="https://howlongtobeat.com/game/8866"><em>How Long To Beat?</em></a></td>
      <td>4.5 hours</td>
    </tr>
    <tr>
      <td><em>Version Played</em></td>
      <td>DOS via <a href="https://www.scummvm.org/">ScummVM</a></td>
    </tr>
    <tr>
      <td><em>Notes</em></td>
      <td><a href="https://adventuredoor.net/walkthroughs/space-quest-iv-roger-wilco-time-rippers-walkthrough/">Walkthrough</a>, <a href="https://www.mocagh.org/sierra/sq4-manual.pdf">Manual</a></td>
    </tr>
  </tbody>
</table>

<h3 id="score">Score</h3>

<p>See <a href="https://www.alexbevi.com/blog/2021/07/28/adventure-games-1980-1999/#scoring">here</a> for a refresher on how we‚Äôre scoring these games.</p>

<table>
  <tbody>
    <tr>
      <td><strong>Atmosphere (20)</strong></td>
      <td>15</td>
    </tr>
    <tr>
      <td><strong>Story (25)</strong></td>
      <td>9</td>
    </tr>
    <tr>
      <td><strong>Experience (15)</strong></td>
      <td>9</td>
    </tr>
    <tr>
      <td><strong>Impact (10)</strong></td>
      <td>4</td>
    </tr>
    <tr>
      <td>¬†</td>
      <td><strong>53%</strong></td>
    </tr>
  </tbody>
</table>

<h3 id="gallery">Gallery</h3>

<div id="inline-gallery-container" class="inline-gallery-container"></div>
<script type="module">import lightGallery from "https://cdn.skypack.dev/lightgallery@2.4.0";import lgZoom from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/zoom";import lgThumbnail from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/thumbnail";const $lgContainer = document.getElementById("inline-gallery-container");const inlineGallery = lightGallery($lgContainer, {  container: $lgContainer,  licenseKey: "C2D2C2BD-16BC4564-A4EAE653-401CB884",  dynamic: true,  hash: false,  closable: false,  showMaximizeIcon: true,  slideDelay: 10,  plugins: [lgZoom, lgThumbnail],  dynamicEl: [{ src: '/images/adventure/sq4/scummvm-sq4-cd-00005.png', thumb: '/images/adventure/sq4/scummvm-sq4-cd-00005.png' },{ src: '/images/adventure/sq4/scummvm-sq4-cd-00007.png', thumb: '/images/adventure/sq4/scummvm-sq4-cd-00007.png' },{ src: '/images/adventure/sq4/scummvm-sq4-cd-00011.png', thumb: '/images/adventure/sq4/scummvm-sq4-cd-00011.png' },{ src: '/images/adventure/sq4/scummvm-sq4-cd-00012.png', thumb: '/images/adventure/sq4/scummvm-sq4-cd-00012.png' },{ src: '/images/adventure/sq4/scummvm-sq4-cd-00013.png', thumb: '/images/adventure/sq4/scummvm-sq4-cd-00013.png' },{ src: '/images/adventure/sq4/scummvm-sq4-cd-00014.png', thumb: '/images/adventure/sq4/scummvm-sq4-cd-00014.png' },{ src: '/images/adventure/sq4/scummvm-sq4-cd-00016.png', thumb: '/images/adventure/sq4/scummvm-sq4-cd-00016.png' },{ src: '/images/adventure/sq4/scummvm-sq4-cd-00019.png', thumb: '/images/adventure/sq4/scummvm-sq4-cd-00019.png' },{ src: '/images/adventure/sq4/scummvm-sq4-cd-00020.png', thumb: '/images/adventure/sq4/scummvm-sq4-cd-00020.png' },{ src: '/images/adventure/sq4/scummvm-sq4-cd-00022.png', thumb: '/images/adventure/sq4/scummvm-sq4-cd-00022.png' },{ src: '/images/adventure/sq4/scummvm-sq4-cd-00025.png', thumb: '/images/adventure/sq4/scummvm-sq4-cd-00025.png' },{ src: '/images/adventure/sq4/scummvm-sq4-cd-00026.png', thumb: '/images/adventure/sq4/scummvm-sq4-cd-00026.png' },]});inlineGallery.openGallery();</script>

<p><strong>Footnotes</strong></p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p><small>Description from <a href="https://www.mobygames.com/game/143/space-quest-iv-roger-wilco-and-the-time-rippers/">Moby Games</a></small>¬†<a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="Let&apos;s Adventure!" /><category term="adventure" /><category term="Sierra On-Line" /><category term="SCI" /><summary type="html"><![CDATA[This review is part of the ‚ÄúLet‚Äôs Adventure!‚Äù series. See all reviewed games sorted by rating here.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/adventure/sq4/scummvm-sq4-cd-00002.png" /><media:content medium="image" url="https://www.alexbevi.com/images/adventure/sq4/scummvm-sq4-cd-00002.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Normality (Gremlin Interactive) - 1996</title><link href="https://www.alexbevi.com/blog/2024/05/27/normality/" rel="alternate" type="text/html" title="Normality (Gremlin Interactive) - 1996" /><published>2024-05-27T09:15:52-04:00</published><updated>2024-05-29T07:02:18-04:00</updated><id>https://www.alexbevi.com/blog/2024/05/27/normality</id><content type="html" xml:base="https://www.alexbevi.com/blog/2024/05/27/normality/"><![CDATA[<blockquote class="prompt-info">
  <p>This review is part of the <a href="/blog/2021/07/28/adventure-games-1980-1999/">‚ÄúLet‚Äôs Adventure!‚Äù</a> series. See all reviewed games sorted by rating <a href="/blog/2021/08/08/adventure-games-1980-1999-sorted-by-score/">here</a>.</p>
</blockquote>

<p><a href="https://en.wikipedia.org/wiki/Normality_(video_game)">Normality</a> is a 3D graphic adventure, released in June 1996 by Gremlin Interactive. All cut-scenes in the game are pre-rendered. The game‚Äôs engine was later used in the game <a href="https://www.mobygames.com/game/1418/realms-of-the-haunting/">Realms of the Haunting</a>.</p>

<p><img src="/images/adventure/normality/norm_030.png" alt="" /></p>

<p>Kent Knutson is a teenager who lives in the city of Neutropolis. The city is controlled by a totalitarian regime, which prohibits people to express any emotions that would deviate from the prescribed norm - such as joy and happiness. Kent is arrested by the Norms, the police force of Neutropolis, and put in prison for whistling a merry tune. In prison, he received an anonymous note that tells him that there is a resistance group somewhere in the city, which seeks to overthrow the dictator of Neutropolis. The question is - how can Kent find that resistance group?.<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup></p>

<p><img src="/images/adventure/normality/norm_001.png" alt="" /></p>

<p>What sets this game apart from other adventure games of the era is that you‚Äôre navigating a 3D world with a first person perspective. This is what you‚Äôd expect from Doom or Duke Nukem 3D, but not a point and click title.</p>

<p><img src="/images/adventure/normality/norm_000.gif" alt="" /></p>

<p>For the first time in this series I‚Äôm in including an animated GIF just to show this off. As you navigate the game world you move around with the arrow keys and can pan up and down to see above or below you.</p>

<p>The game design incorporates these mechanics pretty frequently as you‚Äôll occasionally find yourself unable to progress because the item you need is behind something, or it‚Äôs above you in a narrow space and you need to look up and reposition yourself to interact with something.</p>

<p><img src="/images/adventure/normality/norm_028.png" alt="" />
<em>You need to navigate to the back of the room and look down while moving around the crate to see this mallet</em></p>

<p>Though the game world is presented in 3D, as you move around you also have a cursor you pan over the screen that will highlight things you can interact with. Clicking on an action area will bring up a ‚Äúvoodoo doll‚Äù that is basically a visual representation fo the verbs you can use to interact with the thing you‚Äôve highlighted.</p>

<p><img src="/images/adventure/normality/norm_005.png" alt="" /></p>

<p>This is not a unique mechanic and appears in a lot of adventure games at this time (such as <a href="/blog/2023/03/10/full-throttle/">Full Throttle</a>). Once you bring up the voodoo doll (that‚Äôs what they call it in the <a href="https://www.starehry.eu/download/adventure/docs/Normality-Manual.pdf">manual</a>), moving the mouse cursor over the various verbs will animate them slightly so you know what you‚Äôre about to select.</p>

<p>The options are limited to the usual suspects of <code class="language-plaintext highlighter-rouge">LOOK</code>, <code class="language-plaintext highlighter-rouge">USE</code>, <code class="language-plaintext highlighter-rouge">OPEN</code>, <code class="language-plaintext highlighter-rouge">TALK</code> and <code class="language-plaintext highlighter-rouge">GET</code>.</p>

<p><img src="/images/adventure/normality/norm_014.png" alt="" /></p>

<p>The story progresses through various interactions with NPCs, which involves navigating basic dialog trees. There‚Äôs really nothing innovative here, though the US release of the game has Kent voiced by <a href="https://en.wikipedia.org/wiki/Corey_Feldman">Corey Feldman</a> which adds a nice nostalgic flair to the experience.</p>

<p><img src="/images/adventure/normality/norm_013.png" alt="" /></p>

<p>Aside from character interactions, the story also progresses through various pre-rendered cutscenes. These all have a very ‚Äú90s‚Äù feel to them and though dated by today‚Äôs standards definitely don‚Äôt feel out of place in this game world.</p>

<p>These animated sequences occur pretty often, so the pace of the game is pretty consistently maintained. You‚Äôll find yourself moving around each game scene, hovering the cursor over everything to see what you‚Äôre able to interact with, trying all available verbs to see what works then frequently being rewarded with an animation if you picked correctly.</p>

<p><img src="/images/adventure/normality/norm_004.png" alt="" /></p>

<p>A large portion of this game involves fetch quests and item combination puzzles. Maybe this is just an artifact of when this game came out, but I had a lot of trouble making progress without resorting to a walkthrough as a number of puzzles were a bit obtuse.</p>

<p>This could just be due to me being too impatient, but I found myself just randomly clicking each item on every other item more than once to try and make some progress when I‚Äôd get stuck.</p>

<p>I‚Äôm assuming the developers may have expected players to get stuck as the manual has hints for most of the game‚Äôs main areas!</p>

<p><img src="/images/adventure/normality/norm_007.png" alt="" /></p>

<p>You have access to a map (press <code class="language-plaintext highlighter-rouge">M</code> to access it) which opens up various game locations as you progress. If you don‚Äôt know about this then once you get out of the apartment you‚Äôre imprisoned in initially you won‚Äôt be able to progress with the game (yes, I got stuck like that at first).</p>

<p>Typically you‚Äôre just jumping between the various locations picking up items you may need to solve puzzles.</p>

<p><img src="/images/adventure/normality/norm_010.png" alt="" /></p>

<p>There aren‚Äôt all that many characters to interact with, but they will typically help move you in the right direction by giving plot detail or objectives.</p>

<p>As you progress, the game‚Äôs goofy soundtrack is playing in the background which enhances the mood appropriately. This whole game just sort of feels like you‚Äôre playing through an episode of a Saturday morning cartoon of that era - which isn‚Äôt a bad thing.</p>

<p><img src="/images/adventure/normality/norm_031.png" alt="" /></p>

<p>After solving a bunch of weird puzzles you‚Äôll eventually find yourself underneath the stadium, which is a huge maze. This section can be a bit frustrating as you‚Äôll first need to figure out how to get batteries for the night vision goggles - which involves stumbling around the maze in the dark for a while.</p>

<p>This final sequence just didn‚Äôt make a lot of sense, but it is weird and confusing in a way that is fitting to this title. You‚Äôll end up finding Saul‚Äôs brain, which you need to bring up on stage in the stadium so that it can somehow change Paul‚Äôs thinking and free Neutropolis from his evil reign ‚Ä¶ or something like that.</p>

<p><img src="/images/adventure/normality/norm_033.png" alt="" /></p>

<p>I honestly had a lot of fun with this game, though it can be frustrating at times. I really appreciated a different approach to this genre through a 3D game world, and the story was definitely swinging for the fences in trying to present a unique experience.</p>

<p>There‚Äôs a great writeup by <a href="https://www.filfre.net/2023/01/normality/">The Digital Antiquarian</a> that goes into a lot more detail about this game that I‚Äôd highly recommend if you find this interesting.</p>

<p>Since I haven‚Äôt covered another title like this yet, and it presented a new take on the genre I think this one is worth checking out.</p>

<h2 id="game-information">Game Information</h2>

<table>
  <tbody>
    <tr>
      <td><em>Game</em></td>
      <td>Normality</td>
    </tr>
    <tr>
      <td><em>Developer</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Gremlin_Interactive">Gremlin Interactive</a></td>
    </tr>
    <tr>
      <td><em>Publisher</em></td>
      <td><a href="https://en.wikipedia.org/wiki/Interplay_Entertainment">Interplay</a></td>
    </tr>
    <tr>
      <td><em>Release Date</em></td>
      <td>June 1996</td>
    </tr>
    <tr>
      <td><em>Systems</em></td>
      <td>DOS</td>
    </tr>
    <tr>
      <td><em>Game Engine</em></td>
      <td>¬†</td>
    </tr>
  </tbody>
</table>

<h3 id="my-playthrough">My Playthrough</h3>

<table>
  <tbody>
    <tr>
      <td><a href="https://howlongtobeat.com/game/6672"><em>How Long To Beat?</em></a></td>
      <td>6 hours</td>
    </tr>
    <tr>
      <td><em>Version Played</em></td>
      <td>DOS via <a href="https://dosbox-x.com/">DOSBox-X</a></td>
    </tr>
    <tr>
      <td><em>Notes</em></td>
      <td><a href="http://www.thecomputershow.com/computershow/walkthroughs/normalitywalk.htm#intro">Walkthrough 1</a>, <a href="https://gamefaqs.gamespot.com/pc/198211-normality/faqs/1680">Walkthrough 2</a>, <a href="https://www.starehry.eu/download/adventure/docs/Normality-Manual.pdf">Manual</a></td>
    </tr>
  </tbody>
</table>

<h3 id="score">Score</h3>

<p>See <a href="https://www.alexbevi.com/blog/2021/07/28/adventure-games-1980-1999/#scoring">here</a> for a refresher on how we‚Äôre scoring these games.</p>

<table>
  <tbody>
    <tr>
      <td><strong>Atmosphere (20)</strong></td>
      <td>15</td>
    </tr>
    <tr>
      <td><strong>Story (25)</strong></td>
      <td>14</td>
    </tr>
    <tr>
      <td><strong>Experience (15)</strong></td>
      <td>11</td>
    </tr>
    <tr>
      <td><strong>Impact (10)</strong></td>
      <td>5</td>
    </tr>
    <tr>
      <td>¬†</td>
      <td><strong>64%</strong></td>
    </tr>
  </tbody>
</table>

<h3 id="gallery">Gallery</h3>

<div id="inline-gallery-container" class="inline-gallery-container"></div>
<script type="module">import lightGallery from "https://cdn.skypack.dev/lightgallery@2.4.0";import lgZoom from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/zoom";import lgThumbnail from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/thumbnail";const $lgContainer = document.getElementById("inline-gallery-container");const inlineGallery = lightGallery($lgContainer, {  container: $lgContainer,  licenseKey: "C2D2C2BD-16BC4564-A4EAE653-401CB884",  dynamic: true,  hash: false,  closable: false,  showMaximizeIcon: true,  slideDelay: 10,  plugins: [lgZoom, lgThumbnail],  dynamicEl: [{ src: '/images/adventure/normality/norm_000.raw1.png', thumb: '/images/adventure/normality/norm_000.raw1.png' },{ src: '/images/adventure/normality/norm_001.raw1.png', thumb: '/images/adventure/normality/norm_001.raw1.png' },{ src: '/images/adventure/normality/norm_002.png', thumb: '/images/adventure/normality/norm_002.png' },{ src: '/images/adventure/normality/norm_003.png', thumb: '/images/adventure/normality/norm_003.png' },{ src: '/images/adventure/normality/norm_006.png', thumb: '/images/adventure/normality/norm_006.png' },{ src: '/images/adventure/normality/norm_008.png', thumb: '/images/adventure/normality/norm_008.png' },{ src: '/images/adventure/normality/norm_009.png', thumb: '/images/adventure/normality/norm_009.png' },{ src: '/images/adventure/normality/norm_011.png', thumb: '/images/adventure/normality/norm_011.png' },{ src: '/images/adventure/normality/norm_012.png', thumb: '/images/adventure/normality/norm_012.png' },{ src: '/images/adventure/normality/norm_015.png', thumb: '/images/adventure/normality/norm_015.png' },{ src: '/images/adventure/normality/norm_016.png', thumb: '/images/adventure/normality/norm_016.png' },{ src: '/images/adventure/normality/norm_017.png', thumb: '/images/adventure/normality/norm_017.png' },{ src: '/images/adventure/normality/norm_018.png', thumb: '/images/adventure/normality/norm_018.png' },{ src: '/images/adventure/normality/norm_019.png', thumb: '/images/adventure/normality/norm_019.png' },{ src: '/images/adventure/normality/norm_020.png', thumb: '/images/adventure/normality/norm_020.png' },{ src: '/images/adventure/normality/norm_021.png', thumb: '/images/adventure/normality/norm_021.png' },{ src: '/images/adventure/normality/norm_022.png', thumb: '/images/adventure/normality/norm_022.png' },{ src: '/images/adventure/normality/norm_023.png', thumb: '/images/adventure/normality/norm_023.png' },{ src: '/images/adventure/normality/norm_024.png', thumb: '/images/adventure/normality/norm_024.png' },{ src: '/images/adventure/normality/norm_025.png', thumb: '/images/adventure/normality/norm_025.png' },{ src: '/images/adventure/normality/norm_026.png', thumb: '/images/adventure/normality/norm_026.png' },{ src: '/images/adventure/normality/norm_027.png', thumb: '/images/adventure/normality/norm_027.png' },{ src: '/images/adventure/normality/norm_029.png', thumb: '/images/adventure/normality/norm_029.png' },{ src: '/images/adventure/normality/norm_032.png', thumb: '/images/adventure/normality/norm_032.png' },]});inlineGallery.openGallery();</script>

<p><strong>Footnotes</strong></p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p><small>Description from <a href="https://www.mobygames.com/game/1999/normality/">Moby Games</a></small>¬†<a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="Let&apos;s Adventure!" /><category term="adventure" /><category term="Gremlin Interactive" /><category term="Interplay" /><summary type="html"><![CDATA[This review is part of the ‚ÄúLet‚Äôs Adventure!‚Äù series. See all reviewed games sorted by rating here.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/adventure/normality/norm_000.png" /><media:content medium="image" url="https://www.alexbevi.com/images/adventure/normality/norm_000.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Peeling the MongoDB Drivers Onion</title><link href="https://www.alexbevi.com/blog/2024/05/17/peeling-the-mongodb-drivers-onion/" rel="alternate" type="text/html" title="Peeling the MongoDB Drivers Onion" /><published>2024-05-17T12:45:06-04:00</published><updated>2024-05-21T13:51:32-04:00</updated><id>https://www.alexbevi.com/blog/2024/05/17/peeling-the-mongodb-drivers-onion</id><content type="html" xml:base="https://www.alexbevi.com/blog/2024/05/17/peeling-the-mongodb-drivers-onion/"><![CDATA[<p>The modern MongoDB driver consists of a number of components, each of which are thoroughly documented in the <a href="https://github.com/mongodb/specifications">Specifications</a> repository. Though this information is readily available and extremely helpful, what it lacks is a high level overview to tie the specs together into a cohesive picture of what a MongoDB driver is.</p>

<p>Architecturally an implicit hierarchy exists within the drivers, so expressing drivers in terms of an <a href="https://en.wikipedia.org/wiki/Onion_model">onion model</a> feels appropriate.</p>

<h2 id="layers-of-the-onion">Layers of the Onion</h2>

<p><img src="/images/drivers-onion.png" alt="" /></p>

<p>The <em>‚Äúdrivers onion‚Äù</em> is meant to represent how various concepts, components and APIs can be layered atop each other to build a MongoDB driver from the ground up, or to help understand how existing drivers have been structured. Hopefully this representation of MongoDB‚Äôs drivers helps provide some clarity, as the complexity of these libraries - like the onion above - could otherwise bring you to tears.</p>

<h3 id="serialization">Serialization</h3>

<p>At their lowest level all MongoDB drivers will need to know how to work with <a href="https://bsonspec.org/">BSON</a>. BSON (short for ‚ÄúBinary JSON‚Äù) is a bin¬≠ary-en¬≠coded serialization of <a href="https://www.json.org/json-en.html">JSON</a>-like documents, and like JSON, it sup¬≠ports the nesting of arrays and documents. BSON also contains extensions that al¬≠low representation of data types that are not part of the <a href="https://datatracker.ietf.org/doc/html/rfc7159">JSON spec</a>.</p>

<blockquote class="prompt-tip">
  <p><strong>Specifications:</strong> <a href="https://bsonspec.org/spec.html">BSON</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/objectid.rst">ObjectId</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.md">Decimal128</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/uuid.rst">UUID</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/dbref.md">DBRef</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/extended-json.rst">Extended JSON</a></p>
</blockquote>

<h3 id="communication">Communication</h3>

<p>Once BSON documents can be created and manipulated, the foundation for interacting with a MongoDB host process has been laid. Drivers communicate by sending <a href="https://www.mongodb.com/docs/manual/reference/command/">database commands</a> as serialized BSON documents using MongoDB‚Äôs <a href="https://www.mongodb.com/docs/manual/reference/mongodb-wire-protocol/">wire protocol</a>.</p>

<p>From the provided connection string and options a socket connection is established to a host, which an initial handshake verifies is in fact a valid MongoDB connection by sending a simple <a href="https://www.mongodb.com/docs/manual/reference/command/hello/"><code class="language-plaintext highlighter-rouge">hello</code></a>. Based on the response to this first command a driver can continue to establish and authenticate connections.</p>

<blockquote class="prompt-tip">
  <p><strong>Specifications:</strong> <a href="https://github.com/mongodb/specifications/blob/master/source/message/OP_MSG.md"><code class="language-plaintext highlighter-rouge">OP_MSG</code></a>, <a href="https://github.com/mongodb/specifications/blob/master/source/run-command/run-command.rst">Command Execution</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/connection-string/connection-string-spec.md">Connection String</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/uri-options/uri-options.md">URI Options</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/ocsp-support/ocsp-support.rst">OCSP</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/mongodb-handshake/handshake.rst">Initial Handshake</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/compression/OP_COMPRESSED.md">Wire Compression</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/socks5-support/socks5.rst">SOCKS5</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/initial-dns-seedlist-discovery/initial-dns-seedlist-discovery.md">Initial DNS Seedlist Discovery</a></p>
</blockquote>

<h3 id="connectivity">Connectivity</h3>

<p>Now that a valid host has been found, the cluster‚Äôs topology can be discovered and monitoring connections can be established. Connection pools can then be created and populated with connections. The monitoring connections will subsequently be used for ensuring operations are routed to available hosts, or hosts that meet certain criteria (such as a configured <a href="https://www.mongodb.com/docs/upcoming/core/read-preference/">read preference</a> or acceptable latency window).</p>

<blockquote class="prompt-tip">
  <p><strong>Specifications:</strong> <a href="https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst">SDAM</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/connection-monitoring-and-pooling/connection-monitoring-and-pooling.md">CMAP</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/load-balancers/load-balancers.md">Load Balancer Support</a></p>
</blockquote>

<h3 id="authentication">Authentication</h3>

<p>Establishing and monitoring connections to MongoDB ensures they‚Äôre available, but MongoDB server processes typically will require the connection to be <a href="https://www.mongodb.com/docs/manual/core/authentication/">authenticated</a> before commands will be accepted. MongoDB offers many authentication mechanisms such as <a href="https://www.mongodb.com/docs/manual/core/security-scram">SCRAM</a>, <a href="https://www.mongodb.com/docs/manual/core/security-x.509/">x.509</a>, <a href="https://www.mongodb.com/docs/manual/core/kerberos/">Kerberos</a>, <a href="https://www.mongodb.com/docs/manual/core/security-ldap/">LDAP</a>, <a href="https://www.mongodb.com/docs/manual/core/security-oidc/">OpenID Connect</a> and <a href="https://www.mongodb.com/docs/atlas/security/passwordless-authentication/">AWS IAM</a>, which MongoDB drivers support using the <em><a href="https://www.ietf.org/rfc/rfc4422.txt">Simple Authentication and Security Layer</a></em> (SASL) framework.</p>

<blockquote class="prompt-tip">
  <p><strong>Specifications:</strong> <a href="https://github.com/mongodb/specifications/blob/master/source/auth/auth.md">Authentication</a></p>
</blockquote>

<h3 id="availability">Availability</h3>

<p>All client operations will be serialized as BSON and sent to MongoDB over a connection that will first be checked out of a connection pool. Various monitoring processes exist to ensure a driver‚Äôs internal state machine contains an accurate view of the cluster‚Äôs topology so that read and write requests can always be appropriately routed according to MongoDB‚Äôs <a href="https://www.mongodb.com/docs/manual/core/read-preference-mechanics/">server selection algorithm</a>.</p>

<blockquote class="prompt-tip">
  <p><strong>Specifications:</strong> <a href="https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-monitoring.md">Server Monitoring</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/polling-srv-records-for-mongos-discovery/polling-srv-records-for-mongos-discovery.rst"><code class="language-plaintext highlighter-rouge">SRV</code> Polling for mongos Discovery</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/server-selection/server-selection.md">Server Selection</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/max-staleness/max-staleness.md">Max Staleness</a></p>
</blockquote>

<h3 id="resilience">Resilience</h3>

<p>At their core, database drivers are client libraries meant to facilitate interactions between an application and the database. MongoDB‚Äôs drivers are no different in that regard, as they abstract away the underlying serialization, communication, connectivity, and availability functions required to programmatically interact with your data.</p>

<p>To further enhance the developer experience while working with MongoDB, various resilience features can be added based on <a href="https://www.mongodb.com/docs/manual/reference/server-sessions/">logical sessions</a> such as <a href="https://www.mongodb.com/docs/manual/core/retryable-writes">retryable writes</a>, <a href="https://www.mongodb.com/docs/manual/core/read-isolation-consistency-recency/#std-label-causal-consistency">causal consistency</a>, and <a href="https://www.mongodb.com/docs/manual/core/transactions/">transactions</a>.</p>

<blockquote class="prompt-tip">
  <p><strong>Specifications:</strong> Retryability (<a href="https://github.com/mongodb/specifications/blob/master/source/retryable-reads/retryable-reads.md">Reads</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/retryable-writes/retryable-writes.md">Writes</a>), <a href="https://github.com/mongodb/specifications/blob/master/source/client-side-operations-timeout/client-side-operations-timeout.md">CSOT</a>, Consistency (<a href="https://github.com/mongodb/specifications/blob/master/source/sessions/driver-sessions.md">Sessions</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/causal-consistency/causal-consistency.md">Causal Consistency</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/sessions/snapshot-sessions.md">Snapshot Reads</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/transactions/transactions.md">Transactions</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/transactions-convenient-api/transactions-convenient-api.rst">Convenient Transactions API</a>)</p>
</blockquote>

<h3 id="programmability">Programmability</h3>

<p>Now that we can serialize commands and send them over the wire through an authenticated connection we can begin actually manipulating data. Since all database interactions are in the form of commands, if we wanted to remove a single document we might issue a <a href="https://www.mongodb.com/docs/manual/reference/command/delete"><code class="language-plaintext highlighter-rouge">delete</code> command</a> such as the following:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="nx">db</span><span class="p">.</span><span class="nf">runCommand</span><span class="p">(</span>
  <span class="p">{</span>
     <span class="na">delete</span><span class="p">:</span> <span class="dl">"</span><span class="s2">orders</span><span class="dl">"</span><span class="p">,</span>
     <span class="na">deletes</span><span class="p">:</span> <span class="p">[</span> <span class="p">{</span> <span class="na">q</span><span class="p">:</span> <span class="p">{</span> <span class="na">status</span><span class="p">:</span> <span class="dl">"</span><span class="s2">D</span><span class="dl">"</span> <span class="p">},</span> <span class="na">limit</span><span class="p">:</span> <span class="mi">0</span> <span class="p">}</span> <span class="p">]</span>
  <span class="p">}</span>
<span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Though not exceedingly complex, a better developer experience can be achieved through more single-purpose APIs. This would allow the above example to be expressed as:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">orders</span><span class="p">.</span><span class="nf">deleteMany</span><span class="p">({</span> <span class="na">status</span><span class="p">:</span> <span class="dl">"</span><span class="s2">D</span><span class="dl">"</span> <span class="p">})</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>To provide a cleaner and clearer developer experience, many specifications exist to describe how these APIs should be consistently presented across driver implementations, while still providing the flexibility to make APIs more idiomatic for each language.</p>

<p>Advanced security features such as <a href="https://www.mongodb.com/docs/manual/core/csfle/">client-side field level encryption</a> are also defined at this layer.</p>

<blockquote class="prompt-tip">
  <p><strong>Specifications:</strong> Resource Management (<a href="https://github.com/mongodb/specifications/blob/master/source/enumerate-databases.rst">Databases</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/enumerate-collections.rst">Collections</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/index-management/index-management.md">Indexes</a>), Data Management (<a href="https://github.com/mongodb/specifications/blob/master/source/crud/crud.md">CRUD</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/collation/collation.md">Collation</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/server_write_commands.rst">Write Commands</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/driver-bulk-update.rst">Bulk API</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/crud/bulk-write.md">Bulk Write</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.rst">R/W Concern</a>), Cursors (<a href="https://github.com/mongodb/specifications/blob/master/source/change-streams/change-streams.md">Change Streams</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/find_getmore_killcursors_commands.rst"><code class="language-plaintext highlighter-rouge">find</code>/<code class="language-plaintext highlighter-rouge">getMore</code>/<code class="language-plaintext highlighter-rouge">killCursors</code></a>), <a href="https://github.com/mongodb/specifications/blob/master/source/gridfs/gridfs-spec.md">GridFS</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/versioned-api/versioned-api.rst">Stable API</a>, Security (<a href="https://github.com/mongodb/specifications/blob/master/source/client-side-encryption/client-side-encryption.md">Client Side Encryption</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/client-side-encryption/subtype6.md">BSON Binary Subtype 6</a>)</p>
</blockquote>

<h3 id="observability">Observability</h3>

<p>With database commands being serialized and sent to MongoDB servers and responses being received and deserialized, our driver can be considered fully functional for most read and write operations. As MongoDB drivers abstract away most of the complexity involved with creating and maintaining the connections these commands will be sent over, providing mechanisms for introspection into a driver‚Äôs functionality can provide developers with added confidence that things are working as expected.</p>

<p>The inner workings of connection pools, connection lifecycle, server monitoring, topology changes, command execution and other driver components are exposed by means of events developers can register listeners to capture. This can be an invaluable troubleshooting tool and can help facilitate monitoring the health of an application.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre><span class="kd">const</span> <span class="p">{</span> <span class="nx">MongoClient</span><span class="p">,</span> <span class="na">BSON</span><span class="p">:</span> <span class="p">{</span> <span class="nx">EJSON</span> <span class="p">}</span> <span class="p">}</span> <span class="o">=</span> <span class="nf">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">mongodb</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">function</span> <span class="nf">debugPrint</span><span class="p">(</span><span class="nx">label</span><span class="p">,</span> <span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
 <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="s2">`</span><span class="p">${</span><span class="nx">label</span><span class="p">}</span><span class="s2">: </span><span class="p">${</span><span class="nx">EJSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">event</span><span class="p">)}</span><span class="s2">`</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">async</span> <span class="kd">function</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
 <span class="kd">const</span> <span class="nx">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MongoClient</span><span class="p">(</span><span class="dl">"</span><span class="s2">mongodb://localhost:27017</span><span class="dl">"</span><span class="p">,</span> <span class="p">{</span> <span class="na">monitorCommands</span><span class="p">:</span> <span class="kc">true</span> <span class="p">});</span>
 <span class="nx">client</span><span class="p">.</span><span class="nf">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">commandStarted</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nf">debugPrint</span><span class="p">(</span><span class="dl">'</span><span class="s1">commandStarted</span><span class="dl">'</span><span class="p">,</span> <span class="nx">event</span><span class="p">));</span>
 <span class="nx">client</span><span class="p">.</span><span class="nf">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">connectionCheckedOut</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nf">debugPrint</span><span class="p">(</span><span class="dl">'</span><span class="s1">connectionCheckedOut</span><span class="dl">'</span><span class="p">,</span> <span class="nx">event</span><span class="p">));</span>
 <span class="k">await</span> <span class="nx">client</span><span class="p">.</span><span class="nf">connect</span><span class="p">();</span>
 <span class="kd">const</span> <span class="nx">coll</span> <span class="o">=</span> <span class="nx">client</span><span class="p">.</span><span class="nf">db</span><span class="p">(</span><span class="dl">"</span><span class="s2">test</span><span class="dl">"</span><span class="p">).</span><span class="nf">collection</span><span class="p">(</span><span class="dl">"</span><span class="s2">foo</span><span class="dl">"</span><span class="p">);</span>
 <span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">coll</span><span class="p">.</span><span class="nf">findOne</span><span class="p">();</span>
 <span class="nx">client</span><span class="p">.</span><span class="nf">close</span><span class="p">();</span>
<span class="p">}</span>
<span class="nf">main</span><span class="p">();</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Given the example above (using the <a href="https://www.mongodb.com/docs/drivers/node/current/">Node.js driver</a>) the specified connection events and command events would be logged as they‚Äôre emitted by the driver:</p>

<p><code>connectionCheckedOut: {"time":{"$date":"2024-05-17T15:18:18.589Z"},"address":"localhost:27018","name":"connectionCheckedOut","connectionId":1}</code><br />
<code>commandStarted: {"name":"commandStarted","address":"127.0.0.1:27018","connectionId":1,"serviceId":null,"requestId":5,"databaseName":"test","commandName":"find","command":{"find":"foo","filter":{},"limit":1,"singleBatch":true,"batchSize":1,"lsid":{"id":{"$binary":{"base64":"4B1kOPCGRUe/641MKhGT4Q==","subType":"04"}}},"$clusterTime":{"clusterTime":{"$timestamp":{"t":1715959097,"i":1}},"signature":{"hash":{"$binary":"base64":"AAAAAAAAAAAAAAAAAAAAAAAAAAA=","subType":"00"}},"keyId":0}},"$db":"test"},"serverConnectionId":140}</code></p>

<p>The preferred method of observing internal behavior would be through <a href="https://github.com/mongodb/specifications/blob/master/source/logging/logging.md">standardized logging</a> once it is available in all drivers (<a href="https://jira.mongodb.org/browse/DRIVERS-1204">DRIVERS-1204</a>), however until that time only event logging is consistently available. In the future additional observability tooling such as <a href="https://opentelemetry.io/">Open Telemetry</a> support may also be introduced.</p>

<blockquote class="prompt-tip">
  <p><strong>Specifications:</strong> <a href="https://github.com/mongodb/specifications/blob/master/source/command-logging-and-monitoring/command-logging-and-monitoring.rst">Command Logging and Monitoring</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring-logging-and-monitoring.md">SDAM Logging and Monitoring</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/logging/logging.md">Standardized Logging</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/connection-monitoring-and-pooling/connection-monitoring-and-pooling.md#connection-pool-logging">Connection Pool Logging</a></p>
</blockquote>

<h3 id="testability">Testability</h3>

<p>Ensuring existing as well as net-new drivers can be effectively tested for correctness and performance, most specifications define a standard set of tests using <a href="https://web.archive.org/web/20230930061614/https://www.mongodb.com/blog/post/cat-herds-crook-yaml-test-specs-improve-driver-conformance">YAML tests to improve driver conformance</a>. This allows specification authors and maintainers to describe functionality once with the confidence that the tests can be executed alike by language-specific test runners across all drivers.</p>

<p>Though the unified test format greatly simplifies language-specific implementations, not all tests can be represented in this fashion. In those cases the specifications may describe tests to be manually implemented as prose. By limiting the number of prose tests that each driver must implement, engineers can deliver functionality with greater confidence while also minimizing the burden of upstream verification.</p>

<blockquote class="prompt-tip">
  <p><strong>Specifications:</strong> <a href="https://github.com/mongodb/specifications/blob/master/source/unified-test-format/unified-test-format.md">Unified Test Format</a>, <a href="https://github.com/mongodb/specifications/tree/master/source/atlas-data-lake-testing/tests">Atlas Data Federation Testing</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/benchmarking/benchmarking.md">Performance Benchmarking</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/bson-corpus/bson-corpus.md">BSON Corpus</a>, <a href="https://github.com/mongodb/specifications/tree/master/source/connections-survive-step-down/tests">Replication Event Resilience</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/faas-automated-testing/faas-automated-testing.md">FAAS Automated Testing</a>, <a href="https://github.com/mongodb/specifications/blob/master/source/serverless-testing/README.rst">Atlas Serverless Testing</a></p>
</blockquote>

<h2 id="conclusion">Conclusion</h2>

<p>Most (if not all) the information required to build a new driver or maintain existing drivers technically exists within the specifications, however without a mental mode of their composition and architecture it can be extremely challenging to know where to look.</p>

<p>Peeling the <em>‚Äúdrivers onion‚Äù</em> should hopefully make reasoning about them a little easier, especially with the understanding that everything can be tested to validate individual implementations are ‚Äúup to spec‚Äù.</p>]]></content><author><name></name></author><category term="MongoDB" /><category term="mongodb" /><category term="drivers" /><summary type="html"><![CDATA[The modern MongoDB driver consists of a number of components, each of which are thoroughly documented in the Specifications repository. Though this information is readily available and extremely helpful, what it lacks is a high level overview to tie the specs together into a cohesive picture of what a MongoDB driver is.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/mongodb-logo.png" /><media:content medium="image" url="https://www.alexbevi.com/images/mongodb-logo.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Hugo II, Whodunit? (Gray Design Associates) - 1991</title><link href="https://www.alexbevi.com/blog/2024/05/10/hugo-ii-whodunit/" rel="alternate" type="text/html" title="Hugo II, Whodunit? (Gray Design Associates) - 1991" /><published>2024-05-10T06:51:54-04:00</published><updated>2024-05-13T06:35:50-04:00</updated><id>https://www.alexbevi.com/blog/2024/05/10/hugo-ii-whodunit</id><content type="html" xml:base="https://www.alexbevi.com/blog/2024/05/10/hugo-ii-whodunit/"><![CDATA[<blockquote class="prompt-info">
  <p>This review is part of the <a href="/blog/2021/07/28/adventure-games-1980-1999/">‚ÄúLet‚Äôs Adventure!‚Äù</a> series. See all reviewed games sorted by rating <a href="/blog/2021/08/08/adventure-games-1980-1999-sorted-by-score/">here</a>.</p>
</blockquote>

<p><a href="https://en.wikipedia.org/wiki/Hugo_II,_Whodunit%3F">Hugo II, Whodunit?</a> (named Hugo‚Äôs Mystery Adventure in the Hugo Trilogy re-release) is a parser-based adventure game designed by independent software developer David P. Gray and published as shareware by Gray Design Associates in 1991. It is the sequel to 1990‚Äôs <a href="/blog/2022/12/21/hugos-house-of-horrors/">Hugo‚Äôs House of Horrors</a>, and it was followed by Hugo III, Jungle of Doom! in 1992.</p>

<p><img src="/images/adventure/hugo2/scummvm-hugo2-00014.png" alt="" /></p>

<p>Hugo and his wife, Penelope, arrive to stay at the mansion that belongs to Hugo‚Äôs Great Uncle Horace. Penelope falls asleep in the bedroom, while Hugo accidentally finds a bookcase passage and is locked in a secret room. Penelope wakes up, only to witness Uncle Horace‚Äôs murder through the keyhole. The player controls Penelope (and later, briefly, Hugo) and must solve the murder.<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup></p>

<p><img src="/images/adventure/hugo2/scummvm-hugo2-00001.png" alt="" /></p>

<p>This title improves slightly on the original as moving the mouse around the screen will occasionally highlight character or object names. This is a cue as to something you should type into the text parser to interact with (ex: <code class="language-plaintext highlighter-rouge">LOOK BOOKCASE</code>).</p>

<p>Once you lie down and Hugo disappears, you‚Äôll gain control of Penelope - who is the main character on this adventure.</p>

<p><img src="/images/adventure/hugo2/scummvm-hugo2-00007.png" alt="" /></p>

<p>As you work your way through the Uncle Horace‚Äôs property you‚Äôll meet a couple NPCs that you can interact with. These interactions are extremely limited (they‚Äôre not dialogue trees) and typically don‚Äôt advance the plot - they just serve as puzzles as you typically need them to move so you can progress.</p>

<p>Since I‚Äôm playing this game in ScummVM, the original text boxes have been replaced by UI modals - which IMHO look awful. Apparently a ‚Äúnice to have‚Äù on the <a href="https://wiki.scummvm.org/index.php?title=Hugo/TODO">Hugo/TODO</a> page is implementing the original dialog boxes ‚Ä¶ so maybe one day.</p>

<p><img src="/images/adventure/hugo2/scummvm-hugo2-00010.png" alt="" /></p>

<p>In a couple areas you need to navigate the screen using almost pixel-perfect navigation to either keep yourself from dying, or getting into an unwinnable situation.</p>

<p>The venus fly trap screen requires you to walk through a ‚Äúmaze‚Äù in order to get a magnifying glass. The hit boxes for these plants are massive though, so you‚Äôll die <em>many times</em> trying to get through this.</p>

<p><img src="/images/adventure/hugo2/scummvm-hugo2-00011.png" alt="" /></p>

<p>When you get past the venus fly traps you‚Äôll need to cross a bridge, but if you accidentally touch the ‚Äúedges‚Äù of the walkable area you‚Äôll drop your matches and they‚Äôll get wet.</p>

<p>If this happens, you won‚Äôt be able to light a stick of dynamite later in the game.</p>

<p>Luckily this game is very short, so if you happen to get yourself into this situation it‚Äôs really only a matter of backtracking about 30 minutes of play time to get yourself to that point from an earlier save.</p>

<p><img src="/images/adventure/hugo2/scummvm-hugo2-00013.png" alt="" /></p>

<p>To progress through the mid-portion of the game you need to press various buttons in the shed to trigger certain events. These can‚Äôt be done until you first walk all the way to the screen where the event will occur, then walk back and press the button.</p>

<p>For example, you can‚Äôt turn on the bug light to attract the bees until you‚Äôve ‚Äúbeen there‚Äù once.</p>

<p><img src="/images/adventure/hugo2/scummvm-hugo2-00009.png" alt="" /></p>

<p>Since you‚Äôll be doing a lot of backtracking it is appreciated that this game has a ‚ÄúTurbo‚Äù mode that makes Penelope walk twice as fast.</p>

<p>This is especially helpful when you have to navigate through the hedge maze (oh goody ‚Ä¶ a maze). Thankfully this isn‚Äôt all that big and is easy enough to map out, but given the limited colour palette of this game this section is a little hard on the eyes.</p>

<p><img src="/images/adventure/hugo2/scummvm-hugo2-00018.png" alt="" /></p>

<p>The maze exists to hide a couple items you‚Äôll need to collect to proceed - which honestly sums up most of this game. A good portion of the game‚Äôs screens contain items that you‚Äôll need to use exactly once to solve a single puzzle.</p>

<p>This is fairly simplistic game design, but I can‚Äôt fault David P. Gray as he single handedly wrote a trilogy of games that he even <a href="https://www.facebook.com/notes/759580011285484/">went into technical detail about</a> for anyone that was interested.</p>

<p><img src="/images/adventure/hugo2/scummvm-hugo2-00017.png" alt="" /></p>

<p>To add some flavour there are timing-based puzzles as well. For example, if you place and light the dynamite you have a fixed amount of time to get out of the well before it explodes and kills you.</p>

<p>Though there aren‚Äôt many game over scenarios, they are possible so it‚Äôs worth saving every few screens just so you don‚Äôt have to backtrack too far when you mess up.</p>

<p><img src="/images/adventure/hugo2/scummvm-hugo2-00015.png" alt="" /></p>

<p>The narrative of this game is a little disjointed, like when you step into a phone booth, call a number you just saw written in graffiti and meet Dr. Who (sort of).</p>

<p>It‚Äôs all to give you a screwdriver you can use to open a safe a few screens later, but there‚Äôs no rhyme or reason for this encounter.</p>

<p><img src="/images/adventure/hugo2/scummvm-hugo2-00021.png" alt="" /></p>

<p>Once you make your way back into the mansion you‚Äôll talk to family members who you‚Äôll get clues from as to what happened to Uncle Horace. Finally you‚Äôll all gather in a room with a police officer who asks you ‚ÄúWhodunit?!?‚Äù.</p>

<p>If you guess right (that nobody murdered Horace) you get points, otherwise Cousin Harry gives you a little info and we meet back up with Hugo, who is locked in a closet.</p>

<p>The solution to get out of the closet is fairly straightforward. Once you put the newspaper under the door, poke the key out of the keyhole so it falls and you pull it under the door on the newspaper, you get out and it‚Äôs game over.</p>

<p><img src="/images/adventure/hugo2/scummvm-hugo2-00022.png" alt="" />
<em>And that‚Äôs a wrap</em></p>

<p>Though it improves on the previous entry in the series, Hugo 2 is extremely simplistic. The graphics are simple, the audio is PC speaker beeps and there‚Äôs typically no music (aside from a couple of screens).</p>

<p>The game is very straightforward aside from a couple of slightly obtuse puzzles such as rubbing catnip on a bell, then giving the bell to the cat so he‚Äôll ring it and distract the maid while you‚Äôre in another room.</p>

<p>Hugo games really feel like they‚Äôre a variation of Sierra‚Äôs AGI games, but not nearly as robust. For a game written and developed by one guy though, it really isn‚Äôt all that bad.</p>

<h2 id="game-information">Game Information</h2>

<table>
  <tbody>
    <tr>
      <td><em>Game</em></td>
      <td>Hugo II, Whodunit?</td>
    </tr>
    <tr>
      <td><em>Developer</em></td>
      <td>Gray Design Associates</td>
    </tr>
    <tr>
      <td><em>Publisher</em></td>
      <td>Gray Design Associates</td>
    </tr>
    <tr>
      <td><em>Release Date</em></td>
      <td>1991</td>
    </tr>
    <tr>
      <td><em>Systems</em></td>
      <td>DOS, Windows</td>
    </tr>
    <tr>
      <td><em>Game Engine</em></td>
      <td><a href="https://wiki.scummvm.org/index.php?title=Hugo">Hugo</a></td>
    </tr>
  </tbody>
</table>

<h3 id="my-playthrough">My Playthrough</h3>

<table>
  <tbody>
    <tr>
      <td><a href="https://howlongtobeat.com/game/28569"><em>How Long To Beat?</em></a></td>
      <td>1.5 hours</td>
    </tr>
    <tr>
      <td><em>Version Played</em></td>
      <td>DOS via <a href="https://www.scummvm.org/">ScummVM</a></td>
    </tr>
    <tr>
      <td><em>Notes</em></td>
      <td><a href="http://gamerwalkthroughs.com/hugo-2-whodunit/">Walkthrough</a></td>
    </tr>
  </tbody>
</table>

<h3 id="score">Score</h3>

<p>See <a href="https://www.alexbevi.com/blog/2021/07/28/adventure-games-1980-1999/#scoring">here</a> for a refresher on how we‚Äôre scoring these games.</p>

<table>
  <tbody>
    <tr>
      <td><strong>Atmosphere (20)</strong></td>
      <td>7</td>
    </tr>
    <tr>
      <td><strong>Story (25)</strong></td>
      <td>8</td>
    </tr>
    <tr>
      <td><strong>Experience (15)</strong></td>
      <td>8</td>
    </tr>
    <tr>
      <td><strong>Impact (10)</strong></td>
      <td>2</td>
    </tr>
    <tr>
      <td>¬†</td>
      <td><strong>36%</strong></td>
    </tr>
  </tbody>
</table>

<h3 id="gallery">Gallery</h3>

<div id="inline-gallery-container" class="inline-gallery-container"></div>
<script type="module">import lightGallery from "https://cdn.skypack.dev/lightgallery@2.4.0";import lgZoom from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/zoom";import lgThumbnail from "https://cdn.skypack.dev/lightgallery@2.4.0/plugins/thumbnail";const $lgContainer = document.getElementById("inline-gallery-container");const inlineGallery = lightGallery($lgContainer, {  container: $lgContainer,  licenseKey: "C2D2C2BD-16BC4564-A4EAE653-401CB884",  dynamic: true,  hash: false,  closable: false,  showMaximizeIcon: true,  slideDelay: 10,  plugins: [lgZoom, lgThumbnail],  dynamicEl: [{ src: '/images/adventure/hugo2/scummvm-hugo2-00000.png', thumb: '/images/adventure/hugo2/scummvm-hugo2-00000.png' },{ src: '/images/adventure/hugo2/scummvm-hugo2-00002.png', thumb: '/images/adventure/hugo2/scummvm-hugo2-00002.png' },{ src: '/images/adventure/hugo2/scummvm-hugo2-00003.png', thumb: '/images/adventure/hugo2/scummvm-hugo2-00003.png' },{ src: '/images/adventure/hugo2/scummvm-hugo2-00004.png', thumb: '/images/adventure/hugo2/scummvm-hugo2-00004.png' },{ src: '/images/adventure/hugo2/scummvm-hugo2-00005.png', thumb: '/images/adventure/hugo2/scummvm-hugo2-00005.png' },{ src: '/images/adventure/hugo2/scummvm-hugo2-00006.png', thumb: '/images/adventure/hugo2/scummvm-hugo2-00006.png' },{ src: '/images/adventure/hugo2/scummvm-hugo2-00008.png', thumb: '/images/adventure/hugo2/scummvm-hugo2-00008.png' },{ src: '/images/adventure/hugo2/scummvm-hugo2-00012.png', thumb: '/images/adventure/hugo2/scummvm-hugo2-00012.png' },{ src: '/images/adventure/hugo2/scummvm-hugo2-00016.png', thumb: '/images/adventure/hugo2/scummvm-hugo2-00016.png' },{ src: '/images/adventure/hugo2/scummvm-hugo2-00019.png', thumb: '/images/adventure/hugo2/scummvm-hugo2-00019.png' },{ src: '/images/adventure/hugo2/scummvm-hugo2-00020.png', thumb: '/images/adventure/hugo2/scummvm-hugo2-00020.png' },]});inlineGallery.openGallery();</script>

<p><strong>Footnotes</strong></p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p><small>Description from <a href="https://www.mobygames.com/game/1158/hugo-ii-whodunit/">Moby Games</a></small>¬†<a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="Let&apos;s Adventure!" /><category term="adventure" /><category term="Gray Design Associates" /><category term="Hugo" /><summary type="html"><![CDATA[This review is part of the ‚ÄúLet‚Äôs Adventure!‚Äù series. See all reviewed games sorted by rating here.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/adventure/hugo2/scummvm-hugo2-0000a.png" /><media:content medium="image" url="https://www.alexbevi.com/images/adventure/hugo2/scummvm-hugo2-0000a.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Do Not Use Mutexes in Finalizers</title><link href="https://www.alexbevi.com/blog/2024/05/09/do-not-use-mutexes-in-finalizers/" rel="alternate" type="text/html" title="Do Not Use Mutexes in Finalizers" /><published>2024-05-09T13:27:41-04:00</published><updated>2024-05-09T14:00:07-04:00</updated><id>https://www.alexbevi.com/blog/2024/05/09/do-not-use-mutexes-in-finalizers</id><content type="html" xml:base="https://www.alexbevi.com/blog/2024/05/09/do-not-use-mutexes-in-finalizers/"><![CDATA[<blockquote class="prompt-tip">
  <p>Reposted from <a href="https://comandeo.dev/2023/01/01/mutexes-in-finalizers.html">Dmitry‚Äôs blog</a>. Canonical URL points to his original post.</p>
</blockquote>

<p>Ruby allows a developer to specify a <em>finalizer</em> proc for an object. This proc is called after an object was destroyed. This is a very useful mechanism that can be used for some cleanup when the object is gone. However, it turned out that there are limitations to what you can do inside finalizers. And these limitations are the same as ones for a signal trap. So, if you write a finalizer, you should follow the <a href="https://github.com/ruby/ruby/blob/master/doc/signals.rdoc">documentation for signal traps</a>.</p>

<p>Some time ago a user opened an issue in our bug tracker. In his logs he noticed an exception raised by the MongoDB Ruby driver:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>`synchronize': can't be called from trap context (ThreadError)
</pre></td></tr></tbody></table></code></pre></div></div>

<p>From the logs, we could see that the exception was raised when calling synchronize on a mutex inside the finalizer. However, the exception says that synchronize can‚Äôt be called from a ‚Äútrap context‚Äù. What is that, and how is it related to our finalizers?</p>

<p>Finalizer is a proc that will be called when a specific object is about to be destroyed by garbage collection. In the MongoDB Ruby driver, we use finalizers to close unused cursors. A cursor is returned in response to a query and can be iterated to retrieve results. Cursors are a very convenient mechanism; however, cursors are server-side objects, and every cursor consumes server memory. Therefore, it is a good idea to let the server know if a cursor is unused so that the resources are released. So, if an object that represents a cursor is destroyed, the cursor is definitely unused and can be closed.</p>

<p>Below is a very simplified example of how this can be done:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre><span class="k">class</span> <span class="nc">Cursor</span>
  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">finalize</span><span class="p">(</span><span class="n">cursor_id</span><span class="p">,</span> <span class="n">database</span><span class="p">,</span> <span class="n">collection</span><span class="p">)</span>
    <span class="nb">proc</span> <span class="k">do</span>
      <span class="nb">puts</span> <span class="s2">"Killing cursor </span><span class="si">#{</span><span class="n">cursor_id</span><span class="si">}</span><span class="s2"> on </span><span class="si">#{</span><span class="n">database</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="n">collection</span><span class="si">}</span><span class="s2">"</span>
      <span class="c1"># Execute command to close cursor</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">database</span><span class="p">,</span> <span class="n">collection</span><span class="p">)</span>
    <span class="c1"># Initialize the cursor</span>
    <span class="no">ObjectSpace</span><span class="p">.</span><span class="nf">define_finalizer</span><span class="p">(</span>
      <span class="nb">self</span><span class="p">,</span>
      <span class="nb">self</span><span class="p">.</span><span class="nf">class</span><span class="p">.</span><span class="nf">finalize</span><span class="p">(</span><span class="vi">@id</span><span class="p">,</span> <span class="vi">@database</span><span class="p">,</span> <span class="vi">@collection</span><span class="p">)</span>
    <span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>We can ask Ruby to do the garbage collection by calling <code class="language-plaintext highlighter-rouge">GC.start</code>, so we can test the code.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="mi">5</span><span class="p">.</span><span class="nf">times</span> <span class="p">{</span> <span class="no">Cursor</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s1">'database'</span><span class="p">,</span> <span class="s1">'collection'</span><span class="p">)</span> <span class="p">}</span>
<span class="no">GC</span><span class="p">.</span><span class="nf">start</span>

<span class="c1"># =&gt; Killing cursor 258 on database.collection</span>
<span class="c1"># =&gt; Killing cursor 938 on database.collection</span>
<span class="c1"># =&gt; Killing cursor 791 on database.collection</span>
<span class="c1"># =&gt; Killing cursor 705 on database.collection</span>
<span class="c1"># =&gt; Killing cursor 114 on database.collection</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>So far so good. Of course, this solution is far from ideal. Here we send a command to the server every time the finalizer is called. First, this will block the main thread. Further, it will issue one command per cursor, which is not ideal. We can also reduce the number of commands we send by killing all cursors for a collection in one command. So, we came up with an idea for the cursor reaper ‚Äî a background thread that wakes up from time to time and kills unused cursors:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
</pre></td><td class="rouge-code"><pre><span class="k">class</span> <span class="nc">CursorReaper</span>
  <span class="no">Task</span> <span class="o">=</span> <span class="no">Struct</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:database</span><span class="p">,</span> <span class="ss">:collection</span><span class="p">)</span>

  <span class="k">def</span> <span class="nf">initialize</span>
    <span class="vi">@mutex</span> <span class="o">=</span> <span class="no">Mutex</span><span class="p">.</span><span class="nf">new</span>
    <span class="vi">@tasks</span> <span class="o">=</span> <span class="p">[]</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">schedule</span><span class="p">(</span><span class="nb">id</span><span class="p">,</span> <span class="n">database</span><span class="p">,</span> <span class="n">collection</span><span class="p">)</span>
    <span class="vi">@mutex</span><span class="p">.</span><span class="nf">synchronize</span> <span class="k">do</span>
      <span class="vi">@tasks</span> <span class="o">&lt;&lt;</span> <span class="no">Task</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="nb">id</span><span class="p">,</span> <span class="n">database</span><span class="p">,</span> <span class="n">collection</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">kill_cursors</span>
    <span class="vi">@mutex</span><span class="p">.</span><span class="nf">synchronize</span> <span class="k">do</span>
      <span class="k">while</span> <span class="n">task</span> <span class="o">=</span> <span class="vi">@tasks</span><span class="p">.</span><span class="nf">pop</span>
        <span class="nb">puts</span> <span class="s2">"Killing cursor </span><span class="si">#{</span><span class="n">task</span><span class="p">.</span><span class="nf">id</span><span class="si">}</span><span class="s2"> on </span><span class="si">#{</span><span class="n">task</span><span class="p">.</span><span class="nf">database</span><span class="si">}</span><span class="s2">.</span><span class="si">#{</span><span class="n">task</span><span class="p">.</span><span class="nf">collection</span><span class="si">}</span><span class="s2">"</span>
        <span class="c1"># Group cursors per collection</span>
      <span class="k">end</span>
    <span class="k">end</span>
    <span class="c1"># Execute commands to close cursors</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="k">class</span> <span class="nc">Cursor</span>
  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">finalize</span><span class="p">(</span><span class="nb">id</span><span class="p">,</span> <span class="n">database</span><span class="p">,</span> <span class="n">collection</span><span class="p">,</span> <span class="n">reaper</span><span class="p">)</span>
    <span class="nb">proc</span> <span class="k">do</span>
      <span class="n">reaper</span><span class="p">.</span><span class="nf">schedule</span><span class="p">(</span><span class="nb">id</span><span class="p">,</span> <span class="n">database</span><span class="p">,</span> <span class="n">collection</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">database</span><span class="p">,</span> <span class="n">collection</span><span class="p">,</span> <span class="n">reaper</span><span class="p">)</span>
    <span class="c1"># Initialize the cursor</span>
    <span class="no">ObjectSpace</span><span class="p">.</span><span class="nf">define_finalizer</span><span class="p">(</span>
      <span class="nb">self</span><span class="p">,</span>
      <span class="nb">self</span><span class="p">.</span><span class="nf">class</span><span class="p">.</span><span class="nf">finalize</span><span class="p">(</span><span class="vi">@id</span><span class="p">,</span> <span class="vi">@database</span><span class="p">,</span> <span class="vi">@collection</span><span class="p">,</span> <span class="n">reaper</span><span class="p">)</span>
    <span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Note that there is a mutex in the CursorReaper class. The kill_cursors method of the reaper will be called in a background thread, hence the locking. Let‚Äôs test it:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre><span class="n">reaper</span> <span class="o">=</span> <span class="no">CursorReaper</span><span class="p">.</span><span class="nf">new</span>
<span class="n">reaper_thread</span> <span class="o">=</span> <span class="no">Thread</span><span class="p">.</span><span class="nf">new</span> <span class="k">do</span>
  <span class="kp">loop</span> <span class="k">do</span>
    <span class="nb">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">reaper</span><span class="p">.</span><span class="nf">kill_cursors</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="mi">5</span><span class="p">.</span><span class="nf">times</span> <span class="p">{</span> <span class="no">Cursor</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s1">'database'</span><span class="p">,</span> <span class="s1">'collection'</span><span class="p">,</span> <span class="n">reaper</span><span class="p">)</span> <span class="p">}</span>
<span class="no">GC</span><span class="p">.</span><span class="nf">start</span>
<span class="n">reaper_thread</span><span class="p">.</span><span class="nf">join</span>

<span class="c1"># =&gt; Killing cursor 205 on database.collection</span>
<span class="c1"># =&gt; Killing cursor 847 on database.collection</span>
<span class="c1"># =&gt; Killing cursor 284 on database.collection</span>
<span class="c1"># =&gt; Killing cursor 609 on database.collection</span>
<span class="c1"># =&gt; Killing cursor 485 on database.collection</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Still, no error, even though the latter example calls synchronize inside the finalizer. What is the difference between the example and the real-world situation? In the example, we trigger garbage collection manually. Normally this is triggered by Ruby itself. What if we create so many objects that Ruby actually starts the GC?</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="n">reaper</span> <span class="o">=</span> <span class="no">CursorReaper</span><span class="p">.</span><span class="nf">new</span>
<span class="n">reaper_thread</span> <span class="o">=</span> <span class="no">Thread</span><span class="p">.</span><span class="nf">new</span> <span class="k">do</span>
  <span class="kp">loop</span> <span class="k">do</span>
    <span class="nb">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">reaper</span><span class="p">.</span><span class="nf">kill_cursors</span>
  <span class="k">end</span>
<span class="k">end</span>
<span class="n">populator_thread</span> <span class="o">=</span> <span class="no">Thread</span><span class="p">.</span><span class="nf">new</span> <span class="k">do</span>
  <span class="kp">loop</span> <span class="k">do</span>
    <span class="mi">5000</span><span class="p">.</span><span class="nf">times</span> <span class="p">{</span> <span class="no">Cursor</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s1">'database'</span><span class="p">,</span> <span class="s1">'collection'</span><span class="p">,</span> <span class="n">reaper</span><span class="p">)</span> <span class="p">}</span>
    <span class="nb">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
<span class="p">[</span><span class="n">reaper_thread</span><span class="p">,</span> <span class="n">populator_thread</span><span class="p">].</span><span class="nf">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:join</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Yes, this code actually reproduces the problem, and the exception is raised! So, it looks like finalizers are executed inside a signal trap. Therefore, to fix the problem we should just <a href="https://github.com/ruby/ruby/blob/master/doc/signals.rdoc">follow the documentation</a> and not use operations that are not allowed inside the traps. In our case with the cursor reaper, we got rid of mutexes in finalizers by using a queue data structure, and the bug was fixed.</p>

<h2 id="we-need-to-go-deeper">We Need to Go Deeper</h2>

<p>Even though the problem was gone, I decided to find out whether finalizers are really executed inside a signal trap. I though maybe Ruby VM uses signals internally to trigger garbage collection. I could not find any mentions about such a usage of signals, so I had to read Ruby source code. It tuned out to be fun, and the outcome was very unexpected!</p>

<p>I started by finding where the error <em>‚Äúcan‚Äôt be called from trap context‚Äù</em> is raised. I found it in <code class="language-plaintext highlighter-rouge">do_mutex_lock</code> function inside <code class="language-plaintext highlighter-rouge">thread_sync.c</code> file:</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="cm">/* When running trap handler */</span>
<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">FL_TEST_RAW</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">MUTEX_ALLOW_TRAP</span><span class="p">)</span> <span class="o">&amp;&amp;</span>
  <span class="n">th</span><span class="o">-&gt;</span><span class="n">ec</span><span class="o">-&gt;</span><span class="n">interrupt_mask</span> <span class="o">&amp;</span> <span class="n">TRAP_INTERRUPT_MASK</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">rb_raise</span><span class="p">(</span><span class="n">rb_eThreadError</span><span class="p">,</span> <span class="s">"can't be called from trap context"</span><span class="p">);</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>So, what is actually verified is whether the execution context has a <code class="language-plaintext highlighter-rouge">TRAP_INTERRUPT_MASK</code> flag set. This flag is set in three functions: <code class="language-plaintext highlighter-rouge">rb_postponed_job_flush</code> in <code class="language-plaintext highlighter-rouge">vm_trace.c</code>, <code class="language-plaintext highlighter-rouge">rb_threadptr_execute_interrupts</code> in <code class="language-plaintext highlighter-rouge">thread.c</code>, and <code class="language-plaintext highlighter-rouge">signal_exec</code> in <code class="language-plaintext highlighter-rouge">signal.c</code>. After some debugging, I found out that in our case the flag is set in the <code class="language-plaintext highlighter-rouge">rb_postponed_job_flush</code> function. Actually, this is also confirmed by this comment for the <code class="language-plaintext highlighter-rouge">rb_gc</code> function in <code class="language-plaintext highlighter-rouge">gc.h</code>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>* Finalisers are deferred until we can handle interrupts. See * `rb_postponed_job_flush` in vm_trace.c.
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Alright, now it is more or less clear what is going on. Finalizers are not executed immediately after an object is ‚Äúgarbage collected‚Äù. Instead, a postponed job is created and scheduled. Such jobs are executed in the <code class="language-plaintext highlighter-rouge">rb_postponed_job_flush</code> function. This function sets the <code class="language-plaintext highlighter-rouge">TRAP_INTERRUPT_MASK</code> flag, which is later checked by <code class="language-plaintext highlighter-rouge">do_mutex_lock</code>. Hence the error. I even found <a href="https://github.com/ruby/ruby/commit/05459d1a33db59c47e98e327c9f52808ebc76a3f">the commit</a> that introduces the current behavior, and <a href="https://bugs.ruby-lang.org/issues/10595">a bug</a> that was fixed by this commit. It looks like the Ruby team wanted to make sure that finalizers are never interrupted by a signal; as a side effect, code inside finalizers is treated as code inside a signal trap.</p>

<p><em>To summarize, finalizers are <strong>not</strong> executed inside a signal trap; however, Ruby applies the same restrictions to signal traps and finalizers. This is not documented anywhere; further, the exception raised is a bit misleading. Be careful!</em></p>

<p>P.S. It is still unclear why we did not see the exception when we trigger the garbage collection manually. I wasn‚Äôt able to find the answer; maybe this is a topic for my next article.</p>]]></content><author><name>Dmitry Rybakov</name></author><category term="Programming" /><category term="ruby" /><summary type="html"><![CDATA[Reposted from Dmitry‚Äôs blog. Canonical URL points to his original post.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.alexbevi.com/images/ruby-banner-2.jpg" /><media:content medium="image" url="https://www.alexbevi.com/images/ruby-banner-2.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>