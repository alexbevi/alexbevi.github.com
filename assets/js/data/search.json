[ { "title": "Pepper's Adventures in Time (Sierra On-Line) - 1993", "url": "/blog/2025/04/24/peppers-adventures-in-time/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, played:DOS, SCI", "date": "2025-04-24 07:29:55 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Leisure Suit Larry III: ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals! (Sierra On-Line) - 1989Pepper's Adventures in Time (Sierra On-Line) - 1993 Article 96 of 96 in this series.Pepper’s Adventures in Time is an educational adventure game released in 1993 by Sierra On-Line. The project was based on a concept by Sierra VP of Development/Creative Director, Bill Davis, who also designed the game’s main characters. This was intended to be the first in a series of edutainment games in which the player, as Pepper, traveled back in time to set right mixed-up situations surrounding famous individuals.This point n’ click adventure game is actually an edutainment (entertainment leading to education) title developed by Sierra, who were also responsible for other games such as the EcoQuest and Dr. Brain series. The object of this game is to help a little girl called Pepper, solve puzzles based on history and logic, so that she can fix the mess caused by Dr. Fred’s time machine. At certain points in the game, the player is even allowed to control her pet dog, Lockjaw.The game consists of an educational factor where the player can learn about many important facts concerning the colonial times of the United States. It is divided into Acts in which the player has to reach given goals and, apart from other, typical for adventure games things, learn about facts listed in the opening. To do it the special TRUTH icon has to be used. When the act is concluded, the player is challenged with a quiz about the things he learned. For each correct answer he receives progress points.Cartoonish graphics similar to the style in Day of the Tentacle were used in order to appeal to younger audiences.1I actually found the music in this game also reminiscent of Day of the Tentacle, however both games came out the same year so it’s possible this was just a coincidence. Unlike DOTT however, this game really isn’t all that much fun.As an “edutainment” game, the gameplay elements are toned down quite a bit, so there isn’t all that much you need to do - and what there is becomes extremely repetitive.The plot seems to involve your uncle - who really hates Ben Franklin for some reason - building a time machine that he’ll use to go back and change the course of history … for reasons.You start the game off as Pepper, and along with her dog Lockjaw get sucked into the machine and thrown back to colonial times - but when you get there it seems things are not the way you’d expect based on the history you learned in school.Being a Sierra SCI game you have access to the typical verb icons (WALK, TALK, GET, etc), along with a couple that are unique to this game (TRUTH and QUIZ). There are also portions of the game where you take control of Pepper’s dog Lockjaw, which gives you a different set of verbs.The Lockjaw segments do actually help break up the monotony of endless fetch quests that make up the majority of this game.You can click the TRUTH icon on almost everything, and it will tell you if the thing you’re inspecting is historically accurate. This is a unique mechanic to this game that is actually sort of interesting, as a handful of these facts will be required in the quiz you have to take at the end of the chapter.When a fact will be included in the quiz, you’ll get points for it and the text color will be different, so it at least stands out. This is helpful as there’s SO MUCH reading in this game, and so many of the facts just sort of blend together.Each Act begins with a summary of the things to look out for (which correlate with the end of chapter quiz), as well as the objectives to complete the act.The QUIZ icon in the menu bar will display this information at any time during the chapter, which is helpful because I found I forgot the objectives very quickly.Each quiz just corresponds to the clues you were given at the beginning of the chapter. If you found the associated facts while playing, the quiz itself is fairly straightforward.Other than clicking the TRUTH icon everywhere, you’ll also be able to talk to most characters about exactly 4 topics. There is zero variety in the gameplay when you’re playing as Pepper, which really makes this game feel like a chore.Once you land in colonial times, after you are captured and escape from a storage shed your dog Lockjaw will be captured by the daughter of the main villain. After this, you can ask all characters about: Ben Franklin The Pughs (the villains) Your Dog ThemselvesThat’s it. I understand this is probably more of an “entry level” game, but there’s so little to do that it just becomes repetitive and monotonous to play.For some reason there are hippies in the past. I guess this was the result of your Uncle’s messing with time travel - but the way these characters were written it seems the game developers really didn’t like hippies …You typically have maybe 10 game screens to walk between, and every act involves many (MANY!) fetch quests. All you really do in this game is get something from point A and bring it to character B.Some of the fetch quests are actually fairly involved, so I’m surprised they’d have included them in a children’s edutainment game. For example, getting everything ready for Ben Franklin to recreate his Kite/Key experiment requires you to first build a leyden jar (which is described in the manual).Maybe I’m just not giving 90’s kids enough credit, but this was a fairly involved (and lengthy) fetch quest.The whole point of the game is to get your dog back from the Pugh’s, and to prove that they’ve imposed a false tax on the people of Philadelphia - which you ultimately end up doing.Not having grown up in the United States I’m not really sure how meaningful or relevant this content is, but I’m guessing the characters are historically important and worth incorporating into a game to make teaching kids about them more appealing.My final impression of this game is “I just don’t get it”. None of this was fun, and advancing the plot felt like work.If you find this period of American history interesting though there’s quite a bit you’d be able to learn by revisiting the game and just clicking everything with the TRUTH icon. The writing can be clever in places, but some of the jokes and commentary don’t really seem appropriate for a younger audience - so I’m not really sure who this game was made for.In one scene in the mansion with Lockjaw I was able to crash ScummVM, by biting Pugh, then sniffing the powder on the desk then grabbing the key - but I couldn’t reproduce it consistently so didn’t file a bug report.User picked target 'pepper' (engine ID 'sci', game ID 'pepper')...Running Pepper's Adventures in Time (DOS/English)resource.000: 670d0c53622429f4b11275caf7f8d292, 5459574 bytes.resource.map: 72726dc81c1b4c1110c486be77369bc8, 5179 bytes.Patching TWISTYSG.DIR failed - resource type mismatchERROR: [pepper-1.000 610/999 sPercyGotYou::dispose @ 0786]: [VM] Stack index 4096 out of valid range [0..4095]!Since this is a Sierra game, you could find yourself in game-over territory fairly frequently, but instead of just RESTORE and RESTART options, you could also TRY AGAIN. This made slogging through this game a bit more bearable as it took you back to right before you made the wrong choice.Game Information Game Pepper’s Adventures in Time Developer Sierra On-Line Publisher Sierra On-Line Release Date 1993 Systems DOS, Windows 3.x Game Engine SCI My Playthrough How Long To Beat? 4 hours Version Played DOS via ScummVM Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Graphics (15) 8 Sound (10) 6 Plot / Progression (25) 12 Characters / Development (15) 7 Gameplay / Experience (15) 4 Replayability (5) 2 Impact / Impression (10) 3 Bonus / Surprise (5) 2   44% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Building a Better Blog Series Plugin for Jekyll with ChatGPT", "url": "/blog/2025/04/20/building-a-better-blog-series-plugin-for-jekyll-with-chatgpt/", "categories": "Ruby", "tags": "blog, jekyll, ruby", "date": "2025-04-20 07:42:45 -0400", "snippet": "In writing my blog series, “Let’s Adventure! A Journey into Adventure Games (1980-1999)”, I found myself wanting a better way to handle navigation between posts. The existing Jekyll plugins and tut...", "content": "In writing my blog series, “Let’s Adventure! A Journey into Adventure Games (1980-1999)”, I found myself wanting a better way to handle navigation between posts. The existing Jekyll plugins and tutorials I found (such as those from Justin James and Steven Marks) provided some inspiration but didn’t fully align with my use case.The plugin I decided I wanted to build would need to include: Dynamic generation of navigation links based on the series’ metadata. Simple and intuitive integration with Jekyll’s existing templating system. Robust error handling and graceful fallback behaviors. Ability to configure multiple series easily, ideally through _config.yml Easy integration with Jekyll’s Cache API to enhance build performance.Leveraging my increasing comfort with AI for research and coding tasks, I turned to ChatGPT (full conversation here). The conversational approach allowed me to iteratively specify requirements and rapidly prototype the plugin logic. The finished plugin is available at https://github.com/alexbevi/jekyll-series-navigationEfficiency of Iterating via Chat InterfaceOne of the clearest demonstrations of the value of this approach came when I encountered a cryptic error during partial rendering:SeriesNavTag: Error rendering nav: Liquid error: wrong number of arguments (given 1, expected 2..3)At first, it wasn’t obvious what was causing this. But by sharing the full stack trace in ChatGPT, it became clear that the issue stemmed from how the replace filter was being used in a Liquid template—specifically in a custom tag that was incorrectly passing a single argument.ChatGPT helped narrow this down quickly by examining the stack trace and correlating it with the standard method signatures expected in Liquid’s replace filter. It then provided the correct syntax and helped walk through validating each part of the rendering process.This kind of issue could have taken a long time to debug in isolation, especially because it wasn’t immediately clear whether the root cause was in Liquid syntax, plugin logic, or content metadata. With ChatGPT’s contextual understanding and ability to parse Ruby backtraces, we were able to identify and fix the bug by adjusting the argument structure in the tag rendering logic.Working through the chat interface provided distinct advantages: Immediate Feedback: Real-time suggestions and error spotting accelerated development cycles, significantly reducing the time spent debugging. For example, ChatGPT quickly pointed out syntax issues within my Ruby and Liquid templates, helping resolve bugs in seconds rather than minutes or hours. Rapid Prototyping: Instant iteration allowed for quick experiments and adjustments, enabling me to refine features continuously based on the evolving requirements. I could quickly test multiple approaches for handling metadata and caching, instantly iterating through alternative implementations. Clear Explanations: Complex problems, such as issues with Liquid template variable passing, were clearly explained, improving my understanding and leading to quicker resolutions. When struggling with cache implementations, ChatGPT clearly illustrated the caching mechanism, dramatically shortening the learning curve.Implementing the Jekyll Series PluginBelow is the Ruby plugin code (series_nav.rb) that was created through this AI-assisted process:# _plugins/jekyll_series_plugin.rb# Jekyll plugin for navigating blog series using a blockquote prompt-info wrapper# Utilizes Jekyll::Cache for performance; pre-renders Liquid in metadata within the tag context# Configuration in _config.yml:# series_nav:# my-slug:# title: \"Display Title\"# description: \"Overview with {{ site.title }}\"# title_link: \"/series/{{ page.series }}/\"# Usage in post front matter:# series: my-slug# Invoke in your layout/post template:# {% series_nav %}require 'jekyll'require 'jekyll/cache'require 'liquid'module Jekyll class SeriesGenerator &lt; Generator safe true priority :low def generate(site) cache = Jekyll::Cache.new('series_nav') series_config = site.config['series_nav'] || {} series_map = cache.getset('series_map') do build_series_map(site.posts.docs, series_config) end site.data['series_map'] = series_map Jekyll.logger.info 'SeriesNav:', \"Loaded series map (#{series_map.keys.size} series)\" end private # Builds a map of slug =&gt; { title, description, title_link, posts } def build_series_map(posts, config) map = {} posts.each do |post| slug = post.data['series'].to_s.strip next if slug.empty? cfg = config.fetch(slug, {}) title = cfg['title'] || slug raw_desc = cfg['description'] || '' raw_link = cfg['title_link'] || '' map[slug] ||= { 'title' =&gt; title, 'description' =&gt; raw_desc, 'title_link' =&gt; raw_link, 'posts' =&gt; [] } map[slug]['posts'] &lt;&lt; post end map.each do |slug, info| sorted = info['posts'].sort_by(&amp;:date) sorted.each_with_index do |post, idx| post.data['series_posts'] = sorted post.data['series_title'] = info['title'] post.data['series_description'] = info['description'] post.data['series_title_link'] = info['title_link'] post.data['series_index'] = idx + 1 post.data['series_prev'] = idx &gt; 0 ? sorted[idx - 1] : nil post.data['series_next'] = idx &lt; sorted.size - 1 ? sorted[idx + 1] : nil end info['posts'] = sorted end map end end class SeriesNavTag &lt; Liquid::Tag def render(context) page = context.registers[:page] return '' unless page['series_posts']&amp;.any? # Pre-render Liquid in title_link and description using this tag's context page['series_title_link'] = safe_render(context, page['series_title_link']) page['series_description'] = safe_render(context, page['series_description']) # Render include partial for final HTML include_markup = \"{% include series_nav.html %}\" template = ::Liquid::Template.parse(include_markup) template.render!(context.environments.first, registers: context.registers) rescue =&gt; e Jekyll.logger.error 'SeriesNavTag:', \"Error rendering include: #{e.message}\" '' end private # Render Liquid in a string using the tag's current environment and registers def safe_render(context, text) return '' if text.to_s.strip.empty? tmpl = ::Liquid::Template.parse(text) tmpl.render!(context.environments.first, registers: context.registers) rescue =&gt; e Jekyll.logger.warn 'SeriesNavTag:', \"Liquid rendering failed: #{e.message}\" text end endendLiquid::Template.register_tag('series_nav', Jekyll::SeriesNavTag)The code isn’t perfect, and I’m sure I could simplify/improve it further, but for a few hours of just messing around with a prompt I think this is pretty good.Using the Plugin in Your Jekyll BlogIntegrate the following Liquid partial (_includes/series_nav.html) in your layout or post to display navigation links:{%- comment -%}/_includes/series_nav.htmlExpected page data: page.series_title # String title of the series page.series_description # String description (HTML-safe) page.series_title_link # URL or Liquid tag to link the title page.series_posts # Array of all posts in this series (sorted) page.series_index # Integer index of current post page.series_prev # Previous post object or nil page.series_next # Next post object or nil{%- endcomment -%}&lt;blockquote class=\"prompt-tip mb-6\"&gt; &lt;strong&gt;Series:&amp;nbsp; {%- if page.series_title_link -%} &lt;a href=\"{{ page.series_title_link }}\"&gt;{{ page.series_title }}&lt;/a&gt; {%- else -%} {{ page.series_title }} {%- endif -%} &lt;/strong&gt; {%- if page.series_description -%} &lt;p&gt;{{ page.series_description }}&lt;/p&gt; {%- endif -%} &lt;ul class=\"list-none space-y-1\"&gt; {%- if page.series_prev -%} &lt;li&gt;← &lt;a href=\"{{ page.series_prev.url }}\"&gt;{{ page.series_prev.title }}&lt;/a&gt;&lt;/li&gt; {%- endif -%} &lt;li&gt;&lt;strong&gt;{{ page.title }}&lt;/strong&gt;&lt;/li&gt; {%- if page.series_next -%} &lt;li&gt;→ &lt;a href=\"{{ page.series_next.url }}\"&gt;{{ page.series_next.title }}&lt;/a&gt;&lt;/li&gt; {%- endif -%} &lt;/ul&gt; &lt;p&gt;Article {{ page.series_index }} of {{ page.series_posts | size }} in this series.&lt;/p&gt;&lt;/blockquote&gt;Since my site uses the Chirpy Jekyll Theme I wanted the series navigation to seamlessly integrate, however the partial can be adapted as needed to suit your blog’s layout.Integration Steps: Place the Ruby plugin file (series_nav.rb) in your Jekyll site’s _plugins directory. Add the Liquid partial (series_nav.html) to your site’s _includes directory. Include the plugin tag in your post or layout template with {% series_nav %}.Ultimately, the plugin significantly streamlined navigation within my blog series, enhancing both my writing workflow and the reader’s experience. This journey underscored how AI tools can complement traditional software development, enabling faster iterations, performance optimizations, and more elegant solutions.Feel free to adapt this solution to your own Jekyll blog!" }, { "title": "Performance Profiling MongoDB on Cloudflare Workers", "url": "/blog/2025/04/11/performance-profiling-mongodb-on-cloudflare-workers/", "categories": "MongoDB", "tags": "mongodb, drivers, node, nodejs, javascript, typescript", "date": "2025-04-11 06:23:55 -0400", "snippet": "Cloudflare recently wrote about “Your frontend, backend, and database — now in one Cloudflare Worker”, which called out that the mongodb package should now work as expected. I validated that Cloudf...", "content": "Cloudflare recently wrote about “Your frontend, backend, and database — now in one Cloudflare Worker”, which called out that the mongodb package should now work as expected. I validated that Cloudflare Workers and MongoDB work together as well, but how well do they work together.Let’s evaluate this by taking MongoDB’s simple “Find a Document” tutorial and adapting it to a Workers environment. TL;DR - MongoDB works perfectly from Cloudflare Workers, but you can significantly improve request latency by using Durable ObjectsSetupFirst, create a MongoDB Atlas cluster (free M0 works just fine), and load the sample datasets once the cluster is provisioned. We’ll be using the sample_mflixdataset to return some information about a movie.Next we’ll want to setup a Cloudflare Workerto retrieve our movie information. I personally just created the Worker via the UI the using the Git integration associated my worker with an existing repo.Default Workers ExperienceOur Worker will be using the MongoDB Node.js driver to connect to the provisioned Atlas cluster using a connection string stored as an environment variable./** * wrangler.jsonc */{\t\"$schema\": \"node_modules/wrangler/config-schema.json\",\t\"name\": \"workers-mongodb-demo\",\t\"main\": \"src/index.ts\",\t\"compatibility_date\": \"2025-03-21\",\t\"compatibility_flags\": [\t\t\"nodejs_compat\"\t]}// src/index.tsimport { MongoDBConnector } from './MongoDBConnector';interface Env { MONGODB_URI: string;}export default { async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise&lt;Response&gt; { try { let proxy = null; proxy = new MongoDBConnector(env); const result = await proxy.getMovie(); return Response.json(result); } catch (error) { console.error('Error:', error); const message = error instanceof Error ? error.message : 'Unknown error'; return new Response(`Error: ${message}`, { status: 500 }); } }} satisfies ExportedHandler&lt;Env&gt;;The MongoDB-specific code will handle creating the MongoClient, performing all the networking and authentication round trips and retrieving a document from the cluster.We’ll do some basic instrumentation to capture the time between client connection and the result being returned in queryTime, which we’ll return as part of the response.// src/MongoDBConnector.tsimport { MongoClient } from 'mongodb';interface Env { MONGODB_URI: string;}export class MongoDBConnector { private env: Env; private client: MongoClient; constructor(env: Env) { this.env = env; this.client = new MongoClient(this.env.MONGODB_URI); } async getMovie() { try { const queryStartTime = Date.now(); await this.client.connect(); const database = this.client.db(\"sample_mflix\"); const movies = database.collection(\"movies\"); const query = { title: \"The Room\" }; const options = { sort: { \"imdb.rating\": -1 }, projection: { _id: 0, title: 1, imdb: 1 }, }; const movie = await movies.findOne(query, options); const queryTime = Date.now() - queryStartTime; return { movie: { ...movie }, queryTime }; } catch (error) { console.error('MongoDB error:', error); throw error; } }}Once I had my code pushed to a repo and configured my Worker to use this repo, the CI/CD process would pick up any changes automatically.User in Toronto - Cluster in us-east-1 (N. Virginia)My Atlas cluster is in the default region - which happens to be AWS’ us-east-1. I’m located in Toronto, so I would expect the latency between my requests and my data to be fairly low.$ curl https://workers-mongodb-demo.alex-fbd.workers.dev/{\"movie\":{\"title\":\"The Room\",\"imdb\":{\"rating\":3.4,\"votes\":25750,\"id\":368226}},\"queryTime\":429}&lt;repeat about 5 times&gt;$ curl https://workers-mongodb-demo.alex-fbd.workers.dev/{\"movie\":{\"title\":\"The Room\",\"imdb\":{\"rating\":3.4,\"votes\":25750,\"id\":368226}},\"queryTime\":302}Using the extremely scientific method of curling the workers endpoint 5-6 times and averaging the queryTime values it seems my round trip time for an operation is 300ms, with the very first request being about 100ms slower than that.I appreciate that there are numerous round trips to required to authenticate a connection to Atlas, but MongoDB’s drivers provide connection pooling out of the box so I’d sort of expect this time to go down much more - but it doesn’t.User in Toronto - Cluster in ap-northeast-1 (Tokyo)Just for comparison sake since Atlas offers clusters in most AWS regions, I spun one up in ap-northeast-1 and updated the connection string in my worker to see how this might impact the round trip time of an operation.$ curl https://workers-mongodb-demo.alex-fbd.workers.dev/{\"movie\":{\"title\":\"The Room\",\"imdb\":{\"rating\":3.5,\"votes\":25673,\"id\":368226}},\"queryTime\":2044}&lt;repeat about 5 times&gt;$ curl https://workers-mongodb-demo.alex-fbd.workers.dev/{\"movie\":{\"title\":\"The Room\",\"imdb\":{\"rating\":3.5,\"votes\":25673,\"id\":368226}},\"queryTime\":1901}These requests now take almost 2 seconds each. Since Cloudflare Workers have a Smart Placement feature I wanted to try that out to see if it would have any meaningful impact.Testing Workers and Smart PlacementAfter enabling the feature, Cloudflare adds a cf-placement header to all requests so you can pretty easily verify where your worker has been placed.$ curl -v https://workers-mongodb-demo.alex-fbd.workers.dev/...&lt; cf-placement: local-YYZ...{\"movie\":{\"title\":\"The Room\",\"imdb\":{\"rating\":3.5,\"votes\":25673,\"id\":368226}},\"queryTime\":2029}I ran many tests, but my response times were always the same. Initially I thought it was an issue with the Smart Placement feature, but after reviewing with a Cloudflare team member it seems Smart Placement looks at your actual traffic patterns to determine where to place it, so I’d need traffic across many regions to trigger it.Maintaining State with Durable ObjectsThe nature of Workers is to provide “serverless execution environments”, so they’re likely stateless and would require connections to be re-created for each request. If we could create and reuse our MongoClient and associated connection pool, maybe our round trip times could be improved by reducing our cold-start times.Durable Objects - which are described as being a “special kind of Cloudflare Worker which uniquely combines compute with storage” - seem like they might be suitable for our needs. The tutorial is a great resource to get us up and running quickly, which I’ve used to adapt our previous MongoDBConnector implementation:// src/MongoDBDurableConnector.tsimport { DurableObject, DurableObjectState } from \"cloudflare:workers\";import { MongoClient } from 'mongodb';interface Env { MONGODB_URI: string;}export class MongoDBDurableConnector extends DurableObject { private env: Env; private client: MongoClient; constructor(state: DurableObjectState, env: Env) { super(state, env); this.env = env; this.client = new MongoClient(this.env.MONGODB_URI); } async getMovie() { try { const queryStartTime = Date.now(); await this.client.connect(); const database = this.client.db(\"sample_mflix\"); const movies = database.collection(\"movies\"); const query = { title: \"The Room\" }; const options = { sort: { \"imdb.rating\": -1 }, projection: { _id: 0, title: 1, imdb: 1 }, }; const movie = await movies.findOne(query, options); const queryTime = Date.now() - queryStartTime; return { movie: { ...movie }, queryTime }; } catch (error) { console.error('MongoDB error:', error); throw error; } }}Let’s adapt our Worker code to be able to use either a Durable Object or the default at runtime by interpreting a query string parameter:// src/index.tsimport { MongoDBConnector } from './MongoDBConnector';import { MongoDBDurableConnector } from './MongoDBDurableConnector';interface Env { MONGODB_URI: string; MY_DURABLE_OBJECT: DurableObjectNamespace&lt;MongoDBDurableConnector&gt;;}export default { async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise&lt;Response&gt; { const { searchParams } = new URL(request.url) let durable = searchParams.get('durable') try { let proxy = null; if (durable === 'true') { const id = env.MY_DURABLE_OBJECT.idFromName(\"mongodb-connector\"); proxy = env.MY_DURABLE_OBJECT.get(id); } else { proxy = new MongoDBConnector(env); } const result = await proxy.getMovie(); return Response.json(result); } catch (error) { console.error('Error:', error); const message = error instanceof Error ? error.message : 'Unknown error'; return new Response(`Error: ${message}`, { status: 500 }); } }} satisfies ExportedHandler&lt;Env&gt;;// need to export durable object from entrypointexport { MongoDBDurableConnector };We’ll also need to update our wrangler configuration to ensure we’ve setup the appropriate bindings for our Durable objects:/** * wrangler.jsonc */{\t\"$schema\": \"node_modules/wrangler/config-schema.json\",\t\"name\": \"workers-mongodb-demo\",\t\"main\": \"src/index.ts\",\t\"compatibility_date\": \"2025-03-21\",\t\"compatibility_flags\": [\t\t\"nodejs_compat\"\t],\t\"durable_objects\": { \"bindings\": [ { \"name\": \"MY_DURABLE_OBJECT\", \"class_name\": \"MongoDBDurableConnector\" } ],\t},\t\"migrations\": [ { \"tag\": \"v1\", \"new_classes\": [ \"MongoDBDurableConnector\" ] } ]}Once our code is pushed and the Workers CI integration picks up the changes, we can test this out by passing durable=true to our Workers URL:$ curl https://workers-mongodb-demo.alex-fbd.workers.dev/?durable=true{\"movie\":{\"title\":\"The Room\",\"imdb\":{\"rating\":3.5,\"votes\":25673,\"id\":368226}},\"queryTime\":317}&lt;repeat about 5 times&gt;$ curl https://workers-mongodb-demo.alex-fbd.workers.dev/?durable=true{\"movie\":{\"title\":\"The Room\",\"imdb\":{\"rating\":3.5,\"votes\":25673,\"id\":368226}},\"queryTime\":35}Well that’s a heck of a lot better! Using Durable Objects we were able to get the response time down almost 10x!I ran a number of tests and periodically you’d still get a cold-start spike, but most requests benefit from the reduced latency maintaining a stateful Worker via Durable Objects provides.It is worth calling out that Durable Objects come with some limitations such as a soft limit of 1,000 requests per second, but for most use cases this is likely sufficient. I encourage you to try this out on your own and see how it works for you." }, { "title": "Cloudflare Workers and MongoDB", "url": "/blog/2025/03/25/cloudflare-workers-and-mongodb/", "categories": "MongoDB", "tags": "mongodb, drivers, node, nodejs, javascript, typescript", "date": "2025-03-25 13:21:42 -0400", "snippet": "Previously I wrote about Why Cloudflare Workers Don’t Work With MongoDB, but since then the Cloudflare team has done some great work to add support for the missing Node.js features MongoDB’s driver...", "content": "Previously I wrote about Why Cloudflare Workers Don’t Work With MongoDB, but since then the Cloudflare team has done some great work to add support for the missing Node.js features MongoDB’s driver required to operate successfully from Cloudflare Workers: cloudflare/workerd#3315: add node:net module cloudflare/workerd#3594: implement TLSSocket and connect from node:tlsWere these changes sufficient to make Cloudflare Workers and MongoDB Atlas work together? Let’s revisit the example from the previous blog post to verify:Sample ApplicationOnce again, we’ll test the latest iteration of Cloudflare Workers by customizing the compatibility flags and compatibility date in our configuration:wrangler.tomlname = \"mongodb-cloudflare-example\"main = \"src/worker.ts\"compatibility_flags = [\"nodejs_compat_v2\"]compatibility_date = \"2025-03-20\"[vars]MONGODB_URI = \"mongodb+srv://...\"src/worker.tsimport { MongoClient } from 'mongodb';export interface Env { MONGODB_URI: string;}let client = null;export default { async fetch(request: Request, env: Env): Promise&lt;Response&gt; { client ??= new MongoClient(env.MONGODB_URI, { maxPoolSize: 1, minPoolSize: 0, serverSelectionTimeoutMS: 5000, }); const db = client.db('test'); const coll = db.collection('test_workers'); await coll.drop().catch(() =&gt; null); await coll.insertOne({ a: new Date() }); const result = await coll.findOne({}); return Response.json(result); },} satisfies ExportedHandler;package.json{ \"name\": \"mongodb-cloudflare-example\", \"version\": \"0.0.0\", \"type\": \"module\", \"private\": true, \"scripts\": { \"start\": \"wrangler dev\" }, \"dependencies\": { \"mongodb\": \"^6.15.0\" }, \"devDependencies\": { \"wrangler\": \"^4.4.0\" }}To test the code above you would need to do the following:npm installnpm startThis will launch Wrangler, the CLI for working with Cloudflare Workers.EvaluationNow that our worker is running locally, it should be accessible via http://localhost:8787. The worker logic we wrote in wrangler.ts should perform the following actions: connect to the MongoDB cluster via the connection string configured in the MONGODB_URI environment variable (setup in wrangler.toml) drop the test_workers collection in the test database insert a new document in the test_workers collection retrieve the inserted document from the test_workers collection return a JSON representation of that documentLet’s try it out and see what happens:$ curl localhost:8787{\"_id\":\"67e2e4bb377816f2a78db326\",\"a\":\"2025-03-25T17:15:39.957Z\"}SUCCESS!We were able to connect to our cluster (using SCRAM authentication) to interact with our data via the MongoDB Node.js driver from a Worker.ConclusionExcitement for Cloudflare Workers support for MongoDB has been around in the MongoDB developer forums since May, 2023. As the Product Manager for MongoDB’s JavaScript developer experience I’ve possibly been making more noise about this issue than most - including the initial blog post. I shared this with the Cloudflare team in a bug report on the workers-sdk, which ultimately triggered a discussion on the workerd project that may have prompted the ensuing engineering effort.I really look forward to seeing the amazing opportunities this integration can unlock for MongoDB developers that want to take advantage of the power and flexibility of Cloudflare Workers!" }, { "title": "Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals! (Sierra On-Line) - 1989", "url": "/blog/2025/03/14/leisure-suit-larry-iii/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, played:DOS, SCI", "date": "2025-03-14 07:58:17 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Universe (Core Design) -...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Universe (Core Design) - 1994Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals! (Sierra On-Line) - 1989→ Pepper's Adventures in Time (Sierra On-Line) - 1993 Article 95 of 96 in this series.Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals is a graphical adventure game designed by Al Lowe and published by Sierra On-Line for DOS, Atari ST and Amiga in 1989 as the third entry in their Leisure Suit Larry series.Passionate Patti in Pursuit of the Pulsating Pectorals! is the third game in Al Lowe’s Leisure Suit Larry series. Larry Laffer has finally found the woman of his dreams, and can happily live with her together on the beautiful tropical island… until he gets thrown out of the house by his wife. His boss, who happens to be his (now ex-) father-in-law, fires him. Larry is all alone, without a woman, without a job, on an island that has long ceased to be a “tropical paradise” and is exploited by entertainers, lawyers, and alike. But never despair! Dressed in his irresistible leisure suit, Larry is about to conquer the world (or at least its female population) anew. Watch out, fairer sex, because Larry is back to his swinging self!The game uses the same text-based interface and the same graphical engine as the previous entry in the series. The structure of the game, however, is more similar to that of the first installment: most of the time, the player is confined to one large area which can be freely explored. Unlike the two previous Larry games, the player does not just control Larry, but also - in the second half of the game - the enigmatic and beautiful pianist Patti, helping them to reach an ending that will finally bring happiness into Larry’s life.1As with any title in the Leisure Suit Larry series, this game isn’t for kids. The subject matter is mature, the jokes are crude and the themes are sexually explicit. This doesn’t detract from the experience in any way though - this is probably what drew you to this game in the first place so you know what you’re in for.If you start your game by poking around the menus, one of the first options you’ll find is the expletive configuration screen. Make this anything you want - Larry won’t censor you ;)Once you’ve got your favourite expletive configured, you’ll start exploring the island. It made me chuckle every time this popped up in conversation, so I have to applaud the design decision they made with this mechanic.Your objective isn’t really clear, so you start roaming around the small island to see what’s available. I’m not sure if it’s clever or not, but the game’s manual is sort of required reading to get you started, but the way it’s presented also isn’t very clear.You’ll need to read through “Nontoonyt Tonite: Your Guide to the Island” (the game manual) as it sort of lays out your objectives, and acts as copy protection as well.This game manual is the key to many of the game’s puzzles. Personally I think it’s relied upon too heavily, and some of the clues it contains are maybe too well hidden. For example, at one point you’ll need to make a grass skirt for a disguise, but in order to do this you need to: find the grass find a knife sharpen the knife cut the grass WEAVE GRASS INTO SKIRTYou’re sort of lead towards that last step by the inclusion of “Native Grass Weaving Lessons” in the community calendar of the manual. Maybe that’s good puzzle design - maybe it’s too obscure - you decide.As you progress you’ll meet various women that you can interact with. Each of them typically sets you up for some larger fetch quest, which on completion results in you getting to “interact” with them further (wink wink, nudge nudge).Being a text parser driven game, Larry (and later Patti) interact with the game world based on what you type in. I’ve played a lot of Sierra adventure games, and though many games can be a bit rigid as to what they’re willing to accept, I really found progressing in this game to be frustrating.Many interactions just aren’t obvious. This might just be a lack of patience on my part, but I relied pretty heavily on the walkthrough while playing through this game.Most of the puzzles were obtuse, and more often than not the solutions were cryptically laid out in the game manual.The goal of the game ends up being that Larry needs to find his way into the spa, figure out how to get into the locker and get himself pumped up.This will enable him to hook up with the aerobics instructor, and then eventually meet up with Passionate Patti - the namesake of this game.Patti and Larry will spend the night together, but Patti calls out the wrong name in her sleep. This upsets Larry, so he silently slips out of bed, gets dressed and leaves.Apparently Patti is in love with Larry at this point and the mission for the rest of the game is to go find where he’s run off to.The Patti portion of the game is fairly short, but immensely frustrating.Once you take control of her and spot Larry (through the telescope on her balcony) heading to the far end of the island, your mission is to try and catch up to him.Doing this involves navigating through a maze - which I continue to hate.The solution to this maze is - you guessed it - hidden in the game manual. The lyrics to the song that is scattered throughout the manual has capitalized letters that refer to cardinal directions.Stringing this together is the solution to the maze, but you can’t make it all the way through unless you remembered to pick up the bottle on wine in Patti’s room and fill it with water.If you make it through the maze, you’ll need to figure out how to cross the chasm between two trees. Taking the hemp and weaving it into rope that you tie to a rock and throw over the chasm might make sense … but you’ll fall to your death every time you try to cross.You’ll need to rip a chunk of your dress to build a harness that you then tie to the rope so you can cross. Who would think to do that? Maybe it was also hidden in the manual somewhere … but I reached for the walkthrough instead.Once Patti makes it across the chasm and finds her way to the river, there’s a minigame you’ll be forced to play through.You basically just have to veer left or right to avoid obstacles, but it takes a long time and isn’t really all that much fun.I had to lower the game speed to make it through, and thankfully you can save and load your game on the river so you don’t lose too much progress every time you die … and you will die … often.The endgame is fairly straightforward … assuming you remembered to pick up the magic marker on the island before you made your way to the maze.Using the magic marker sort of “warps” you to the Sierra studios, where you walk through the sets of some other games.This part is actually kind of cool, and the background music represents the games you’re walking through. The final set you visit is Space Quest, which you need to float over to a plug and unplug to finish the game.After the final scene Larry and Patti meet Roberta Williams and she decides to have them write a game for her - so that’s where the story ends.I personally like Al Lowe’s sense of humour, but I really didn’t enjoy this game. I appreciate that they tried to build a game around the manual that comes with the game, but it made for a very broken gaming experience.You have to refer back to the manual way too often, and there are too many dead ends and dead man walking scenarios that require you to backtrack or restart.Overall this entry in the series just wasn’t all that much fun. I am looking forward to the later entires (LSL6 and LSL7) in the series as I have much fonder memories of them.Game Information Game Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals Developer Sierra On-Line Publisher Sierra On-Line Release Date 1994 Systems DOS, Amiga, Atari ST Game Engine SCI My Playthrough How Long To Beat? 4 hours Version Played DOS via ScummVM Notes Walkthrough, Manual, Manual / Protection ScoreSee here for a refresher on how we’re scoring these games. Graphics (15) 6 Sound (10) 5 Plot / Progression (25) 14 Characters / Development (15) 6 Gameplay / Experience (15) 6 Replayability (5) 1 Impact / Impression (10) 3 Bonus / Surprise (5) 1   42% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Universe (Core Design) - 1994", "url": "/blog/2025/02/02/universe/", "categories": "Let's Adventure!", "tags": "adventure, Core Design, played:Amiga", "date": "2025-02-02 07:56:58 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Neuromancer (Interplay P...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Neuromancer (Interplay Productions) - 1988Universe (Core Design) - 1994→ Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals! (Sierra On-Line) - 1989 Article 94 of 96 in this series.Universe is a graphic adventure game developed and published by Core Design for the Amiga, Amiga CD32 and DOS platforms in 1994. It was Core Design’s second and last effort in the adventure game genre after Curse of Enchantia, of which it was originally planned to be a sequel.Universe is a space opera that tells the story of Boris, a young man who has been summoned from modern Earth to another universe, where he is destined to become its long forecast savior from evil. The game received mostly positive reviews.You are Boris Verne, a normal guy who has been cast in a parallel universe because of your uncle’s Virtual Dimension Inducer. There you’ll have to find the fabled lost star as well as a way to defeat the Golden King… This is a classic old-style adventure game with a point &amp; click interface. It uses the Rotoscope system to manage game characters and scores really beautiful 256-colour graphic.1Another release from the fine folks at PrestigeThis is the first game on my list that I’ve tackled so far that was available on the Amiga CD32, so I figured it would be worth trying to play through that version if possible.I’ve been using vAmiga for my Amiga games, but I couldn’t get CD32 working (it’s possibly just not supported). I then tried FS-UAE, but didn’t have a kickstart ROM for it … so I ended up just watching a bit of a longplay on YouTube just to get a sense of what’s different.Seems the only difference was CD quality audio, which comes through nicely in the videos. The sound design in this game is pretty good, so even without the CD audio the ambient background music did a great job of setting the tone for each scene in the game.Since the game starts off with a long intro sequence (which is also spelled out in the manual) I sort of expected the story to take place across multiple chapters - but maybe the chapter in this case referred to the whole game and subsequent chapters would have been sequels.After the intro you find yourself stranded all alone in space. There’s a futuristic city behind you that you can’t reach, and if you wander off in the other direction you can fall off onto a barren planet surface you can explore.The game’s interface is fairly intuitive if you’ve played Point and Click Adventure games in the past, as you’ll be given a verb bar with common actions you can perform (LOOK, PICK UP, TALK, etc). There is an additional OPTIONS item that links to a submenu of actions such as THROW, JUMPand INSERT.You’ll find you actually use these additional actions a lot more that the primary actions, so you’ll be clicking through to the submenu fairly frequently.This submenu also includes an INFO item which goes to a third submenu where you can save/load your game or redisplay the initial scene info. This is useful if you accidentally clicked away the description when you first entered the screen.Once you figure out how to navigate the game world (including jumping to the spinning rock, then jumping back to the floating platform) and extend the bridge to the first town, you’ll be able to explore the game world a bit further.Universe is visually impressive, and most scenes are extremely detailed in all their pixel-art glory. When you’re not roaming around looking for items to pick up, you’ll engage with various alien races using a fairly straightforward conversation system.As you progress through the game, there are occasionally “cut scenes” that help progress the plot. Boris will have to escape the first world and head towards the Wheelworld to learn more about the tyrannical Emperor Neiamises, the secret order of the Healers and Baron Keelev.For adventure game fans, the story really takes center stage and makes the gameplay just a vehicle through which the story can unfold.This game feels like it’s going to be a massive, sweeping experience as you’re playing through it, but there’s actually not all that much you need to do.There are several items you’ll need to pick up as you explore, and the game does include a few item combination style puzzles as a result. Examining most items will make it fairly apparent what you’re supposed to do with them though, so you typically won’t find yourself scratching your head for too long trying to figure out what to do next.One of the nice touches of Universe is the fact that the cursor will change into a thumbs up or thumbs down based on the action you just performed. Given how bad the pathfinding can be on some screens, it’s very easy to issue a command and then Boris sort of just stands there until you move a little in one direction and try again.Since the cursor will change to indicate success or failure, if you try something and it works but nothing happens, you know you just need to try it again from a different position to progress.For anyone that’s played this style of game before, it’s not overly difficult - but there are couple of arcade sequences that can be a pain in the ass.On the Wheelworld you’ll meed a healer who’s had their hand stolen by thieves that take off on jetpacks. You’ll need to jump into your PTV and fly after them, shooting them down or running them into the sides of buildings.It’s very easy to die in this sequence and I must have done it a dozen or so times before I finally got through it. It wasn’t fun - it was just sort of tedious.I appreciate when adventure games have the self awareness to allow you to skip these sequences (like you can skip playing poker in Police Quest 1), but Universe isn’t one of those games.When Boris dies (and he will), the game over screen makes fun of your incompetence and will occasionally give you a clue as to what you should have done instead. You can really feel the inspiration from Sierra Online here.Like with any adventure game, save early and save often. Since I was playing the Amiga version, this mean having to eject the game disk, insert the save disk, save, eject and reinsert the game disk again. Modern gamers are so spoiled …There are a number of planets you’ll be able to explore once you have access to a PTV. Each planet you have access requires you to go through the same motions of navigating to it, descending to it, picking a quadrant to explore, then exploring.When you first get access to the map of the Universe it can feel a bit daunting, but most of the available planets has very little to do or see. You’ll need to backtrack occasionally to solve fetch quests or after you’ve unlocked various story elements to open up new dialogue options with certain characters.Aside from running back and forth between a handful of planets, the majority of this game’s plot advances through conversations with various characters you’ll meet along the way. Boris will slowly learn more about his place in the Universe and that he’s expected to take down the Emperor.Character interactions occur via a branching dialogue system, which frequently will result in a game over if you pick the wrong options. Though having to reload can be frustrating, the feedback the game gives you when Boris dies is at least entertaining.Universe is mostly straightforward, but the final sequences ratchet up the complexity. You’ll need to figure out how to open a portal to another dimension to retrieve a power stone. Once you find the various pieces you’ll need (on multiple planets), COMBINE them and use them in the right place, you’ll need to solve a puzzle.This puzzle involves running over various stones to disable 6 lasers, but if you don’t do it fast enough, they reset and you start over. This took … forever. Once you are able to do it, you have to throw a rock at the power stone, then pick it up and run so you’re not immediately captured by a bunch of ghosts.With the power stone in hand and back in the right dimension, you’ll make your way into the Emperor’s palace, navigate a short maze, expose the Baron for wanting to steal the Emperor’s power, then once the Baron is vanquished, defeat the Emperor.Yay, you’ve saved the Universe and your uncle shows up to take you back home.Universe was surprisingly good. I’d never heard of this game and didn’t know what to expect, but the story and characters drew me in immediately. The game is beautiful, the sound effects and ambient music are fitting and really enhance the gaming experience.Having watched a couple of let’s plays of the game it seems you can burn through it in a couple hours if you know what you’re doing - but to just explore the Universe and naturally experience the game takes much longer.The star of this show is definitely the story, and you can feel the Star Wars influences throughout. I found myself getting caught up in the plot and looking forward to uncovering more details about the worlds I was exploring and the characters I’d meet.If you love this genre and are looking to experience a great Point and Click Adventure you likely wouldn’t have, give Universe a go. You won’t be disappointed (though you may occasionally be frustrated).Game Information Game Universe Developer Core Design Publisher Core Design Release Date 1994 Systems Amiga, Amiga CD32, DOS Game Engine   My Playthrough How Long To Beat? 5 hours Version Played Amiga via vAmiga Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Graphics (15) 10 Sound (10) 7 Plot / Progression (25) 19 Characters / Development (15) 10 Gameplay / Experience (15) 10 Replayability (5) 1 Impact / Impression (10) 7 Bonus / Surprise (5) 2   66% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Neuromancer (Interplay Productions) - 1988", "url": "/blog/2025/01/22/neuromancer/", "categories": "Let's Adventure!", "tags": "adventure, Interplay Productions, Mediagenic, played:Amiga", "date": "2025-01-22 05:50:53 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Return of the Phantom (M...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Return of the Phantom (MicroProse) - 1993Neuromancer (Interplay Productions) - 1988→ Universe (Core Design) - 1994 Article 93 of 96 in this series.Neuromancer is an adventure video game developed by Interplay Productions and published by Mediagenic (a brand name of Activision). It was released in 1988 for the Amiga, Apple II, Apple IIGS, Commodore 64, and MS-DOS. It was loosely based on William Gibson’s 1984 novel of the same name and set within both the fictional “real world” and the extensively realized and detailed world of cyberspace.In a grimy future, you play Case, a cyberspace cowboy who finds himself broke in Chiba City. Find yourself a laptop and the right software for it so you can hack into databases around the city to regain your access to cyberspace. Buy and upgrade brain implant chips to augment your computer skills, and sell your body parts to afford new technologies. When you get to cyberspace, you’ll take on the nasty AIs that guard the most important databases. Within all this information is the bizarre secret of this world of inbred corporations.1I played the Amiga version, which starts off with a Paradox cracktroThough I haven’t re-read the source material in well over 20 years, I have very fond memories of Neuromancer. That book kicked off a lifelong love of the cyberpunk genre, so I’ve been looking forward to playing this game since I kicked off this series.It doesn’t seem to follow the events of the book at all, but definitely exists in the same universe. You start off in a bar, where you apparently spent the night that you owe the bartender money for.You’ll also have a chance to explore the limited interface, which includes a PAX button. PAX is sort of like a basic bulletin board system, that you can read news on or access your banking information. Since you start with no money in hand, you’ll need to access your bank account and transfer all your money.From the initial PAX screen you’ll learn some link codes, and also that someone named Shin has your cyberdeck.Since I played a cracked version I didn’t need to refer to the code wheel that you’d typically need to access the PAX.Yes, that’s a door below you you’ll need to go throughNavigating the game world is done using the mouse. It’s not always obvious what/where the exit to a room is, especially when there’s door at the bottom of the screen. Once you get used to keeping an eye out for these tiny slivers of doorway though it’s not too difficult to navigate the game world.The majority of the game is spent “online”. You’ll need to first get your deck back from Shin, then find a location that has jack you can use. The most convenient location for this is the Cheap Hotel, and you’ll spend a good portion of the game here navigating various online systems, then eventually cyberspace.Gaining access to a system requires a link code and a password. These are scattered throughout various messages you can read online, and are fairly straightforward to find - just make sure you write them down.Going online costs money, and the longer you spend online - the more money you’ll gradually lose. Gaining additional money in this game can be done in one of two ways. Either you find an account online you can transfer money out of (into your account), or you sell body parts.At the Body Shop, you can incrementally sell off your body parts for cash. The more parts you sell, the lower your HP (constitution?) will drop. You’ll need this later in the game when you need to start attacking databases and ICE, but you can buy your body parts back as you get more money to regain your HP.You piece the plot of the game and your objectives together slowly by reading through the various messages on each system you gain access to. There aren’t really that many actions you can take on these systems other than reading through the contents, but many will have software (“softwarez”) libraries you can access.Your deck has limited storage, so you’ll need to be mindful of what software you’re carrying and how much space you have available. As you download better versions of your software, you can delete the older versions to make room.There are a handful of characters and machines you can interact with as well using the conversation system. Typically these involve cycling through a pre-determined list of options you can ask them about, but some also have a free-form text field you can fill out.This allows you to ask about specific topics, which you’ll either learn from other characters or from the messages you read on bulletin boards.The more time you spend online, the lower your finances will fall. Thankfully there are a couple of opportunities to infiltrate banks and transfer (steal) fairly large balances of credits to your account.You’ll need this money to purchase skills, upgrade your cyberdeck and buy various items. If you successfully complete these missions, remember to access your account via the PAX to download your credits so you can go shopping.Though there aren’t that many items in the game you need to interact with, there are a couple of fetch quests you’ll need to undertake. These typically just involve going back and forth between characters and asking questions, or going online and changing some information about a character to get them arrested (so they’re not blocking a doorway).For this playthrough I found myself leaning on the walkthrough pretty heavily for these sequences as it wasn’t always obvious what I was supposed to do.Once you upgrade your deck to one that can access cyberspace, you’ll be able to jack into the matrix and access various databases. Similar to the sites you have access to via the comlink systems, once you enter a database you’ll be able to read messages and download software.The difference though is you’ll need to defeat the ICE (Intrusion Countermeasure Electronics) first.Fighting ICE is done with ICE-breaking software. This software is classified loosely into 3 categories: Good, Better and Best - which you’ll learn from one of the message boards.The manual sort of calls out that ICE-breaking requires a lot of trial and error, and the best way to gain access to a database is to just try various combinations to see what’s effective. As a result, make sure you save before each battle - just in case.Death is not permanent - but it is expensiveIf you fail to break the ICE and experience brain death, you’ll respawn in the Body Shop - minus all your money. This is VERY difficult to recover from, so you’re better off to just reload a previous save and try again.Assuming you haven’t sold all your body parts, you could do this to gain a little extra cash, but honestly it’s not worth it … just reload.Your objective will ultimately be to seek out and destroy all the AI in cyberspace. There are two competing AI - Greystroke and Neuromancer - that are trying to get the other to join them to dominate cyberspace. At least that’s what I think is happening …Each AI is hidden behind an ICE you’ll need to break, and the later in the game you get, the harder they are. One aspect of this game that I didn’t realize was that you’ll need to jack out of cyberspace periodically to recover your HP.After each ice confrontation if you try to access another database, it looks like your “health” is full - but it actually isn’t.I think it was after I’d just barely gained access to the KGB system, I moved onto the next database and found no matter what I tried, I’d die in one shot. It must have taken me a few weeks of on-and-off messing around reading other reviews and blogs (like the Adventurer’s Guild review) before I finally realized this was what you needed to do.Defeating AIs is done with “skills”, which you buy and upgrade throughout the game. When you finally beat Neuromancer, you’ll be thrown onto a beach - which is just an illusion that it has created to trap you.Using some combination of skills allows you to escape, and once you do so you’ll have officially finished the game.Overall, Neuromancer is a fun game. There are a handful of distinct gameplay mechanics that aren’t that hard to learn, but do take a while to master.There is occasionally background music, which isn’t bad - though I think it plays more prominently in other versions (like the C64). The Amiga version I played was mostly quiet, save for the title screen and once in a while.I’m fairly certain this was one of the first games I started playing for this series, but I did so using GSPLUS and had a number of issues that made the experience cumbersome. I really want to experience as many of these games on as many emulated systems as possible, so I stubbornly just kept trying to make the GSPLUS experience happen - and it wouldn’t - so I gave up on the game for a number of years.I’m really glad I circled back to it, as it really is a lot of fun. Though the similarities are not obvious, playing Neuromancer actually sort of reminded me a bit of Uplink: Hacker Elite - which I LOVE! I think it’s just the whole “cruising cyberspace and hacking” simulation portion of the game, but I found both to be equally enjoyable so figured it was worth calling out.There was an attempt to reverse engineer and reimplement this game for Windows called Reuromancer, however I’m not sure how playable this engine actually is. If you have Google Translate, the development blog (which is in Russian) is a great read.I would highly recommend giving this game a chance. It can be extremely difficult and unforgiving, but if you like to read, the story is interesting and the gameplay is fairly accessible.If you’re looking for something to read instead, go grab the book!Game Information Game Neuromancer Developer Interplay Productions Publisher Mediagenic Release Date 1993 Systems Amiga, Apple II, Apple IIgs, Commodore 64, DOS Game Engine   My Playthrough How Long To Beat? 12 hours Version Played Amiga via vAmiga Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Graphics (15) 8 Sound (10) 6 Plot / Progression (25) 17 Characters / Development (15) 9 Gameplay / Experience (15) 12 Replayability (5) 3 Impact / Impression (10) 7 Bonus / Surprise (5) 2   64% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Return of the Phantom (MicroProse) - 1993", "url": "/blog/2024/12/30/return-of-the-phantom/", "categories": "Let's Adventure!", "tags": "adventure, MicroProse, played:DOS, MADS", "date": "2024-12-30 12:15:08 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Plan 9 from Outer Space ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Plan 9 from Outer Space (Gremlin Ireland) - 1992Return of the Phantom (MicroProse) - 1993→ Neuromancer (Interplay Productions) - 1988 Article 92 of 96 in this series.Return of the Phantom is a point-and-click graphic adventure game developed and published by MicroProse in 1993. It was produced by Matt Gruson and designed/written by future James Bond novelist Raymond Benson. It is based on the 1910 novel The Phantom of the Opera by Gaston Leroux.The game was the second graphical adventure game developed by MicroProse, following Rex Nebular and preceding Dragonsphere. It was developed using the MicroProse Adventure Development system (MADS), and made use of 256-colour graphics. A CD version featuring full voices for the characters was also released - which is the version I played.It is the present time (1993), and many people are about to enjoy the performance of the opera “Don Juan Triumphant” at the Palais Garnier. However, that piece of art will soon become covered with the blood of innocents, as the great ceiling chandelier crushes down on the crowd.The player controls Raoul Montand, a detective who’s been asked for help by his old friend Monsieur Brie, the manager of the Opera. Bringing Raoul to a crime scene, he leaves him in hope he’ll find some clues and prevent this terror from happening again. Supposedly, the disaster was caused by a being known as the Phantom of the Opera, a mysterious creature who has been haunting the opera house since 1881. The detective is about to find out what secrets lie beneath the surface, looking for clues in the present time and traveling back to 1881.1The game’s intro sequence is extremely long, but it sets the stage appropriately. Though I’ve heard of the Phantom of the Opera and have seen it live at lest once in my life, the first thing that jumped out was how little I actually knew about the story.My memories seem limited to just the character in the mask and cape that lives in the basement and plays the organ … so really you could have replaced the Phantom with literally anything else and this game’s story would have had the same impact.Once you gain control of Raoul following the intro, you walk around the opera house and can interact with a handful of characters. These sequences are the typical dialogue trees you’ll find in other adventure games, and they help advance the plot and give you clues as to what you need to do next.If you play the CD version of the game, these interactions are all fully voice acted - and the voice acting isn’t all that bad. Aside from a couple actors hamming it up a little, they definitely add to the experience and make interrogations more enjoyable.Moving around the opera house is pretty straightforward, and exits are clear marked. If you can go in some direction, the cursor will change to a GO icon with an arrow indicating which direction you can move in.You also have a verb list to select from, though you’ll predominantly just be using LOOK, TALK TO and TAKE.The game is split up into three parts. The first part has you roaming about the opera house and talking to people, learning about the history of the Phantom and getting used to the game. Eventually you’ll make your way up to the rafters, where you encounter the Phantom, get into a fight and he throws you off.You’ll hit your head, and when you wake up you’ve traveled back in time to 1881 and have a completely different Phantom of the Opera mystery to solve.This second part of the game is just an extension of the first - but in the past. I believe you’re trying to change the events of the original Phantom of the Opera to prevent a murder in your present time.The game then becomes a series of fetch quests and interrogations. You’ll find out that the Phantom is leaving notes that indicate what his demands are in a private opera box that should always be locked. Madame Giry has the only key assures you the box is locked, but somehow the Phantom is able to come and go as he pleases.Since this game takes place in an opera house, eventually you’ll get a chance to watch the opera - but first you’ll need to find some items from your time. Madame Giry seems to know you’re from a different time, and for some reason even though you’ve got a ticket to the opera she won’t unlock the door until you fetch these items.You’ll find coloured frames in the opera, which are for changing the colour of the lighting. These wouldn’t exist in 1881 so it’s weird you can find them - but they’re here - and you need to find at least 3 of them to proceed.The leading lady - who looks exactly like the leading lady in the present - gets kidnapped and you’ll then need to go find her.This game really holds your hand for the most part. Every time you need to do something to progress, the character interactions make it very clear what your next objective is. You’ll never feel lost, and if you do backtracking isn’t a major issue as there are only about a dozen or so screens to navigate.You’ll be told to go find Jacques, who you’ll find has been murdered. Next to him is a skeleton key (how convenient), which you can use to unlock the secret door in box 5, which is how the Phantom has been coming and going undetected.This will lead you under the opera to the catacombs, which is a giant maze.Though I hate mazes, the catacombs were fairly straightforward. There is nothing chasing you and I don’t think there’s any risk of dying, so I turned DOSBox to turbo and just wandered about (very quickly) until I found where I needed to go.To escape the catacombs you’ll need to solve a couple of puzzles. This is the only place in the game where there are puzzles, so it was a nice change of pace and didn’t feel (too much) like busywork.The first puzzle requires you to flip 4 switches in order to unlock the door. The switches hide letters of the alphabet, but what word should you try? The Phantom’s real name is Erik, so it seemed logical that that’s what the password would be.If you enter the letters out of order or incorrectly, gas enters the room through a vent and kills you. Thankfully, death in this game just respawns you in the current room and you can try again.The second puzzle is a sliding tile puzzle where you need to recreate the Phantom’s mask. Once done correctly, a trap door opens in the floor you can escape through. This is done by combining a hook and rope to make a grappling hook, which you can THROW to climb out.You don’t actually have to interact much with your inventory but I found the system worked rather well when you did. Whenever you find a new item, you’ll automatically LOOK at it, so if it’s a letter or note, you’ll read it.If you select an item in your inventory, there’s a preview image of it in one view, with a set of targeted verbs specifically for that item in a second view.I really like this system as it allows for a larger verb list without cluttering the main interface. It also makes it obvious what you can do with an item.The final showdown with the Phantom eventually takes place on top of the chandelier above the seats in the opera (the one that crashed down at the beginning of the game). There’s a bit of a scuffle, you get on top of the Phantom, rip off his mask and the chandelier comes crashing down.You then wake up back in the present.After a brief exchange, Raoul decides to double check the book in the library to see how the Phantom died, and the ending has apparently now been changed. You’re the hero of the past, though you apparently also died in the fall along with the Phantom.I really don’t know anything noteworthy about the source material this game is based on, and didn’t find the story all that interesting. Though there’s a time travel story here, it sort of felt out of place. The entire game basically takes place in 1881, and the events of the present really aren’t necessary.The game engine is quite good, and hopefully one day this will be officially supported in ScummVM - but for now you can play this just fine in DOSBox.Overall the game was fine, but I wouldn’t play it again.Game Information Game Return of the Phantom Developer MicroProse Publisher MicroProse Release Date 1993 Systems DOS Game Engine MADS My Playthrough How Long To Beat? 2.5 hours Version Played DOS via DOSBox-X Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Graphics (15) 10 Sound (10) 7 Plot / Progression (25) 14 Characters / Development (15) 7 Gameplay / Experience (15) 6 Replayability (5) 0 Impact / Impression (10) 3 Bonus / Surprise (5) 1   48% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Minor Hockey Budget Management and Automation", "url": "/blog/2024/12/29/minor-hockey-budget-management-and-automation/", "categories": "Hockey", "tags": "budget, treasurer, hockey", "date": "2024-12-29 08:12:07 -0500", "snippet": " Download the Hockey Team Budget Template discussed in this articleI’ve been the treasurer for a couple minor hockey teams for the past five years, and though there are resources available to the ...", "content": " Download the Hockey Team Budget Template discussed in this articleI’ve been the treasurer for a couple minor hockey teams for the past five years, and though there are resources available to the parents that choose to assume this role on their kids’ teams, if you aren’t comfortable with accounting or working with spreadsheets the task can be daunting.Every minor hockey association will make some resources available, and Hockey Canada’s MHA downloads currently include a minor hockey budget sheet (XLS and instructions), but again, these really aren’t designed to do anything more than summarize the team’s finances - not track or manage them.Since team treasurers aren’t only accountable to the league and their team’s association, but also the parents it’s important to not only have accurate accounting of revenue and expenses, but also a way to provide transparency.The money you’re handling isn’t yours - it belongs to everyone on the team. If anyone has questions as to what’s being spent on what or how much is left it shouldn’t be hard to answer.To try and make this easier for future team managers and treasurers I’ve created the following Hockey Team Budget Template. Feel free to download/copy/use, and if you have any feedback or questions, shoot me a message.I’ll be going into some detail below as to how you can use this spreadsheet to do the following: Setup the Team’s Budget Manage Parent Payment Schedules Manage Revenue and Expenses Manage a Cash Float Manage Bank Transactions Account for Fundraising and Sponsorships Revise the Team’s BudgetA number of Google Sheets formulas are being used across multiple sheets to provide the automation and calculations. Feel free to inspect any and modify as you like.Note that all names in the examples were generated: Player names: https://www.name-generator.org.uk/quick/ Business names: https://randommer.io/random-business-namesSetup the Team’s BudgetFigure 1: BudgetAs the team treasurer, the first thing you need to work out with the team manager and head coach is how much money the season is going to cost.Most of the information can be copied from previous seasons, but since prices are subject to change year over year you want to always estimate high. For example, if you paid $30K the previous year you may want to bump that to $34K this year (just in case). Always try to estimate a bit high, as he parents on the team have to pay for the season and it’s easier to refund extra money than it is to go back and ask for more 😉.Each section below will match one or more of the numbered sections in Figure 1 above.(1) Figure out how much you’ll need to spendSome expenses to consider when making the budget are: Association fees Practice/game ice fees Jersey/Sock costs Referee fees Timekeeper fees Tryout fees Extra ice rental fees Tournament fees Goalie training Extra training (on-ice or off-ice) and team building Social budget (Christmas and end of season parties) Player gifts Police checks, coaches clinics, certification and training costs Trainer supplies Coaches apparelNot all of these are required, but can be used as a starting point. Under the Expenses section of the Budget sheet, just add a new row for each line item you want to track, then copy the first line item as many times as you needAs you add new rows to the Expenses section, the total budget should be automatically updated on the last row of the sheet.(2) Figure out how much money you’ll need to cover costsOnce you have your total expenses plugged in, you’ll need to make sure you collect at least that much money from the parents on the team.For example, if your total expenses are $96,130.00 for the season, you’ll likely want to collect at least $97,000.00.Fundraising and sponsorships can never be guaranteed, but if the team agrees on a certain minimum threshold, plugging those values in will ensure you have enough money to cover costs.From the example above I expect to collect $95,000.00 from the parents directly, with another $10,000.00 from sponsorship and donations, for a total budget of $105,000.000.(3-5) Updates will be automatically tracked as transactions are recordedThe actual amount of money we’ve collected and spent will be summarized automatically based on how we record revenue and expenses on the Transactions sheet. We will also include details for other sources of income that may be harder to track, such as: Current bank balance Cash on hand Total value of outstanding (uncashed) chequesThis gives us a snapshot of our current financials at all times throughout the season. If everything is adding up correctly, the DIFF field should be $0.(6) Expense category budgets can be automatically tracked as wellWe’ll need to know how much money we’ve spent in each category as the season goes on - especially if/when we go over.Once the Budget Left reaches zero, you’ve met or exceeded the budget. I’ve configured conditional formatting rules so it stands out a bit more that you’ve dropped below 50% of your budget.Manage Parent Payment SchedulesFigure 2: RosterMost (if not all) the money for the season comes from the parents on the team, so it’s important to understand how much money that will be, and to keep up with payments.Once you know how much each parent will need to pay, you can work backwards from when all fees should be due to figure out a schedule.For our example, we’ll be collecting $6,125.00 from each family. If the team was finalized in March, and we want all fees to be collected by December, a schedule such as the following might make sense: June 10 CA$800.00 July 10 CA$800.00 Aug 10 CA$1,000.00 Sep 10 CA$1,000.00 Oct 10 CA$1,000.00 Nov 10 CA$1,000.00 Dec 10 CA$525.00 (1, 5, 6, 7) Per-player payment trackingFill out the team roster first. Only the Last Name is actually used elsewhere, and the values for Direct Payments, Other Payments (Not Reimbursed), Paid, and Reimbursements will be calculated for you based on what is recorded in the Transactions sheet.The Outstanding value will begin from what you input as Total (Per Player Rounded) and subtract these transactions to help keep track of what each parent still owes.To clarify terminology: Direct Payments: E-Transfers or cash from parents that are applied directly to player fees Other Payments (Not Reimbursed): Costs parents cover that can be subtracted from fees (ex: they paid for pizza for the team for a social event) Reimbursements: When parents have paid more than the expected fees, and you want to refund them the overage amount directly(2, 3, 4) Total expected revenue from parent collectionsBased on what we calculated in our Budget sheet earlier, we were going to collect $95,000.00 from parents, so this is imported to the Total Expected (Imported) field.We’ve only rostered 16 players this season, so we enter that value into the Total Players field, which we divide the total expected value from to figured out the Expected Per Player total.Once again, it’s easier to refund money at the end of the season than it is to ask for more money if unexpected costs occur, so round up the per-player value slightly to come up with the final Total (Per Player Rounded) value you’ll be collecting from parents.This final value will then be multiplied by the number of players on the team to give you the final Total Expected value.Manage Revenue and ExpensesFigure 3: TransactionsThe Transactions sheet is where day to day revenue and expenses are recorded. If everything is setup properly, just keeping this sheet updated will likely be sufficient to manage your reporting for the season.When you setup your Budget, each line item under Expenses will be available via the Category dropdown when you want to record a transaction now.Let’s walk through some examples of recording to get a feeling for how this works.Example 1: Parent paid directly for team related expenseHere we can a Preseason: Tryout Related Expenses was recorded for $54.00 by a member of the Boyle family. The Paid By dropdown is populated by the Last Name of each player on the Roster sheet.When you specify a family under the Paid By column, that payment will be deducted from that player’s fees automatically. This makes it easier to keep track of how much money that family still owes towards fees if they’re contributing in other ways.Example 2: Parent paid their monthly dues directlyWhen Parent Contributions is selected, the assumption is you’re recording a direct payment towards fees. If you check off the checkbox under the Cash? column, it will be recorded not only as a parent contribution, but will help keep track of your cash float.Example 3: Paying for an expense with a chequeMost teams don’t have access to E-Transfer out of a community (or team) account, and will need to pay for things with cheques. In this case, you just enter the cheque number in the Chq column - and once the cheque has been cashed, click off the Chq. Cashed? checkbox.Under the Budget sheet there is a Uncashed section under Revenue where you can quickly see how much money you have outstanding in cheques that you haven’t reconciled in your bank statement yet.Manage a Cash FloatFigure 4: Cash FloatIf your game officials and timekeepers are paid in cash, you’ll likely need to also manage a cash float. As money comes in from parents, some of that can be requested in cash, which when recorded in the Transactions sheet as Cash? will automatically be updated in the Current Cash field on your Cash Float sheet.Periodically I’ll do a count, which I record as a line item broken down by each individual denomination I have in the float. If my Total matches the Current Cash - everything’s accounted for!Manage Bank TransactionsFigure 5: Bank BalanceI like to have all my teams’ finances in one place, so I’ll copy/paste transaction records from the online banking portal to the Bank Balance sheet.The last value in the Balance field on this sheet is what is reflected on the Budget sheet’s Bank value (using the formula =INDEX('Bank Balance'!D2:D,COUNTA('Bank Balance'!D2:D),1), for anyone that’s curious).If you’re not looking to track things this granularly, the Bank Balance sheet can be ignored and you can just periodically copy the current balance from your bank statement directly into the Bank value of the Budget sheet.Account for Fundraising and SponsorshipsFigure 6: Sponsorship &amp; FundraisingFundraising and sponsorships are a big way teams subsidize the cost of the season to take some of the financial burden off parents.The Sponsorship &amp; Fundraising sheet doesn’t actually feed into any further automation, but is provided as a single location to keep track of these sources of income to make it easier to account for a lump sum you’ll eventually record under the Transactions sheet.Revise the Team’s BudgetWhen you setup the budget at the beginning of the season, you won’t know exactly how much additional money you may be able to raise or how many sponsorships you’ll get. There may also be some additional costs you didn’t anticipate, or potentially forgot all about.As the season goes on, if you need to revise your budget, the most important thing to take into consideration is “can we afford this” - which should be a fairly easy question to answer.As an example, let’s say we want to pay for team pictures which will cost $850.00. Using the Budget sheet, we’d do the following: Add a line item under EXPENSES to add a new entry for Team Pictures, with a Budget of $850.00 Check our updated TOTAL EXPENSES to make sure it’s still below our TOTAL REVENUEI typically italicize expenses that are added after the final budget has been approved so it’s easier to differentiate these items.ConclusionBeing the team treasurer is a volunteer position that comes with a lot of responsibility. At the end of the season, you’re responsible for reconciling the team’s budget and paying parents back for any money that remains.Hopefully using the template I’ve provided will make it a little easier to do this. If you try it out, let me know if it worked for you. I’d love to hear if this makes managing your team’s finances easier 😃." }, { "title": "Plan 9 from Outer Space (Gremlin Ireland) - 1992", "url": "/blog/2024/12/22/plan-9-from-outer-space/", "categories": "Let's Adventure!", "tags": "adventure, Gremlin Ireland, played:Amiga, Gremlin Graphics", "date": "2024-12-22 20:33:08 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← King's Quest III: To Hei...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← King's Quest III: To Heir Is Human (Sierra On-Line) - 1986Plan 9 from Outer Space (Gremlin Ireland) - 1992→ Return of the Phantom (MicroProse) - 1993 Article 91 of 96 in this series.Plan 9 from Outer Space is a point and click adventure game adaptation of the film of the same name. It was developed at the Irish office of Gremlin Graphics for the Amiga and Atari ST, and was released in 1992. The game was published by Gremlin in Europe and by Konami in the United States. A DOS version was also developed, though only released in the US and Europe. Two editions of the game were made available at retail; the more common version was packaged with a VHS copy of the film, while a rarer version contained only the game.The movie; Plan 9…..the critics hated it. But, the producer of the film has noticed that it’s been stolen by Bela Lugosi’s double. Find him. Track him. For God’s sake - just keep a straight head when you enter this part of the movie lot and town. Some of the most misguided people roam here! Most important…..get the film back!1I’ve heard of the movie, and may even have seen it at some point in the past thirty years … but I don’t remember anything about it other than having a legacy of being a terrible movie. This doesn’t really set the stage for a good gaming experience, but here we go anyway.Since my expectations were extremely low for this game to begin with, I figured I should play the Amiga version as my go-to emulator vAmiga has a handy-dandy fast-forward feature.The game manual doesn’t really set the stage for the game, and you’re sort of just dropped into a Movie Producer’s office who tells you you need to get the film back … and off you go.There’s some basic copy protection to kick things off, but I opted for a cracked copy of the game to bypass this. The fine crackers at TKK (only active for a brief period in ‘92 is seems) don’t seem to have included a cracktro, though it seems there are examples of their work if you’re curious.The game’s interface is reminiscent of the MacVenture games, though in this case the vast majority of the screen is unused (just a static background). You have a small game window, and inventory list to the right of this and your verb list at the bottom right.As you explore or interact with the world and characters, a summary of these interactions fills the bottom left of the screen. Text sort of just rolls off though and there’s no scroll back so it’s easy to miss details if you’re not paying attention.I found it a little hard to read the white text on the blue background, and the fact that each new interaction was indented just looked odd, but those are minor annoyances.The graphics aren’t bad, but they’re nothing to write home about. Almost every male character uses the same model so they kind of blend together, and no one has anything interesting to say. Since I wasn’t sure what to do other than visit each screen, EXAMINE everything and move on it sort of felt like work to plod along this “adventure”.You’re supposed to find a handful of movie reels spread across various cities, and typically you’ll need to complete some form of fetch quest to gain access to the place where the reel is.There are multiple locations you’ll need to explore, and these aren’t accessible until you discover them - either by examining something (like a pamphlet for the mall) or by talking to a character (the woman at the bar tells you where Bela Lugosi’s house is).At each location there may be an opportunity to pick items up for later use, but inventory management is a pretty big gameplay mechanic. You only have limited “weight” you can carry - so you’ll frequently need to drop items in order to pick up new items.Thankfully when you drop items some little creature picks it up and takes it back to the original location you found it. This makes it easy to backtrack and reacquire items you had to leave behind.As you find the film reels, you can take them to projection booths scattered throughout the game. Each booth has the same attendant working there that you can give a reel to and he’ll play it for you. I’m assuming these are clips from the original movie - which you can watch on YouTube if you’re curious 👀.Talking to various characters you meet progresses the “plot”, but you need to be careful which dialogue options you pick as you can softlock the game by choosing the wrong option. For example, you need to ask this woman about the weather so that you can offer her beads and learn about a hippy camp.If you hit on her first, there doesn’t appear to be a way to reset the conversation and you’re sort of stuck.Though infrequent, certain scenarios can result in a game over. I was playing this game in fast-forward for the majority of my time with the game as I had to start from scratch a couple times (due to softlocks), and because fast-forward mutes the music.There’s one track that loops for the duration of the game, and there are very few sound effects. When there ARE sound effects, they tend to be extremely annoying (shrill and loud) - like the sounds in the cab or the bats in the cave.The first half of the game all takes place in the multiple locations you travel to by cab around the studio. The second half of the game has you flying between Washington, Australia, Rio and Hong Kong. These cities you fly to have a cab outside the airport that will take you to the one location per city you can visit.These travel options just sort of add padding to the various fetch quests, but that’s about it.Eventually you’ll be hired by the CIA to go to Cuba to do … something. While you’re there, if you happened to bring the dictionary with you you can get the Cuban guard to give you some cigars and a poster that proves … something.You’ll ultimately have to also go find some film for a guy in Hong Kong, which after you bring it back he gives you a talisman that you give to some monks - who then lead you to the aliens or something.I just didn’t get it. I should probably watch the film, but this game is unlikely to add anything to that experience. Maybe if you’re a fan of the original film there’s an enjoyable experience to be had here, but I’m going to go out on a limb and say that for fans of the film - the game probably still sucks.Though I would not recommend this game to anyone, it’s oddly satisfying knowing that the “worst movie ever made” also sort of translates to one of the worst gaming experiences on my list.Game Information Game Plan 9 from Outer Space Developer Gremlin Ireland Publisher Gremlin Graphics Release Date 1992 Systems DOS, Atari ST, Amiga Game Engine   My Playthrough How Long To Beat? 3 hours Version Played Amiga via vAmiga Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Graphics (15) 4 Sound (10) 2 Plot / Progression (25) 4 Characters / Development (15) 2 Gameplay / Experience (15) 4 Replayability (5) 0 Impact / Impression (10) 2 Bonus / Surprise (5) 0   18% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "King's Quest III: To Heir Is Human (Sierra On-Line) - 1986", "url": "/blog/2024/10/25/kings-quest-iii/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, played:DOS, AGI", "date": "2024-10-25 07:02:51 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Hook (Ocean) - 1992King'...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Hook (Ocean) - 1992King's Quest III: To Heir Is Human (Sierra On-Line) - 1986→ Plan 9 from Outer Space (Gremlin Ireland) - 1992 Article 90 of 96 in this series.King’s Quest III: To Heir Is Human is the third installment in the King’s Quest series of graphic adventure games developed and released by Sierra On-Line in 1986. The game was originally released for the Apple II and MS-DOS, and later ported to several other computer systems. It was the first title game in the series not to feature King Graham as the player character.King Graham and Queen Valanice had two children, Alexander and Rosella, and the kingdom was once peaceful. It wasn’t long until Alexander was snatched from his crib and things started to take a turn for the worse. A three-headed dragon threatens the ever-peaceful Daventry, and requires a maiden to be sacrificed every year. Rosella is the chosen one.Meanwhile, in a secluded house atop a mountain in the land of Llewdor, the evil wizard called Manannan keeps a young lad named Gwydion as his slave, forcing him to do menial tasks as he prepares his spells and observes the country through his telescope. Gwydion must find a way to outsmart the wizard, escape, and eventually discover the truth about his own identity.1I’m pretty sure I was about 8 years old when I first got a copy of King’s Quest III for our 386. Since a friend of mine made me a copy of the game and I didn’t have the manual, I printed off a copy someone had typed up and uploaded to a local BBS.For me, King’s Quest III brings back memories of learning how to touch type. These old AGI games that I played as I was learning how to work with computers sort of forced me to become a better typist because hunting and pecking for letters while there’s a timer running meant I used to die a lot.You start off in a wizard’s house on top of a hill. He’ll give you a task that you need to complete, and you’ve only got a certain amount of time to complete it in before he gets mad at you and zaps you.I’m pretty sure you have about 5 minutes of in-game time to do the initial task, which is actually plenty of time given how small the house is. This gives you a chance to explore a bit, interact with the world and start collecting some items.If you’ve read the manual, you know there are a number of spells you’ll need to prepare - and these are prepared using various items you collect throughout the game. As a result, you’ll find yourself picking up pretty much everything that isn’t nailed down on ever screen you visit.The problem though is that when the wizard comes back to check on you, if you have any magical items in your inventory he’ll assume you’re up to no good and kill you on the spot.When you bring up your inventory you’ll notice that some items have an asterisk at the end of their entries. This is how you differentiate magical items from normal items. If you pick up any of these items while the wizard is out, you’ll need to stash them under your bed before he gets back.I honestly can’t remember if I figured this out through trial and error, if someone told me about it or if I read it in a walkthrough, but it wasn’t obvious to me that this was what you needed to do. As a result, though I have fond memories of this game - I also remember it being extremely frustrating and annoying to play.When you finish your first task for the wizard, he (eventually) will appear and tell you he’s going to go off on a journey. This ends up giving you about 30 minutes of in-game time to figure out what to do next.Since this wizard is a pain in your ass, you might as well try to get him out of your way first. Based on the spells you have recipes for, it seems like turning him into a cat might be your ticket to freedom.This spell only requires a couple ingredients (mandrake root powder, ball of cat hair, fish oil, magic wand), and you’re able to find 75% of these in the wizard’s house. Since the fish oil isn’t here, you venture down the mountain to explore the world.The mountain path is a pain in the ass, but given this is a Sierra game released in the late 80s you sort of expect every step to potentially lead to a game over. This was just how these games were designed, and if you’d played any other titles released around that time - you knew this was coming.Unless you’re playing with a walkthrough it’s unlikely you’d be able to collect everything from in and around town in your first outing, so you’ll need to make the trek back up the mountain to the wizard’s house a few times - trying not to fall off the cliff each time.If you can fall off of anything (not just the cliff), expect a game over. This game will give you many opportunities to shoot yourself in the foot, and you’ll likely muddle your way into those scenarios more often than not, so save early (and often).Finding the fish oil is easy enough as it’s sold at the store in town, but you don’t have any money. You’ll need to steal gold from some bandits to buy this, but first you need to find their hideout - then get in without being caught. Once you figure all this out though you can return to the wizard’s house to whip up your first spell.One item you’ll find early on is the magic map, which allows you to quick travel to any location you’ve previously visited. This is extremely convenient for warping from the wizard’s house down the mountain, but it doesn’t work to get you back to the house. As a result, plan to (safely) climb back up the mountain multiple times.Typing these out whisks me back to the first dozen times I played this and didn’t know what “soporific” meantWith spell ingredients in hand, you find the wizard’s lair in the basement of the house, and flip to a specific page in the spell book to start preparing a spell. Having to laboriously type out the spells exactly as the manual describes is a good form of copy protection, but after the first couple spells it does become tedious.You’ll need to prepare multiple spells, so you’ll be back in the basement a few times throughout the first half of the game as you get everything ready to eventually leave the island.Any tiny mistake you make during spell preparation is a game over - but at least it’s kind of funny. Gwydion will transform himself partially as a result of the failed spell, and the results are specific to the spell you were trying to prepare (my favourite is him turning half into a fly).If you’re able to get the first spell completed, you’ll end up with a magic cookie that when eaten will turn the consumer into a cat. If you try to give this to Manannan, it’s a magic item so he’ll just kill you. You need to hide the cookie in something else and give that to him, but if you didn’t get the porridge from the 3 bears house - you’re out of luck.Without the right items, you’ll have to give Manannan something else to eat from the kitchen, then wait for him to leave again and go get the porridge and wait for him to come back again. Once you feed him the magic porridge, he turns into a cat and you have free reign of the world to finish collecting magical items, mixing spells and figuring out what to do next.If you find the oracle she’ll tell you you have a sister that’s a princess, that you’re a prince and you have to go save her. You’ll find some pirates in the bar and pay them to get access to their ship.They sort of kidnap you at this point, and you have to wait (and wait and wait and wait) for 15-20 minutes for the ship to progress far enough that the game will allow you to progress.The timer is not a welcome element to this game, so I’m glad it doesn’t make an appearance in any subsequent titles in the series.Once you get off the pirate ship (using one of your spells and the magic map), you’ll end up in Daventry and it’s a short jaunt up to the dragon that is holding your sister captive. There’s some minor platforming here (climbing the cliff and navigating caves), but you eventually get there, cast a couple spells and escort your sister back to the castle.Though I have fond memories of this game, it’s not really much fun. The whole experience sort of feels like work and there isn’t really much to do once you reach the pirate ship but wait. If you use the map too early, you’ll drown … so you have to wait. Waiting is too common a theme in this game.KQ3 does give you some quality of life improvements over the previous 2 entries in the series, but it’s not really adding much to the overall gaming experience. Most game screens don’t have any background music, so you play in silence for the majority of the game.The vast majority of the game involves fetching ingredients for spells, so once you’ve completed that all you really have to do is get to the dragon. Trying to get past the snow monster is a little frustrating, but that’s the only real challenge once you get off the ship.Yup, you’ve still got some waiting to doI do like this game, but it’s a bit tedious to play nowadays. There were however remakes (yes - plural) by Infamous Adventures and AGD Interactive that drop the text parser in favour of a more traditional P&amp;C interface.I couldn’t get KQ3 Redux working on my Macbook (the game was released in 2011), but the Infamous Adventures release works perfectly. I would recommend trying one of these remakes if you want to experience the game today.Game Information Game King’s Quest III: To Heir Is Human Developer Sierra On-Line Publisher Sierra On-Line Release Date October 1, 1986 Systems DOS, Apple II, Apple IIGS, Amiga,Atari ST, Mac, Tandy Color Computer 3 Game Engine AGI My Playthrough How Long To Beat? 4 hours Version Played DOS via ScummVM Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Graphics (15) 6 Sound (10) 3 Plot / Progression (25) 13 Characters / Development (15) 8 Gameplay / Experience (15) 4 Replayability (5) 1 Impact / Impression (10) 5 Bonus / Surprise (5) 3   43% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Hook (Ocean) - 1992", "url": "/blog/2024/10/20/hook/", "categories": "Let's Adventure!", "tags": "adventure, Ocean, played:Amiga", "date": "2024-10-20 08:54:53 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Space Quest 6: The Spina...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Space Quest 6: The Spinal Frontier (Sierra On-Line) - 1995Hook (Ocean) - 1992→ King's Quest III: To Heir Is Human (Sierra On-Line) - 1986 Article 89 of 96 in this series.There have been several video games based on the 1991 film Hook. A side-scrolling platform game for the Nintendo Entertainment System (NES) and Game Boy was released in the United States in February 1992. Subsequent side-scrolling platform games were released for the Commodore 64 and the Super Nintendo Entertainment System (SNES), and an arcade beat ‘em up by Irem later in 1992, followed by versions for the Sega CD, Sega Genesis, and Sega’s handheld Game Gear console in 1993.A graphic adventure point-and-click game, developed and published by Ocean Software, was released for Amiga, Atari ST, and DOS in 1992 - which is what this review focuses on.Peter Banning is an ordinary suburban dad with two kids - or so everyone thinks. What not even his family know is his past as Peter Pan, scourge of Captain Hook in JM Barrie’s children’s fiction. Captain Hook gains revenge on Banning by stealing his two children, so Peter must return to Neverland, return to eternal childhood, and get them back.It’s a point and click adventure, and the pirate setting ensures that it recalls the Monkey Island games. The top 2/3 of the screen features a visual depiction of the area Peter is in, which a row of icons along the bottom can be selected to alter the function of a mouse click. These include looking at an object, picking it up, talking to people, using objects to solve problems (often in combination with others), and giving objects to others.1Like most good Amiga disk file based games you can find on the internet, this one was cracked by one of the notable cracking groups of the time - Fairlight. Though I don’t condone piracy (and a number of FLT members got caught during Operation Fastlink a decade later), for these 30+ year old games you need hardware emulators to play … I’m willing to “bend” the rules a bit …I know of touched on this in previous reviews, but for those of us revisiting some of these ripped/cracked copies of games after 30+ years there is definitely a sense of nostalgia when you see a familiar cracktro.With the rise of services like GOG and Steam, quick and convenient access to digital copies of games is no longer an issue, so these demo scenes inserted into cracked binaries are now just an artifact of the past.There’s a great collection of Fairlight’s demos at DEMOZOO for anyone that may be interested.Since this game is based on the 1991 Steven Spielberg movie “Hook”, I assumed the plot would sort of follow the film’s (which I believe it does, but I haven’t seen the movie in a very long time). You play as Peter, your kids have been kidnapped and you need to get them back. You’re secretly Peter Pan, but since you grew up you’ve lost the sense of wonder and magic that would allow you to fly - and this is what you’ll need to get your kids back.The game starts off with a brief cinematic sequence which sets up the main story. Hook has your kids, and to get them back you’ll need to make your way back to Neverland - which Tinkerbell fills you in on, wraps you in a blanket and carries you off.A bloody hacksaw and a bucket of blood? I don’t trust this dentist …Once you land in the pirate town, you’re sort of on your own. There’s no indication what you’ll need to do or where to go, so you sort of just start wandering around. What I found frustrating almost immediately is that you can’t move your cursor around and surface hotspots; not you need to select the LOOK action, then click on things randomly.This gets annoying really quicklyIf there’s something to look at, it’ll tell you - otherwise you get a generic message. This is frustrating because the game de-selects the magnifying glass icon after you use it, so you have to click it again and click back on the screen as you go pixel-hunting. If you TALK to Tinkerbell, she’ll occasionally give you hints as to what you can do next, so that’s helpful.Thankfully this game only has a couple dozen areas you can visit, so there’s really not all that many locations you’ll have to do this at. Most of the time it’s fairly obvious that there’s an item you can pick up or interact with … but not always.To advance the story you’ll have to interact with the various NPCs scattered about the game. There’s a very basic conversation system that involves right clicking to select what you want to ask, then left clicking to ask what you’ve selected. Typically there are only 3-4 options to choose from, with one being a hint as to what the fetch quest you’ll need to perform for that character will be.For such a short game, there are a lot of items you’ll need to collect. It’s usually not too difficult to figure out which character needs what, but there are also unused items you’ll collect. This was frustrating as I found myself backtracking near the end game trying to use these items on various characters to see if I’d missed anything.Your goals in this game are pretty simple. First, you need to find Captain Hook - but to do this you need to dress up as a pirate to get on his ship. Then, once you meet him, he challenges you to a duel, but you need to become Peter Pan again. To do that you need to get your memories back, which the Lost Boys can help you do.That’s basically it. Getting the pieces of pirate clothing is surprisingly frustrating, as it’s really not obvious how many pieces you need, or once you have them how to put them on (this was walkthrough-checking territory for me).For example, to get the pirate hat you’ll need to build grappling hook from an anchor and rope. When you get up to the location where you should use this, Peter tells you he’s not going to do this TWICE, before he actually throws it and swings. This is frustrating as the game really makes it appear as though you’re doing something wrong, so why would you KEEP TRYING?Once you do swing to the other side of the town square, you actually need to time it properly to snag the hat of the pirate walking back and forth. This ALSO isn’t obvious, and you’ll miss 99% of the time. Peter doesn’t indicate he was trying to grab something and missed, so it’s easy to just swing over and back without realizing you’re supposed to grab a hat at all.The story will progress through the Neverwood and into the Lost Boys hideout, where you need to get your memories back so you can remember a happy memory that will allow you to fly. Tinkerbell helps you get there, but first there are a whole bunch of item combination puzzles and fetch quests you’ll need to complete.Make sure you examine everything you pick up, because a few times the items aren’t useable, but they actually conceal another item you’ll need - such as the fishing net, which you only need a piece of string from to make a bow.Once you remember you’re Peter Pan, a cutscene will play out and you’ll fly back to Hook’s ship to challenge him to a duel. This plays out similar to Monkey Island’s insult sword fighting, but with much lower stakes.If you pick the right answer, you push Hook to the left (towards the plank), and if you pick incorrectly, he pushes you to the right. You can’t lose though, so if you pick wrong, just keep trying until you eventually make him walk the plank and win the game.Hook is not bad, but it’s nothing special. The graphics are decent, and the sound effects and periodic background music enhance the experience sufficiently. Though there’s no points system in this game, when you solve various item combination puzzles you’ll see Captain Hook get REALLY angry in the lower left of your screen.He’s big mad that I figured out how to build that bowA lot of the story progression is based on you having prior knowledge of Peter Pan, so the game doesn’t really fill too much more in for you. The Lost Boys are sort of just there, and act as basic NPCs to nudge you along your journey, but don’t add any depth or value beyond that.The Adventurers Guild did a great review of this game that I’d highly recommend. It’s also how I learned that the game’s designer Kevin Oxland has a book out on game design (called Gameplay and Design) that I might just have to check out.Game Information Game Hook Developer Ocean Publisher Ocean Release Date 1992 Systems Amiga, Atari ST, DOS Game Engine   My Playthrough How Long To Beat? 3.5 hours Version Played Amiga via vAmiga Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Graphics (15) 8 Sound (10) 5 Plot / Progression (25) 10 Characters / Development (15) 5 Gameplay / Experience (15) 7 Replayability (5) 1 Impact / Impression (10) 4 Bonus / Surprise (5) 2   42% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Space Quest 6: The Spinal Frontier (Sierra On-Line) - 1995", "url": "/blog/2024/10/08/space-quest-6-the-spinal-frontier/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, SCI", "date": "2024-10-08 08:18:09 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Under a Killing Moon (Ac...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Under a Killing Moon (Access Software) - 1994Space Quest 6: The Spinal Frontier (Sierra On-Line) - 1995→ Hook (Ocean) - 1992 Article 88 of 96 in this series.Space Quest 6: Roger Wilco in the Spinal Frontier is a point-and-click adventure game developed and published by Sierra On-Line in 1995. It is the sixth and final game in the Space Quest series, though (spoiler) the game ends on a cliffhanger that will ultimately never be resolved.Roger Wilco, the brave interstellar janitor who has already saved the universe from many great dangers, is now in a very embarrassing position. His commanders show no respect for his courageous actions in the previous game. Instead, he is being accused of all kinds of violations against the galactic law, is deprived of all the honors he got in the previous game, and as a token of mercy, is allowed to return to his old job - cleaning closets… But those unfortunate events are just the beginning of much bigger troubles Roger will get into. Once again, the future of galaxy depends on him!1This final entry in the series runs on the later SCI32 engine Rev 2.100.002 (aka SCI2.1 (middle)), which allowed it to use SVGA graphics with 256 colors at 640×480 resolution. Unlike other SCI games, it did not have the interface in a pull down bar at the top of the screen, but instead used a “verb bar” window along the bottom of the screen, similar to LucasArts’ SCUMM engine. The graphics style was also more cartoonish than in previous games, as well as incorporating an ample amount of 3-D rendered images.I don’t love the visual style of the human characters…I appreciated the updated visual style of the backgrounds and the UI, but honestly the closeup shots of any humanoid character just looked … off. Though there was clearly a lot of work put into the character design, I miss the pixel art of Space Quest V.An increased colour palette and next-gen SCI game engine sort of left everything looking “flat” in my opinion.The cutscenes have not aged well, and are reminiscent of basically all 3-D rendered scenes of the early to mid 90s. I can’t really fault Sierra for this as this is just an artifact of the games of that era.Most cutscenes felt more like filler than substance, and were just there to eat up some time. They could occasionally become repetitive and tedious if they were triggered every time you needed to backtrack (like with the “riding the tapeworm” sequence near the end).Roger is really trying to push both buttons at once - and is - but it doesn’t look like it in ScummVMWhile playing through the game I thought I hit some weird visual bug, but apparently it’s well known and only present in ScummVM (#9749 - SCI: SQ6: Shuttle Bay Entrance bug). ScummVM’s developers have included many, many improvements to SCI engine games (including script patches for SQ6), however apparently the issue here is a little different.Sierra actually patented their pathfinding algorithm, so the ScummVM engineers had to do their own version of it instead. This can result in some visual anomalies like in the screenshot above.As with most Sierra adventure games, you run around picking stuff up in hopes of using it later to solve some puzzle. The inventory puzzles in this game weren’t all that challenging, and it was actually pretty clever how the fish kept ending up in your possession as you progressed.I assumed this was being set up as “red herring” gag, but this fish would actually end up being the solution to the final puzzle in the game (spoiler), so several times when you were about to leave an area permanently, a character threw it to you so you’d have it again.Overall, the voice acting is not great. I couldn’t bring myself to disable speech altogether though because Gary Owens as the narrator just crushes it. If it weren’t for his dry, sarcastic delivery throughout the game I’d likely knock several more points off the Sound score.By far, this is my favourite scene in the gameWhereas the previous game was a parody of Star Trek, Space Quest 6 is a mishmash of various science fiction properties that were popular at the time the game came out. Almost every name and location is a parody or pun - which if you’re in on the joke adds to the experience. I’m not sure how accessible the writing of the game is to a modern audience as a result.The overarching plot involves Roger initially being targeted for “Project Immortality”, but instead his colleague Stellar Santiago is taken (after she saves Roger’s life). He then needs to rescue her by first finding her, then being shrunk down to enter her digestive system and destroy some nanobots.I really didn’t find the story to be all that interesting and it was mostly forgettable. The puzzles aren’t overly difficult, and typically just involve fetch quests and backtracking. The game’s locations aren’t that expansive, so searching everywhere doesn’t take all that long, and though there’s a bit of pixel-hunting on certain screens, key items are typically out in the open.Unfortunately, I didn’t find nearly as many interesting ways to die as I would have in previous games, and the message you’re prompted with is fairly generic. This was part of the fun of the Space Quest series, and I found after about an hour of playing the game I didn’t bother messing around to see how I might die as it just wasn’t proving to be all that entertaining.For new gamers it’s appreciated that you get a “Try Again” option, which just rewinds back to right before you made a mistake and doesn’t force you to rely on an earlier save. It’s fairly obvious most of the time though what the “right” choice is, so you likely won’t die too often.Space Quest 6 ends on a cliffhanger, but since there was never a sequel made this is effectively where the series concludes. The game doesn’t have the same feel as the previous 5 entries in the series, and this is likely due to it not actually being made by the “Two Guys from Andromeda”, but instead Josh Mandel.Mandel designed the game, but left near the end of production and Scott Murphy (on of the “Two Guys”) came in to finish it off. This is likely why some of the gameplay feels uneven, which is confirmed in a 2006 interview with Josh Mandel: “One of the inventory items cut was a comic book CD in Nigel’s room that was fully readable and had all the hints to the Datacorder puzzle. From a writing and design standpoint, it was fully finished, and I know that Barry Smith had started the artwork. I don’t understand why it was cut. But the comic book content was something I’d worked on for months, and it was something that I was uncharacteristically proud of … I think it would’ve been one of the greatest parody sequences in the SQ series. So not only was I very upset not to see it in the game, but the fact that they had to put the Datacorder hints in the manual, leading player to think it was meant to be copy protection, disturbed me greatly.”I guess this wasn’t meant to be copy protectionThe Datacorder puzzle did feel like copy protection, so I feel Josh’s frustration and am genuinely curious as to what the comic book CD experience would have been like. I guess we’ll never know, just like we’ll never know what Stellar Santiago meant when she said we were “going to like the next mission” …Space Quest 6 isn’t great, but it’s good enough to play through at least once. If you’re only going to play one game in the series though, I’d recommend either Space Quest III or Space Quest V.Game Information Game Space Quest 6: The Spinal Frontier Developer Sierra On-Line Publisher Sierra On-Line Release Date July 11, 1995 Systems DOS, Windows, Macintosh Game Engine SCI My Playthrough How Long To Beat? 5.5 hours Version Played DOS via ScummVM Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Graphics (15) 9 Sound (10) 6 Plot / Progression (25) 15 Characters / Development (15) 8 Gameplay / Experience (15) 9 Replayability (5) 2 Impact / Impression (10) 5 Bonus / Surprise (5) 1   55% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Under a Killing Moon (Access Software) - 1994", "url": "/blog/2024/09/20/under-a-killing-moon/", "categories": "Let's Adventure!", "tags": "adventure, Access Software", "date": "2024-09-20 06:03:15 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← The Scoop (Telarium) - 1...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← The Scoop (Telarium) - 1986Under a Killing Moon (Access Software) - 1994→ Space Quest 6: The Spinal Frontier (Sierra On-Line) - 1995 Article 87 of 96 in this series.Under a Killing Moon is a 1994 point-and-click adventure interactive movie video game. It is the third installment in the Tex Murphy series of adventure games produced by Access Software.It is December of the year 2042. The world is still recovering from the disastrous consequences of the World War III. Radioactivity has turned many humans into mutants, and the gap between those and the “norms” (non-affected humans) is growing wider. Certain places in the world have retained the feel and the charm of the old times - among those is the Old San Francisco. There, the private investigator Tex Murphy is trying to deal with unemployment, upcoming poverty, and his melancholic mood following his divorce. After solving a simple robbery case, Tex attracts the attention of a mysterious woman who calls herself Countess Renier, and is hired by her to find a missing statuette. Things gradually begin to go wrong in this investigation, and Tex finds himself involved in a confrontation with a powerful and dangerous secret cult.1Under a Killing Moon is the sequel to Access Software’s previous title Martian Memorandum. Though I haven’t played through this one yet, I have previously covered Mean Streets and Countdown - the first being a Tex Murphy adventure.I’m a fan of old detective movies and the film noir genre in general, so the introductory cut scene really hooked me right away and drew me into the dystopian future that was this game’s world.Right from the beginning you feel like you’re in a movie, which if you’ve watched the documentary “The Making of Tex Murphy” reinforces this further as the game developers really wanted to make movies.According to The Digital Antiquarian’s Under a Killing Moon article, Tex Murphy first appeared in Plan 10 from Outer Space before eventually being repurposed as the protagonist in various Access Software titles: Vandegrift had recently returned to Bountiful to take a job as Access’s art director, and was more than up for Jones’s plan. The two had dreams of showing at Sundance as they wrote a script that combined The Maltese Falcon with Close Encounters of the Third Kind. Jones took the starring role of a private detective born in the wrong time, who channeled not only Humphrey Bogart but also Roy Rogers, what with his penchant for yodeling cowboy tunes. The detective-cum-cowboy’s name was Tex Murphy.Before diving into Under a Killing Moon, you first need to install and configure it. There’s something really nostalgic about the design of these DOS era configuration screens that try to make it as easy as possible to configure your sound card.I’m pretty sure I never had more than one device ever (at a time) so my digital sound and music devices were always the same, but in this modern age of emulation, might as well splurge and setup a faux-MT 32 for all the music this game has to offer.You play as Tex Murphy, who’s a down on his luck private investigator looking for his next job. The game opens with a cinematic cutscene, then drops you into Tex’s office, which you can fully explore in 3D.The game comes with 2 navigation modes - interactive and exploration. When you’re in exploration mode, you can move around the environment as if you’re playing DOOM. Tex can look all around using the mouse to control your field of vision, but you can also “stand” and “crouch” to see above and below things.A pretty big part of the game’s puzzle design revolves around this mechanic of panning and tilting the camera to see over and into things. If there’s ever a trash can in a room, it’s worth having a look into as there’s usually something in there you’ll need to GET.What you’ll often find in these trash cans are pieces of notes you’ll need to reassemble. This can be extremely time consuming to complete, but the game does at least give you instructions each time that lets you know what the goal of the puzzle is, and how to manipulate the pieces.Each note reassembly puzzle is slightly different, so I appreciate that it didn’t just feel like busy work, but it’s obvious the designers were proud of this mechanic and wanted to reuse it as often as possible.There’s more to collect in this game than just ripped up notes you need to put back together, and these are all stored in your inventory. Each item can be either examined, used or combined - and it’s worth trying all 3 of these options with literally everything you pick up.Examining items is a requirement as many times the item you initially picked up isn’t actually the thing you want. Examining it shows a 3D view of the item as it’s rotated, and you may discover a compartment with a key, or you’ll open it up and take something out - discarding the initial item in the process.Though there are several item combination puzzles, the end result is typically pretty obvious, so the various items you need to collect and combine to form the final item are also pretty obvious.To navigate around the world of Under a Killing Moon, you have access to a quick travel map. New locations are added based on conversations with characters or by examining certain inventory items.Many locations aren’t actually “explorable”, but simply contain a single character you can talk to. This can make the game world look a lot bigger than it is.Since it’s REALLY easy to miss picking up key items in this game, the map is actually extremely useful. For locations (like Chandler Ave.) where there are several places you can visit, you can actually go directly to a key location right away by selecting it from the map.The story progresses through interactions with a couple dozen characters you’ll meet throughout your adventure. Instead of the typical dialogue tree adventure games present you with, Under a Killing Moon relies on a 3 options system used to set the tone of the question you want to ask.Typically the option you select won’t matter, and the conversation will proceed “on rails”, but if you’re not careful with certain people you’ll miss key details if you pick the wrong options - or even get yourself killed!Dying in this game brings you back to the big detective in the sky, who will let you know it’s not your time yet and give you another chance.You may also get a clue as to how you should have proceeded. Since this section is voiced by James Earl Jones, it’s at least a bit enjoyable hearing him reassure you that it’s not your time and you should get back out there and try again.Hopefully you remembered to save your game recently, as restore a previous save is the only option here - other than restarting from the beginning.Though saving early and often is pretty standard fare for an adventure game, it’s worth calling out Under a Killing Moon’s storage system.When you start the game, you create a player, which is what you’ll be storing your games under. You can have multiple players with their own series of saves, which I guess if you’re sharing your computer with a sibling would be useful to keep your save games separated.Each save automatically captures the current location, and you can even enter arbitrary notes about the save, which can also be handy.The story unfolds over 7 days, with each day starting with a title card. Once you solve the case of the robbery from the pawn shop and realize you may want to get back into sleuthing, you’ll need to get your fax machine fixed so you can maybe get some new cases.One of the locations you gain access to early on is an electronics store, which seems to always have exactly one item for sale - and that item always ends up being the thing you currently need (how convenient).To get into the electronics store though, you’ll need some means to buy things - like a credit card. In your office you’ll find a stack of mail by the front door, which includes an application for a credit card.Opening the drawers in your office will reveal a pen and an envelope, and combining those three items will create a “ready-to-mail application”, which you then just need to drop into a mailbox.This is how a lot of these item combination puzzles work. There aren’t really all that many items on any day that you have access to, and it’s fairly obvious how they need to be used.Whenever you go to the electronics shop, if there’s an item for sale, you’re going to need it - and it’s only a credit card swipe away. I’m pretty sure there’s no limit on the card, but you only need to use it a handful of times in this one store in the game where you have the power to buy anything.Navigating the dialogue options properly with the electronics store owner is required on one of the later days, as you’ll need him to spill some info about the security system he just installed at the Knickerbocker hotel.If you don’t pick the right options, he’ll end the conversation early. Since there are only 3 options available for each conversation you have, it’s worth testing all variations with all characters just in case.During conversations with characters, you can also ask about various keywords. Not all characters will know about a all keywords, but this is how you advance your investigation.You’ll also learn new keywords as you progress, and will need to backtrack to ask all characters about these to see if they can shed any light on the topic.Under a Killing Moon does a great job of making this game world feel large and expansive, but there actually aren’t that many locations to visit or characters to interact with.The balance they strike though of forcing you to backtrack without making it feel tedious is impressive.Some characters you interact with are mutants, and may be disfigured. I know that earlier games go into more detail about what happened in the world for this to happen, but here they don’t really explore this very much.For some additional context: Some people have developed a natural resistance against radioactivity, and thus are normal or “Norms” – everybody else are Mutants in some form. Tensions between the two groups have risen dramatically since the end of the war, and Norms and Mutants usually do not get along. […] The Law and Order Party has long since dissolved and disbanded but it still lives on in the more extremist and openly anti - mutant group The Crusade for Genetic Purity which now espouses a return to pre-WWIII society with Norms having full control of society without mutants.You can ask characters about the crusade, but most won’t really give you much information.I actually really love the backstory of this game and wish they’d leaned into world building a bit more, but I guess the expectation was you’d played through the previous games in the the series and were up to speed already.As the game progresses you get wrapped up in a plot to eradicate all mutants (and I think humans considered “impure”) by raining down a virus from an orbiting space station known as the Moon Child.Your mission then becomes to save Eva (who you learn infiltrated the CAPRICORN corporation’s cult and was sharing info via videos) from the Moon Child, blow up the station and return to Earth.For a game considered the “largest video game ever” (at 4 CDs), Under a Killing Moon is fairly straightforward to complete.This being an FMV game from the early 90s means you’re going to be treated to some questionable voice and character acting, but overall it’s not too bad.James Earl Jones’ narrative does a great job of setting the tone of the game, and the brief sequences with Margot Kidder are enjoyable.Navigating the game world’s 3D environment from a first person perspective made the exploration portions of the game very engaging, and since most scenes weren’t that big it didn’t feel like things were purposely hidden in weird places just to screw with you.You really feel like you’re part of the story as it progresses, and the characters (typically) don’t feel two dimensional. The puzzles aren’t overly complicated, and though they can be a bit repetitive, don’t become tedious.I had a lot of fun playing through Under a Killing Moon, and look forward to one day revisiting this world and its characters in The Pandora Directive, but given the rate at which I play through these games … that might take me a while.Game Information Game Under a Killing Moon Developer Access Software Publisher Access Software Release Date 1994 Systems DOS, Windows Game Engine   My Playthrough How Long To Beat? 8.5 hours Version Played DOS via DOSBox-X Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Graphics (10) 7 Sound (10) 7 Plot / Progression (25) 21 Characters / Development (15) 12 Gameplay / Experience (15) 11 Replayability (10) 4 Impact / Impression (10) 6 Bonus / Surprise (5) 3   71% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "The Scoop (Telarium) - 1986", "url": "/blog/2024/09/13/the-scoop/", "categories": "", "tags": "adventure, Telarium, Spinnaker Software", "date": "2024-09-13 06:42:44 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Space Quest V: Roger Wil...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Space Quest V: Roger Wilco – The Next Mutation (Dynamix) - 1993The Scoop (Telarium) - 1986→ Under a Killing Moon (Access Software) - 1994 Article 86 of 96 in this series.The Scoop is a mystery adventure game published by Telarium, a subsidiary of Spinnaker Software, in 1986 for Apple II and rereleased by Spinnaker Software in 1989 for DOS. The plot is based on the collaborative detective novel of the same name, written in 1931 by Agatha Christie, Dorothy L. Sayers, E. C. Bentley, Anthony Berkeley, Freeman Wills Crofts, and Clemence Dane.Though I read some Agatha Christie books many years ago, nothing really stuck with me other than vaguely remembering the plot of Murder on the Orient Express. As such, I had no idea what type of game The Scoop was going to be, nor did I have any familiarity with what (or who) the “London Detection Club” was. You’re a reporter for the Daily Courier, and you’re investigating the murder of Geraldine Tracey. If you can solve the mystery in time, you’ll scoop the Morning Star and win the game. But to get your scoop, it’s not enough merely to figure out who you think committed the murder. Instead, you must be present when the murderer is confronted by the authorities–even if you have to arrange the confrontation yourself!I started off by giving the game manual a quick read, and the introductory blurb does definitely set the stage for the game. You pick you character’s gender, enter the name you’d like to be referred to as and get dropped in front of the Daily Courier.In case you didn’t read the manual, your editor let’s you know what you need to do once you enter the office and select SPEAK from the verb list.As with many adventure games of this era, you interact with the game world using various verbs. The DOS port, which was released 3 years after the Apple II version, improves the interface slightly by greying out verbs that aren’t currently accessible on a given screen.The goal of this game is to solve the murder by Saturday, which gives you 5 days of in-game time to do so. Everything you do causes time to pass, and various events will only occur at certain times of the day, on certain days or after certain actions.If you think there is an action about to occur but you need to kill some time, there’s even a WAIT verb you can use.To try and progress the story and identify the murderer you’ll need to TRAVEL about the city taking taxis, trains and the bus. At each location there can be many shops, businesses or residences that you’ll find people in that you can question.You’ll want to ask everyone What’s on your mind?, and take note, as this is how you’ll learn about the other characters and locations you’ll need to visit and speak to. You can’t ask about people or visit locations until they’ve been mentioned in conversation, so it’s pretty important to speak to everyone.Here as well though, timing is everything and you’ll need to keep track of the time. Characters won’t always answer questions at certain times, and they have schedules to keep so they might leave mid conversation if they’re supposed to be somewhere.When two or more people are in a room, you can OBSERVE their interactions to learn a bit about their relationship or gather additional clues. Unfortunately you won’t always know ahead of time if multiple people will be in a room, or even if they will eventually converge somewhere.This game is all trial and error, and it’s pretty easy to make it all the way to Saturday without having gathered enough evidence or made enough progress to finish the game.If this happens, you either reload an earlier save and keep grinding, or start over and try and be more efficient with you time management.Searching before midnight reveals nothingOther than talking to everyone you meet, you’ll also need to SEARCH every screen to see if there are any clues you can TAKE. As with character interactions, searching a location can produce different results at different times of day or on different days.For example, you can collect the daily paper from the Morning Star’s presses, but only if it’s after midnight.After midnight and the day’s paper is available and can be takenYou’re trying to scoop another reporter - which is why the title of the game is The Scoop. This is why it’s important to get the daily paper as it can give you clues as to how your rival’s investigation is going, as well as surface locations to visit when you EXAMINE the paper.This is a bit tedious as any time you find something via a search, you need to take it and examine it. There’s also an INVENTORY you can scroll through, but it doesn’t really serve much of a purpose as the examine verb will also give you the same list.Many times throughout the game you’ll want to search a room, but can’t as there’s someone in the room and they’d catch you. If you wait long enough though, they’ll eventually leave, but this can cost you a lot of time.Animated: wait, then wait, then wait some more and maybe something will happenIf you exit a location and wait long enough for the occupant to leave, you may see them jump into a cab. In these situations, you can also hail a cab and try to follow them, but this won’t always work. I didn’t actually use this during my playthrough, but it’s an interesting mechanic.Taking note of people’s schedules like this is important, especially if you have to restart because you ran out of time. Knowing character schedules can help you plan your interrogations and investigation more efficiently to avoid having to wast time unnecessarily.As your searches turn up clues, you’ll be able to show them to characters you’re interviewing to potentially surface further insights. Every interaction you have with a character takes up about 2 minutes of in-game time, so hammer everyone with questions can sometimes trigger their departure, which can leave you having asked the wrong questions or shown the wrong items and unable to progress.I’m pretty sure I needed that note as evidenceShowing the wrong item to the wrong person can also result in you losing that item. When this happens you’ll likely have to restore or restart as this may have been a key item.Since your goal is to get Inspector Smart to confront the murderer while you are present, you’ll need to make sure you get him clues and information as you uncover them. Assuming all goes well you’ll be able to get this all sorted out before noon on Saturday.If you aren’t able to have the Inspector confront the murderer, your editor lets you know you’ve failed, the paper goes bankrupt and you’re all unemployed.You solved the case. Good for you!Assuming you are able to solve the case though and get Inspector Smart to the right place at the right time, your editor is proud of you and the game is over.Honestly, The Scoop isn’t that bad. There’s some generic sound effects here and there, but no music anywhere so it’s a fairly quiet adventure. There are A LOT of characters and locations to visit and engage with in a short period of time, and it’s very likely you’ll fail and have to restart a few times before you’re able to identify the murderer.Overall it’s a fairly short game, though it can feel a lot bigger than it is with all the backtracking and repetition that’s required. The time-based mechanic is interesting, but it can be frustrating when you’re just blindly WAITing on screens to see if a character might appear or a SEARCH might produce a different result.I still enjoy these menu-driven games, but I get that they’re not for everyone. I did enjoy the story, and the characters felt realized and meaningful to the plot - even if there were too many of them.Though I wouldn’t play this again or really recommend it to anyone, I did have some fun playing through it.Game Information Game The Scoop Developer Telarium Publisher Telarium, Spinnaker Software Release Date 1986 Systems Apple II, DOS Game Engine   My Playthrough How Long To Beat? 2 hours Version Played DOS via DOSBox-X Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Graphics (10) 4 Sound (10) 2 Plot / Progression (25) 16 Characters / Development (15) 9 Gameplay / Experience (15) 4 Replayability (10) 4 Impact / Impression (10) 3 Bonus / Surprise (5) 1   43% Gallery" }, { "title": "Why Cloudflare Workers Don't Work With MongoDB", "url": "/blog/2024/09/11/why-cloudflare-workers-dont-work-with-mongodb/", "categories": "MongoDB", "tags": "mongodb, drivers, node, nodejs, javascript, typescript", "date": "2024-09-11 13:09:40 -0400", "snippet": " As of early 2025 Cloudflare Workers not only work with MongoDB, but can be tuned to work well using Durable Objects!Cloudflare Workers is a great platform for deploying serverless JavaScript code...", "content": " As of early 2025 Cloudflare Workers not only work with MongoDB, but can be tuned to work well using Durable Objects!Cloudflare Workers is a great platform for deploying serverless JavaScript code, but has historically never supported raw sockets. In May of 2023 they announced support for a connect() API which allows TCP Sockets to be created within Workers, but is not a direct replacement for Node.js’ net.Socket API.Many NPM packages - including MongoDB’s Node.js driver - rely on net.Socket or tls.TLSSocket to connect to and communicate with remote systems. Using these libraries directly from Cloudflare Workers has not been possible as a result of these missing APIs.Cloudflare recently announced that more NPM packages would be supported on Cloudflare Workers, but for libraries that need net.Socket or tls.TLSocket access, will they work in a Cloudflare Workers environment? Packages that could not be imported with nodejs_compat, even as a dependency of another package, will now load. This includes popular packages such as […] mongodb, […] and many more.Based on the blog post the Node.js driver should load, but can it be used? Note that the fact that Workers can load, but not use the mongodb package was reported to Cloudflare at https://github.com/cloudflare/workers-sdk/issues/6684 The Cloudflare blog post has since been updated to remove mongod from the list of useable packages to avoid further confusion.Sample ApplicationTo test the latest iteration of Cloudflare Workers compatibility flags we’ll be working with the following configuration:src/worker.tsimport { BSON, MongoClient } from 'mongodb';export interface Env { MONGODB_URI: string;}let client = null;let requestCount = 0;export default { async fetch(request: Request, env: Env, _ctx: ExecutionContext): Promise&lt;Response&gt; { console.log(JSON.stringify({ requestCount })); requestCount += 1; client ??= new MongoClient(env.MONGODB_URI, { maxPoolSize: 1, minPoolSize: 0, serverSelectionTimeoutMS: 5000, }); const db = client.db('test'); const coll = db.collection('test'); if ((await coll.countDocuments()) &gt; 10) { await coll.drop().catch(() =&gt; null); } await coll.insertOne({ a: 1 }); return new Response(BSON.EJSON.stringify(await coll.findOne({ a: 1 }), null, ' ', { relaxed: false })); },};package.json{ \"name\": \"mongodb-cloudflare-example\", \"version\": \"0.0.0\", \"type\": \"module\", \"private\": true, \"scripts\": { \"start\": \"wrangler dev\" }, \"devDependencies\": { \"@cloudflare/workers-types\": \"^4.20240603.0\", \"ts-node\": \"^10.9.1\", \"typescript\": \"^5.0.4\", \"wrangler\": \"^3.59.0\" }, \"dependencies\": { \"mongodb\": \"^6.8.1\" }}wrangler.tomlname = \"mongodb-cloudflare-example\"main = \"src/worker.ts\"compatibility_flags = [\"nodejs_compat_v2\"][vars]MONGODB_URI = \"mongodb+srv://...\"To test the code above you would need to do the following:npm installnpm run startEvaluationThe default connection string format when connecting to your Atlas cluster is mongodb+srv, which is what we included initially in the wrangler.toml file.The first time we run our test code however we’re unable to resolve the SRV connection format as it appears that dns.resolveTxt is not implemented:⎔ Starting local server...{\"requestCount\":0}[wrangler:err] Error: [unenv] dns.resolveTxt is not implemented yet!Since Atlas allows you to also connect using the standard connection string format, let’s update the MONGODB_URI in the wrangler.toml to instead be mongodb://...:⎔ Starting local server...{\"requestCount\":0}[wrangler:err] MongoServerSelectionError: socket.once is not a functionBased on the above it appears events.once is missing, which Node.js’ net module exposes from an EventEmitter import. I don’t think we’d be able to polyfill all this if that were considered the path forward 😓.What about trying to configure wrangler to connect to a local MongoDB instance (ex: mongodb://localhost:27017)? Well in that case it will still fail, but at least it will fail differently:⎔ Starting local server...{\"requestCount\":0}[wrangler:err] MongoServerSelectionError: [unenv] net.createConnection is not implemented yet!Alternatives?If you happen upon the article called “Create a REST API with Cloudflare Workers and MongoDB Atlas” you may be thinking there’s an alternate solution to be explored. MongoDB offered a REST-based interface to your data in Atlas via the Atlas Data API, however this product was recently deprecated and will be sunset.A custom REST-based API would be a solution to working with your MongoDB data from within Cloudflare Workers, so until the runtime is updated to better support Node.js’ socket APIs, see the Data API deprecation page for some ideas.Neurelo seems like a good option for getting a REST-based API off the ground with little effort.SummaryThough module aliasing and polyfills might be an option for some functionality, it really seems like Cloudflare Workers just aren’t meant to work with Node.js’ socket APIs. As a result, libraries such as MongoDB’s Node.js driver simply won’t be able to connect to anything.Some work was proposed by MongoDB’s team to allow a custom transport layer to be provided, however this would still require Cloudflare Workers to support Node.js’ TLS API as TLS cannot, for good reasons, be disabled for Atlas deployments." }, { "title": "Space Quest V: Roger Wilco – The Next Mutation (Dynamix) - 1993", "url": "/blog/2024/09/10/space-quest-v/", "categories": "Let's Adventure!", "tags": "adventure, Dynamix, Sierra On-Line, SCI", "date": "2024-09-10 06:20:32 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Bargon Attack (Coktel Vi...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Bargon Attack (Coktel Vision) - 1992Space Quest V: Roger Wilco – The Next Mutation (Dynamix) - 1993→ The Scoop (Telarium) - 1986 Article 85 of 96 in this series. This is the first game that I’m reviewing since I overhauled my scoring criteria in August of 2024Space Quest V: Roger Wilco – The Next Mutation is a graphic adventure game, created by Dynamix, and released by Sierra On-Line for MS-DOS on February 5, 1993. The game is the fifth entry in the Space Quest series, and the first game to be only designed by Mark Crowe. The story, set within a spoof of the Star Trek franchise, focuses on players taking control of Roger Wilco, who achieves his dreams of becoming a star captain but winds up involved in saving the galaxy from a deadly threat posed by a man-made virus.After traveling back and forth through time in the previous game, Roger Wilco is back in the Starfleet Academy, serving as both a cadet and a janitor. Cheating his way through the Starfleet Aptitude Test, Roger is finally given the rank of captain, his own ship (a garbage scow) and a mission: to explore strange new worlds (which no man in his right mind would explore), to seek out new life and new civilizations (which grew out of the massive amounts of trash Roger will collect on his way), to boldly go where no man has gone before. Step by step Roger will have to unveil a galaxy-wide biohazardous material dumping scheme, solve the mystery of the disappearance of a fellow Starfleet captain and his ship, and confront an agent of an old nemesis.1As I work my way through the games I’ve listed on this journey, Space Quest V was one I was more excited to replay as it has a lot of nostalgic value. I can still remember leafing through the Galactic Inquirer that came with the game. At that time I would still occasionally go out grocery shopping with my parents and would see the tabloids at the check outs with headlines like “Half-Man Half-Dog Baffles Doctors”, so the format here was immediately appealing.Not really sure how well this stands up nowadays though…The manual gives you a couple pointers on how to get started on your adventure, including getting to your classroom and cheating on the StarCon Aptitude Test. Once you sit down and start taking the test, there is a robot monitoring everyone to make sure no one’s cheating - so clearly the goal here is to cheat.Roger can peer over to see the answers of the students to either side of him. If he gets caught, he’ll be ejected from the academy (into space) and it’s game over. If you copy from the wrong student you’ll get the wrong answers, so make sure you pick the smart kid to cheat off of (hint: the one with the big brain).When you select the right student you’ll hear the tone play that indicates your score has gone up. This is a sure fire way to confirm you’ve done something correctly that will advance the plot or direction of the game.The game is a mashup of all your favourite sci-fi properties such as Star Trek, Star Wars and Alien. Early on you’ll meet a critter on the shape that looks a lot like a facehugger from Alien. Instead of it killing you right away though, Roger thinks he looks cute, names him Spike and keeps him as a pet.Many story sequences are presented in this comic book panel style and it’s clear a lot of effort went into the artwork for this game.For game from 1993 you’re getting some of the best VGA graphics sprite-based artists could crank out. The character models are extremely expressive, the background artwork is detailed and there’s plenty of sight gags and hidden details to discover on each screen that immerses you in the experience.Space Quest games never take themselves too seriously, and Space Quest V is no exception. I really enjoy clicking the LOOK action on as much as I can on each screen as the feedback you get tends to be witty or funny.When Roger does something stupid, the sound effect they chose was Homer Simpson’s “DOH!”, which just feels weirdly appropriate for this game.There is no voice acting, and many scenes don’t have background music - just some looping background noise. When on the deck of your garbage scow the sound effects are what you’d expect to hear on the deck of the starship Enterprise.When you do get music in a scene it tends to help build tension or reinforce that something significant is about to happen, but it is used sparingly which can make some scenes feel a bit empty.If you’ve played any of the Space Quest games you know that Roger Wilco is a bit of a tool, and sort of bumbles his way into situations he doesn’t belong in. For this installment in the series, he accidentally gets a perfect score on his StarCon Aptitude test and gets assigned to a starship as a captain.This starship is actually a garbage scow - which is appropriate seeing as you’re a janitor. You’ll have to fly to various locations to pick up garbage in space as you wait for instructions or story elements to unfold that direct you to your next location.Initially you have 3 crew members, and you issue commands through various menus you can access from your control panel (click a coloured button to bring these up, or speak the crew members directly using the COMMAND icon).This is a bit more involved than previous games, but it ends up being fairly straightforward. You’ll need the Galactic Inquirer for the star codes to various planets (this is the copy protection), and the commands you issue are usually the same: lay in a course go to light speed wait to arrive go to regular speed orbit planet activate RSSThis will suck up the space trash and allow you to proceed with the story.Like all good Sierra games of this era, there are many ways to get yourself killed. The Space Quest series always tends to have the best game over screens, so it’s worth experimenting a bit to see how Roger’s untimely end can be met in various scenarios.Also, like many Sierra games at the time, Space Quest V contains an unrelated mini-game that acts as filler. Instead of having to play poker like in Police Quest: In Pursuit of the Death Angel, or that stupid card game in Codename: ICEMAN (Sierra On-Line) … this time you play something like Battleship.Seeing as you can savescum your way to victory pretty easily, there’s not much challenge here. It is a decent distraction and can be fun for a few minutes, so I appreciate the fact that it was included.There is some variety to the gameplay, and at one point you are teleported down to a planet at the same time as a fly and end up having your genes spliced with the insect. Playing as a fly, you have to solve a couple of puzzles to get your body back while also advancing the story.Being a fly allows you to crawl through a security card reader to gain access to a building that you’d typically need a card for. By crawling through the beams and observing which ones activate locking mechanisms, you’ll later be able to punch a card to recreate the access card.I remember really finding this puzzle clever when I originally played this game as it wasn’t overly complicated, and knowing I had a business card and a hole punch in my inventory it sort of made sense what I was going to have to do.Not all the puzzles are fun though. When Cliffy (your chief engineer) gets himself ejected from the ship and you need to go rescue him it typically takes a few tries to navigate the awkward controls before you run out of fuel or oxygen.Since I play these games on max speed, turning this down about 50% actually made the sequence a lot easier to complete.As I’m writing this review and going back over my screenshots, it seems arcade sequences are actually more prominent that I remembered. This is potentially the result of Dynamix developing the game - not Sierra.An interesting piece of trivia is that Dynamix originally developed the demo for Space Quest V using their DGDS game engine, but for the final game Sierra’s SCI engine was used.The only real gripe I had with the game was the maze at the very end. I just really dislike mazes - unless I’m playing a CRPG that is.Navigating this maze is just a pain in the ass, but thankfully it’s fairly short and you can burn through the entire sequence in about 10 minutes. If you happen to pop out under the elevator incorrectly and try to climb you will be crushed to death and get to enjoy one of the many death screens this game has to offer … so that’s something I guess.Unlike most (all?) Sierra games, Space Quest V includes product placement in the form of the Sprint logo being displayed after every video call you make. I didn’t find this to be overly intrusive, but it was kind of odd for an adventure game.The nostalgia factor on this game is pretty high for me, which is definitely reflected in the higher Replayability and Bonus / Surprise categories. I love the characters and the unapologetic parody at every turn - even if the plot is kind of thin.I actually tried the demo in DOSBox just to see what the difference was, and surprisingly it looked almost identical to the final version of the game.I had a lot of fun replaying Space Quest V and would highly recommend this title to anyone getting into the genre. It’s pretty accessible, easy to get into and full of great writing - and puns - lots and lots of puns.Game Information Game Space Quest V: Roger Wilco – The Next Mutation Developer Dynamix Publisher Sierra On-Line Release Date February 5, 1993 Systems DOS Game Engine SCI My Playthrough How Long To Beat? 6 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Graphics (10) 6 Sound (10) 5 Plot / Progression (25) 17 Characters / Development (15) 10 Gameplay / Experience (15) 9 Replayability (10) 5 Impact / Impression (10) 7 Bonus / Surprise (5) 2   61% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Risk of data corruption when using Node v22.7.0 and the MongoDB Node.js driver", "url": "/blog/2024/08/29/risk-of-data-corruption-when-using-node-v22-dot-7-0-and-the-mongodb-node-dot-js-driver/", "categories": "MongoDB", "tags": "mongodb, drivers, javascript, node", "date": "2024-08-29 07:18:44 -0400", "snippet": " MongoDB issued the alert titled “Node.js v22.7.0 runtime defect can lead to data encoding issues” on September 10, 2024If you need detection or remediation scripts, you can find them there.Within...", "content": " MongoDB issued the alert titled “Node.js v22.7.0 runtime defect can lead to data encoding issues” on September 10, 2024If you need detection or remediation scripts, you can find them there.Within days of the Node v22.7.0 release, users were already reporting that UTF-8 encodings were broken. The issue results from the introduction of an incorrect optimization for buffer.write which can result in strings being encoded using ISO-8859-1 rather than UTF-8.Though the use of the fast API for buffer.write will be disabled with Node v22.8.0, developers using MongoDB’s Node.js driver could experience data corruption with Node v22.7.0.Mitigating the IssueTo avoid the possibility of data corruption due to this bug it is recommended that Node v22.7.0 is not used at all.MongoDB recommends only using Node runtime versions documented as compatible in production environments. At the time of writing, Node v22.x is not considered a compatible runtime for use with the MongoDB Node.js driver.How it OccursTo illustrate how this can occur, consider the following reproduction:import { MongoClient } from \"mongodb\";const client = new MongoClient(\"mongodb://...\");const value = 'bébé';async function run() { try { console.log(`Running Node ${process.versions.node}`); const coll = client.db(\"test\").collection(\"foo\"); await coll.drop(); let i = 0; while (Buffer.from(value).length === 6 &amp;&amp; i &lt; 20000) { i++ } await coll.insertOne({ _id: 1, message: value }); const doc = await coll.findOne({ _id: 1 }); console.log(`Found doc ${JSON.stringify(doc)}`); } finally { await client.close(); }}run().catch(console.dir);When run using a previous version of Node, the Buffer length is consistently evaluated for 20K iterations, a document is inserted into a MongoDB collection then successfully retrieved.Running Node 22.6.0Found doc {\"_id\":1,\"message\":\"bébé\"}When the same reproduction is run using Node v22.7.0 however, invalid UTF-8 string data can be produced, which would then be inserted into the MongoDB collection, resulting in subsequent retrieval attempts failing.Running Node 22.7.0BSONError: Invalid UTF-8 string in BSON document at parseUtf8 (/Users/alex/temp/test-node/node_modules/bson/lib/bson.cjs:148:19) at Object.toUTF8 (/Users/alex/temp/test-node/node_modules/bson/lib/bson.cjs:273:21) ... 6 lines matching cause stack trace ... at process.processTicksAndRejections (node:internal/process/task_queues:105:5) at async Collection.findOne (/Users/alex/temp/test-node/node_modules/mongodb/lib/collection.js:274:21) { [cause]: TypeError: The encoded data was not valid for encoding utf-8 at TextDecoder.decode (node:internal/encoding:443:16) at parseUtf8 (/Users/alex/temp/test-node/node_modules/bson/lib/bson.cjs:145:37) at Object.toUTF8 (/Users/alex/temp/test-node/node_modules/bson/lib/bson.cjs:273:21) at deserializeObject (/Users/alex/temp/test-node/node_modules/bson/lib/bson.cjs:2952:31) at internalDeserialize (/Users/alex/temp/test-node/node_modules/bson/lib/bson.cjs:2863:12) at Object.deserialize (/Users/alex/temp/test-node/node_modules/bson/lib/bson.cjs:4335:12) at OnDemandDocument.toObject (/Users/alex/temp/test-node/node_modules/mongodb/lib/cmap/wire_protocol/on_demand/document.js:208:28) at CursorResponse.shift (/Users/alex/temp/test-node/node_modules/mongodb/lib/cmap/wire_protocol/responses.js:207:35) at FindCursor.next (/Users/alex/temp/test-node/node_modules/mongodb/lib/cursor/abstract_cursor.js:222:41) at process.processTicksAndRejections (node:internal/process/task_queues:105:5) { code: 'ERR_ENCODING_INVALID_ENCODED_DATA' }}Though MongoDB’s Node.js driver supports UTF-8 validation, that feature applies to decoding BSON strings that are being received from the MongoDB server. As the bug in Node v22.7.0 occurs when encoding strings as UTF-8, the invalid data can still be serialized to BSON and written to the database." }, { "title": "Linearize a Recursive Call Stack Using Thread Primitives", "url": "/blog/2024/08/26/linearize-a-recursive-call-stack-using-thread-primitives/", "categories": "Programming", "tags": "ruby", "date": "2024-08-26 12:57:14 -0400", "snippet": "Linearize a Recursive Call Stack Using Thread Primitives Written by Adviti Mishra, an intern on the MongoDB Ruby driver teamMongoid is an object document mapper (like an ORM) built on the MongoDB ...", "content": "Linearize a Recursive Call Stack Using Thread Primitives Written by Adviti Mishra, an intern on the MongoDB Ruby driver teamMongoid is an object document mapper (like an ORM) built on the MongoDB Ruby driver that Ruby on Rails developers use to interact with their MongoDB data through model instances. When developers choose to cascade callbacks, if their document has a large number of embedded documents, they might encounter a SystemStackError. In this article, we walk through how we used Fibers — a lightweight thread primitive — in a non-concurrency related context of recursion to address this issue!BackgroundMongoDB is a document database that’s designed for scalability, flexibility, and high availability. It’s a non-relational database that uses JSON-like documents to store data.Using Mongoid, Ruby on Rails developers working with MongoDB can leverage ActiveRecord-like referential associations as well as a directly embeddable variation known as embedded associations. Let’s first explore one type of document: embedded documents.Embedded documentsDevelopers can store related data together by embedding these documents in their parent model. This enables them to retrieve the associated data in a single query.In our example we will use throughout the article, we define a Parent class, a Child class, and a Grandchild class that contain embedded associations. First, we will create a parent document that embeds two children documents with the first child, embedding two grandchildren documents.The document representation in MongoDB would look something like this:{ \"_id\": \"66a926dcca8ca12bf6813902\", \"children\": [ { \"_id\": \"66a926dcca8ca12bf68138fe\", \"grand_children\": [ { \"_id\": \"66a926dcca8ca12bf6813900\", \"who_am_i\": 0 }, { \"_id\": \"66a926dcca8ca12bf6813901\", \"who_am_i\": 1 } ], \"who_am_i\": 0 }, { \"_id\": \"66a926dcca8ca12bf68138ff\", \"who_am_i\": 1 } ]}This document was generated as follows:require 'bundler/inline'gemfile do source 'https://rubygems.org' gem 'mongoid', '9.0.0'endMongoid.configure do |config| config.clients.default = { uri: \"mongodb://localhost:27017\" }end# to indicate around callbacks should be fired for embedded documentsMongoid.around_callbacks_for_embeds = true# Initial model definitionsclass Example include Mongoid::Document field :who_am_i, type: Integerendclass Parent &lt; Example embeds_many :children, cascade_callbacks: trueendclass Child &lt; Example embeds_many :grandchildren, cascade_callbacks: trueendclass Grandchild &lt; Example; endparent = Parent.new# Build and embed 2 child documentsparent.children = 2.times.map do |i| Child.new(who_am_i: i)end# Build and embed 2 Grandchild documents for the first childparent.children.first.grandchildren = 2.times.map do |i| Grandchild.new(who_am_i: i)endparent.saveNow, let’s say that every time the parent document is saved, we want to perform some logic on the parent document before, after, and around the save operation. An example of this would be logging the beginning of the operation, calculating and storing the time taken by the save operation, and logging the end of the operation. How exactly can we hook into this stage of the document lifecycle?CallbacksCallbacks, in the context of a Mongoid application, are hooks into the lifecycle of a document’s persistence context. These hooks enable developers to perform logic before, after, and/or around (immediately before and immediately after) document lifecycle events like validate, create, update, save, and destroy.Let’s modify our Example base class definition to include hooks into the before, after, and around events of the document’s “save” lifecycle.class Example include Mongoid::Document field :who_am_i, type: Integer # callbacks for the save operation before_save { puts \"[#{self.class.name} #{self.who_am_i}] before callback\" } around_save :log_around after_save { puts \"[#{self.class.name} #{self.who_am_i}] after callback\" } private def log_around puts \"[#{self.class.name} #{self.who_am_i}] around callback (begin)\" yield # to yield control to the code block performing the save operation puts \"[#{self.class.name} #{self.who_am_i}] around callback (end)\" endendMongoid depends on ActiveRecord’s callbacks implementation, with the relevant API for executing callbacks being Mongoid::Interceptable#run_callbacks. In our example, when run_callbacks is triggered, it will execute the before_save and around_save callbacks around the execution of the save operation, followed by the after_save callback.The yield keyword in Ruby used when executing around callbacks is key.Given that embedded documents are often used to store related data, sometimes, we may want the callbacks of embedded documents to run whenever a persistence operation is performed on the parent document. This phenomenon is known as cascading callbacks.💡 Illustration to build intuition:To illustrate how the callbacks cascade through the embedded documents, when we run the sample code above, the call to parent.save would produce the following output:Having gained a better understanding of how callbacks cascade for embedded documents, we will now work on the implementation for the same. The task of running callbacks on embedded documents is abstracted away in a private API called Mongoid::Interceptable#_mongoid_run_child_callbacks_with_around and will be the function we will be working with moving forward.Existing implementation (Mongoid 9.0.0 and earlier)Before we start coding, let’s first set some goals for our implementation and enumerate what _mongoid_run_child_callbacks_with_around needs to know: If an around callback is defined, execution needs to pause at yield and resume after the yielded logic is done executing. All cascadable embedded documents need to have their callbacks executed.The implementation must also be elegant, readable, and simple to reason about so that working with it feels good (like Matz tells us working with Ruby should).Next, let’s dive into the parameters _mongoid_run_child_callbacks_with_around expects: kind: the kind of callbacks to run (e.g., save, create, validate, etc.) children: the list of embedded documents to run the callbacks on block: executes the persistence operation the callbacks are being run for; this can either happen directly or after running any other callbacksEquipped with this, we will first analyze the old recursive implementation:def _mongoid_run_child_callbacks_with_around(kind, children: nil, &amp;block) child, *tail = (children || cascadable_children(kind)) with_children = !Mongoid::Config.prevent_multiple_calls_of_embedded_callbacks if child.nil? block&amp;.call elsif tail.empty? child.run_callbacks(child_callback_type(kind, child), with_children: with_children, &amp;block) else child.run_callbacks(child_callback_type(kind, child), with_children: with_children) do _mongoid_run_child_callbacks_with_around(kind, children: tail, &amp;block) end endendThis function handles three cases: There are zero embedded documents (child.nil?), and if a code block was provided, it will be run. There is one embedded document (tail.empty?) and its run_callbacks function will be invoked. There are more than one embedded documents, at which point run_callbacks will be called recursively.This recursive use case is where we can get into trouble. If we dig into the logic, it appears that run_callbacks yields to the custom block passed in that invokes _mongoid_run_child_callbacks_with_around but with the parameter for children as the list of remaining documents (stored in tail).This seems intuitive as well based on colorized output (see above), where each color corresponds to one invocation of _mongoid_run_child_callbacks_with_around.To better understand how this recursive implementation can become problematic, let’s adjust the number of Child embedded documents our sample code will generate:parent = Parent.new# Build and embed 750 child documentsparent.children = 750.times.map do |i| Child.new(who_am_i: i)end# Build and embed 2 Grandchild documents for the first childparent.children.first.grandchildren = 2.times.map do |i| Grandchild.new(who_am_i: i)endparent.saveThough the increased number of child embedded documents being generated may not seem like much, according to our Ruby runtime, it is… and running this example will now raise a SystemStackError.[...]/mongoid-9.0.0/lib/mongoid/config/options.rb:38:in `block (2 levels) in option': stack level too deep (SystemStackError) from [...]/mongoid-9.0.0/lib/mongoid/interceptable.rb:177:in `_mongoid_run_child_callbacks_with_around' from [...]/mongoid-9.0.0/lib/mongoid/interceptable.rb:184:in `block in _mongoid_run_child_callbacks_with_around' from [...]/activesupport-7.1.3.4/lib/active_support/callbacks.rb:101:in `run_callbacks' from [...]/mongoid-9.0.0/lib/mongoid/interceptable.rb:139:in `run_callbacks' from [...]/mongoid-9.0.0/lib/mongoid/interceptable.rb:183:in `_mongoid_run_child_callbacks_with_around' from [...]/mongoid-9.0.0/lib/mongoid/interceptable.rb:184:in `block in _mongoid_run_child_callbacks_with_around' from [...]/activesupport-7.1.3.4/lib/active_support/callbacks.rb:101:in `run_callbacks' from [...]/mongoid-9.0.0/lib/mongoid/interceptable.rb:139:in `run_callbacks' ... 8134 levels... from [...]/mongoid-9.0.0/lib/mongoid/persistable/creatable.rb:109:in `prepare_insert' from [...]/mongoid-9.0.0/lib/mongoid/persistable/creatable.rb:21:in `insert' from [...]/mongoid-9.0.0/lib/mongoid/persistable/savable.rb:27:in `save' from test.rb:53:in `&lt;main&gt;'There are well-defined base cases in _mongoid_run_child_callbacks, so there is no way this is a case of:a case of:\ta case of:\t\ta case of:\t\t\ta case of:\t\t\t\ta case of:\t\t\t\t\ta case of:\t\t\t\t\t\ta case of:\t\t\t\t\t\t\t…Infinite recursion!So, how did the stack space get exhausted?!Well, in the general case, an invocation of _mongoid_run_child_callbacks_with_around creates a stack frame for run_callbacks. When run_callbacks eventually yields to the block passed in, this block creates a stack frame for running _mongoid_run_child_callbacks_with_around and so on.As a result, there is at least one extra stack frame for every invocation of _mongoid_run_child_callbacks_with_around which corresponds directly to the number of embedded documents, eventually reaching a depth that results in a SystemStackError being raised. The number of callbacks that can be added to the stack can vary from system to system, which makes it challenging to optimize the existing approach consistently.Maybe there’s a better way to approach this …Replacing recursion with fibers in Mongoid 9.0.1So, what even are fibers?Fibers are thread primitives that are used for implementing lightweight cooperative concurrency. These are the two methods we will be using from the Fiber API: The Fiber#resume method starts/resumes running the fiber. The Fiber.yield method is called from within the fiber to return control to the caller of the Fiber#resume. These two methods equip fibers with a feature that we will leverage. We can control the scheduling (unlike threads that are scheduled by the operating system).Fibers are typically used in concurrent contexts. However, we thought of using these two methods to somehow run callbacks based on a proof of concept initially proposed by my mentor, Jamis Buck!ApproachTo investigate this, I wanted to first answer these high-level questions: Bottom-up: How do callbacks work at the level of ActiveSupport in Ruby on Rails through CallbackSequence, CallTemplate, Filters, all the way up to run_callbacks? Top-down: How does Mongoid identify a persistence operation, obtain a list of the embedded documents that callbacks can be cascaded to, and cascade the right callbacks for all of them using run_callback? Middle-layer: At what point within the entire flow of callbacks (discovered through one and two) can fibers be used correctly?I spent the first few weeks of my internship understanding callbacks in the context of the holy trinity: Ruby on Rails, Mongoid, and fibers from the Ruby language. However, when my dreams started running on separate fibers that kept yielding to each other, I realized I had to touch some grass. It was when I was touching grass on a hike that I had my eureka moment — ironically inspired by recursion.In the Programming and Data Structure class I TA’d, one mantra we would emphasize in the recursion unit was: “Take the recursive leap of faith.”The recursive leap of faith means: Trust that the function you are implementing runs perfectly and returns the right value. Solely focus on figuring out how to depend on the function.Extrapolate this philosophy of trust to this project where _mongoid_run_child_callbacks_with_around depends on Ruby on Rails’ ActiveSupport: What if we trust that Ruby on Rails’ handling of callbacks is incredibly efficient and solely focus on how we depend on Ruby on Rails’ run_callbacks instead?This helped us answer Question 3 above: At what point within the entire flow of callbacks can fibers be used correctly? Within _mongoid_run_child_callbacks_with_around itself!The fundamental idea underpinning the solution that I discovered is leveraging fibers in a “hand-off” fashion.def hand_off(children, block) # creating fibers for each child in children fibers = children.map do |child| Fiber.new do puts \"Fiber for #{child.who_am_i} does work (begin)\" Fiber.yield puts \"Fiber for #{child.who_am_i} finishes work (end)\" end end # resumes one fiber at a time fibers.each(&amp;:resume) # execute the block block&amp;.call # resumes one fiber at a time in reverse fibers.reverse.each(&amp;:resume)endThe fibers.each(&amp;:resume) line runs the fiber for the 0th child. “Fiber for 0 does work (begin)” gets printed. When execution hits the Fiber.yield statement, control is returned to fibers.each(&amp;:resume). This then runs the fiber for the next child. In this fashion, the work “before” the yield gets executed for all the children.Now, the actual “work” can take place. Thus, block&amp;.call runs.The fibers.reverse.each(&amp;:resume) line runs the fiber for the last child. “Fiber for 1 does work (end)” gets printed. This then runs the fiber for the second-to-last child. In this fashion, the work “after” the yield gets executed for all the children.Does this flow seem familiar? It is a linearized version of the bottleneck in the recursive call stack from the implementation in Mongoid 9.0 (and earlier)! The fibers.each(&amp;:resume) mimics running the before callback and the part of the around callback before the yield. The block&amp;.call mimics running the block passed in. The fibers.reverse.each(&amp;:resume) mimics the “unfolding” of the recursive algorithm by running the part of the around callback after the yield and the after callback.Isn’t this cool? Together, we have linearized the recursive call stack using a thread primitive!In our case, run_callbacks does all the work we illustrated in the code block. To effectively hand off control between the fibers, the one tweak we need to make is that the block we pass into run_callbacks should yield the fiber.The solution that we arrived at looks like:def _mongoid_run_child_callbacks_with_around(kind, children: nil, &amp;block) children = (children || cascadable_children(kind)) with_children = !Mongoid::Config.prevent_multiple_calls_of_embedded_callbacks return block&amp;.call if children.empty? fibers = children.map do |child| Fiber.new do child.run_callbacks(child_callback_type(kind, child), with_children: with_children) do Fiber.yield end end end fibers.each do |fiber| fiber.resume raise Mongoid::Errors::InvalidAroundCallback unless fiber.alive? end block&amp;.call fibers.reverse.each(&amp;:resume)endYay! Let’s now analyze how the two implementations fair for correctness and efficiency: If an around callback is defined, execution needs to pause at yield and resume after the yielded logic is done executing. Recursive implementation: Stack frames remember where to resume execution. Fiber-based implementation: Each fiber resumes execution from the point it yielded. All cascadable embedded documents need to have their callbacks executed. Recursive implementation: A stack frame is created for each embedded document. Fiber-based implementation: A fiber is created for each embedded document within one stack frame. As demonstrated previously, the recursive implementation stops working for embedded documents in the hundreds. On the other hand, the fibers implementation works for even 10,000+ embedded documents. Thus, you don’t need to worry about your application working or not working depending on the data you have (although, you should ideally not design your database to have tens of thousands of embedded documents).The Fiber-based implementation we’ve discussed throughout this post was released in Mongoid 9.0.1 if you want to go check it out. If you’re unsure how to get started with Mongoid, there are tutorials for Ruby on Rails and Sinatra that can help start you on your journey to building something amazing with MongoDB and Ruby!" }, { "title": "Rendering MongoDB Driver Specifications as a Book", "url": "/blog/2024/08/26/rendering-mongodb-driver-specifications-as-a-book/", "categories": "MongoDB", "tags": "mongodb, drivers", "date": "2024-08-26 07:36:01 -0400", "snippet": "MongoDB’s Drivers Specifications have always been available on GitHub. Since the content license is extremely permissive there are a number of things we could do to transform that work as long as w...", "content": "MongoDB’s Drivers Specifications have always been available on GitHub. Since the content license is extremely permissive there are a number of things we could do to transform that work as long as we provide proper attribution.Until recently, this content has always been maintained as restructuredText documents, however with DRIVERS-2789 this content has all been converted to Markdown. MongoDB decided to use this opportunity (via DRIVERS-2881) to publish the specifications to ReadTheDocs using MkDocs, however I wanted to try taking an alternate approach to see how difficult it would be to automate publication of Markdown content in book format.ConfigurationSince the specifications are hosted on GitHub, I began by forking the repository to alexbevi/specifications. Instead of MkDocs I chose mdBook as the tool for rendering Markdown to HTML as creating a book was as simple as: Defining a book.toml with basic configuration options Outlining the book structure in a SUMMARY.md fileI defined my book.toml to indicate all my Markdown files would be in the source/ directory, created a source/SUMMARY.md file with links to all the Markdown files I wanted in my book and was basically done.Testing this out was as easy as running mdbook serve --open:mdbook serve --open2024-08-26 07:56:39 [INFO] (mdbook::book): Book building has started2024-08-26 07:56:39 [WARN] (mdbook::preprocess::index): It seems that there are both \"README.md\" and index.md under \"/Users/alex/Workspace/specifications/source\".2024-08-26 07:56:39 [WARN] (mdbook::preprocess::index): mdbook converts \"README.md\" into index.html by default. It may cause2024-08-26 07:56:39 [WARN] (mdbook::preprocess::index): unexpected behavior if putting both files under the same directory.2024-08-26 07:56:39 [WARN] (mdbook::preprocess::index): To solve the warning, try to rearrange the book structure or disable2024-08-26 07:56:39 [WARN] (mdbook::preprocess::index): \"index\" preprocessor to stop the conversion.2024-08-26 07:56:39 [INFO] (mdbook::book): Running the html backend2024-08-26 07:56:43 [INFO] (mdbook::cmd::serve): Serving on: http://localhost:30002024-08-26 07:56:43 [INFO] (mdbook): Opening web browser2024-08-26 07:56:43 [INFO] (warp::server): Server::run; addr=[::1]:30002024-08-26 07:56:43 [INFO] (warp::server): listening on http://[::1]:30002024-08-26 07:56:43 [INFO] (mdbook::cmd::watch::poller): Watching for changes...mdBook will process the SUMMARY.md file, generate HTML content based on the indexed Markdown files and open a preview in your default browser.AutomationLaying out the book and rendering it from Markdown to HTML turned out to be pretty easy, but MongoDB’s engineers continuously refine the specifications so anything we generate would go stale fairly quickly. What if we could leverage GitHub Actions to refresh our fork of the specifications repository, rebuild our book and continuously publish as GitHub Pages?We’ll be publishing our repository to a GitHub Pages instance (see the Quickstart for GitHub Pages if needed), so the first step is to ensure this has been configured. Next we’ll setup workflow that GitHub Actions can use to: Checkout the upstream repository Sync the upstream repository’s master branch with our fork’s default branch (mkbook in this case) Install mdbook and build our book based on the latest Markdown files Deploy the HTML contents from our build target (book/) to the branch GitHub pages is configured to use (gh-pages in this case)If you want to check out the latest version of this it’s at .github/workflows/sync.yml, but at the time of writing it looks like this:name: 'Scheduled Upstream Sync'on: schedule: - cron: '0 8 * * *' workflow_dispatch: # click the button on Github repo! inputs: sync_test_mode: # Adds a boolean option that appears during manual workflow run for easy test mode config description: 'Fork Sync Test Mode' type: boolean default: falsejobs: sync_latest_from_upstream: runs-on: ubuntu-latest name: Sync latest commits from upstream repo steps: # REQUIRED step # Step 1: run a standard checkout action, provided by github - name: Checkout target repo uses: actions/checkout@v3 with: # optional: set the branch to checkout, # sync action checks out your 'target_sync_branch' anyway ref: mkbook # REQUIRED if your upstream repo is private (see wiki) # persist-credentials: false # REQUIRED step # Step 2: run the sync action - name: Sync upstream changes id: sync uses: aormsby/Fork-Sync-With-Upstream-action@v3.4.1 with: target_sync_branch: mkbook # REQUIRED 'target_repo_token' exactly like this! target_repo_token: $ upstream_sync_branch: master upstream_sync_repo: mongodb/specifications # upstream_repo_access_token: $ # Set test_mode true during manual dispatch to run tests instead of the true action!! test_mode: $ # Step 3: Display a sample message based on the sync output var 'has_new_commits' - name: New commits found if: steps.sync.outputs.has_new_commits == 'true' run: echo \"New commits were found to sync.\" - name: No new commits if: steps.sync.outputs.has_new_commits == 'false' run: echo \"There were no new commits.\" - name: Show value of 'has_new_commits' run: echo $ - name: Install latest mdbook run: | tag=$(curl 'https://api.github.com/repos/rust-lang/mdbook/releases/latest' | jq -r '.tag_name') url=\"https://github.com/rust-lang/mdbook/releases/download/${tag}/mdbook-${tag}-x86_64-unknown-linux-gnu.tar.gz\" mkdir mdbook curl -sSL $url | tar -xz --directory=./mdbook echo `pwd`/mdbook &gt;&gt; $GITHUB_PATH - name: Build Book run: | # This assumes your book is in the root of your repository. # Just add a `cd` here if you need to change to another directory. mdbook build - uses: JamesIves/github-pages-deploy-action@4.1.7 with: branch: gh-pages # The branch the action should deploy to. folder: book # The folder the action should deploy.Note that the above is configured to run on a schedule, so GitHub Actions will fire once a day to check if there were any updates in the upstream repository that we may want to sync.ResultsSince I wrote about “Peeling the MongoDB Drivers Onion” I wanted this to be included in the book as well, so this was included as the source/README.md file. The rest of the contents of the specification repository were untouched and are just being rendered by mdBook.If you want to explore MongoDB’s Driver Specifications, you can now just click on through to alexbevi.com/specifications (or select “Specifications” from the menu) and explore these to your heart’s content :)" }, { "title": "Overhauling My Scoring Criteria", "url": "/blog/2024/08/22/overhauling-my-scoring-criteria/", "categories": "Let's Adventure!", "tags": "series, adventure", "date": "2024-08-22 05:32:09 -0400", "snippet": "When I started the “Let’s Adventure!” series I devised a scoring system that I thought would meaningfully allow me to rate the games I was playing in a fair and balanced way: Atmosphere: This will...", "content": "When I started the “Let’s Adventure!” series I devised a scoring system that I thought would meaningfully allow me to rate the games I was playing in a fair and balanced way: Atmosphere: This will focus on how the game makes you feel while you’re playing it and includes inputs such as Music, Sound Effects, Graphics, Cut Scenes and overall quality.Max Points: 20 Story: Adventure games are very story-driven, and as such the story needs to be evaluated as a top-level criteria. Focus will be on Quality, Immersion, Complexity, Progression and Pacing.Max Points: 25 Experience: How much Fun was the game? Was the Difficulty too high/low? Were the puzzles a Challenge or were they repetitive and felt derivative and lazy? Was there any introduction for the player or are you dropped in blind?Max Points: 15 Impact: Did you enjoy the overall experience? Would you play this again? Would you want to know more about this world and its characters in subsequent adventures?Max Points: 10For the first 84 games in this series, this was the rating system I used. What I learned pretty early on was that I didn’t really have a very good set of evaluation criteria, and since my score only went up to 70 and I was generating a percentage score, it wasn’t very balanced.Nothing’s set in stone, so now’s as good a time as any to correct this misstep and revise the scoring system for the remainder of the series.New Scoring SystemIn an attempt to improve the overall rating system used for the series I’ve decided to expand the categories and make the total score out of 100. I’ve also included some more opinionated criteria to allow me to boost games that I personally enjoyed - even if they’re less critically acclaimed. [15] GraphicsThe overall visual experience of the game can include background art, character models, game interface, cutscenes, inventory design and basically anything that you can see while playing the game. [10] SoundWhat do you hear? Is there ambient music or background noise? If the game is voiced are the actors giving it their all or phoning it in? Are sound effects present and enhancing the experience, or jarring/distracting. [25] Plot / ProgressionWhat’s the quality of the overarching story in this game? Does it grab your attention and hold it or is it sort of “just there” as a forced reason for you to interact with this virtual world? How does the plot progress, and does everything wrap up at the end? When the game is over do you feel satisfied and want to learn more about this world and its inhabitants? [15] Characters / DevelopmentIs the main character interesting and engaging? Are there other characters you interact with and are they fleshed out or just hollow NPCs there to deliver basic instructions? Do the main and supporting characters add depth to the world and gaming experience and how do they grow and evolve as the game progresses? [15] Gameplay / ExperienceThis is a game … so is it fun to play? The goal is to get from some starting point to some ending point, but was this journey worth your time? Sometimes these games can be a joy to play through and sometimes they’re a slog and focus too heavily on “filler” or elements that artificially pad out play time. [5] ReplayabilityOnce the game is complete would you ever find yourself itching to play it again? Was the game fun to play or experience, or offer some variety of gameplay or character selection that could entice you back for repeated playthroughs. [10] Impact / ImpressionFinal thoughts and impressions on this game as a whole. Were you left wanting more, or were you rushing to the end to get it over with. [5] Bonus / SurpriseAnything unexpected or notable that’s worth calling out?Scores (for posterity)The snapshot of the scores at the time the system was overhauled is below. As I’m going to revisit each of these scores over time, the master list - sorted by score - will slowly be updated. 91% Maniac Mansion: Day of the Tentacle (LucasArts) - 1993 89% Full Throttle (LucasArts) - 1995 89% Gabriel Knight: Sins of the Fathers (Sierra On-Line) - 1993 87% The Secret of Monkey Island (Lucasfilm Games) - 1990 87% Grim Fandango (LucasArts) - 1998 86% Beneath a Steel Sky (Revolution Software) - 1994 86% Sanitarium (DreamForge Intertainment) - 1998 84% Sam &amp; Max Hit the Road (LucasArts) - 1993 84% Space Quest: The Sarien Encounter (Sierra On-Line) - 1986 84% Flight of the Amazon Queen (Interactive Binary Illusions) - 1995 81% King’s Quest: Quest for the Crown (Sierra On-Line) - 1984 80% Shadowgate (ICOM Simulations) - 1987 79% Innocent Until Caught (Divide By Zero) - 1993 77% Blue Force (Tsunami Games) - 1993 76% Rise of the Dragon (Dynamix) - 1990 73% I Have No Mouth, and I Must Scream (The Dreamers Guild) - 1995 71% Police Quest II: The Vengeance (Sierra On-Line) - 1988 70% Space Quest III: The Pirates of Pestulon (Sierra On-Line) - 1989 69% Manhunter: New York (Evryware) - 1988 69% Tony Tough and the Night of Roasted Moths (Nayma Software, Prograph Research S.r.l.) - 1999 67% Blade Runner (Westwood Studios) - 1997 67% Police Quest: In Pursuit of the Death Angel (Sierra On-Line) - 1987 66% Nightshade (Beam Software) - 1992 66% Space Quest II: Vohaul’s Revenge (Sierra On-Line) - 1987 64% Ringworld: Revenge of the Patriarch (Tsunami Games) - 1992 64% Normality (Gremlin Interactive) - 1996 64% Leisure Suit Larry Goes Looking for Love (in Several Wrong Places) (Sierra On-Line) - 1988 63% DreamWeb (Creative Reality) - 1994 63% Labyrinth: The Computer Game (Lucasfilm Games) - 1986 61% Snatcher (Konami) - 1988 61% Countdown (Access Software) - 1990 59% Discworld (Teeny Weeny Games/Perfect 10 Productions) - 1995 59% Dark Seed (Cyberdreams) - 1992 59% The Adventures of Willy Beamish (Dynamix) - 1991 59% Police Quest III: The Kindred (Sierra On-Line) - 1991 57% Leisure Suit Larry in the Land of the Lounge Lizards (Sierra On-Line) - 1987 57% Mean Streets (Access Software) - 1989 56% Return to Ringworld (Tsunami Games) - 1994 56% The Legend of Kyrandia: Fables and Fiends (Westwood Studios) - 1992 56% Frederik Pohl’s Gateway (Legend Entertainment) - 1992 56% Loom (Lucasfilm Games) - 1990 53% Ripper (Take-Two Interactive) - 1996 53% Space Quest IV: Roger Wilco and the Time Rippers (Sierra On-Line) - 1991 51% Harvester (DigiFX Interactive) - 1996 51% Beavis and Butt-Head in Virtual Stupidity (Viacom New Media) - 1995 51% (was 80%) Princess Tomato in the Salad Kingdom (Hudson Soft) - 1984 50% Déjà Vu: A Nightmare Comes True (ICOM Simulations) - 1985 49% Duckman: The Graphic Adventures of a Private Dick (The Illusions Gaming Company) - 1997 49% Urban Runner (Coktel Vision) - 1996 47% Hopkins FBI (MP Entertainment) - 1998 47% Manhunter 2: San Francisco (Evryware) - 1989 46% Lure of the Temptress (Revolution Software) - 1992 46% Tass Times in Tonetown (Interplay Productions, Brainwave Creations) - 1986 44% Torin’s Passage (Sierra On-Line) - 1995 44% Uninvited (ICOM Simulations) - 1986 43% Eternam (Infogrames) - 1992 41% Hugo’s House of Horrors (Gray Design Associates) - 1990 41% King’s Quest II: Romancing the Throne (Sierra On-Line) - 1985 40% The Crimson Crown - Further Adventures in Transylvania (Penguin Software) - 1985 40% Police Quest: Open Season (Sierra On-Line) - 1993 39% Companions of Xanth (Legend Entertainment) - 1993 39% Codename: ICEMAN (Sierra On-Line) - 1989 39% Cruise for a Corpse (Delphine Software International) - 1991 36% EcoQuest: The Search for Cetus (Sierra On-Line) - 1991 36% Hugo II, Whodunit? (Gray Design Associates) - 1991 36% Jurassic Park (Sega of America) - 1993 34% Murder on the Mississippi (Activision) - 1986 34% Altered Destiny (Accolade) - 1990 34% The Black Cauldron (Sierra On-Line) - 1986 31% (was 34%) Rendezvous with Rama (Telarium) - 1984 29% Ace Ventura (7th Level) - 1996 28% (was 31%) The Dark Crystal (On-Line Systems) - 1983 23% (was 29%) Wizard and the Princess (On-Line Systems) - 1980 22% (was 33%) Transylvania (Penguin Software) - 1982 21% (was 66%) Mystery House (On-Line Systems) - 1980 21% Bargon Attack (Coktel Vision) - 1992 20% (was 31%) Dallas Quest (Datasoft) - 1984 19% Lost in Time (Coktel Vision) - 1993 15% (was 46%) Ulysses and the Golden Fleece (On-Line Systems) - 1981 14% (was 27%) Kabul Spy (Sirius Software) - 1982 13% (was 14%) Adventureland (Adventure International) - 1982 13% Emmanuelle (Coktel Vision) - 1989 12% (was 19%) Mission Asteroid (On-Line Systems) - 1980 7% (was 11%) Geisha (Coktel Vision) - 1990" }, { "title": "Bargon Attack (Coktel Vision) - 1992", "url": "/blog/2024/08/06/bargon-attack/", "categories": "Let's Adventure!", "tags": "adventure, Coktel Vision, Gob", "date": "2024-08-06 06:29:18 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Jurassic Park (Sega of A...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Jurassic Park (Sega of America) - 1993Bargon Attack (Coktel Vision) - 1992→ Space Quest V: Roger Wilco – The Next Mutation (Dynamix) - 1993 Article 84 of 96 in this series.Bargon Attack is an adventure game, originally released in Spain and France in 1992. The cyberpunk game uses stylized art presented in a 2.5D format.Bargon Attack is one of the less known adventures from Coktel Vision, though it was one of the first that introduced the unique interface that was used in many Coktel games that followed. It was also one of the first of Coktel’s games to use FMV technology in cut-scenes.The gameplay is a mix of science fiction, cyberpunk and comedy elements. It takes place in the near future when an alien race named Bargon conquered the Earth and enslaved its people. You take a role of the young programmer who decides to put an end to the cruel aliens. You’ll travel through 20 or so locations. Each one consists of 1 to 3 screens, similar to other Coktel games.Along your travels, you’ll face dangerous creatures and some strange alien technology. There are some occasions when you can die (though the option to replay the level is always available), plus the game also features several arcade sequences.1The game starts off with some good ol’ fashion copy protection. I assumed ScummVM would allow me to bypass this, but if you happen to play an original copy in DOSBox or something else, the scans for these colour charts aren’t hard to find.Once you get past the copy protection you get into the main game, which is a fairly generic point and click adventure. Moving the cursor around the screen will call out areas you can interact with, and click on those will execute the associated action.Unlike most adventure games, there are only a couple of verbs available, and they tend to just be to “look” at whatever is highlighted, or to pick it up if that’s an option.Picking up items will change the cursor to represent the item you just picked up, but you typically can’t use it right away so you need to right click to get your original cursor back. This was a bit cumbersome and unintuitive at first, but once you realize that’s how you’re supposed to play this game it wasn’t that big of a deal.The purpose of the game seems to be to follow this hooded guy around that you witnessed killing someone. It turns out that he’s from Bargon (and is a Bargonian?) and through people playing the game Bargon Attack, humans have somehow allowed Bargon … to Attack.I really didn’t follow the plot at all, but there’s a computer at the end you need to put a disk into that for some reason or another will save the Earth.There aren’t a lot of items you need to pick up and use throughout the game, but the arm unit you get early on is actually sort of an interesting tool. You can pick up various “disks” throughout the game that give the arm unit different abilities, which can help you solve puzzles or give you clues as to what to do next.The programs these disks contain are “shoot”, which lets you fire a beam at something (usually an enemy). A “mutate” program allows you to transform what you aim at, and “translate” can be used to decipher Bargonian text or speech.You’ll use the arm unit quite a bit as it’s the main way to advance through the game. The other way to advance through the game is with a walkthrough as a lot of the puzzles just aren’t that well designed and it’s very easy to get yourself killed.Get used to this screen - it’s the only one you see when you mess upEvery time you die - which will happen a lot - you get the exact same Game Over screen. Thankfully the game allows you to just return to the same screen you just died on to try again, so if you forgot to save for a while you typically won’t lose much progress.Make sure you write this pattern down …It’s really not all that obvious what you’re supposed to be doing at any time during this game. Though you’ll meet a couple characters here and there, there’s no dialogue or interaction to speak of so those characters are no different than any other static asset in the game.The story will progress via the cutscenes as you advance from section to section, but the story also doesn’t really make all that much sense - though they’re clearly trying to make it seem like there is one.Oh goody, a filler arcade sequenceTo break up the monotony (I guess) there is an arcade sequence early on … assuming you are able to make your way into the water. There’s absolutely no reason for this sequence to exist other than to kill time, so you need to mash your way through a bunch of crab things before they take away enough of your “health” to trigger another Game Over.Though there is absolutely no background music, and the sound effects are annoying at best - the game’s visuals are extremely well done. There really isn’t much to do on each screen you visit, but they are nice to look at.Since there’s little to no dialogue in the game, plot progression occurs through cutscenes that happen between each game section. You’ll learn that the Earth is destroyed and you have to go to Bargon to put some program in their super computer.If you do this you save (restore?) the planet - which ends up being your ultimate goal in the game. After a handful of unintuitive puzzles on Bargon you’ll find the computer, make your way up an elevator and put the disk in drive #3 (you do get a clue about this earlier at least).Yay, the game is over! I’m not a fan of Coktel Vision games, and so far in this review series some of the lowest scores belong to their titles. Bargon Attack is the best of these games so far, but that’s not saying much.The intro in the version I played was at least voice acted, so that was a nice touch as this game is mostly devoid of sound. There is no background music at any point throughout the game, and the annoying sound effects that you get occasionally don’t really improve the experience.The game really isn’t fun, the story isn’t compelling and the experience is lackluster at best. I was hoping to find something interesting to support this review, but I couldn’t. If you happen to be a fan of this game though, check out the reviews at The Adventurers Guild on the topic as they’re clearly meant for you ;)Game Information Game Bargon Attack Developer Coktel Vision Publisher Coktel Vision Release Date 1992 Systems DOS Game Engine Gob My Playthrough How Long To Beat? 3 hours Version Played DOS via ScummVM Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 5 Story (25) 5 Experience (15) 4 Impact (10) 1   21% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Jurassic Park (Sega of America) - 1993", "url": "/blog/2024/07/15/jurassic-park/", "categories": "Let's Adventure!", "tags": "adventure, Sega", "date": "2024-07-15 17:13:20 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Discworld (Teeny Weeny G...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Discworld (Teeny Weeny Games/Perfect 10 Productions) - 1995Jurassic Park (Sega of America) - 1993→ Bargon Attack (Coktel Vision) - 1992 Article 83 of 96 in this series.Jurassic Park is a 1994 point-and-click adventure game developed and published by Sega for the Sega CD. The video game is based on the 1993 film of the same name, and includes elements from Michael Crichton’s 1990 novel Jurassic Park, which the film is based upon.The story takes place after the events of the movie/book. You are sent back to Jurassic Park to retrieve dinosaur eggs from around the park and put them in an incubator. You only have 12 hours to retrieve one egg from every species of dino in the park. Unfortunately, shortly before arriving at the park, your helicopter crashes!1I didn’t have any Sega systems when I was growing up, so having an opportunity to play some of these games on either the Genesis or Sega CD is not something I’m going to pass up. I don’t really know anything about the system, according to the technical specs I guess the Sega CD was just an expansion unit for the Genesis, so it’s not going to really improve the look or feel of these games - though it did have a CPU that ran 5 MHz faster than the Genesis 💨.Once you hit START to begin the game, your objective is very succinctly splashed across the screen, you hear the crash and the adventure begins and you get to start trying to figure out the UI and how to interact with the game world.The game splits the view into 3 “strips”. The top strip shows the currently selected item/action, the direction you’re facing, how much time you have left and your health. I don’t really know what the satellite icon represented and couldn’t find anything in the manual about it either.The middle half of the screen is the game view, which is typically a 360 degree view of the current location. As you move the cursor left or right you can see the game screen scroll and the direction in the top strip will update accordingly.Moving the cursor around the screen will give you an idea what you can interact with or where you can go. The cursor helpfully turns into a little hand if you can pick something up, an arrow if you can move in a certain direction, or a magnifying glass so you can inspect the thing you’ve hovered over.There are quite a few items you can pick up and use, though where you can use things can be a bit unintuitive. As you move around the park there are paths blocked or doors that are inaccessible but the cursor doesn’t always give you a visually appropriate cue that there’s something you need to do - such as use an item.Keep your eyes peeled for that green X cursor changeIf you’ve got the cursor icon selected (and not an item) you may get a green Xto show up as you sweep the cursor across the screen. This is typically an indication that you can use an item on that spot, but it’s up to you to pick the right item for the situation.In the case of the above screenshot of the raptor’s nest, you need to throw a rock at the boulders to cause them to cave in and scare some of the raptors to run out of the cave - allowing you to sneak in and steal their eggs.Speaking of rocks, make sure you pick them ALL UP! The game doesn’t tell you how many you have, but you’ll need at least 5-6 and some puzzles involve using 2 at a time.The bottom strip of the screen shows your permanent items, such as the night vision goggles or the motion detector. The latter is extremely useful when you’re navigating an area with dinosaurs as it lets you know what direction they might attack you from.If you’ve picked up any dinosaur eggs it will also let you know. This reminder is important because the goal of the game is to get those eggs back to the incubator. If you hold onto the eggs for too long, the dinosaur inside dies.Every time you pick up eggs you should high tail it back to the visitor center to load the eggs into the incubator. You only need to collect one sample per dinosaur, so if a few sample die along the way you still have a bit of a buffer.Pausing the game will also bring up a summary that lets you know how many eggs you’ve collected, along with how many samples have died.Navigating through this game is pretty straightforward, and though figuring out which items to use where isn’t always intuitive, you can typically just cycle through all your items on a given action area and trial and error your way to a solution.Picking the wrong item will give audible feedback that you chose wrong, so it’s obvious you need to try again. The one exception I found was putting the gas in the boat.For this puzzle you need to fill the boat with gas, but unlike every other interaction in this game, you need to hold down the C button to keep filling the tank until the cursor changes indicating you can now move in that direction.This threw me off for a while because I would just “use” the item and expect it to work … but apparently you had to “keep using” it in this case.Jurassic Park incorporates an arcade shooter style mechanic as well. You can pick up various weapons throughout the game that you can use on the dinosaurs to get them out of your way, or distract/stun them.When you select a weapon the cursor changes to a target and your ammo will be displayed at the top of the screen. You have very limited ammo, and you can only replenish your tranquilizer darts once.These arcade sequences get harder and harder as the game goes on, and you have very limited health. I’m fairly certain you can top your health up as many times as you want at the visitor center, but having to constantly backtrack to do this is a pain in the ass.As you move between areas you’ll sometimes get a brief animation, which acts as a screen transition with some background music.The sound effects and music definitely add some ambiance, but it’s a bit weird that none of the music from the movie was included. Not sure if this was a technical limitation, an oversight or something else - but having at least one entry from the iconic soundtrack on the title screen or something would have been a welcome addition.Right from the beginning the game lets you know you only have 12 hours to complete the task of incubating one of each dinosaur species’ eggs. If you can pull this off you’ll see a helicopter fly by and land, which you’ll have to get to - but first a group of 4 “bad guys” will try to take you out.This final arcade sequence is really hard - especially if you don’t top up your tranquilizer dart supply. I had plenty of stunner charges, but these do nothing in this scenario so going into this fight with only 15 darts was a guaranteed game over …I’m not really sure why these guys are trying to prevent me from getting to the helicopter, but for this sequence I was extremely grateful to be playing the game on an emulator. I was using save states pretty heavily here, and ended up using pause/frame-advance for the last enemy just to finish the game with like 1 health bar left.Once the credits roll you’ll be greeted by the same “Game Over” screen as if you’d diedFor an adventure game, Jurassic Park is definitely interesting. It’s sort of a cross between Myst and an arcade-style shooter. The fact that you’re on a timer adds a sense of urgency to the game, but your objectives are clear from the outset so you know what you’re trying to accomplish at all times.My biggest issue with the game is how unintuitive a lot of the puzzles are. Getting the raptor key by throwing rocks into the water to make the water level rise wasn’t obvious - and once I did finally try throwing a rock in there it turns out I needed at least two rocks, so I had to backtrack (or reload) to make sure I came back to the area with the right items.The T-Rex fight didn’t make a lot of sense either. The info disc you can watch in-game indicates you should shoot him in the cheek to stun him, so you do that a whole bunch but I don’t really know how you’d come to the conclusion you should use the gas grenades on him twice to get him to raise his head so you can dash under him into the sewers.Jump to any screen in the game using the handy debug menuWhile researching this game I stumbled across Doug Landford’s website, where he shares a blog post about his experience working on this game - including how you can trigger the debug menu.I enjoy learning about the behind the scenes experiences of the teams that build these games, as it can shed some light on how we ended up with the final product. It seems this game used QSound to augment the audio, but this isn’t something I was able to experience (not sure if it’s emulated or not - but I don’t have a stereo setup anyway).Overall the game isn’t bad, but I can’t imagine there’s much of an audience for this. Maybe if the game had taken advantage of the Sega mouse it might have made the arcade sequences a bit more fun, but as an “adventure game” I think you can pass it up.Game Information Game Jurassic Park Developer Sega of America Publisher Sega Release Date December 17, 1993 Systems Sega CD Game Engine   My Playthrough How Long To Beat? 5 hours Version Played Sega CD via OpenEmu &gt; Genesis Plus GX Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 8 Story (25) 8 Experience (15) 6 Impact (10) 3   36% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Call Stack, But Make It Async!", "url": "/blog/2024/07/12/call-stack-but-make-it-async/", "categories": "Programming", "tags": "javascript, node, mongodb, drivers", "date": "2024-07-12 11:15:50 -0400", "snippet": " Written by Neal Beeken (Blog, GitHub) - Canonical URL is at medium.comIn a recent release of the MongoDB Node.js driver (v6.5.0), the team completed the effort of getting all our asynchronous ope...", "content": " Written by Neal Beeken (Blog, GitHub) - Canonical URL is at medium.comIn a recent release of the MongoDB Node.js driver (v6.5.0), the team completed the effort of getting all our asynchronous operations to report an accurate asynchronous stack trace to assist in pinpointing error origination. Here, I’ll walk you through what this feature of JavaScript is and how to obtain it at the low price of zero cost.Calls and how to stack them 📚First, what is a call stack? A call stack is a hidden data structure that stores information about the active subroutines of a program - active subroutines being functions that have been called but have yet to complete execution and return control to the caller. The main function of the call stack is to keep track of the point to which each active subroutine should return control when it finishes executing.Let’s go through an example. Take a program that parses a string from its arguments that is an equation like “2+2” and computes the result:main() -&gt; parseString() -&gt; splitString() -&gt; stringLength() -&gt; stringToNumber() -&gt; add() -&gt; printResult()-&gt; return;Most of us are familiar with the above procedural paradigm (whether from JavaScript, C, Java, or Python) where each step in the program is synchronous, so our call stack is a clear ordering of dependent procedures. For example, if stringLength fails, the call stack would contain stringLength, splitString, parseString, and main as active procedures that have yet to return to their callers. The error system of our runtime uses this stack trace to generate a helpful error trace:file://addNumbers.mjs:35 throw new Error('cannot get string length') ^Error: cannot get string length at stringLength (file://addNumbers.mjs:35:11) at splitString (file://addNumbers.mjs:17:17) at parseString (file://addNumbers.mjs:11:19) at main (file://addNumbers.mjs:4:5)The async wrench 🔧Everything changes when we shift to an asynchronous programming model, as the introduction of asynchronous work means we no longer have strictly dependent procedures. Essentially, async programming is about setting up tasks and adding handling that will be invoked sometime later when the task is complete.Let’s add I/O (a read from standard in) into our program to see how this changes our call stack:main()-&gt; readStdin(handleUserInput)// When the user finishes typinghandleUserInput()-&gt; parseString() -&gt; splitString() -&gt; stringLength()Now, main’s only job is to ask the runtime to read from stdin and invoke a function of our choice when it is done doing so. This means main is no longer an active procedure; it returns, leaving it up to the runtime to keep the process running until it has input from stdin to hand back to our function handleUserInput.Here’s what the stack trace looks like:file://addNumbers.mjs:42 throw new Error('cannot get string length') ^Error: cannot get string length at stringLength (file://addNumbers.mjs:42:11) at splitString (file://addNumbers.mjs:24:17) at parseString (file://addNumbers.mjs:18:19) at ReadStream.handleUserInput (file://addNumbers.mjs:11:5) at ReadStream.emit (node:events:511:28) at addChunk (node:internal/streams/readable:332:12) at readableAddChunk (node:internal/streams/readable:305:9) at Readable.push (node:internal/streams/readable:242:10) at TTY.onStreamRead (node:internal/stream_base_commons:190:23)No sign of main, only handleUserInput.This is a common hazard of asynchronous programming: You are always replacing the record of your active procedures as they are all performing task setup that completes and the callbacks they created are later invoked by the runtime.JavaScript 💚Asynchronous programming has always been at the heart of JS and is one of the central selling points of using Node.js.In 2015, the first Long Term Support version of Node.js was released, and with it came a stable standard library that popularized a common pattern for handling asynchronous tasks. All asynchronous tasks would accept a callback as their last argument, with the callback taking at least two arguments: an error and the task’s result. The pattern was that if the first argument was truthy (an error object), the task failed, and if it was not, then the second argument would contain the result.Here’s a simplified example of a function that reads a file:readFile('filename.txt', (error, data) =&gt; { if (error) { console.error(error); return; } console.log('file contents', data);})The Node.js callback pattern is ubiquitous and familiar, resulting in many popular libraries - such as the MongoDB Node.js driver - adopting it, as well.No throw, only callback 🐕credit: cupcakelogicA challenge associated with the callback pattern is the requirement that the implementer keep in mind execution expectations manually. Otherwise, they can end up with a confusing order of operations.Typically, this is something that should be abstracted to the runtime or language, which can be broken down as follows:Error handlingProperly implementing the callback pattern means errors are passed as variables to a chain of handlers so they eventually reach the top-level initiator of the async operation. The syntax and keywords throw/try/catch can no longer be used for control flow.try { readFile('filename', (error, data) =&gt; { if (error) { /* ? */ } })} catch (error) { // So what's the truth?}Runtime orderCallbacks also demand the developers ensure execution order is consistent. If a file is successfully read and the contents are returned in the callback passed to readFile, that callback will always run after the code that is on the line following readFile. However, say readFile is passed an invalid argument, like a number instead of a string for the path. When it invokes the callback with an invalid argument error, we would still expect that code to run in the same order as the success case:function readFile(filename, callback) { if (typeof filename !== 'string') { callback(new Error('invalid argument')) return; } // open &amp; read file ...}readFile(0xF113, (error, data) =&gt; { if (error) { console.log('cannot read file', error) return; } console.log('contents:', data)})console.log('starting to read file')The code above prints:cannot read file Error: invalid argumentstarting to read fileWhereas when I change readFile to be called with a non-existent path:starting to read filecannot read file Error: /notAPath.txt Does Not ExistThis is unexpected! The implementer of readFile calls the callback synchronously for an invalid type so readFile does not return until that callback completes. It is fairly easy to write callback-accepting functions that inconsistently order their execution in this way.Promises 🤞Introducing a more structured approach: Promises. A promise is an object that handles the resolution or rejection of an async operation, mitigating the above issues and allowing for many async operations to be chained together without needing to explicitly pass a finalizer callback through to each API that would indicate when all tasks are done.// callbacksclient.connect((error) =&gt; { if (error) { return done(error); } client .db() .collection('test') .findOne({}, (error, document) =&gt; { if (error) { return done(error); } console.log(document); return done(); });});// promisesclient .connect() .then(() =&gt; client.db().collection('test').findOne({})) .then(document =&gt; console.log(document)); .catch(error =&gt; console.error(error));Note how in the promise code there is one error handling case as opposed to the two in the callback case. The ability to chain promises allows us to treat many async operations as one. The catch handler would be called if either the connect or the find methods were to throw an error. This chaining is convenient, but when writing JavaScript today, we do even better by using special syntax for handling promises.Enter async/await 🔁Mid-2017, JavaScript engines shipped support for async/await syntax, allowing programmers to write asynchronous operations in a familiar procedural format. Using async/await allows the programmer to encode their logical asynchronous dependencies right into the syntax of the language.Let’s return to our user input example, as we can now “await” the input which keeps main as the active procedure that began the task to read from standard in. “For await, the suspend and resume points coincide and so we not only know where we would continue, but by coincidence, we also know where we came from.” source: Zero-cost async stack tracesWhen the input is available, readStdin will resolve and we can continue with our parsing.async main() -&gt; await readStdin() -&gt; parseString()file://addNumbers.mjs:43 throw new Error('cannot get string length') ^Error: cannot get string length at stringLength (file://addNumbers.mjs:43:11) at splitString (file://addNumbers.mjs:25:17) at parseString (file://addNumbers.mjs:19:19) at main (file://addNumbers.mjs:9:5) at processTicksAndRejections (node:internal/process/task_queues:95:5) at async file://addNumbers.mjs:62:1When the JavaScript engine reaches the “await”, main is suspended. The engine is free to handle other tasks while the read is waiting for our user to type. We can now encode into the syntax of the function that it will suspend until some other task completes, and when it continues, it maintains the context of everything that was in scope when it started.try { await client.connect(); const document = await client.db().collection('test').findOne({}); console.log(document);} catch (error) { console.error(error);} “The fundamental difference between await and manually constructed promises is that await X() suspends execution of the current function, while promise.then(X) will continue execution of the current function after adding the X call to the callback chain. In the context of stack traces, this difference is pretty significant.” source: Why await beats Promise#then() · Mathias BynensSample Stack TracesPrior to completing the async/await conversion down to the internal network layer of the driver, our error stack would begin at the point of converting a server’s error message into a JavaScript, such as:MongoServerError: Failing command via 'failCommand' failpoint at Connection.onMessage (./mongodb/lib/cmap/connection.js:231:30) at MessageStream.&lt;anonymous&gt; (./mongodb/lib/cmap/connection.js:61:60) at MessageStream.emit (node:events:520:28) at processIncomingData (./mongodb/lib/cmap/message_stream.js:125:16) at MessageStream._write (./mongodb/lib/cmap/message_stream.js:33:9) at writeOrBuffer (node:internal/streams/writable:564:12) at _write (node:internal/streams/writable:493:10) at Writable.write (node:internal/streams/writable:502:10) at Socket.ondata (node:internal/streams/readable:1007:22) at Socket.emit (node:events:520:28) ^-- Sadness, that's not my code...Now, post v6.5.0, the stack trace points directly back to the origination of an operation (we see you main.js!):MongoServerError: Failing command via 'failCommand' failpoint at Connection.sendCommand (./mongodb/lib/cmap/connection.js:290:27) at process.processTicksAndRejections (node:internal/process/task_queues:95:5) at async Connection.command (./mongodb/lib/cmap/connection.js:313:26) at async Server.command (./mongodb/lib/sdam/server.js:167:29) at async FindOperation.execute (./mongodb/lib/operations/find.js:34:16) at async tryOperation (./mongodb/lib/operations/execute_operation.js:192:20) at async executeOperation (./mongodb/lib/operations/execute_operation.js:69:16) at async FindCursor._initialize (./mongodb/lib/cursor/find_cursor.js:51:26) at async FindCursor.cursorInit (./mongodb/lib/cursor/abstract_cursor.js:471:27) at async FindCursor.fetchBatch (./mongodb/lib/cursor/abstract_cursor.js:503:13) at async FindCursor.next (./mongodb/lib/cursor/abstract_cursor.js:228:13) at async Collection.findOne (./mongodb/lib/collection.js:274:21) at async main (./mongodb/main.js:19:3) ^-- Yay, that's my code!Additional Resources Zero-cost async stack traces tc39/proposal-error-stacks Stack trace API ES2015, ES2016, and beyond · Tail Calls · V8 Faster async functions and promises · V8 Asynchronous stack traces: why await beats Promise#then() · Mathias Bynens" }, { "title": "Discworld (Teeny Weeny Games/Perfect 10 Productions) - 1995", "url": "/blog/2024/07/09/discworld/", "categories": "Let's Adventure!", "tags": "adventure, Tinsel, Teeny Weeny Games/Perfect 10 Productions, Psygnosis", "date": "2024-07-09 07:06:16 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Altered Destiny (Accolad...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Altered Destiny (Accolade) - 1990Discworld (Teeny Weeny Games/Perfect 10 Productions) - 1995→ Jurassic Park (Sega of America) - 1993 Article 82 of 96 in this series.Discworld is a point-and-click adventure game developed by Teeny Weeny Games and Perfect 10 Productions and published by Psygnosis. It is based on Terry Pratchett’s novels of the same name.This adventure game puts the player in the shoes of Rincewind, a wizard whose sole purpose in life is to stay alive. He appears to be very good at it as well, because apparently the universe has decided to continuously challenge him. The game takes place in the humorous fantasy world called the Discworld, as it is actually a flat disc carried on the backs of four gigantic elephants, which themselves stand on the back of an even larger turtle.The story is loosely based on the novel “Guards! Guards!”. Both in the book and the game, a dragon is summoned by a group of mysterious conspirators and now terrorizes the city state of Ankh-Morpork. Being the most expendable wizard of the Unseen University, Rincewind is given the task to get rid of the beast (only in the game though; in the book, the city’s nightwatch has to deal with the problem).1Discworld is a pretty typical point and click adventure from the mid-90s: the game starts with a brief intro sequence, you’re introduced to the protagonist, you’re given the first (of likely many) fetch quests which you’ll need to complete and you’re on your way.Over the course of four acts your task is to rid the Discworld of the dragon that the secret brotherhood has summoned. As a wizard of Unseen University, the Archchancellor has decided you’re up to this task so first you’ll need to collect the various elements from around Ankh-Morpork that he needs to build a “dragon detector”.Every time you leave an area of the game you’ll be returned to the map screen, which is how you navigate between the various game locations. There are a few more locations beyond the main map, but the majority of the game takes place here (both in the past, and in the present).Throughout the course of the game you’ll pick up a lot of items. Luckily for Rincewind you’re always accompanied by your trusty luggage - which is a treasure chest with a lot of legs. I remember vaguely reading these books when I was a kid and the traveling treasure chest standing out to me as a really interesting character, so I was really hoping it would play a big part in this game once it was introduced.When you find a new item you can pick up you’ll have the option of adding it to the chest or Rincewind’s inventory. The chest has unlimited storage, whereas Rincewind only has 4 “slots” that you can use.Inventory management plays a pretty large role in this game as there are several puzzles that require Rincewind to take items with him to a location the chest can’t access. Typically it’s not obvious what you need to bring with you and the will involve trial and error, backtracking and repetition.Speaking of backtracking, that’s about 90% of the game. You typically need to talk to everyone you possibly can on every screen to get a sense of what fetch quest they’re going to send you on, then head off to fetch said maguffin.The dialogue system is reminiscent of games of this era such as Sam &amp; Max Hit the Road where a row of icons will be presented that represent various interactions that according to the manual represent actions/moods such as GREETING, QUESTION, SARCASMand ANGER.Though the gameplay itself can be a bit tedious, the character interactions and descriptions of the world you’re engaging with are fantastic. Monty Python’s Eric Idle voices Rincewind, and really brings the character to life as a dry, witty British stereotype.There is ever-present background music playing throughout the game, but it just sort of fades into the background. I don’t consider this a bad thing for ambient music as it means it’s essentially just doing it’s job.In order for Rincewind to solve the mystery of who stole the Dragon Summoning book, uncover the identities of the members of the brotherhood and retrieve the various gold trinkets the dragon has requested, he’ll have to travel back in time.This is done through the University’s library (following a long series of fetch quests) that opens a door to L-Space. Once you’ve accessed L-Space a new series of puzzles need to be solved - many of them involving making changes in the past to impact the placement or availability of things in the present.I really liked the mechanic, but found myself getting lost or confused or having to repeatedly go back and forth between the past and preset trying ot suss out exactly what it is I’m trying to do.Discworld does not hold your hand. The clues can be vague and require you to really think. I don’t believe any knowledge of the books is required to be successful, but I’m sure it couldn’t hurt.For example, to get the password to the thieve’s hideout you need to turn the drainpipe, hide, then listen to the pipe with a glass. If you don’t use the glass a long sequence plays out that doesn’t make it obvious you didn’t get the password until you try and get into the hideout.You then need to repeat this trying various items on the drainpipe to see if anything will happen.Trying everything on everything (including every item on every other item) can be a requirement to progression. There are just so many items you’ll find, an the solution to many puzzles requires either a single item or an item combination puzzle to be solved first - and the solutions are typically not obvious.This is definitely not a game for kids. There are allusions to adult themes, the writing is complex, the humour is more nuanced and you really have to pay attention to your surroundings and all dialogue to make any progress.I seem to remember playing this game as a teenager and just not being able to get into it. I was a big Monty Python fan (who wasn’t in the 90’s) so Eric Idle voicing a character really appealed to me … but I just couldn’t make any progress.If you’re playing in ScummVM there are a number of known bugs, though the game is not really affected too badly. I did hit the Act 4 missing guard crash, but that is easily avoidable by just not engaging a clearly missing background character in conversation.I really love Terry Pratchett’s writing style and have previously read The Colour of Magic. Having now played through this game I definitely feel like firing up the eReader and diving back into the world of Ankh-Morpork.There are better adventure games out there that would likely be more approachable, but the story and writing of Discworld definitely stands out.Game Information Game Discworld Developer Teeny Weeny Games/Perfect 10 Productions Publisher Psygnosis Release Date 1995 Systems DOS, Mac, PlayStation, Sega Saturn Game Engine Tinsel My Playthrough How Long To Beat? 11 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 14 Story (25) 19 Experience (15) 5 Impact (10) 3   59% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Altered Destiny (Accolade) - 1990", "url": "/blog/2024/06/14/altered-destiny/", "categories": "Let's Adventure!", "tags": "adventure, Accolade", "date": "2024-06-14 06:06:26 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Flight of the Amazon Que...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Flight of the Amazon Queen (Interactive Binary Illusions) - 1995Altered Destiny (Accolade) - 1990→ Discworld (Teeny Weeny Games/Perfect 10 Productions) - 1995 Article 81 of 96 in this series.Altered Destiny is a graphic adventure game released by Accolade in 1990 for MS-DOS compatible operating systems and in 1991 for Amiga. The game was designed by Michael Berlyn and it uses a text parser interface. It is the second adventure game from Accolade and it uses the same engine as the first one, Les Manley in: Search for the King.One fine day P. J. Barrett, an ordinary human being from the planet Earth, goes to a repair shop to get his TV set fixed. When he comes back for it, he accidentally picks up the wrong one. No big deal? Quite on the contrary. When the unsuspecting Mr. Barrett returns home and turns the TV on, he is sucked into a portal! One moment later, he finds himself on the strange planet of Daltere. Naturally, this planet needs a savior: the evil alien Helmar has stolen an artifact known as the Jewel of Light, thus endangering the entire galaxy. Now our unlikely hero has to overcome various obstacles and save the world.1I never owned an Amiga when I was growing up, though my uncle had one as he was a graphic artist and I guess back in the mid 80s to early 90s this was the system to use - and Deluxe Paint was all the rage.This wasn’t a system I really got to mess around with (it was a “work” computer), but the odd game I was exposed to I remember having impressive graphics and sound.Since one of my goals for this retrospective journey is to try and experience as many of these games on as many (emulated) systems as possible, I wanted to make sure I play through a few of these titles on the Amiga.Oh goody, copy protectionAs soon as you insert disk one and boot the game up you’ll be met with a copy protection screen. I tried to find a copy of the manual online, but failed. Even the game’s entry in the Games Database didn’t have anything for me, so I chose to resort to “alternate” means of bypassing this barrier.It turns out what I needed was the code wheel that could be found at the museum of computer adventure game history, but I found this after I’d finished the game already …I’m guessing Accolade won’t mind that I’m emulating a cracked version of the game 30+ years after it came outI ended up playing the Skid Row cracked release of the game, which will accept any input on the challenge screen and allow you to progress. Though there are obviously good arguments for why software piracy is bad, when looked at through the lens of digital preservation and making historic content accessible to future generations of players I appreciate the work that these groups put in.Altered Destiny uses a similar engine to Sierra’s first iteration of the SCI engine (SCI0) as it support basic character navigation with the mouse, but all other interaction with the game world was done using a text parser.The most common verb you’ll use is LOOK, which will typically give you a lot of information about the screen you’re on, including characters (with their names) you can interact with, items you might be able to pick up and other useful details.There are several alien creatures to talk to. Whenever you LOOK on a screen the game helpfully tells you the name of the alien there, so it’s easy enough to know who to TALK to. You then need to ASK ABOUT various topics to learn what to do next or uncover more of the plot.You’ll want to take notes as these interactions will usually surface the names of other characters you’ll want to seek out, and you’ll want to ask each alien creature about the others that you’ve met or learned about.Similar to Sierra games at the time, path finding for your character was challenging and would typically result in you falling to your death. I found several times that I’d need to resort to using the mouse to click on a target I wanted PJ to walk to as it would usually get me there safely … but occasionally you were better off using the direction keys on the keyboard.There’s also only one message ever shown when you die, so it’s not interesting to explore the different ways the environment will end your adventure because you see the same thing regardless of what you do.I do not miss the days of multi-disk gamesYou’ll want to save often, but Amiga games required a save disk to be swapped in in order for this to occur. I played this game using vAmiga, so I could just use save states which are exponentially more convenient than having to swap the save disk in, save, then swap the current game disk in.Disk access times seriously slow down the game play experience. I don’t know if it’s due to just not having enough experience tuning an Amiga emulator, but I can safely say that 70% of my play time was spent just waiting for the disks to finish spinning.It was also frustrating when I’d swap disks (as requested) too quickly, so I’d have to put the previous disk back in, let it read, wait for the prompt, switch and try again. SO. MUCH. WAITING.This map screen makes the game world feel bigger than it really isThe game world in Altered Destiny is actually fairly small, but once you get down from the floating island and reach the cross roads you’ll get a map screen that shows PJ progressing between the various game areas.Examining your inventory items or various things on screen will bring up a more detailed view that provides additional information. This was particularly useful in helping to identify what might be more important to interact with as the game designers were clearly trying to draw your attention to these.Like Sierra games of that era, it’s extremely easy to miss picking up key items and you can find yourself in unwinnable situations requiring you to restore to much earlier saves or restart entirely.This happened to me a couple times, which almost lead me to abandon this playthrough simply because I didn’t want to have to endure the disk access and screen loading times I knew came with back tracking.Items you can pick up are typically fairly obvious, and when they’ve been picked up they’re no longer visible on screen. I appreciate this as it makes the game world feel a bit more interactive as your actions are affecting the world around you.Whenever there are item combination puzzles though some of the sequences of commands you need to enter can be a bit unintuitive - especially if you were a kid playing this game initially.For example, to catch the bird here you need to DROP CAGE, then SET THE TRAP, BAIT THE CAGE WITH PIGMENT and wait for the bird to take the bait before you GET CAGE. I’m sure the game designers thought they were setting you up for success with some of the clues leading up to this point, but I found myself reaching for the walkthrough pretty quickly.To mix up the gameplay a bit there’s one random fight sequence where you need to WIELD SWORD and knock some creature off a floating platform (hopefully you didn’t forget to pick the sword back up after dropping it much, much earlier).This is an interesting diversion but since you only do it once and there’s really no setup for it it sort of feels forced and unintuitive. You sort of just have to keep mashing right on the directional pad until you knock the creature into the pool of light, then you need to fall off the platform into the pool as well (I can’t remember why anymore).The final battle with Helmar boils down to just picking the right option from a menu. Spoiler: it’s the mirror. When you do this you reflect the beam he shoots back at him, killing him and freeing the world and restoring the jewel of light to its rightful place in the universe (I think that’s what happens at least).Error 19, then crash back to the OSFor the first time in this series I didn’t actually finish the game myself and take a “THE END” screenshot … because the game crashed after defeating Helmar. Maybe this is an emulation issue, maybe it’s an issue with the game having been cracked by Skid Row and this being a checksum failure or some other protection measure.This is a screenshot from a longplay on YouTube because my game crashed right at the endI technically finished the game and have zero desire to play it again using the MS-DOS version, so I cheated and swiped the last screenshot from a longplay video.Altered Destiny has some good graphics and sound, but it’s not really adding anything to the experience that other games released at that time were. The story seems a little forced, the inventory puzzles are sort of frustrating and there’s really not much to do.It’s entirely possible I would have enjoyed the MS-DOS version more (assuming the load times are greatly improved), but Altered Destiny plays like an over-complicated Space Quest clone without any of the humor.Game Information Game Altered Destiny Developer Accolade Publisher Accolade Release Date 1990 Systems Amiga, DOS Game Engine   My Playthrough How Long To Beat? 6.5 hours Version Played Amiga via vAmiga Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 8 Story (25) 8 Experience (15) 5 Impact (10) 3   34% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Flight of the Amazon Queen (Interactive Binary Illusions) - 1995", "url": "/blog/2024/06/09/flight-of-the-amazon-queen/", "categories": "Let's Adventure!", "tags": "adventure, Interactive Binary Illusions, Renegade Software", "date": "2024-06-09 07:45:50 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Space Quest IV: Roger Wi...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Space Quest IV: Roger Wilco and the Time Rippers (Sierra On-Line) - 1991Flight of the Amazon Queen (Interactive Binary Illusions) - 1995→ Altered Destiny (Accolade) - 1990 Article 80 of 96 in this series.Flight of the Amazon Queen is a graphical point-and-click adventure game by Interactive Binary Illusions, originally released in 1995 for Amiga and MS-DOS.Joe King is the hero of this point and click adventure. His plane is carrying actress Faye Russell when it crash lands in a remote jungle, and he must battle through 100 screens of adventure and puzzle. The game’s feel is influenced by hammy B-movies, and the characters are quite stereotyped and comic. As standard in point and click adventures, a set of icons at the bottom of the screen allow you to interact with visible characters and items in the main view area.1I’m shocked they don’t lean into this pun more often throughout the gameI’m a huge fan of LucasArts games, and after reading “Making of Flight of the Amazon Queen - A 20th Anniversary Retrospective” it seems that so was John Passfield. So many aspects of Flight of the Amazon Queen just smack of LucasArts’ influence, and the end result is a game that could easily live alongside classics such as The Secret of Monkey Island or Indiana Jones and the Fate of Atlantis.Ron Gilbert and Tim Schafer’s influence on this game runs extremely deep. The comedic writing style, pixel art design, verb selection and dialog tree layout all feel reminiscent of a LucasArts title, and though they didn’t use the SCUMM engine, they’re custom game engine was titled JASPAR (John And Steve’s Programmable Adventure Resource) - which sort of feels like it belongs in that universe of tools with forced acronyms.Adding that “trademark” next to “comedy breasts” just screams of Monkey Island’s influenceOnce the game starts you’ll find yourself locked in a hotel room that you need to escape. You’re a pilot for hire, and your next client is a famous movie star, but your rival Anderson wants to steal this job from you. To escape the hotel room you’ll need to use the various verbs represented as icons to LOOK, PICK UP and USE various things.Most of this game involves inventory combination puzzles and fetch quests, so it’s worth examining everything on the screen to see if it’s something you can pick up, move, open/close or use.This game is incredibly well paced, as long as you look at everything and talk to everyone. The path forward or solution to most puzzles is typically intuitive and when you need to combine items Joe will usually point you in the right direction.When this gets a little more confusing is later in the game where you have a very large number of items - all of which you’ll need to use at some point (and often in combination).The game likes to plant seeds as to the solution to puzzles through story elements. For example there is a brief sequence early in the game where you find a comic book that your mechanic Sparky is looking for. If you read the comic the hero uses alcohol to power is jetpack when it runs out of fuel so he can escape from the baddies just in the nick of time.Amazingly enough, near the end of the game you find a jetpack - but it doesn’t have any fuel. Trader bob has bottles of alcohol for sale (but you need to prove you’re of age so you need ID to show him).You’ll meet a number of characters throughout the Amazon that you’ll interact with. Most characters only really have one purpose and it’s typically (a) they’re preventing you from progressing or (b) they hold some inventory item you’ll need.Each character has a limited number of dialog options, so it’s worth asking everyone about everything as it helps advance the plot and lays out what that character needs from you in fairly straightforward language.Trader Bob is the exception as you’ll need to circle back to him multiple times to get new items. I did appreciate that though there are dozens of useable items in this game, none of them appear to be red herrings.If an item will need to be used more than once, it will typically remain in your inventory in a depleted state to indicate it’s still needed. In my opinion this is better than the puzzle design in other games (notably a number of Sierra titles) where you have to backtrack to get an item again to use it as the solution to another puzzle.Instead of the typical “map screen” you’d get in other games to navigate between game areas, Flight of the Amazon Queen has a pinnacle you walk to that overlooks the forest. From here you pan back and forth and can see the various locations you can travel to.Technically it’s just a different take on the flat 2D map screen, but it’s also incorporated into the endgame as the location you need to launch from once you have the jetpack. Since you can’t travel back to the forest once you reach the Valley of the Mists it felt like a good way to tie the pinnacle you’ve been using for travel throughout the game into your journey towards the final encounter.The game’s tone is extremely light and a little goofy. Joe King just feels and plays like a caricature of Indiana Jones, and they have a lot of fun with this. Every character you interact with doesn’t take themselves too seriously, and the underlying stories they’re presenting are enjoyable and keep you engaged.I really like imaginary gorilla that pops up a couple of times blocking your path. Just talking to the gorilla and picking one of the dialog options that results in you questioning whether or not he should even exist will cause him to vanish.As the game progresses you’ll be presented with static cut scenes that further advance the plot. It turns out there’s a mad scientist trying to capture Amazonian women so he can test a dino ray on them that turns them into dinosaurs.I guess he wants to create an army of dino-humans and conquer the world … and you’re the only one that can stop him.It’s kind of bananas that Joe King - a parody of Indiana Jones - needs to retrieve a crystal skull from the depths of the Amazon in order to activate an ancient robot, and over a decade later Indiana Jones and the Kingdom of the Crystal Skull did something sort of similar (but with aliens instead of ancient robots).I know there’s almost no chance these two things are related, but in my mind I’m picturing David Koepp (who wrote the screenplay for that movie) walking by his kid playing FOTAQ in 1995 and thinking “that crystal skull looks neat” … then carrying on with his life.If you play the MSDOS CD version of this game you’ll be treated to some fairly good voice acting. This enhances the game experience quite a bit as though there is some looping music in the background, it’s not really notable other than “being there”.Bradley Lavelle who provides Joe’s voice does a fantastic job and really gives the character some depth. His delivery is a little dry and sarcastic, but suits Joe King perfectly.Once you’ve got the crystal skull, Dr. Frank Ironstein will unlock the Valley of the Mists where all the dinosaurs live and you’ll need to get yourself over there for the final battle. This final sequence is pretty short (compared to the rest of the game) and just sees you defeating Monster Frank (the doctor gets zapped with his own dino ray), restoring the veil of mist to the Valley of the Mists and flying off into the sunset with Princess Azura.There’s a hidden mini-game on the CD version where you interview the game developers about the game you just played!Discovering how much you can enjoy a game is the whole reason for a retrospective series like this, and Flight of the Amazon Queen is one such title. The story is immersive, the puzzles are challenging but intuitive, the graphics are great and the writing is entertaining.This is definitely a game I’d recommend to anyone that may be interested in experiencing what the genre has to offer. It’s even more impressive knowing that only a handful of people worked on this game originally - and if you have the CD version of the game with the “INTERVIE” directory on it, you can play a minigame where you interview the developers of the game about the game you just played!Flight of the Amazon Queen was re-released as freeware in 2004, and was incorporated into ScummVM as the fifth engine (they currently have A LOT of game engines). You can you can go download and enjoy the game right now!Historical game preservation and ScummVM specifically are close to my heart so I want to close out this review with the following excerpt from “Beyond the Amiga: In Conversation with John Passfield on Flight of the Amazon Queen” as it shines a light on how this all came to be: HS: Can you tell us about the involvement of ScummVM in making the game accessible today? JP: I was approached from the ScummVM people and they were interested in making a version of Amazon Queen available through their online library of playable adventure games. I was aware at this point that new generation PCs that were coming out were making it harder to play Amazon Queen. And I thought, well, I own the intellectual property, so I made it freeware with the right that you download for free, but you couldn’t sell it. And I retained copyright ownership of the game and that’s when the ScummVM people come in. They reached out and said we’d love to convert Amazon Queen to the ScummVM engine. And I was that’d be great because then it lives on forever. So, they reached out and said can we do it? I said that would be great and a month later it’s available on ScummVM. HS: ScummVM does not rely on the emulation of hardware. The ScummVM team uses a different process to make games playable on contemporary computing environments. Can you explain how they do this? JP: I actually reached out to ScummVM on their Discord asking them how they went about it. What they explained is ScummVM is basically a framework for graphical programs which work with 2-D, and now 3-D, particularly with OpenGL. So, they provide middleware code which is called the OSystem. Then every game engine is ported to this middleware replacing or hardware dependent things like sound, graphical output, file reading, keyboard mouse input, times, et cetera, with a call to the OSystem. First off, they did this for the LucasArts Scumm engine. For my game they created the “Queen” engine. The Queen engine uses their middleware to interpret the game files for Amazon Queen. It’s completely different pieces of code having nothing in common with Scumm or any of the other four engines they had adapted at the time. Amazon Queen was the fifth engine they made compatible. They said because Amazon Queen had very little assembly, it was mostly C code, they said it was very easy to port over. And I think they’re obviously very smart people. So that’s how it came about and that is how it works. As mentioned, I believe they’ve got support now for the LucasArts games which have 3-D graphics. I just love what they’re doing because it just gives that capacity to keep the game playable. It outputs at C++ so it works for everything. When Liron, who did the re-release of Amazon Queen for iOS in 2009, approached me to ask if he could port it into iOS he used the ScummVM Queen engine version and built on top of that engine extra stuff for the iOS version. The way that arrangement worked is that I granted him a licence to sell for iOS and he gave me a royalty. He has also put it on to the PC now. ScummVM just keeps these games accessible, which is great.Game Information Game Flight of the Amazon Queen Developer Interactive Binary Illusions Publisher Renegade Software Release Date 1995 Systems Amiga, DOS Game Engine JASPAR My Playthrough How Long To Beat? 8 hours Version Played DOS CD via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 16 Story (25) 21 Experience (15) 13 Impact (10) 9   84% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Space Quest IV: Roger Wilco and the Time Rippers (Sierra On-Line) - 1991", "url": "/blog/2024/06/02/space-quest-iv-roger-wilco-and-the-time-rippers/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, SCI", "date": "2024-06-02 21:01:46 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Normality (Gremlin Inter...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Normality (Gremlin Interactive) - 1996Space Quest IV: Roger Wilco and the Time Rippers (Sierra On-Line) - 1991→ Flight of the Amazon Queen (Interactive Binary Illusions) - 1995 Article 79 of 96 in this series.Space Quest IV: Roger Wilco and the Time Rippers is a 1991 graphic adventure game by Sierra On-Line, and the fourth entry in the Space Quest series. The game was released originally on floppy disks on March 4, 1991, and later released on CD-ROM in December 1992 with full speech support; an Atari ST version was announced via Sierra Online’s magazine, Sierra News Magazine, but was later canceled. The game sees players assume the role of Roger Wilco, who is thrust into a new adventure across time and space where he must thwart the plans of an old foe that is seeking revenge against him.Roger Wilco is relaxing at his favorite pub somewhere in time and space when heavily armed soldiers enter the room. Carrying a parting message from Roger’s old nemesis, Sludge Vohaul, they plan to get rid of the janitorial hero, execution style. That is, until a man with an over-sized hair dryer helps Roger escape through a time rip into the future. Now Roger Wilco has woken up on his home planet, some time in a meta-fictional Space Quest XII. It is a grim, dystopian future: the series has gone to ruin without its hero, and Vohaul rules supreme. Roger must find a way to avoid Vohaul’s henchmen, fulfill his destiny, and learn about a few surprises that await him in his own future.1Unlike Space Quest III before it, Space Quest IV has discarded the text parser in favour of a true point-and-click interface. This time around you interact with the game world using the (likely far more familiar) verb-based icons to decide how Roger interacts with the game world.A couple of of these options such as SMELL and TASTE really aren’t needed, though selecting them and clicking around allows for the game to spit out some pretty funny feedback about things you really shouldn’t be doing with your surroundings.The Space Quest series has never tried to take itself seriously, and this entry is no exception. The writing and the art style tend to be goofy, and there are a lot of “in jokes” for fans of this series as well as other Sierra Online games.After the intro cutscene you’re dropped into the future, which the game’s menu bar tells you is Space Quest XII - Vohaul’s Revenge II. As you jump through time you’ll know “when” you are as the game you’ve landed in will be displayed here.Once you find your way into the sewers a Star Wars parody plays out that informs you that some time in the past someone found an old Leisure Suit Larry game and uploaded it ot the Xenon super computer. This unleashed a virus (that I think contained Sludge Vohaul’s mind or something) that results in humanity being enslaved.Vohaul is sending androids after you called “Sequel Police”, who use time pods to jump through time. You eventually steal one of these, which requires you to enter a 6 digit time code to jump between games … but where do you find these codes?This wasn’t immediately obvious to me, but in retrospect it sort of makes sense. When you first steal the time pod in SQXII the code onscreen is the return code for SQXII. I just got in and mashed some random codes and hit enter and the game sent me off to the next time period.I wonder if these assets were reused from a Leisure Suite Larry game 🧐You’ll wind up in Space Quest X - Latex Babes of Estros, which is apparently a parody of Infocom’s Leather Goddesses of Phobos (what are the odds anyone playing this game today would make that connection).This sequence is pretty short and straightforward and ends with you getting captured by a group of Amazonian women, saving them from a giant sea slug … then the lot of you heading out to the Galaxy Galleria mall to go on a shopping spree.There are some throwbacks to previous games here, including a Monolith Burger location that you can get a job at putting burgers together. You’ll need to do this as you won’t have enough money (buckazoids) to buy the dress and wig you need to pass as one of the Amazons (who’s debit card you happened to pick up).The arcade sequence is pretty simple as you just add condiments to a burger on an assembly line. If you don’t screw up, you get 1 buckazoid per burger, but if you send 3 burgers to the finish line incorrectly you’ll be fired.This is not hard - but it’s tedious. The assembly line gradually speeds up so it gets more challenging, but you can adjust the game speed to slow this down as needed.I appreciate that the game gives you the option before you even begin to just take the money and skip the arcade sequence entirely - while still getting the money you need to progress.As a bit of a meta joke about the game, the puzzle design and the relative difficulty of Sierra games, one of the things you’ll need to buy at the mall is a Space Quest IV hint book. This is actually required to finish the game as there are two codes you’ll need that are only found in the hint book!Honestly I thought this was pretty clever, and though only a couple of the hints are relevant, the other entries in the book that you reveal (with a magic pen) are typically pretty funny.If you were a PC gamer in the early 90’s, you may have had one of Sierra’s hint books, so the fact that one of these existed in-game as well as being available as a printed hint book was super meta. It’s also funny how the printed hint book contains a clue as to how you need to use the in-game hint book to find partial coordinates for the time pod.Eventually the Sequel Police will find you in SQX, and you’ll steal their time pod and use the code you pieced together from the gum wrapper and the hint book to jump all the way back to Space Quest I (check out my review of that game if you’re curious).Once again, make sure you write down the coordinates in the time pod as that’s what you’ll need to return to SQX later!The SQ1 sequence is real short, but the bikers you meet (who are in black and white) make fun of you for being rendered in all that fancy 256 color glory.You’ll bounce around time periods a couple more times collecting items you’ll need for the final showdown with Vohaul. Like most Sierra games you’ll find yourself picking up anything that isn’t nailed down to try and solve the various in-game puzzles.Unlike many Sierra games though, there really aren’t that many items to find in this game. If you forget to pick up the bunny, bottle and the slime at the very beginning of the game I’m pretty sure you’ll find yourself in an unwinnable situation, but otherwise you should be able to jump between time periods if you forgot anything.There are plenty of ways for Roger to get himself killed, but unlike the last couple games in the series I didn’t really find there to be all that much variety in the messaging you get prior to a game over.This doesn’t mean there aren’t some great death sequences, but the majority of the death dialog windows are just a variation of Roger lying on his stomach.To be fair, we all remember the zombie screeching at us and then Roger dying, so it’s not like these were “bad”. My issue was more with the lack of variety compared to previous games.Honestly I like spending a little extra time per screen to see what interactions result in my untimely demise, but I just didn’t really find the results all that entertaining this time around.The endgame sequence involves hacking into the main computer in Vohaul’s lair (which you use the in-game hint book to do), then deleting some subroutines (like the guard robots). If you happen to delete the SQIV “program”, the game will actually exit.I thought this was pretty clever, though if you aren’t prepared for it and haven’t saved … well I guess that’s on you 🤣. There’s also a Leisure Suit Larry 4 icon there, which is yet another in joke for Sierra fans as that game never existed (read Al Lowe’s true story of why the series jumped from LSL3 to LSL5).The game end’s with you facing off against Sludge Vohaul, who has taken over your son’s body. Oh yeah, you have a son apparently because - you know - time travel and stuff.This sequence is pretty simple as you just sort of move around and throw each other to the ground, and eventually Vohaul will throw a disk that you need to retrieve an put into the super computer so you can download your son’s consciousness and upload it back to his body to finish the game.As much as I love the Space Quest series, this entry is probably one of my least favourites. Visually it’s impressive, and the writing and voice acting is excellent - but the time travel elements are actually kind of frustrating.First of all, I couldn’t read the keyboard in the time pod. I found myself using a screenshot that I blew up to like 400% to try and figure out which key corresponded to which symbol to try and enter the time codes. Since you have to backtrack a few times, you need to go through this rigamarole a few times as well and it just seemed excessive as a result.Next, I didn’t really find the story to be all that interesting. I like time travel and sci-fi stories, but this felt underdeveloped and focusing a bit more on jokes for Sierra fans than plot progression.Overall it’s not all that bad, but it’s also not really all that memorable.OneShortEye’s recent video about How Speedrunners Broke Space Quest IV (again) reignited my interest in this game, which ultimately resulted in this playthrough. If you’re into speed running I’d highly recommend his videos as he covers a lot of adventure games. As an aside, my site made a cameo appearance in his 3 Obscure Easter Eggs in Sanitarium, so might as well plug my Sanitarium review 😅.Game Information Game Space Quest IV: Roger Wilco and the Time Rippers Developer Sierra On-Line Publisher Sierra On-Line Release Date March 4, 1991 Systems DOS, Windows, Macintosh, Amiga, NEC PC-9801 Game Engine SCI My Playthrough How Long To Beat? 4.5 hours Version Played DOS via ScummVM Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 15 Story (25) 9 Experience (15) 9 Impact (10) 4   53% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Normality (Gremlin Interactive) - 1996", "url": "/blog/2024/05/27/normality/", "categories": "Let's Adventure!", "tags": "adventure, Gremlin Interactive, Interplay", "date": "2024-05-27 09:15:52 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Hugo II, Whodunit? (Gray...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Hugo II, Whodunit? (Gray Design Associates) - 1991Normality (Gremlin Interactive) - 1996→ Space Quest IV: Roger Wilco and the Time Rippers (Sierra On-Line) - 1991 Article 78 of 96 in this series.Normality is a 3D graphic adventure, released in June 1996 by Gremlin Interactive. All cut-scenes in the game are pre-rendered. The game’s engine was later used in the game Realms of the Haunting.Kent Knutson is a teenager who lives in the city of Neutropolis. The city is controlled by a totalitarian regime, which prohibits people to express any emotions that would deviate from the prescribed norm - such as joy and happiness. Kent is arrested by the Norms, the police force of Neutropolis, and put in prison for whistling a merry tune. In prison, he received an anonymous note that tells him that there is a resistance group somewhere in the city, which seeks to overthrow the dictator of Neutropolis. The question is - how can Kent find that resistance group?.1What sets this game apart from other adventure games of the era is that you’re navigating a 3D world with a first person perspective. This is what you’d expect from Doom or Duke Nukem 3D, but not a point and click title.For the first time in this series I’m in including an animated GIF just to show this off. As you navigate the game world you move around with the arrow keys and can pan up and down to see above or below you.The game design incorporates these mechanics pretty frequently as you’ll occasionally find yourself unable to progress because the item you need is behind something, or it’s above you in a narrow space and you need to look up and reposition yourself to interact with something.You need to navigate to the back of the room and look down while moving around the crate to see this malletThough the game world is presented in 3D, as you move around you also have a cursor you pan over the screen that will highlight things you can interact with. Clicking on an action area will bring up a “voodoo doll” that is basically a visual representation fo the verbs you can use to interact with the thing you’ve highlighted.This is not a unique mechanic and appears in a lot of adventure games at this time (such as Full Throttle). Once you bring up the voodoo doll (that’s what they call it in the manual), moving the mouse cursor over the various verbs will animate them slightly so you know what you’re about to select.The options are limited to the usual suspects of LOOK, USE, OPEN, TALK and GET.The story progresses through various interactions with NPCs, which involves navigating basic dialog trees. There’s really nothing innovative here, though the US release of the game has Kent voiced by Corey Feldman which adds a nice nostalgic flair to the experience.Aside from character interactions, the story also progresses through various pre-rendered cutscenes. These all have a very “90s” feel to them and though dated by today’s standards definitely don’t feel out of place in this game world.These animated sequences occur pretty often, so the pace of the game is pretty consistently maintained. You’ll find yourself moving around each game scene, hovering the cursor over everything to see what you’re able to interact with, trying all available verbs to see what works then frequently being rewarded with an animation if you picked correctly.A large portion of this game involves fetch quests and item combination puzzles. Maybe this is just an artifact of when this game came out, but I had a lot of trouble making progress without resorting to a walkthrough as a number of puzzles were a bit obtuse.This could just be due to me being too impatient, but I found myself just randomly clicking each item on every other item more than once to try and make some progress when I’d get stuck.I’m assuming the developers may have expected players to get stuck as the manual has hints for most of the game’s main areas!You have access to a map (press M to access it) which opens up various game locations as you progress. If you don’t know about this then once you get out of the apartment you’re imprisoned in initially you won’t be able to progress with the game (yes, I got stuck like that at first).Typically you’re just jumping between the various locations picking up items you may need to solve puzzles.There aren’t all that many characters to interact with, but they will typically help move you in the right direction by giving plot detail or objectives.As you progress, the game’s goofy soundtrack is playing in the background which enhances the mood appropriately. This whole game just sort of feels like you’re playing through an episode of a Saturday morning cartoon of that era - which isn’t a bad thing.After solving a bunch of weird puzzles you’ll eventually find yourself underneath the stadium, which is a huge maze. This section can be a bit frustrating as you’ll first need to figure out how to get batteries for the night vision goggles - which involves stumbling around the maze in the dark for a while.This final sequence just didn’t make a lot of sense, but it is weird and confusing in a way that is fitting to this title. You’ll end up finding Saul’s brain, which you need to bring up on stage in the stadium so that it can somehow change Paul’s thinking and free Neutropolis from his evil reign … or something like that.I honestly had a lot of fun with this game, though it can be frustrating at times. I really appreciated a different approach to this genre through a 3D game world, and the story was definitely swinging for the fences in trying to present a unique experience.There’s a great writeup by The Digital Antiquarian that goes into a lot more detail about this game that I’d highly recommend if you find this interesting.Since I haven’t covered another title like this yet, and it presented a new take on the genre I think this one is worth checking out.Game Information Game Normality Developer Gremlin Interactive Publisher Interplay Release Date June 1996 Systems DOS Game Engine   My Playthrough How Long To Beat? 6 hours Version Played DOS via DOSBox-X Notes Walkthrough 1, Walkthrough 2, Manual ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 15 Story (25) 14 Experience (15) 11 Impact (10) 5   64% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Peeling the MongoDB Drivers Onion", "url": "/blog/2024/05/17/peeling-the-mongodb-drivers-onion/", "categories": "MongoDB", "tags": "mongodb, drivers", "date": "2024-05-17 12:45:06 -0400", "snippet": "The modern MongoDB driver consists of a number of components, each of which are thoroughly documented in the Specifications repository. Though this information is readily available and extremely he...", "content": "The modern MongoDB driver consists of a number of components, each of which are thoroughly documented in the Specifications repository. Though this information is readily available and extremely helpful, what it lacks is a high level overview to tie the specs together into a cohesive picture of what a MongoDB driver is.Architecturally an implicit hierarchy exists within the drivers, so expressing drivers in terms of an onion model feels appropriate.Layers of the OnionThe “drivers onion” is meant to represent how various concepts, components and APIs can be layered atop each other to build a MongoDB driver from the ground up, or to help understand how existing drivers have been structured. Hopefully this representation of MongoDB’s drivers helps provide some clarity, as the complexity of these libraries - like the onion above - could otherwise bring you to tears.SerializationAt their lowest level all MongoDB drivers will need to know how to work with BSON. BSON (short for “Binary JSON”) is a bin­ary-en­coded serialization of JSON-like documents, and like JSON, it sup­ports the nesting of arrays and documents. BSON also contains extensions that al­low representation of data types that are not part of the JSON spec. Specifications: BSON, ObjectId, Decimal128, UUID, DBRef, Extended JSONCommunicationOnce BSON documents can be created and manipulated, the foundation for interacting with a MongoDB host process has been laid. Drivers communicate by sending database commands as serialized BSON documents using MongoDB’s wire protocol.From the provided connection string and options a socket connection is established to a host, which an initial handshake verifies is in fact a valid MongoDB connection by sending a simple hello. Based on the response to this first command a driver can continue to establish and authenticate connections. Specifications: OP_MSG, Command Execution, Connection String, URI Options, OCSP, Initial Handshake, Wire Compression, SOCKS5, Initial DNS Seedlist DiscoveryConnectivityNow that a valid host has been found, the cluster’s topology can be discovered and monitoring connections can be established. Connection pools can then be created and populated with connections. The monitoring connections will subsequently be used for ensuring operations are routed to available hosts, or hosts that meet certain criteria (such as a configured read preference or acceptable latency window). Specifications: SDAM, CMAP, Load Balancer SupportAuthenticationEstablishing and monitoring connections to MongoDB ensures they’re available, but MongoDB server processes typically will require the connection to be authenticated before commands will be accepted. MongoDB offers many authentication mechanisms such as SCRAM, x.509, Kerberos, LDAP, OpenID Connect and AWS IAM, which MongoDB drivers support using the Simple Authentication and Security Layer (SASL) framework. Specifications: AuthenticationAvailabilityAll client operations will be serialized as BSON and sent to MongoDB over a connection that will first be checked out of a connection pool. Various monitoring processes exist to ensure a driver’s internal state machine contains an accurate view of the cluster’s topology so that read and write requests can always be appropriately routed according to MongoDB’s server selection algorithm. Specifications: Server Monitoring, SRV Polling for mongos Discovery, Server Selection, Max StalenessResilienceAt their core, database drivers are client libraries meant to facilitate interactions between an application and the database. MongoDB’s drivers are no different in that regard, as they abstract away the underlying serialization, communication, connectivity, and availability functions required to programmatically interact with your data.To further enhance the developer experience while working with MongoDB, various resilience features can be added based on logical sessions such as retryable writes, causal consistency, and transactions. Specifications: Retryability (Reads, Writes), CSOT, Consistency (Sessions, Causal Consistency, Snapshot Reads, Transactions, Convenient Transactions API)ProgrammabilityNow that we can serialize commands and send them over the wire through an authenticated connection we can begin actually manipulating data. Since all database interactions are in the form of commands, if we wanted to remove a single document we might issue a delete command such as the following:db.runCommand( { delete: \"orders\", deletes: [ { q: { status: \"D\" }, limit: 0 } ] })Though not exceedingly complex, a better developer experience can be achieved through more single-purpose APIs. This would allow the above example to be expressed as:db.orders.deleteMany({ status: \"D\" })To provide a cleaner and clearer developer experience, many specifications exist to describe how these APIs should be consistently presented across driver implementations, while still providing the flexibility to make APIs more idiomatic for each language.Advanced security features such as client-side field level encryption are also defined at this layer. Specifications: Resource Management (Databases, Collections, Indexes), Data Management (CRUD, Collation, Write Commands, Bulk API, Bulk Write, R/W Concern), Cursors (Change Streams, find/getMore/killCursors), GridFS, Stable API, Security (Client Side Encryption, BSON Binary Subtype 6)ObservabilityWith database commands being serialized and sent to MongoDB servers and responses being received and deserialized, our driver can be considered fully functional for most read and write operations. As MongoDB drivers abstract away most of the complexity involved with creating and maintaining the connections these commands will be sent over, providing mechanisms for introspection into a driver’s functionality can provide developers with added confidence that things are working as expected.The inner workings of connection pools, connection lifecycle, server monitoring, topology changes, command execution and other driver components are exposed by means of events developers can register listeners to capture. This can be an invaluable troubleshooting tool and can help facilitate monitoring the health of an application.const { MongoClient, BSON: { EJSON } } = require('mongodb');function debugPrint(label, event) { console.log(`${label}: ${EJSON.stringify(event)}`);}async function main() { const client = new MongoClient(\"mongodb://localhost:27017\", { monitorCommands: true }); client.on('commandStarted', (event) =&gt; debugPrint('commandStarted', event)); client.on('connectionCheckedOut', (event) =&gt; debugPrint('connectionCheckedOut', event)); await client.connect(); const coll = client.db(\"test\").collection(\"foo\"); const result = await coll.findOne(); client.close();}main();Given the example above (using the Node.js driver) the specified connection events and command events would be logged as they’re emitted by the driver:connectionCheckedOut: {\"time\":{\"$date\":\"2024-05-17T15:18:18.589Z\"},\"address\":\"localhost:27018\",\"name\":\"connectionCheckedOut\",\"connectionId\":1}commandStarted: {\"name\":\"commandStarted\",\"address\":\"127.0.0.1:27018\",\"connectionId\":1,\"serviceId\":null,\"requestId\":5,\"databaseName\":\"test\",\"commandName\":\"find\",\"command\":{\"find\":\"foo\",\"filter\":{},\"limit\":1,\"singleBatch\":true,\"batchSize\":1,\"lsid\":{\"id\":{\"$binary\":{\"base64\":\"4B1kOPCGRUe/641MKhGT4Q==\",\"subType\":\"04\"}}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1715959097,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"00\"}},\"keyId\":0}},\"$db\":\"test\"},\"serverConnectionId\":140}The preferred method of observing internal behavior would be through standardized logging once it is available in all drivers (DRIVERS-1204), however until that time only event logging is consistently available. In the future additional observability tooling such as Open Telemetry support may also be introduced. Specifications: Command Logging and Monitoring, SDAM Logging and Monitoring, Standardized Logging, Connection Pool LoggingTestabilityEnsuring existing as well as net-new drivers can be effectively tested for correctness and performance, most specifications define a standard set of tests using YAML tests to improve driver conformance. This allows specification authors and maintainers to describe functionality once with the confidence that the tests can be executed alike by language-specific test runners across all drivers.Though the unified test format greatly simplifies language-specific implementations, not all tests can be represented in this fashion. In those cases the specifications may describe tests to be manually implemented as prose. By limiting the number of prose tests that each driver must implement, engineers can deliver functionality with greater confidence while also minimizing the burden of upstream verification. Specifications: Unified Test Format, Atlas Data Federation Testing, Performance Benchmarking, BSON Corpus, Replication Event Resilience, FAAS Automated Testing, Atlas Serverless TestingConclusionMost (if not all) the information required to build a new driver or maintain existing drivers technically exists within the specifications, however without a mental mode of their composition and architecture it can be extremely challenging to know where to look.Peeling the “drivers onion” should hopefully make reasoning about them a little easier, especially with the understanding that everything can be tested to validate individual implementations are “up to spec”." }, { "title": "Hugo II, Whodunit? (Gray Design Associates) - 1991", "url": "/blog/2024/05/10/hugo-ii-whodunit/", "categories": "Let's Adventure!", "tags": "adventure, Gray Design Associates, Hugo", "date": "2024-05-10 06:51:54 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← The Secret of Monkey Isl...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← The Secret of Monkey Island (Lucasfilm Games) - 1990Hugo II, Whodunit? (Gray Design Associates) - 1991→ Normality (Gremlin Interactive) - 1996 Article 77 of 96 in this series.Hugo II, Whodunit? (named Hugo’s Mystery Adventure in the Hugo Trilogy re-release) is a parser-based adventure game designed by independent software developer David P. Gray and published as shareware by Gray Design Associates in 1991. It is the sequel to 1990’s Hugo’s House of Horrors, and it was followed by Hugo III, Jungle of Doom! in 1992.Hugo and his wife, Penelope, arrive to stay at the mansion that belongs to Hugo’s Great Uncle Horace. Penelope falls asleep in the bedroom, while Hugo accidentally finds a bookcase passage and is locked in a secret room. Penelope wakes up, only to witness Uncle Horace’s murder through the keyhole. The player controls Penelope (and later, briefly, Hugo) and must solve the murder.1This title improves slightly on the original as moving the mouse around the screen will occasionally highlight character or object names. This is a cue as to something you should type into the text parser to interact with (ex: LOOK BOOKCASE).Once you lie down and Hugo disappears, you’ll gain control of Penelope - who is the main character on this adventure.As you work your way through the Uncle Horace’s property you’ll meet a couple NPCs that you can interact with. These interactions are extremely limited (they’re not dialogue trees) and typically don’t advance the plot - they just serve as puzzles as you typically need them to move so you can progress.Since I’m playing this game in ScummVM, the original text boxes have been replaced by UI modals - which IMHO look awful. Apparently a “nice to have” on the Hugo/TODO page is implementing the original dialog boxes … so maybe one day.In a couple areas you need to navigate the screen using almost pixel-perfect navigation to either keep yourself from dying, or getting into an unwinnable situation.The venus fly trap screen requires you to walk through a “maze” in order to get a magnifying glass. The hit boxes for these plants are massive though, so you’ll die many times trying to get through this.When you get past the venus fly traps you’ll need to cross a bridge, but if you accidentally touch the “edges” of the walkable area you’ll drop your matches and they’ll get wet.If this happens, you won’t be able to light a stick of dynamite later in the game.Luckily this game is very short, so if you happen to get yourself into this situation it’s really only a matter of backtracking about 30 minutes of play time to get yourself to that point from an earlier save.To progress through the mid-portion of the game you need to press various buttons in the shed to trigger certain events. These can’t be done until you first walk all the way to the screen where the event will occur, then walk back and press the button.For example, you can’t turn on the bug light to attract the bees until you’ve “been there” once.Since you’ll be doing a lot of backtracking it is appreciated that this game has a “Turbo” mode that makes Penelope walk twice as fast.This is especially helpful when you have to navigate through the hedge maze (oh goody … a maze). Thankfully this isn’t all that big and is easy enough to map out, but given the limited colour palette of this game this section is a little hard on the eyes.The maze exists to hide a couple items you’ll need to collect to proceed - which honestly sums up most of this game. A good portion of the game’s screens contain items that you’ll need to use exactly once to solve a single puzzle.This is fairly simplistic game design, but I can’t fault David P. Gray as he single handedly wrote a trilogy of games that he even went into technical detail about for anyone that was interested.To add some flavour there are timing-based puzzles as well. For example, if you place and light the dynamite you have a fixed amount of time to get out of the well before it explodes and kills you.Though there aren’t many game over scenarios, they are possible so it’s worth saving every few screens just so you don’t have to backtrack too far when you mess up.The narrative of this game is a little disjointed, like when you step into a phone booth, call a number you just saw written in graffiti and meet Dr. Who (sort of).It’s all to give you a screwdriver you can use to open a safe a few screens later, but there’s no rhyme or reason for this encounter.Once you make your way back into the mansion you’ll talk to family members who you’ll get clues from as to what happened to Uncle Horace. Finally you’ll all gather in a room with a police officer who asks you “Whodunit?!?”.If you guess right (that nobody murdered Horace) you get points, otherwise Cousin Harry gives you a little info and we meet back up with Hugo, who is locked in a closet.The solution to get out of the closet is fairly straightforward. Once you put the newspaper under the door, poke the key out of the keyhole so it falls and you pull it under the door on the newspaper, you get out and it’s game over.And that’s a wrapThough it improves on the previous entry in the series, Hugo 2 is extremely simplistic. The graphics are simple, the audio is PC speaker beeps and there’s typically no music (aside from a couple of screens).The game is very straightforward aside from a couple of slightly obtuse puzzles such as rubbing catnip on a bell, then giving the bell to the cat so he’ll ring it and distract the maid while you’re in another room.Hugo games really feel like they’re a variation of Sierra’s AGI games, but not nearly as robust. For a game written and developed by one guy though, it really isn’t all that bad.Game Information Game Hugo II, Whodunit? Developer Gray Design Associates Publisher Gray Design Associates Release Date 1991 Systems DOS, Windows Game Engine Hugo My Playthrough How Long To Beat? 1.5 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 7 Story (25) 8 Experience (15) 8 Impact (10) 2   36% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Do Not Use Mutexes in Finalizers", "url": "/blog/2024/05/09/do-not-use-mutexes-in-finalizers/", "categories": "Programming", "tags": "ruby", "date": "2024-05-09 13:27:41 -0400", "snippet": " Reposted from Dmitry’s blog. Canonical URL points to his original post.Ruby allows a developer to specify a finalizer proc for an object. This proc is called after an object was destroyed. This i...", "content": " Reposted from Dmitry’s blog. Canonical URL points to his original post.Ruby allows a developer to specify a finalizer proc for an object. This proc is called after an object was destroyed. This is a very useful mechanism that can be used for some cleanup when the object is gone. However, it turned out that there are limitations to what you can do inside finalizers. And these limitations are the same as ones for a signal trap. So, if you write a finalizer, you should follow the documentation for signal traps.Some time ago a user opened an issue in our bug tracker. In his logs he noticed an exception raised by the MongoDB Ruby driver:`synchronize': can't be called from trap context (ThreadError)From the logs, we could see that the exception was raised when calling synchronize on a mutex inside the finalizer. However, the exception says that synchronize can’t be called from a “trap context”. What is that, and how is it related to our finalizers?Finalizer is a proc that will be called when a specific object is about to be destroyed by garbage collection. In the MongoDB Ruby driver, we use finalizers to close unused cursors. A cursor is returned in response to a query and can be iterated to retrieve results. Cursors are a very convenient mechanism; however, cursors are server-side objects, and every cursor consumes server memory. Therefore, it is a good idea to let the server know if a cursor is unused so that the resources are released. So, if an object that represents a cursor is destroyed, the cursor is definitely unused and can be closed.Below is a very simplified example of how this can be done:class Cursor def self.finalize(cursor_id, database, collection) proc do puts \"Killing cursor #{cursor_id} on #{database}.#{collection}\" # Execute command to close cursor end end def initialize(database, collection) # Initialize the cursor ObjectSpace.define_finalizer( self, self.class.finalize(@id, @database, @collection) ) endendWe can ask Ruby to do the garbage collection by calling GC.start, so we can test the code.5.times { Cursor.new('database', 'collection') }GC.start# =&gt; Killing cursor 258 on database.collection# =&gt; Killing cursor 938 on database.collection# =&gt; Killing cursor 791 on database.collection# =&gt; Killing cursor 705 on database.collection# =&gt; Killing cursor 114 on database.collectionSo far so good. Of course, this solution is far from ideal. Here we send a command to the server every time the finalizer is called. First, this will block the main thread. Further, it will issue one command per cursor, which is not ideal. We can also reduce the number of commands we send by killing all cursors for a collection in one command. So, we came up with an idea for the cursor reaper — a background thread that wakes up from time to time and kills unused cursors:class CursorReaper Task = Struct.new(:id, :database, :collection) def initialize @mutex = Mutex.new @tasks = [] end def schedule(id, database, collection) @mutex.synchronize do @tasks &lt;&lt; Task.new(id, database, collection) end end def kill_cursors @mutex.synchronize do while task = @tasks.pop puts \"Killing cursor #{task.id} on #{task.database}.#{task.collection}\" # Group cursors per collection end end # Execute commands to close cursors endendclass Cursor def self.finalize(id, database, collection, reaper) proc do reaper.schedule(id, database, collection) end end def initialize(database, collection, reaper) # Initialize the cursor ObjectSpace.define_finalizer( self, self.class.finalize(@id, @database, @collection, reaper) ) endendNote that there is a mutex in the CursorReaper class. The kill_cursors method of the reaper will be called in a background thread, hence the locking. Let’s test it:reaper = CursorReaper.newreaper_thread = Thread.new do loop do sleep(1) reaper.kill_cursors endend5.times { Cursor.new('database', 'collection', reaper) }GC.startreaper_thread.join# =&gt; Killing cursor 205 on database.collection# =&gt; Killing cursor 847 on database.collection# =&gt; Killing cursor 284 on database.collection# =&gt; Killing cursor 609 on database.collection# =&gt; Killing cursor 485 on database.collectionStill, no error, even though the latter example calls synchronize inside the finalizer. What is the difference between the example and the real-world situation? In the example, we trigger garbage collection manually. Normally this is triggered by Ruby itself. What if we create so many objects that Ruby actually starts the GC?reaper = CursorReaper.newreaper_thread = Thread.new do loop do sleep(1) reaper.kill_cursors endendpopulator_thread = Thread.new do loop do 5000.times { Cursor.new('database', 'collection', reaper) } sleep(1) endend[reaper_thread, populator_thread].map(&amp;:join)Yes, this code actually reproduces the problem, and the exception is raised! So, it looks like finalizers are executed inside a signal trap. Therefore, to fix the problem we should just follow the documentation and not use operations that are not allowed inside the traps. In our case with the cursor reaper, we got rid of mutexes in finalizers by using a queue data structure, and the bug was fixed.We Need to Go DeeperEven though the problem was gone, I decided to find out whether finalizers are really executed inside a signal trap. I though maybe Ruby VM uses signals internally to trigger garbage collection. I could not find any mentions about such a usage of signals, so I had to read Ruby source code. It tuned out to be fun, and the outcome was very unexpected!I started by finding where the error “can’t be called from trap context” is raised. I found it in do_mutex_lock function inside thread_sync.c file:/* When running trap handler */if (!FL_TEST_RAW(self, MUTEX_ALLOW_TRAP) &amp;&amp; th-&gt;ec-&gt;interrupt_mask &amp; TRAP_INTERRUPT_MASK) { rb_raise(rb_eThreadError, \"can't be called from trap context\");}So, what is actually verified is whether the execution context has a TRAP_INTERRUPT_MASK flag set. This flag is set in three functions: rb_postponed_job_flush in vm_trace.c, rb_threadptr_execute_interrupts in thread.c, and signal_exec in signal.c. After some debugging, I found out that in our case the flag is set in the rb_postponed_job_flush function. Actually, this is also confirmed by this comment for the rb_gc function in gc.h:* Finalisers are deferred until we can handle interrupts. See * `rb_postponed_job_flush` in vm_trace.c.Alright, now it is more or less clear what is going on. Finalizers are not executed immediately after an object is “garbage collected”. Instead, a postponed job is created and scheduled. Such jobs are executed in the rb_postponed_job_flush function. This function sets the TRAP_INTERRUPT_MASK flag, which is later checked by do_mutex_lock. Hence the error. I even found the commit that introduces the current behavior, and a bug that was fixed by this commit. It looks like the Ruby team wanted to make sure that finalizers are never interrupted by a signal; as a side effect, code inside finalizers is treated as code inside a signal trap.To summarize, finalizers are not executed inside a signal trap; however, Ruby applies the same restrictions to signal traps and finalizers. This is not documented anywhere; further, the exception raised is a bit misleading. Be careful!P.S. It is still unclear why we did not see the exception when we trigger the garbage collection manually. I wasn’t able to find the answer; maybe this is a topic for my next article." }, { "title": "The Secret of Monkey Island (Lucasfilm Games) - 1990", "url": "/blog/2024/04/30/the-secret-of-monkey-island/", "categories": "Let's Adventure!", "tags": "adventure, Lucasfilm Games, SCUMM", "date": "2024-04-30 05:03:32 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Police Quest: Open Seaso...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Police Quest: Open Season (Sierra On-Line) - 1993The Secret of Monkey Island (Lucasfilm Games) - 1990→ Hugo II, Whodunit? (Gray Design Associates) - 1991 Article 76 of 96 in this series.The Secret of Monkey Island is a 1990 point-and-click graphic adventure game developed and published by Lucasfilm Games.Deep in the Caribbean lies Melee Island, ruled by the governor Elaine Marley. The cruel pirate LeChuck is deeply in love with her - so deeply that he refuses to accept his own death. As a ghost, he dwells with his undead crew somewhere near the mysterious Monkey Island. Meanwhile, a young fellow named Guybrush Threepwood is determined to become a real pirate. At the Scumm Bar, he meets three pirates who tell him he has to complete three difficult tasks in order to be worthy of this title. But as Guybrush is trying to complete these tasks, he encounters the lovely governor, and this meeting changes his life forever. Risking to incur the wrath of LeChuck, Guybrush has to prove his wit is as sharp as his sword, and figure out a way to foil the ghost pirate’s plans.1Without pulling any punches I might as well just start off with the fact that this is possibly one of the best adventure games of all time. From the amazing soundtrack and excellent pixel art to the captivating story and the extremely forgiving game play, Secret of Monkey Island is extremely welcoming to anyone looking to get started with this genre of game.Being an early SCUMM game you’re presented with a very familiar screen layout with the main view on top, a verb list in the lower left and inventory in the lower right. Moving the mouse cursor around the screen will call out any action areas you can interact with, and based on which verb is selected, you can perform said action on whatever you just clicked on.As you progress on your quest to become a mighty pirate, you’ll find yourself picking up a lot of items. As a result, most puzzles in this game involve either completing fetch quests, or item combination puzzles.The game typically points you in the right direction as to what you need to do next, which item you need or how things need to be combined so though it can be challenging at times, I never found the game to get frustrating.Most characters in the game can be engaged with, opening up a conversation system with branching dialogue options. There are typically a number of nonsense options in each conversation that will are just a distraction, but the writing in this game is so good (and funny) that it’s almost worth exploring these even if you know you’re picking the “wrong” option.Graphically this game is top notch, as can be seen in character portraits and background artwork. As a result you’re typically not just sweeping your cursor around the screen hoping to find some magic pixel to interact with - the detail of the backgrounds make whatever thing you’re supposed to interact with pretty apparent.The Secret of Monkey Island introduces a unique battle mechanic, which is actually weirdly intuitive and easy to learn. One of the quests you need to embark on is to defeat the legendary swordmaster, but to do this you’ll need to build up a repertoire of insults.“Battles” consist of you hurling an insult, and the other pirate either having a witty comeback or a generic comment (ex: “I am rubber you are glue”). If they have a comeback, they win a round and can insult you, and you need to “defend” with a comeback. If a pirate uses an insult in battle you haven’t learned, it’s added to your list of insults for future battles - as are the comebacks pirates have used.If you match a comeback to an insult, you’ll win a round, and if you win 3 or 4 rounds you win the fight.Eventually you’ll build up enough insults to challenge (and hopefully defeat) the legendary swordmaster. This is actually pretty interesting as she’ll lob insults you’ve never heard before but you can still successfully parry with comebacks you’ve already learned - assuming you pick the right ones.This is just another example of how well this game is written, as so much care was put into crafting this battle system that they wrote multiple insults that would make sense (and sort of be funny) with the same comebacks.I personally loved this game mechanic and am impressed it wasn’t overplayed. They really only use it in the lead up to the swordmaster fight - then never again. With such a unique element to the game it may have been tempting to overplay it, but you gotta give the designers credit for fighting that urge and making a really well balanced game.The game is split into three main chapters, two of which take place on islands you can navigate from an overhead map view. This makes each area feel a lot bigger than it actually is, as there are typically a handful of actual locations to visit.These locations are called out as you move your cursor over them, and clicking on them will make Guybrush walk there. In chapter 3 you eventually get access to a boat, which moves extremely slowly, but if you double click an area of the screen that’s further away from you he paddles quickly and the boat moves a lot faster.I appreciated this type of optimization in the game as it can be tedious waiting for the character to slowly progress on the map just to give an area a false sense of scale.As the story progresses you’ll prove yourself to be a mighty pirate, meet the governor, fall for her and then have to go rescue her once the Ghost Pirate LeChuck kidnaps her. This is done by recruiting a crew and buying a boat, but once you do this crew sort of abandons you to instead soak up some rays on the deck.The bulk of this second chapter consists of you completing a massive item combination puzzle as the directions to Monkey Island are presented to you in the form of a recipe.Everything you’ll need to get to the island are on the ship, so this giant fetch quest just involves searching the ship, picking up items, referring to the recipe (once you find it) to see what should get thrown in the pot - then throwing it in the pot.Once the recipe is complete everyone on the ship falls asleep and you wake up off the shore of Monkey Island. How convenient!Once you find Monkey Island you’ll need to get yourself there, but you don’t seem to have a rowboat. Good thing you learning how to fire yourself out of a cannon earlier in the game.To me at least this was an example of good puzzle design, as you’d already learned how cannons could be used, and you happen to have a long piece of rope, embers from a fire, gunpowder and a pot you can use as a helmet …There are only a few characters to meet on the island once you get there, but they drop some hints as to where LeChuck is and what they need from you. After embarking on another series of fetch quests, you’ll eventually get the key to enter the underground where LeChuck’s ghost ship is anchored.From the ghost ship you retrieve the root and give it back to the cannibals so they can make you som root beer you can use to get rid of ghosts. When you bring the root back, the cannibals prepare the root beer, you return to the ghost ship and find out you just missed them.LeChunk has taken Governor Marley back to Melee Island to marry her. Instead of having to manually backtrack, your crew appears at this point and after a brief cutscene you automatically return to Melee Island with them.The final showdown with Lechuck is pretty easy, though you need to move quickly or he’ll punch you off screen and delay the fight. It’s kind of funny that you make it this far with the magic root beer, you go to use it on LeChuck and it gets jammed on some pocket lint.Eventually you’ll grab a can of grog, spray LeChuck with it and the game will be over.The EndI basically loved everything about this game. The writing was fantastic, the story was compelling, the puzzles were challenging but intuitive, the music was great, it’s visually appealing and the dialogue was engaging. If you’re already a fan of this game, I’d encourage you to go read the Video Game History Foundation’s 30th anniversary of Monkey Island article as it contains lots of development details and insights.There are 2 sequels to this game that I plan on playing for this series, and I am really looking forward to getting to those. I know there’s a fourth game, but Escape from Monkey Island came out in 2000 so is just outside the range I set - though I might circle back to it one day just for fun.The only game over in this gameThough this is a LucasArts game, there is exactly one game over screen in The Secret of Monkey Island, and it’s a bit of an easter egg. Right from the beginning of the game Guybrush mentions his talent is holding his breath for 10 minutes - which is something you’ll leverage at one point when you’re thrown in the ocean to drown.You can easily just walk out of the water and escape certain death, but if you just let the game idle for more than 10 minutes, Guybrush will die. Unlike Sierra games of this era, instead of prompting you with a game over screen, the verb list changes to represent your new set of options.This is just another example of the clever game design, excellent writing and underlying humor that permeates this title through and through. I would highly recommend this game to anyone - whether they’re a fan of the genre or not.Game Information Game The Secret of Monkey Island Developer Lucasfilm Games Publisher Lucasfilm Games Release Date October 1990 Systems Amiga, Atari ST, CDTV, DOS, FM Towns, Mac OS, Sega CD Game Engine SCUMM My Playthrough How Long To Beat? 6.5 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 18 Story (25) 23 Experience (15) 13 Impact (10) 7   87% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Event Monitoring with Mongoose", "url": "/blog/2024/04/26/event-monitoring-with-mongoose/", "categories": "MongoDB", "tags": "mongodb, connections, drivers, monitoring, mongoose, node.js", "date": "2024-04-26 09:58:52 -0400", "snippet": "I previously wrote about MongoDB Driver Monitoring, but there are ODM libraries and framework integrations that are built atop the drivers that can take advantage of this functionality.For example,...", "content": "I previously wrote about MongoDB Driver Monitoring, but there are ODM libraries and framework integrations that are built atop the drivers that can take advantage of this functionality.For example, mongoose can be easily configured to expose cluster monitoring, connection pool monitoring and command monitoring capabilities.const mongoose = require('mongoose');const { Schema } = mongoose;run().catch(err =&gt; console.log(err));async function run() { await mongoose.connect('mongodb://localhost:27017/test'); mongoose.connection.getClient().on('connectionCheckOutStarted', ev =&gt; console.log('Received: ', ev)); const schema = Schema({ name: String }); const Test = mongoose.model('Test', schema); await Test.create({ name: 'test' });}This was documented within a comment of this GitHub issue but for the sake of visibility I wanted to capture it here." }, { "title": "Police Quest: Open Season (Sierra On-Line) - 1993", "url": "/blog/2024/04/25/police-quest-open-season/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, SCI", "date": "2024-04-25 05:18:42 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Lure of the Temptress (R...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Lure of the Temptress (Revolution Software) - 1992Police Quest: Open Season (Sierra On-Line) - 1993→ The Secret of Monkey Island (Lucasfilm Games) - 1990 Article 75 of 96 in this series.Police Quest: Open Season (also known as Police Quest IV) is a 1993 police procedural point-and-click adventure video game developed and published by Sierra On-Line that follows homicide detective John Carey as he investigates a series of brutal murders in Los Angeles.This fourth installment in the Police Quest series abandons the story arc of the previous three games, introducing a new setting and a new protagonist. The story begins with detective John Carey finding his best friend and ex-partner, Officer Bob Hickman, murdered in an alley in the Southern part of the city. An eight-year-old boy named Bobby Washington has been murdered as well. Carey begins an investigation that leads him deep into the criminal life of the city and a hunt for a maniacal murderer.1Growing up playing Sierra games, Police Quest was at the top of my list so I have very fond memories of the series. As I started on this review journey, I found myself playing through the first three games (Police Quest: In Pursuit of the Death Angel, Police Quest II: The Vengeance, Police Quest III: The Kindred) pretty early on as I was looking forward to getting reacquainted with Sonny Bonds and the city of Lytton.This entry in the series throws all that legacy out the window and instead tries to present a grittier, more realistic setting.The graphics are blocky and just overall look shittyWhat really struck me immediately is how bad this game looks. The character models are extremely chunky and looked overly compressed. Character walk cycle animations are rigid and awkward and everything in general just looks out of focus and kind of blurry.The text boxes can be extremely hard to readWhenever you interact with another character in the game you’re presented with a translucent text box that makes it extremely difficult to read the contents. Since this is an adventure game that involves talking to a lot of characters to uncover plot points and advance the story, you’ll find yourself frequently in situations that involve squinting to try and make out what’s on screen.All interactions are fully voice acted (including Detective Carey’s observations when you interact with the background) so you can get around the text box quality, but then you’re at the mercy of some sub-par voice acting instead. Not all voice acting is awful in this game, but it’s definitely not one of this game’s strengths.I’m sure this was meant to be an attempt at humor, but it feels forcedUnlike the voice acting, the background music is … fine. Nothing really notable other than it seems they reused a Leisure Suit Larry song for the elevator music which is a nice tip of the hat to fans of the series.The tone of the game is a bit scattered. The subject matter is meant to be extremely serious, but they try to weave goofier elements in periodically. These attempts at comedy, mostly fell short for me and just came off as awkward and out of place.You advance through each day of this game by going to various locations across Los Angeles, interrogating various characters, collecting evidence and recording details using your notebook. Since this is another police procedure simulation you get points for following proper protocol.This involves showing your badge to literally everyone you have to talk to (sometimes every single time you see them), clipping your name tag on every time you enter headquarters and filling out a form 3.14 every single time you progress your investigation the tiniest bit.I HATE form 3.14I know this is meant to be an “accurate simulation”, but this is just not fun game design. If you need to do this once - fine. If you need to do this every time it’s no longer a game - it’s just “work”.A lot of this game just feels like work. Maybe that’s an accurate depiction of police detective work in the early 90s, but it really doesn’t translate to a compelling game experience.Point and click to navigate between game areasI appreciate that you can fast travel to the various locations you need to investigate. In earlier entries in this series you would have to manually drive yourself around town, which could take forever and result in unnecessary game ending situations.Speaking of “game ending situations”, seeing as this is a Sierra game you would expect death to be lurking around every corner - but that’s just not the case. There are maybe a handful of situations that will trigger a game over, but these are few and far between.What’s worse is the prompt you get when you die is just as boring as the rest of the game. I used to go out of my way to see how the game would describe my character’s death in games like Leisure Suit Larry or Space Quest because it was always funny, descriptive and entertaining.The plain gray box with a generic message stating I died is fitting for how boring this game is as a whole.I got stuck here for a whileOpen Season is not a very long game, but I found myself stuck and unable to progress at one point because a scripted event just would not trigger. After watching the news at the bar after the second day, the screen would just go blank and the game would wait forever. Eventually I found that lowering the detail and speed in the game settings before entering this sequence would allow the script to progress.The game takes place over the course of a few days. If you don’t complete everything, the scripted events required to trigger the transition to the next day won’t trigger.I found myself in a situation where I couldn’t get Wednesday to end, which it turned out was actually a pretty common issue for a lot of gamers. The official spoiler from Sierra Help states that you need to: Go to the L.A. County Morgue. You should see a news team questioning Sherry and the day will end. If this doesn’t happen, you have missed something. Did you get the newspaper clipping from the patrol car at the Impound Lot? Did you look at the clipping in your inventory? Did you go to the Bitty Kitty and question Electra and Barbie after showing them your badge? Did you show them both the shoe from Yo Money’s house? Did you question the proprietor of Ragin’ Records about the patrol car and the abandoned car? Did you give the bone from Griffith Park to the coroner?Turns out I didn’t show Barbie the shoe. After doing this I went back to the coroner’s office and the script triggered that had the reporter pestering the coroner’s assistant.You’ll pick up a lot of items throughout the game, and thankfully their usage is typically pretty obvious. There are very few item combination puzzles, but the mirror-based one is a pain in the ass.Near the end of the game you’ll need to peer around a corner to make sure a dog isn’t there, which you do by gluing a broken side-view mirror to a drumstick. This is not very obvious, but adventure game veterans know to just try combining everything with everything so once you put the glue on the drumstick and it works it sort of “clicks” that this will be a 3 way item combo puzzle.This is an extremely repetitive game but the shooting range sequence is a neat distraction. Unfortunately this mechanic isn’t actually used anywhere in the game. You just sort of do this to kill time.You do draw your gun a few times to make arrests, and there is a shotgun sequence at one point but the first person view of the shooting range doesn’t make an appearance anywhere else.The story progresses and you eventually uncover that there’s a cross dressing man killing people for … reasons? I don’t know if this wasn’t actually explained or if I just zoned out for the last couple days worth of content in this game but I never fully understood the motivations of the killer or why it was even all that material to the story as a whole.You’ll ultimately find the killer then neutralize them by spraying them in the face with a home made flamethrower. Then you get a medal of valor for being awesome at your job. Way to go Detective Carey - you’re my hero.The EndSierra should have left this series alone after Police Quest 3. I guess after Jim Walls left to join Tsunami Media (where he made Blue Force) they wanted to keep the series alive so they brought on Daryl F. Gates to fill the void.That void should have remained unfilled. Gates also consulted on Sierra’s SWAT series, which I equally didn’t enjoy playing …I don’t recommend this game. Go back and play any of PQ 1 through 3 instead.Game Information Game Police Quest: Open Season Developer Sierra On-Line Publisher Sierra On-Line Release Date November 1993 Systems Windows, DOS, Apple Macintosh System 7 Game Engine SCI My Playthrough How Long To Beat? 6.5 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 8 Story (25) 13 Experience (15) 5 Impact (10) 2   40% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Lure of the Temptress (Revolution Software) - 1992", "url": "/blog/2024/04/16/lure-of-the-temptress/", "categories": "Let's Adventure!", "tags": "adventure, Revolution Software, Virgin Interactive Entertainment, Virtual Theatre", "date": "2024-04-16 06:45:29 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Dallas Quest (Datasoft) ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Dallas Quest (Datasoft) - 1984Lure of the Temptress (Revolution Software) - 1992→ Police Quest: Open Season (Sierra On-Line) - 1993 Article 74 of 96 in this series.Lure of the Temptress is a point-and-click adventure game published by Virgin Interactive Entertainment in June 1992 for Atari ST, MS-DOS, and Amiga. It was the first game developed by Revolution Software and uses their proprietary Virtual Theatre engine.The medieval town of Turnvale has fallen into the hands of the evil sorceress Selena. She is controlling an army of an orc-like warrior race Skorl, who serve her with devotion. The Skorl hate humans and have terrorized the town and the nearby land. Diermot is an ordinary fellow who was captured by the Skorl and thrown into prison. His first task will be to escape. After gaining his freedom, Diermot will also have to find out how to liberate his entire homeland from the clutches of the villains.1The game starts off with a short intro sequence that lays out the story. This is presented as mostly static images followed by walls of text, but it gets the point across pretty succinctly and then turns control over to you.Interaction with the game world is intuitive for anyone familiar with adventure games. You move a cursor around the screen, which will change shape and call out action areas in the top left when you hover over them.Right-clicking on an action area will bring up a list of verbs you can select from to interact with it, and depending on the verb additional options will be made available.Though certain verbs such as GET, PULL, PUSH, and USE are typically always available, additional interaction options like TALK TO won’t appear unless you select an NPC, or OPEN if you select a door.The initial sequence in the prison where you start the game gets you acclimatized to the controls and introduces you to the first NPC, Ratpouch.This was also where this became immediately frustrating, as once we escaped the dungeon Ratpouch wouldn’t follow me. I think I was about 20 minutes into this game before I was looking on forums for help to get this stupid NPC to follow me.One interesting mechanic of this game is that certain NPCs will join you throughout the game, and once they do you can give them commands via the TELL verb. You can use this give them simple tasks, or chain together multiple commands to give them something more complex to do.Command chaining is required at one point in a cave where pulling certain skulls will open doors, but you need to coordinate these actions from different rooms. You’ll need to tell your companion NPC to first go to a different room, then pull a skull, then the other, then go to yet another room.Figuring out the proper sequence of commands can be a bit frustrating as regardless of what commands Diermot issues, the result is the NPC agreeing and heading off to perform the actions … even if they’re not going to be helpful.Navigating the game world is straightforward as all exits are easily identifiable. The cursor will change to an arrow if you can exit the current screen in that direction, and once a door has been opened, the cursor will change to an arrow when you hover over it as well.The game’s visual style is good, and though there aren’t really any cutscenes the odd time that one is presented it’s typically well done.Unlike many games of this era, death isn’t waiting around every corner. I only found a handful of situations in this game that would result in a game over but I still found myself saving frequently “just in case”.Though only used twice, there is a combat element to this game. When in the cave you find an axe and will have to fight a boar looking creature. I don’t know if this is also supposed to be a Skorl, but there’s really no details given and you kind of just get dropped into this sequence and are left to figure it out.Combat just involves moving the mouse to either a high/medium/low position in front of you then left/right clicking to attack or block. Clicking both mouse buttons jumps. You need to hit this boar thing about 6-7 times to kill it, and if he hits you that many times you’ll die.The story progresses through a series of interactions with characters in town, then in the castle. These interactions are navigated using dialog trees, which are pretty common for adventure games of this era.You’re typically presented with a number of options to choose from, with additional options being added based on other interactions you’ve had, items you’ve picked up or plot points you’ve completed.Characters have their own “schedules”, so they’ll roam around town and perform certain actions at certain times. If a character bumps into you or another NPC they’ll apologize and try to navigate around the obstacle.This can get a little funny when you have 2-3 characters on screen and you sort of stand between them all and watch them jostle around, constantly apologizing.These NPCs include the Skorl, and to advance to the castle you’ll need to talk to Mallin to get a clue that there’s a Skorl acting suspiciously. When this happens you need to find a Skorl NPC and follow him around until he goes into a shop, where you can spy on him through the window.When you learn the Skorl is going to take the shopkeeper to the castle in a barrel, you take his place to get transported there instead.The final sequence is pretty straightforward and involves some item combination puzzles and a timing puzzle whereby you have to TELL Minnow to pull a lever so you can turn a crank and lower the drawbridge.Crossing the drawbridge triggers the second combat sequence of the game with another boar looking thing. After defeating him you advance to Selena’s room, where she turns into a scorpion and you automatically throw the Eye of Gethryn at her and the game is done.Overall this game is not great, but it’s not bad. The puzzles weren’t overly complicated and there really aren’t that many areas to explore so the fact that there’s a lot of backtracking to complete fetch quests or find NPCs to talk to doesn’t get too frustrating.I had problems getting the music to work, but this is apparently also a common issue. I ended up sorting this out by changing my ScummVM configuration to use FluidSynth instead of the MT-32 emulator I typically used.This got the sound and music working, but the background music is typically just one or two notes repeated periodically. It’s actually pretty annoying so the effort I went to to get this fixed wasn’t really worth it.I did find the TELL mechanic innovative, though underused. Being able to direct multiple NPCs at once could have made for some interesting puzzle designs, but I’m satisfied with what I got so this isn’t really a complaint.Lure of the Temptress is free to download from ScummVM so there’s really no reason not to give it a go if you’re a fan of the genre. It’s relatively short and fairly straightforward to play, though if you’re looking for a much better title from Revolution Software I would point you to Beneath a Steel Sky instead 😉.Game Information Game Lure of the Temptress Developer Revolution Software Publisher Virgin Interactive Entertainment Release Date June 1992 Systems DOS, Amiga, Atari ST Game Engine Virtual Theatre My Playthrough How Long To Beat? 4 hours Version Played DOS via ScummVM Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 13 Story (25) 10 Experience (15) 5 Impact (10) 4   46% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Dallas Quest (Datasoft) - 1984", "url": "/blog/2024/03/29/the-dallas-quest/", "categories": "Let's Adventure!", "tags": "adventure, Datasoft", "date": "2024-03-29 09:45:36 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Codename: ICEMAN (Sierra...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Codename: ICEMAN (Sierra On-Line) - 1989Dallas Quest (Datasoft) - 1984→ Lure of the Temptress (Revolution Software) - 1992 Article 73 of 96 in this series.The Dallas Quest is a graphic adventure game based on the television soap opera Dallas. The game was programmed by James Garon for the TRS-80 Color Computer and published by Tandy Corporation in 1984. It was the second game in the “Animated Adventure” series, following The Sands of Egypt, and uses the same split-screen display. Datasoft published versions for the Apple II, Atari 8-bit family, and Commodore 64 in the same year.TRS-80 versionWhen a game is faithful to the poor writing and wildly implausible plot conventions of a soap opera, does that make it a bad game or an effective adaptation of its source material? In any case, this game situates you as a private investigator hired by Sue Ellen to find a map to hidden oil fields, in hopes to accumulate enough wealth to escape the sinister influence of J.R. Sue Ellen offers you a reward of $2 million for the map. You snoop around the grounds of the South Fork Ranch, superficially interacting with much-loved characters from the TV show and an assortment of extras from the animal kingdom. You must avoid J.R. who would like to put a stop to Sue Ellen’s plans. So far, so good.1Apple II versionYour travels ultimately lead you to the jungles around Playa Peligro, in South America, where you overcome a series of obstacles by using various techniques, but mostly by doping a friendly monkey with tobacco – a firm reminder that we’re descending beneath even soap opera plot conflicts and sitting squarely in an early-‘80s text adventure game, with all of the internal logic-twisting that entails.1Though my primary goal for this series I’m working through is to experience as many adventure games as possible, a secondary goal is to play them on as many different systems as possible. This is likely the only TRS-80 title I’ll have the opportunity to play, and getting up and running with trs80gp proved to be fairly straightforward.The game seems to follow the characters from the “Dallas” soap opera, which I have no familiarity. Though I’d heard the “Who shot J.R” catch phrase when I was a kid, I didn’t actually know it could be attributed to this show until many years later.Since I don’t know the characters or the show I’m going to gloss over this as the game really doesn’t do anything to introduce anyone. You sort of need to know who everyone is, but not having background or context doesn’t affect the gameplay much as there no character development as you progress.I never had a TRS-80, but I can honestly say I was impressed with the quality of the graphics of this game - even if there only seemed to be a couple colours ever used. If you listen to the game’s intro music you can make out that this is definitely a rendition of the TV show’s intro music.After getting the monkey to free me from the parachute the game craps outThough I was enjoying the TRS-80 playthrough, I could only go so far before the game errored out. I wasn’t sure if this was a bad disk image, emulation problem or something else but I never ended up figuring it out so wound up starting over again using an Apple II emulator and ROM instead.Switching over to the Apple II version of the game lets you once again experience the glory of the cracktro scene. Though not animated or interactive, I still appreciate the work that these programmers put into these digital taggings.I might do a deeper dive into this topic in the future, but for now … back to trying to find this map that leads to an oil field …This game is a lot goofier than I would have expected. Maybe this is what the writing on the show was like, but I have no real interest in finding out so feel free to let me know in the comments :)Apparently the solution to at least three puzzles in this game involves giving the monkey that’s following you tobacco - so make sure you close the pouch after you give it to him so you don’t drop any. You’ll be needing that tobacco before you know it ;)You’ll die occasionally, so make sure you remember to saveThe layout of the game is actually pretty intuitive. The screen is split between the text parser and scene rendering, and you also have a clue counter, move counter and list of exits. The exits are useful as at a glance you know what direction(s) you can go to leave any screen.You can type CLUE on most screens to get some help. I definitely found myself doing a “save-clue-load” loop on more than one occasion to move the game along.I’m guessing that the complexity of the puzzles later in the game are an artifact of the time at which this game was made. Nothing you’re required to do is grounded in sound logic and you typically end up resorting to the clue system or the walkthrough.Though I died … a lot … I actually didn’t find it to be nearly as bad as a Sierra Online game. The main challenge for me was that progressing through the game didn’t feel natural or intuitive.It’s possible my lack of familiarity with the property the game is based on might have contributed to this, but honestly I think this is just an artifact of early 80’s game design.The Dallas Quest is interesting in that it was an early adventure game based on a popular TV show (at the time). These types licensed tie-ins are usually reserved for movies (like Labyrinth: The Computer Game) so I guess that should speak to how popular this show must have been.Other than the intro music and a couple segments where you have to play a bugle there isn’t much in the way of sound effects or music. The graphics are decent (for the time) and I had a lot of fun mucking around with a TRS-80 emulator - but I don’t think there’s a modern audience for this title.Game Information Game Dallas Quest Developer Datasoft Publisher Datasoft Release Date 1984 Systems Commodore 64, Apple IIe, Atari 8-bit, TRS-80 Color Computer Game Engine   My Playthrough How Long To Beat? 2 hours Version Played TRS-80 via trs80gp / Apple II via microM8 Notes   ScoreSee here for a refresher on how we’re scoring these games. Graphics (10) 3 Sound (10) 1 Plot / Progression (25) 8 Characters / Development (15) 3 Gameplay / Experience (15) 3 Replayability (10) 0 Impact / Impression (10) 2 Bonus / Surprise (5) 0   20% Note that I overhauled my scoring criteria in August of 2024, and the score above is the revised score for this game.See below for the original score based on the original scoring criteria. Atmosphere (20) 8 Story (25) 9 Experience (15) 3 Impact (10) 2   31% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; &#8617;&#xfe0e;2 " }, { "title": "Codename: ICEMAN (Sierra On-Line) - 1989", "url": "/blog/2024/03/20/codename-iceman/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, SCI", "date": "2024-03-20 06:26:45 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← EcoQuest: The Search for...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← EcoQuest: The Search for Cetus (Sierra On-Line) - 1991Codename: ICEMAN (Sierra On-Line) - 1989→ Dallas Quest (Datasoft) - 1984 Article 72 of 96 in this series.Codename: ICEMAN is a graphical adventure game made with the SCI engine and published by the American computer game company Sierra On-Line in 1990. The lead designer was Jim Walls, who also created several Police Quest games.In the beginning of the 21st century, Earth is experiencing a global oil shortage. Surprisingly, Tunisia remains one of the few countries still in possession of large quantities of high-quality oil. USA and Soviet governments race each other in their attempts to purchase as much oil as possible. Finally, the Soviets take a step further and kidnap the US ambassador, hoping to provoke an international incident. Naval Officer Johnny Westland is sent to Tunisia with the order of rescuing the ambassador and preventing further escalation of the conflict.1Code-Name: Iceman is primarily an adventure game similar to Sierra’s other works in that genre. The player navigates the protagonist in eight different directions from third-person view, and types text commands to interact with the environment. The command LOOK may be typed separately and lead to different text descriptions depending on where on screen the protagonist is positioned. The game is similar to Police Quest series in that it relies on realistic procedures, in this case military instructions, first aid, etc. The player may reach dead ends and resort to restoring an earlier save if some of these procedures are not followed properly. In addition, a considerable portion of the game consists of submarine simulation, requiring the player to navigate a submarine and fight enemy craft.1I am a huge fan of the Police Quest series, and I had high expectations for this game since it was also designed by Jim Walls. The EGA artwork is beautiful and the text parser is very forgiving when you’re trying to describe how you want to interact with the current scene.Like other text parser games you need to type out every command, so if you want to pick something up you need to move Johnny close to the desired object and type PICK UP.Once you leave the first screen and venture off to the left you’ll meet a bunch of people and ask to join their volleyball game. The ball floats off and someone goes in after it … and then almost drowns.At this point you’re introduced to the first of many many many sequences in this game that rely heavily on following documented procedures laid out in the game’s manual.You need to perform CPR to save the girl that almost drowned, but this (like so many other parts of this game) needs to be done “by the book”.Make sure you actually read the manual before playing this gameThe story progresses and you’re called back to active duty. There’s been a kidnapping and you need to make your way to Tunisia to rescue the ambassador, which you’ll be responsible for aboard your nuclear submarine.Though teh story is interesting and definitely held my attention, I have no idea who the actual intended audience for this game was supposed to be. Nothing you do in this game is intuitive, and almost every game mechanic and sequence will require referring back to the manual.You’ll refer back to this item several times during the gameI’m not sure if it’s copy protection or not, but you find a code book in the game that you need to use to decipher messages the radio operator on the sub gives you. For example he might say something like “Washington: FI-D-B J-C-D”, which you then use the code book to translate too 17-4-8 9-6-4. You then refer to page X, row Y, word Z in the manual accordingly to get the word pair OCEAN RUSSIAN, which you type into the computer in your room to hopefully get the right message to progress with the game.If you follow procedure and inspect the equipment properly at some point before encountering an enemy ship you’ll be able to fix a broken cylinder, which you’ll have to properly machine first. This requires selecting the right dimensions from a series of prompts to ensure you’ve got everything “just right” before trying to fix the torpedo launch assembly (I think).If you don’t do this just right you can’t engage enemies and you’ll die when you get to that sequence.Expect to die often in this game. I’ve played a lot of Sierra Online games and this playthrough likely had the most deaths I’ve ever experienced.It’s not only because the game is hard, it’s that it’s tedious and the expectation that you’re following instructions perfectly at every given moment sets you up for constant failure.On the plus side you get different (and sometimes entertaining) failure messages, but it’s so easy to die in this game that it artificially inflates the play time by 3x or 4x.There’s one minigame that you must play as you need to win a bottle of rum, but to do this you play a dice game that takes forever to complete. It’s sort of like yahtzee, instead of points you just win rounds - and you need to win many many rounds to proceed.The game allows you to save and restore twice before the sailor claims you’re cheating and leaves - putting you in an unwinnable state.Since you’re the captain of a nuclear submarine you get to engage in a couple fight sequences throughout the game. You’re armed with a couple different types of torpedoes and decoys which you can use, but your supply is extremely limited so the battles can be extremely challenging.I almost gave up on this game after the first sequence a I ended up using all my decoys in the first battle and found myself unable to win the second fight without them. I was extremely close to just watching through a longplay video and taking screenshots of their playthrough instead …If you survive the sub battle, use the periscope and make sure to note down the locations of the island and oil rig, remember to pick up explosives in the sub, properly put on the dive gear and swim to the rig correctly without running out of air - you can place the explosives and blow up the rig.Assuming you make it this far you can then try to gain entry to Tunisia, which also involves an extremely convoluted sequence of steps.Death awaits you at every turn, screen and decision you make and the game will continue to be frustrating and put you in unwinnable situations as you muddle your way through to your CIA contact who gives you her apartment keys where you can find supplies to steal a delivery driver’s clothes and van.If you’ve made it this far without a walkthrough, my hat goes off to you because I was basically just playing the game with the walkthrough open at all times. As a result I was able to make it to the end, kill the ambassador’s kidnappers and save him.Thankfully you can just press F8 to skip this entire sequence and end the gameThe final sequence involves driving a van up a hill to a helicopter while terrorists chase you. I never made it around the first corner, and likely died a dozen times trying.If it wasn’t for the fact that the game lets you skip this sequence, I might have finally just said fuck it and moved on at this point - but I didn’t and was able to complete yet another entry in this journey I’ve undertaken.Codename: ICEMAN is not a fun game, and I have no clue who the intended audience for this was. I didn’t really enjoy this experience at all, and found that even using a walkthrough I had a hard time making progress most of the time.If this were a “sub simulator” title maybe I’d feel a little differently, but it’s an adventure game so my expectation was that you’d be able to explore and discover - but that’s not the case. Keep the manual open - or just use a walkthrough.Though the music is pretty good, and the story is compelling, the game itself is frustrating and punishing. I can’t imagine anyone actually likes this game and unless you’re a glutton for punishment I wouldn’t recommend it.Game Information Game Codename: ICEMAN Developer Sierra On-Line Publisher Sierra On-Line Release Date November 1989 Systems DOS, Amiga, Atari ST, Apple Macintosh Game Engine SCI My Playthrough How Long To Beat? 2.5 hours Version Played DOS via ScummVM Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 10 Story (25) 12 Experience (15) 3 Impact (10) 2   39% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; &#8617;&#xfe0e;2 " }, { "title": "MongoDB and Load Balancer Support", "url": "/blog/2024/03/08/mongodb-and-load-balancer-support/", "categories": "MongoDB", "tags": "mongodb, drivers, networking, connections, load-balancing", "date": "2024-03-08 08:37:25 -0500", "snippet": "OverviewA load balancer enhances your application’s scalability, availability, and performance by efficiently distributing traffic across multiple servers based on a number of algorithms and techni...", "content": "OverviewA load balancer enhances your application’s scalability, availability, and performance by efficiently distributing traffic across multiple servers based on a number of algorithms and techniques - but what about your database? MongoDB is a distributed database, but can it be placed behind a load balancer?Astute readers of MongoDB’s Node.js driver’s test README may have noticed at some point that there is mention of a testing methodology for load balancers, and as some in the community have found you can find public SERVER tickets that also allude to this functionality existing.Digging further you’ll find the Load Balancer Support specification for MongoDB’s drivers which states “To specify to the driver to operate in load balancing mode, a connection string option of loadBalanced=true MUST be added to the connection string” … but how do you actually make that work?In this post we’re going to explore why MongoDB nodes couldn’t previously be placed behind an L4 load balancer, and what changed in MongoDB 5.3 that may actually make this possible!ReplicationCoordination of data distribution and ensuring high availability is done via replication, which requires the cluster to be aware at all times which node is the primary and which are secondaries.As there can only be one primary, any application targeting the cluster will need to be aware of the current topology as well, as trying to write to a secondary will fail:require 'mongo'# connect directly to a secondary host in a local replica setclient = Mongo::Client.new('mongodb://localhost:27018/test?directConnection=true')collection = client[:foo]collection.insert_one bar: \"baz\"# =&gt; Mongo::Error::OperationFailure: [10107:NotWritablePrimary]: not primary (on localhost:27018, legacy retry, attempt 1)All official MongoDB drivers implement the Server Discovery and Monitoring specification to ensure applications can route requests to the appropriate servers (as outlined in the Server Selection specification). When you have a single application instance with a single connection pool (as outlined in the Connection Monitoring and Pooling specification) the number of connections to the cluster is easy to identify, but application deployment configurations can vary and scale.Thanks to MongoDB drivers all consistently providing connection monitoring and pooling functionality, external connection pooling solutions aren’t required (ex: Pgpool, PgBouncer). This allows applications built using MongoDB drivers to be resilient and scalable out of the box, but based on what we understand regarding the number of connections applications establish to MongoDB clusters it stands to reason that at a certain point as our application deployments increase, so will our connections.Can I use a load balancer though?Due to the need for these additional monitoring connections it has been difficult (impossible?) to place a load balancer between applications and a MongoDB replica set - though adventurous users have developed some interesting HAProxy configurations in the past to try and solve this problem. The problem you’d face is that though read requests can be routed to any available server, write requests must target the cluster primary.For the sake of argument you may ask “what if I had a 100% read workload?”. In that case you could put your hosts behind a load balancer, but you’ll likely run into issues as soon as you try and iterate a cursor (see getMore). Operations such as find or aggregate return a cursor (cursorId) which only exists on the originating server the command targeted. Attempting to execute a getMore on the wrong server will result in a CursorNotFound error being returned, which can be challenging to troubleshoot.ShardingFortunately, MongoDB already offers a form of “load balancing” for sharded clusters in the form of the sharded cluster query router (mongos).Assuming the cluster is sharded and if there is more than one mongos instance in the connection seed list, the driver determines which mongos is the “closest” (i.e. the member with the lowest average network round-trip-time) and calculates the latency window by adding the average round-trip-time of this “closest” mongos instance and the localThresholdMS. The driver will load balance randomly across the mongos instances that fall within the latency window.Can I use a load balancer though?Sharding introduces a routing layer between the application and the cluster members, which slightly simplifies how drivers route operations as there is no longer a need to track replica set state. You may think this would make placing a pool of mongos’ behind a load balancer straightforward, but as Craig Wilson describes in a 2013 blog post, similar issues will still arise when trying to iterate cursors. Note that though Craig’s post references the legacy opcodes, the situation would be the same if using newer drivers that leverage OP_MSG and OP_COMPRESSED.Note that the Server Selection specification calls out that “Cursor operations […] do not go through the server selection process. Cursor operations must be sent to the original server that received the query […]”. As this state information would not be tracked within the load balancer, issues would arise if a cursor operation were attempted and a balancer returned a different server where the cursor didn’t exist.operationCount-based Server SelectionAs it is a form of “load balancing” it’s worth just calling out that in an effort to alleviate runaway connection creation scenarios (“connection storms”) the drivers approximate an individual server’s load by tracking the number of concurrent operations that node is processing (operationCount) and then routing operations to servers with less load. This should reduce the number of new operations routed towards nodes that are busier and thus increase the number routed towards nodes that are servicing operations faster or are simply less busy.Load Balancer SupportWhen you see a ticket called “Enable Feature flag for Support for Deploying MongoDB behind a L4 Load Balancer” closed out as fixed for MongoDB6.0.0-rc0 and 5.3.0-rc3 it’s hard not to get excited - but what does this mean? After doing a bit of digging you’ll find that mongos’ now support a proxy protocol which is configured via the loadBalancerPort startup parameter.Given that there’s a driver specification, driver implementations (such as for the Node.js driver and Ruby driver) and server support it should be possible to configure a sharded cluster to utilize the proxy protocol. Before we proceed it’s worth calling out that this is not considered an officially supported configuration. Until MongoDB’s server team promotes this as a valid production configuration it should be considered experimental if used with a self-managed deployment.ConfigurationFor our test we’ll be configuring a single-shard sharded cluster with 5 mongos’ behind an HAProxy load balancer. Assuming you’re already familiar with HAProxy and load balancing concepts, we’ll be setting up a TCP proxy to perform roundrobin balancing.1. Setup a local sharded clusterFirst we need a local sharded cluster, which we’ll provision using m - the MongoDB version manager and mtools.m 7.0.6-entmlaunch init --replicaset --nodes 3 --shards 1 --csrs --mongos 5 --binarypath $(m bin 7.0.6-ent) --bind_ip_allmlaunch stopThis configuration will yield a single shard with 3 nodes, a config server replica set and 5 mongos’. Once started, we immediately stop the cluster as some additional (manual) configuration is required.2. Update the cluster configuration to enable proxy protocolSince we need to modify the startup parameters for our mongos’ we’ll update the configuration file that mlaunch (part of mtools) uses.sed -i '' 's/ --port 27017 / --port 27017 --setParameter loadBalancerPort=37017 /g' data/.mlaunch_startupsed -i '' 's/ --port 27018 / --port 27018 --setParameter loadBalancerPort=37018 /g' data/.mlaunch_startupsed -i '' 's/ --port 27019 / --port 27019 --setParameter loadBalancerPort=37019 /g' data/.mlaunch_startupsed -i '' 's/ --port 27020 / --port 27020 --setParameter loadBalancerPort=37020 /g' data/.mlaunch_startupsed -i '' 's/ --port 27021 / --port 27021 --setParameter loadBalancerPort=37021 /g' data/.mlaunch_startupmlaunch startThe above commands just append a setParameter call as a command line option so we can configure the loadBalancerPort parameter of each mongos. Once completed we restart the cluster.3. Configure HAproxyAs we’re using HAproxy for our test we’ll to build out our custom configuration. The example below will write to a mongodb-lb.conf file, which will then be read by haproxy to create our load balanced endpoint. I’m not going to go into detail as to what all the options below mean, but if you want to investigate further see HAproxy’s configuration manual.tee mongodb-lb.conf &gt; /dev/null &lt;&lt;EOTglobal log stdout local0 debug maxconn 4096defaults log global mode tcp timeout connect 5000ms timeout client 30000ms timeout server 30000ms retries 3default-server on-error fastinter error-limit 3 inter 3000ms fastinter 1000ms downinter 300s fall 3frontend stats mode http bind *:8404 stats enable stats uri /stats stats refresh 10s stats admin if LOCALHOSTlisten mongos bind *:37000 option tcplog balance roundrobin server mongos01 *:37017 check send-proxy-v2 server mongos02 *:37018 check send-proxy-v2 server mongos03 *:37019 check send-proxy-v2 server mongos04 *:37020 check send-proxy-v2 server mongos05 *:37021 check send-proxy-v2EOThaproxy -f mongodb-lb.conf &gt; haproxy.log 2&gt;&amp;1 &amp;To make monitoring a little easier you’ll notice we’ve enabled HAProxy’s stats frontend.4. Test application connectivity through the load balancerSince the MongoDB Shell uses the Node.js driver internally we can use to validate if our load balancer is configured properly. We’ve setup HAProxy to listen on port 37000, so we should be able to connect to that directly:mongosh --quiet \"mongodb://localhost:37000/test\"MongoServerSelectionError: The server is being accessed through a load balancer, but this driver does not have load balancing enabledSeems the driver knows we’re trying to connect to a load balancer, but we’re missing an option. This is where the loadBalanced=true option comes into play. Appending this to our connection string will allow us to run an arbitrary workload successfully:mongosh --quiet \"mongodb://localhost:37000/test?loadBalanced=true\" --eval \"while(true) { result = db.foo.insertOne({ d: new Date() }); print(result); sleep(500); }\"{ acknowledged: true, insertedId: ObjectId('65eb13b122c34af3037c094d')}{ acknowledged: true, insertedId: ObjectId('65eb13b222c34af3037c094e')}{ acknowledged: true, insertedId: ObjectId('65eb13b222c34af3037c094f')}...Success! It is worth noting though that this configuration works for us locally as we have direct control of the mongos processes startup parameters. If you have a MongoDB Atlas sharded cluster, the mongos’ cannot manually be placed behind a load balancer as startup parameter configuration access is not available!ConclusionNow that we can successfully connect to our load balanced endpoint it’s worth doing a little chaos testing to see how workloads react. The script I shared previously just loops infinitely inserting documents into a collection - but what happens if we kill one or two mongos processes?mlaunch stop 27017mlaunch stop 27019mlaunch listDetected mongod version: 7.0.6PROCESS PORT STATUS PIDmongos 27017 down -mongos 27018 running 28006mongos 27019 down -mongos 27020 running 28013mongos 27021 running 28016config server 27025 running 27979shard01 mongod 27022 running 27994 mongod 27023 running 27998 mongod 27024 running 27991Using mlaunch I just stopped two of the query routers and waited for a while. The inserts kept on - inserting - so I guess we can consider that a successful test. Note that this is obviously not extensive and should not be taken as a guarantee of any sort, but if this is a configuration that interests you give it a shot and let me know what you find.Don’t forget that you have a web-based stats UI configured that you can refer to 😉." }, { "title": "EcoQuest: The Search for Cetus (Sierra On-Line) - 1991", "url": "/blog/2024/02/28/ecoquest/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, SCI", "date": "2024-02-28 06:36:42 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Harvester (DigiFX Intera...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Harvester (DigiFX Interactive) - 1996EcoQuest: The Search for Cetus (Sierra On-Line) - 1991→ Codename: ICEMAN (Sierra On-Line) - 1989 Article 71 of 96 in this series.EcoQuest: The Search for Cetus is an educational adventure designed to teach about the importance of environmental ethics.The player is cast into the role of Adam, the twelve-year-old son of the famous ecologist Noah Greene. One day, his father rescues a dolphin from an abandoned fish net. As Adam becomes more friendly with the creature, he is amazed to discover that the dolphin can talk! Adam finds out that his new friend is Delphineus, the messenger of the whale king Cetus. As a qualified scuba diver, Adam is chosen to venture into the underwater kingdom of animals known as Eluria, and help its inhabitants.1EcoQuest uses Sierra’s SCI1.1 game engine, so the typical actions are accessible for you to cycle through (MOVE, LOOK, GET, TALK), but unlike any other Sierra title you also have a RECYCLE action available.As this is effectively an “Edutainment” title the player is meant to learn as the game progresses, and what Sierra’s trying to teach you seems to be how humans littering and polluting can effect the environment.All that pollution can’t be good for anything living in the water right?Once you meet Delphineus, figure out how to get the diving gear and make your way out into the ocean the game really begins. Delphineus fills you in on some backstory, including that Cetus - the Great Whale King - is missing.He’ll take you to the underwater kingdom of Eluria, but first you need to get acclimatized to the two moving around the game world. Unlike most adventure games that take place on land, you’ll be in the water for the vast majority of this game so you get around by swimming.This is no different from walking other than on certain screens where you can surface, you’ll also be able to dive back down underwater.You’ll use this bag a lot throughout the gameAs with most Sierra Online games, there is a point system that rewards you for taking various actions as you progress. In EcoQuest one of the main ways you get points is by recycling garbage.After picking up the garbage bag on the first screen of the game you’ll have a RECYCLE action available for use, which when clicked on a piece of garbage will instruct Adam to dispose of it.Recycling adds nothing to the game and is just busywork for the player to get more points, but I’m assuming was Sierra’s way of trying to teach kids to be mindful of the environment.Once you reach the kingdom of Eluria the main plot points will unfold. First you’ll be introduced to the game’s main antagonist, who appears to be a giant manta ray. He just sort of swims by overhead but Delphineus lets you know this is someone to be afraid of.Second, you’ll learn there’s a prophecy that a child of man would come and save Eluria. How convenient seeing as that’s exactly what you are …The artwork in this game is excellent, and really draws you into the game world. Even though EcoQuest is more of a “beginner” adventure, it’s very approachable and has a good enough story to entice you to continue playing.The music and sound effects aren’t great, but aren’t terrible either. The background music samples are typically short, so if you’re on the same screen for a while trying to solve a puzzle it’s very noticeable how often the samples loop.In the CD version these interactions are fully voicedIf you play the CD version of the game then everything is voice acted, and the voice acting isn’t bad. A number of the characters you’ll meet in Eluria definitely feel like they were inspired by Disney’s “The Little Mermaid”, and the voice actors leaned into their their depictions of these characters pretty heavily.Though this can come across as campy, I really enjoyed it.As far as gameplay is concerned, most of the game is just basic fetch quests and item combination puzzles. Every screen plays out about the same as you’ll have to (a) talk to someone, (b) pick up a bunch of stuff, (c) maybe recycle some garbage, (d) maybe use some items.Unlike other Sierra games, EcoQuest is somewhat unique as there are no unwinnable states and I’m fairly certain you also can’t die.This is the solution to one of the last puzzles in the gameThe item combination puzzles are a bit more difficult, but the game does a pretty good job of shoving the solution in your face - as long as you’re paying attention.There are no dead ends and no red herrings, so as long as you pick up everything the solution to most puzzles will be pretty obvious as it will typically involving using something or giving something to someone.To add some variety to the gameplay there are a couple puzzles you’ll need to solve as well. The sliding tile puzzle is a pain in the ass, but if you click the Help button the game will automatically play itself.Clicking Help repeatedly will just keep sliding the tiles for you until the puzzle is solved, so if like me you really don’t like these types of puzzles you’ll appreciate this type of quality of life feature in the game.The other puzzle just involves rotating 9 sections of a column in a specific order until they lock into place. This one is pretty straightforward and can be brute forced through trial and error relatively quickly.Near the end of the game you’ll find some radioactive waste that you’ll need to get cleaned up. This is done by floating a transmitter up to the surface to alert a salvage crew as to the location of the waste.The solution here is an item combination puzzle which the game taught you about on the first screen of the game. Hopefully you were paying attention …Once you get that cleaned up Delphineus will be captured by the manta ray and you’ll need to save him. You’ll also find Cetus, who appears to have been harpooned by a sunken fishing boat. You’ll need to save him, which will involve cutting the head of the harpoon off from inside his mouth. Good think you found a hacksaw a few screens back.You’ll free Cetus, free Delphineus and get into a showdown with the manta ray. Why the manta ray is evil, or what it’s motivation is to torment the citizens of Eluria aren’t really explained, but you’re going to have to deal with him to finish the game.Stabbing the manta ray with a lion fish spine will stun it enough for Cetus to whack it with it’s tail. I think you ultimately kill the manta ray, which seems at odds with the more pacifist messaging throughout this game.EcoQuest is definitely targeted at a younger player, and it does a good job of holding your hand through most of the game. The end result is that it’s really not all that much fun to play as there’s limited variety to the types of interactions you’ll have with the game world.The game is also incredibly short, which may also be due to the target audience.I’m pretty sure I played this game briefly around the time it came out and didn’t find it all that engaging or entertaining. My opinion hasn’t changed all that much now that I’ve actually completed the game, but I would recommend playing the CD version if you actually want to try this game as the voice acting definitely enhances the play experience.Game Information Game EcoQuest: The Search for Cetus Developer Sierra On-Line Publisher Sierra On-Line Release Date 1991 Systems DOS Game Engine SCI My Playthrough How Long To Beat? 2.5 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 10 Story (25) 7 Experience (15) 5 Impact (10) 3   36% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Harvester (DigiFX Interactive) - 1996", "url": "/blog/2024/02/23/harvester/", "categories": "Let's Adventure!", "tags": "adventure, DigiFX Interactive, Merit Studios, Virgin Interactive", "date": "2024-02-23 04:49:50 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Space Quest III: The Pir...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Space Quest III: The Pirates of Pestulon (Sierra On-Line) - 1989Harvester (DigiFX Interactive) - 1996→ EcoQuest: The Search for Cetus (Sierra On-Line) - 1991 Article 70 of 96 in this series.Harvester is a 1996 point-and-click adventure game written and directed by Gilbert P. Austin, known for its violent content, cult following, and examination of violence. Players take on the role of Steve Mason, an eighteen-year-old man who awakens in a Midwestern town in 1953 with no memory of who he is and a vague sense he does not belong there. Over the course of the next week, he is coerced or manipulated into performing a series of seemingly mundane tasks with increasingly violent consequences at the behest of “The Order of the Harvest Moon,” a cult-like organization which seems to dominate the town and which promises to reveal the truth about Steve and his presence in Harvest.Investigating grisly murders is hungry work for this small town sheriffSimilar to Phantasmagoria which came out a year earlier, Harvester is an adventure horror FMV game. Having played through a few FMV titles in this series already my expectations for the quality of the acting and pre-rendered cutscenes was immediately very low.You play the part of Steve Mason, who appears to have amnesia and possibly from the future. Steve is played by Kurt Kistler, who’s acting is not great, but given this is a mid-90s FMV game I would consider his performance acceptable. Kurt’s lack of acting chops is due to this being his first acting gig (he played keyboard in a band previously).The story is dark and compelling right from the get-go, even if it seems thin and you’re just sort of dropped into this world without any direction. You have free reign to move around the game world, which is split into four quadrants - all of which are accessible.Hovering over locations will tell you what they are, and clicking on them will take you there instantly. This is preferable to long, drawn out navigation sequences though it might have been nice to have some animation on this screen so it’s not so bland.Each location you visit will have characters you can interact with, and each interaction will unfold a bit more of the plot and give you more background about the characters, their relationships and the town.At the center of town is the Lodge, which apparently everyone wants to be a member of and seems to really want you to join as well.Mom is a stereotypical 50’s homebodyThe first characters you’ll meet are your mom and brother. This is where you initially learn how to interact with characters, as well as a bit more about the town of Harvest and the fact that you’re engaged and apparently getting married in a few weeks.These interactions take the form of typical dialogue tree selections, though there’s always an OTHER option where you can type anything. Other than typing out the options you can select from the tree, the only time I found this “useful” was to ask Mr. Pottsdam about the “peephole” in the bathroom …Stephanie - your future bride - also has amnesia. What a coincidence! Similar to you she has no idea who her “family” is or how she got here, but her dad really wants the two of you to get married because your father owns the local meat processing plant and this guy apparently loves meat.Your initial interactions with Mr. Pottsdam mention “meat” way too often. Also, of all the voice acting in this game, Mr. Pottsdam’s has to be my favourite.They really lean into the gay stereotypes at the fire stationThe game takes place over the course of several days - typically both day and night. In order to progress through the game you’ll need to complete various tasks to trigger the transition from day to night.This will include talking to various characters and completing many, many fetch quests.This game really wants you to know it’s for a mature audienceThe puzzles in Harvester vary from very obvious to extremely obtuse. It’s very rare that you’ll be able to complete a puzzle by only fetching a single item. As a result, a good chunk of this game will involve hunting for items, typical inventory management tasks and attempting item combinations.The more beat up Steve looks, the closer to a game over you areUnlike typical point and click adventure games, Harvester allows you to use weapons as there are fights in this game. Since you can take damage, you also have a health indicator in your inventory showing how close to death you are.Though this is sort of an interesting mechanic, it’s not all that useful as you typically won’t know how much damage you can take until it’s too late anyway and you’ve already died.Get used to seeing this screenSpeaking of death, you will die so very much in this game - typically by either picking the wrong conversation option, waiting too long during a timed sequence or just getting your ass kicked by a monster (though this is mostly later in the game).As you have access to weapons pretty much throughout the game and you can attack almost every NPC, if you kill most of them you’ll end up in jail - which is another game over scenario.A series of fetch quests or a simple act of murder - what would you pick?You typically have multiple ways to solve a fetch quest (which is what makes up most of the puzzles in the game). Certain scenarios allow you to either finish the quest for the person that requested it, or kill that person and just take the item.This can be a great way to breeze through longer sections of this game, but be careful as this won’t always work and may land you in jail.Your future “father in law” is a piece of shitThe subject matter in this game isn’t for the faint of heart. Not only is there a lot of violence and gore, but there are allusions to child molestation and eventually a distraught mother killing herself and her daughter.Though it might seem a bit excessive, or just there for the “shock factor” it actually does help advance the plot and reinforce the central themes that develop Steve’s character towards the endgame.It’s hard to review this game without bringing up the fact that the actor playing Steve got into a bit of trouble, but I don’t think his role in this game was foreshadowing future events in any way.Your ultimate goal is to gain entry into the lodge, which you can only do after performing a series of fetch quests, robberies and acts of vandalism requested by The Sergeant at Arms - who only communicates with you telepathically for some reason that’s never explained.As you progress through these quests your interactions with the townspeople gets weirder and weirder. You’ll find that completing the quests results in the people you were stealing from dying as a result of your actions.It sort of feels like desensitizing Steve to the deaths of these people is maybe the point …Yuppers, that key is hidden inside that guy’s headOnce you get into the lodge you’ll have to navigate through three floors of puzzles and monsters. There is A LOT of combat in this area, and typically these just involve you picking one of the melee weapons at your disposal and mashing the left mouse button.There are some healing items scattered around that you can take if you take too much damage, but realistically this sequence of the game (that is about the last third of the game really) requires saving on every screen and reloading if you take too much damage.Harvester gives you 25 save slots, and believe me you’ll need all of them for the lodge sequence. Even using a walkthrough I died a hell of a lot.The first floor isn’t too bad, though some of the puzzles require significant mental gymnastics to solve. Luckily when you enter the lodge all of your inventory items are cleared out so you only need to worry about using and combining the new items you find along the way.As you move deeper and deeper into the lodge you find that each room (called a “Temple”) exists to teach you some sort of “lesson” (or the opposite of what you’d expect to learn). As you wind your way through these rooms up to the final confrontation it turns out you and Stephanie have been trapped in a VR simulation and you’re the only two real people in this world.You needed a skull and spinal cord to get into the lodge, and you need the same to get out …The ultimate goal has been to train you to be a serial killer, and your final test is to either kill Stephanie in the simulation so she dies in real life - or marry her in the sim and the two of you die in real life.You get to choose your own ending here, and since you are able to save the game before making this final selection you have the opportunity to experience both endgames pretty easily.Honestly, I thought I was going to love this game, and for about the first half of my play through - I did. I liked the setting, I liked the characters, I found the plot was progressing well and I really wanted to know more about the lodge.The problem was once you get through the first half of the game it sort of seems like they ran out of content to keep the story progressing towards the conclusion. The whole “training you to be a serial killer” plot didn’t really make any sense, and though you can force yourself to see how it fits into the narrative … it’s definitely forced.This game goes for shock and gore whenever possibleThough this game likely went under that radar for a lot of adventure gamers at the time, there were some very vocal and dedicated fans. For example, if you want to learn a bit more about the misadventures of Kurt Kistler you can check out “Harvester Show #10: The Pedophile We All Know”.If you are a fan of adventure horror games and have a soft-spot for FMV titles then Harvester should be right up your alley. If that extremely specific combination of genres doesn’t tickle your fancy though, this game probably isn’t for you.Game Information Game Harvester Developer DigiFX Interactive Publisher Merit Studios, Virgin Interactive Release Date August 31, 1996 Systems DOS Game Engine   My Playthrough How Long To Beat? 7 hours Version Played DOS via DOSBox-X Notes Manual, Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 14 Story (25) 13 Experience (15) 6 Impact (10) 3   51% Gallery" }, { "title": "Space Quest III: The Pirates of Pestulon (Sierra On-Line) - 1989", "url": "/blog/2024/02/16/space-quest-iii/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, SCI", "date": "2024-02-16 16:27:05 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← The Adventures of Willy ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← The Adventures of Willy Beamish (Dynamix) - 1991Space Quest III: The Pirates of Pestulon (Sierra On-Line) - 1989→ Harvester (DigiFX Interactive) - 1996 Article 69 of 96 in this series.Space Quest III: The Pirates of Pestulon is a 1989 graphic adventure game by Sierra On-Line, and the third game in the Space Quest series. Players assume the role of Roger Wilco, a lowly space janitor, who becomes involved in rescuing a pair of computer programmers from a sinister video game company. The game received positive reviews from critics, and contributed further to the series’ commercial success for Sierra.Narrowly escaping the events of Space Quest II: Vohaul’s Revenge, Roger Wilco’s escape pod floats through space. As just another metallic item of junk, it’s soon picked up by an interstellar garbage hauler. Waking up in a pile of trash, quite familiar for this janitor-turned-hero, Roger Wilco must somehow escape. Once given access to the rest of the galaxy, he’ll soon find himself having to avoid a collections cyborg for payments overdue, dealing with the corporate prison of software company Scummsoft, and having to digest the greasy food from the galaxy’s finest hamburger joint.1Like Police Quest II and Leisure Suit Larry II, Space Quest III uses Sierra’s SCI0 engine, which requires you to interact with the game world via a text parser. Though you have a mouse cursor ever-present, this really only allows you to move around the screen the same way the arrow keys on the keyboard would.The text parser allows you to enter noun/verb combinations and experience the results of your request via cheeky feedback from the game. Though this control mechanism may be a bit foreign to modern gamers, it’s incredibly well done in Space Quest III, and you’re encouraged to try everything to as you’ll almost always be rewarded with either a funny or snarky response.If you’re interested in the internals of the engine I’d highly recommend giving the blog post “Sierra Creative Interpreter – Scripts” a read, as it’s by one of the ScummVM authors (Chris Benshoof\taka. sluicebox) who’s invested heavily in tooling and decompilation of SCI resources and scripts.As you navigate the game world you’ll be treated to decent sound effects and atmospheric music. The best way to experience the sound effects and music in this game is by emulating the Roland MT-32.It’s relatively easy to do this in ScummVM if you know where to find the the necessary ROMs to get MT-32 emulation working. Though you had Adlib and Soundblaster available at the time, MT-32 was just so much better. Check out this playlist on YouTube to get a sense of how much better the audio sounded using this device!The first third of the game has you trying to escape from a Terminator-like cyborg that is out to collect on a dept Roger incurred in the previous game. After you find a ship in the initial stage and set a course for Phleebhut, the cyborg follows him there and attempts to hunt him down and capture him.You’ve only got a limited amount of “time” to figure out how to defeat the cyborg (and steal the invisibility belt that he has). While you try to do this you’ll find myriad ways in which to get yourself killed.You know you want to watch a 10 minute video compilation of death scenes from SQ3.Since this is a Sierra game, and death literally awaits you around every corner and on every screen it’s very much appreciated how much effort went into scripting the death sequences. Though I typically spend a disproportionate amount of time dying on purpose playing these games just to see what happens, I think I enjoyed the outcome more than usual with Space Quest III.Once you escape the cyborg, you’ll travel to Monolith Burger. This section is pretty short as all you need to do is order a happy meal (or value meal or something like that), eat it to find a decoder ring - then play the Astro Chicken game. This game can be a pain in the ass as you have to land the falling chicken on the landing pad 10 times in a row without it bouncing off. This may sound easy at first, but timing the deceleration of the chicken while maneuvering it across the screen proved to be a lot more challenging than I expected.After you succeed (or fail enough times that the game feels sorry for you) you’ll be presented with an encoded message. Lucky for you you just found a decoder ring, which you can use to find a secret message from the programmers of Astro Chicken - the two guys from Andromeda.Turns out the two guys are being held captive on Pestulon, which is a moon of Ortega. First you need to navigate to Ortega, disable the shield generator around Pestulon, fly to Pestulon and deal with the pirates. What kind of pirates are we talking about? Well, that would be software pirates!Not what I expected based on the title of the gameElmo Pug, the leader of the “Pirates of Pestulon” (aka. ScumSoft) abducted the 2 guys to force them to design awful games they can flood the galaxy with. There is definitely some light-hearted jabbing at LucasArts with some of the references here, but that just makes me appreciate the writing of this game even more.The final sequence of the game involves a couple of mini games. You first have to defeat Elmo Pug in a rock ‘em sock ‘em robots style battle, then escape on your ship and win a space battle. Though not overly difficult, you can lose during both of these sequences, so make sure you have save games before each begin so you can reload when you inevitably die the first few times.After the space battle you fly the 2 guys to Earth and land in the parking lot of Sierra Online, where Ken Williams hires the 2 guys to work for him as programmers.As I play through these games the main thing I typically look for is narrative strength. The graphics don’t need to be great, the music can be so-so and the input mechanics can be clunky, but if the experience of actually playing through the adventure is enjoyable I’ll rate it a lot higher.Space Quest III is very short, but the writing is funny and the pacing is good. You don’t really need a walkthrough because every time you die you’ll be presented with a popup that typically (a) makes fun of you for dying and (b) nudges you in the right direction to avoid dying again.Though I rated Space Quest: The Sarien Encounter pretty highly, it’s primitive and less accessible than this sequel. If you want to try your hand at a parser-driven adventure game I’d highly recommend Space Quest III.Game Information Game Space Quest III: The Pirates of Pestulon Developer Sierra On-Line Publisher Sierra On-Line Release Date March 24, 1989 Systems DOS, Macintosh, Amiga, Atari ST Game Engine SCI My Playthrough How Long To Beat? 3 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 15 Story (25) 19 Experience (15) 11 Impact (10) 4   70% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "The Adventures of Willy Beamish (Dynamix) - 1991", "url": "/blog/2024/02/12/the-adventures-of-willy-beamish/", "categories": "Let's Adventure!", "tags": "adventure, Dynamix, Sierra On-Line, DGDS", "date": "2024-02-12 19:48:56 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Loom (Lucasfilm Games) -...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Loom (Lucasfilm Games) - 1990The Adventures of Willy Beamish (Dynamix) - 1991→ Space Quest III: The Pirates of Pestulon (Sierra On-Line) - 1989 Article 68 of 96 in this series.The Adventures of Willy Beamish is a graphic adventure game developed by Dynamix and published in 1991 by Sierra On-Line. The game pioneered the use of in-game graphics drawn to resemble classic hand-drawn cartoon animation. It was initially released for MS-DOS and the Amiga and was ported to the Sega CD in 1993.You play Willy Beamish, an eight-year-old kid who is just trying to get through life without losing his lunch money. But he’ll have to deal with parents, teachers, babysitters, and bratty sisters. The player must solve different puzzles to ensure Willy can progress, get out of trouble and generally avoid ending up grounded.1He’s talking about his frog “Horny”The in-game time progresses even if no action is taken. This means many puzzles have to be solved in a certain time frame or rely on being in the right place at the right time. A special aspect of this game is the bar which shows Willy’s relationship with his parents. It gets affected by the way certain situations are resolved, e.g. it increases if Willy refuses to play with his sister, and when it is full they send Willy to a military school and the game is lost.1If that meter hits “Cadet School” it’s game over … literallyAvoiding getting in trouble is pretty easy as decisions in this game are typically made during dialogue tree option selection. Almost every character you interact with will present Willy with an option, and one of those options will be the “wrong” one which effects your Trouble Meter.This will happen on almost every screen of the game for about the first half of the game, so save early - save often.For 1991, this game looks great. The cartoony style really draws you into the game world and gives the characters some emotional depth during conversations. The colours are mostly bright and vibrant and complement the youthful innocence of Willy and his friends. This is in stark contrast to Dynamix’s previous title, Rise of the Dragon.Your mom pawns your sister off on you a lot it seemsThe story revolves around Willy trying to raise money for his entry fee into the Nintari world tournament (get it - “Nintendo + Atari” - so clever …). The family thinks his dad is about to get a huge promotion, but it turns out he gets laid off instead and they’ll need to live a little leaner until he finds work again. Though Willy can do some odd jobs around the house for money like mowing the lawn, walking the dog or washing the car - he’ll need to do something bigger for the $2500 he needs.Willy has a pet frog (named “Horny”) that’s with him throughout the game, and there’s a frog-jumping competition on the second or third day of the game with a convenient grand prize of $2500. Your main goal is to get Horny trained up and entered into the competition so that he can compete.The frog jumping competition is one of 2 minigames, though it’s sort of “on rails”. If you figure out that you can feed Horny cola to tweak him out, he’ll win first prize but random drug testing will surface that he was “chemically enhanced” and you’ll lose the game. Otherwise you’ll lose to Turbo Frog - which is what’s supposed to happen anyway - and Horny will escape into the Tootsweet factory to progress the plot.The minigame here is just a distraction and isn’t really a “game”. It’s just a bit of button mashing between story dumps and isn’t really fun to “play” - it’s just there.The secondary plot of the game revolves around the Tootsweet owners trying to take over the city you live in. Willy’s dad will apply for a job as their head of PR and get that, only to be thrown under the bus right away as the fall guy for the company. There’s a plumbers strike going on as well which is causing the water to turn brown, so you’ll need to resolve that as well I guess.The inventory screen serves two purposes in this game: item storage and time management. Since there are scripted events that take place on various days you have the option of advancing time here to trigger those events. Honestly once I figured this out I’d just save my game at the beginning of the day and just advance time a bunch to see what triggered when on various screens - then reload and proceed incrementally if I found anything.You sort of figure this mechanic out for yourself, as the game manual doesn’t allude to time-based events. Luckily you don’t really need to worry about this as there are only a couple of these events throughout the game, such as Willy having to go to bed at the end of the day.Timing plays a bigger part in puzzles though as a number of these involve using items or pushing buttons in a specific order within a very short amount of time. This is where I died the most, as there certain puzzle sequences that you need to do extremely quickly or it’s game over.Solve this quickly or the guards will catch youThough frustrating at times, I did appreciate that these “real time” puzzles added a sense of urgency. Typically adventure games would give you infinite time to pick and combine items, select a target and execute some action. Willy generally has a few seconds to react if the puzzle he’s trying to solve involves escaping from a dangerous situation.Most puzzles are pretty straightforward, though near the end of the game you’ll need to get a bouncer to leave his post at the door of the bar so you can go in. The solution to this puzzle is extremely convoluted and requires you to call a psychic hotline, record the message, call the bar, ask for the bouncer and play the message. None of this is intuitive, and I’m pretty sure without a walkthrough most people wouldn’t muddle their way through this today.If you’re playing this game for the first time would you know that “432-SIGN” could be translated to “432-7446”? Remember pay phones? Remember phone numbers that would use the lettering on the numbers to form words? I’m sure they still exist …There are maybe a dozen locations you can visit throughout the game, with some only becoming available on later days. You have limited time to explore as time continues to advance, and eventually Willy will have to go home to bed, but I didn’t find myself getting lost or stuck at any point.Basically you just go to each location, talk to whoever is there, pick up anything that isn’t nailed down and try to use everything on … everything. It’s not always obvious what item combinations are required so there is a lot of trial and error involved.You’ll also want to right-click multiple times on each item you pick up as some of them have a third function on certain screens.Occasionally an item will allow you to shoot or throw it, in which case the cursor will be presented as a target or crosshair. I’m pretty sure this only occurs twice, but if you don’t know this is the case it can be frustrating as you die over and over trying to “use” an item in a situation when you actually need to “shoot” it.You win the Nintari championship and call it a dayOverall I didn’t really like this game as much as I thought I would. I’m a huge fan of Rise of the Dragon, and I generally like their VCR interface they use for their games. The background music is fitting and helps enhance the gameplay, but the story is pretty thin and the pacing of the game is slowed by convoluted puzzles.I played the original DOS release (not the CD ROM version) so I’m not sure if the voice acting they added made any meaningful difference to the experience. I thought the writing overall was pretty good and the general vibe of the game was “saturday morning cartoon come to life”, which I think is what they were going for.If you’re looking for a goofy game starring a 9 year old kid and his frog, The Adventures of Willy Beamish has you covered. Just be prepared to reach for a walkthrough …Game Information Game The Adventures of Willy Beamish Developer Dynamix Publisher Sierra On-Line Release Date 1991 Systems Amiga, DOS, Macintosh, Sega CD Game Engine DGDS My Playthrough How Long To Beat? 4.5 hours Version Played DOS via DOSBox-X Notes Manual, Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 13 Story (25) 16 Experience (15) 8 Impact (10) 4   59% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; &#8617;&#xfe0e;2 " }, { "title": "Loom (Lucasfilm Games) - 1990", "url": "/blog/2024/02/06/loom/", "categories": "Let's Adventure!", "tags": "adventure, LucasArts, SCUMM", "date": "2024-02-06 16:24:23 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Innocent Until Caught (D...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Innocent Until Caught (Divide By Zero) - 1993Loom (Lucasfilm Games) - 1990→ The Adventures of Willy Beamish (Dynamix) - 1991 Article 67 of 96 in this series.Loom is a 1990 fantasy-themed graphic adventure game by Lucasfilm Games. The project was led by Brian Moriarty, a former Infocom employee and author of classic text adventures Wishbringer (1985), Trinity (1986), and Beyond Zork (1987). It was the fourth game to use the SCUMM adventure game engine, and the first of those to avoid the verb–object interface introduced in Maniac Mansion.Bobbin Threadbare is a young man from the Guild of Weavers. He is outcast from the guild and blamed for the lack of prosperity in recent times, though he does not know why. On his seventeenth birthday he is summoned by the Elders of the guild, who intend to decide his fate. However, shortly thereafter all the inhabitants of the village except Bobbin are turned into swans. Bobbin finds out that he is the child of the Great Loom, found by Lady Cygna, who tried to use the loom’s powers to save the guild. Bobbin’s stepmother Dame Hetchel teaches him the art of weaving magical drafts, and Bobbin embarks on a journey to find the lost flock, and the answers to his questions.1Loom is an adventure game that sets itself apart from other titles in the genre through its unique gameplay system: the player character does not carry items around, but rather manipulates objects through the use of spells (called “drafts” in the game). The drafts themselves are woven by playing magical notes on a special instrument called “distaff”. All the puzzles in the game are solved by learning and correctly applying these drafts.1Each draft is a sequence of four notes within one octave. The player learns new drafts by exploring the environment and interacting with it through a simple point-and-click interface. Once a draft has been learned, it may be applied in a different situation in order to solve a problem. Drafts range from simple general actions (such as opening) to more specific and complex commands, e.g. turning straw into gold. Drafts can also be “reversed”, i.e. played backwards, in order to execute the opposite action (for example, closing something instead of opening). As the game progresses Bobbin learns to play higher notes on the distaff, allowing him to access more drafts.1The game begins with an audio drama (YouTube) that you originally would have listened to on casette tape (as your parents kids). This audio drama sets the stage for the game world and lays out the history of the world and how everyone is a member of one of four guilds. Bobbin is a member of the Guild of Weavers.There is a whole lot of backstory presented in this audio drama, and I’ll be honest - I didn’t listen to all of it because it’s 30 minutes long and my attention span is … shorter than that. I did however read the synopsis on Wikipedia which answers a lot of questions, such as “whats with these swans?”.Though Loom has three difficulty settings (I played on “Standard”), it’s an extremely simple game. Unlike most adventure games, there is no inventory management to worry about, no dialogue trees to navigate and very little backtracking. Your goals are pretty straightforward and can all be accomplished by doing essentially the same thing on every screen.You click the mouse around the screen until the thing you click on is called out in the lower right of the screen. If this happens, you’ll either hear four notes on your distaff indicating there’s a new draft you can learn, or you’ll interact with whatever you just clicked on.Basically every draft you learn can be played either forwards or backwards. For example, once you learn the “Straw to Gold” draft, if you happen to select a pile of gold and play the draft backwards, it’ll now turn “Gold to Straw”. This mechanic is used throughout the game and in most cases presents a pretty obvious solution to a given puzzle.It is important to write down the drafts you learn though, as the game doesn’t record them for you (unless you’re in “Tutorial” mode). If you play on the hardest difficulty you’ll need to listen to the drafts and try to remember the notes as there is no visual indicator as to what was just played on the distaff.Remember to LOOK at everything by double-clicking before you select and cast a draft!Being a LucasArts adventure there’s supposed to be no way to die or wind up in an unwinnable situation. I did find myself getting stuck at one point because I was following a walkthrough and I apparently jumped ahead a little too quickly. At one point you need to examine a pool to learn the “Reflect” draft, but before doing this I only single-clicked and inspected the pool - then cast a draft that drained the pool.As a result, I never learned the necessary draft and found myself stuck once I reached the area where I needed to steal the young boy’s identity so I could sneak into the guild of blacksmith’s.You’re responsible for that boy’s brutal murder. Actions have consequences Bobbin!Though this is a LucasArts adventure game, the themes it deals with are actually pretty dark. Once you reflect your image onto the young boy so you can sneak into the guild of blacksmith’s, the dragon you escaped from finds the boy napping and mistaking him for you, kills him out of revenge. The ghost of that child is then used to solve a puzzle a little later in the game.You do “heal” the boy to bring him back to life, but this was gorier than I anticipated.The story advances through character closeups and general on-screen exposition dumps. Unlike other adventure games of this era, none of these interactions are … interactive. You aren’t actually conversing with a character, they’re just delivering one chunk of dialogue and letting you move on.Since the story progresses in an extremely linear fashion it makes sense that these interactions would as well, but it does make this game feel a little like it’s on rails.The world you’re exploring is interesting and there is a lot of lore here, but you miss a good chunk of it if you don’t invest the time to listen to that audio drama.Once you reach the endgame things actually get extremely easy. The fabric of the world is torn open and you need to go around casting (“drafting”?) HEAL on all the tears after healing whoever is dead/dying on the other side of the tear. You’ll then end up by the loom and Chaos will start drafting songs you need to play in reverse.Finally you cast the song that turns you into a swan and that’s the end of the game.Loom is a very interesting game with a unique game mechanic at the time. The music is all Tchaikovsky compositions, the visuals are all excellent and the story is compelling. You really do have to invest the time to dig into all the material that comes with the game before you play it in order to truly appreciate Bobbin Threadbare’s world, but if you don’t bother then this is just a relatively simple point-and-click adventure.There aren’t that many areas in this game to explore, and each area maybe has 2-3 action areas that you could potentially interact with. The draft you need to use on each action area is generally intuitive, so if you remembered to write them down (and wrote them down properly), it’s not hard to burn through this game.I would definitely rank this title pretty low on my list of favourites when it comes to LucasArts’ catalogue, but as an entry level adventure game it’s not that bad.Game Information Game Loom Developer LucasArts Publisher LucasArts Release Date January 1990 Systems DOS, Mac OS, Amiga, Atari ST, FM Towns, TurboGrafx-16, Steam Game Engine SCUMM My Playthrough How Long To Beat? 3 hours Version Played FM Towns via ScummVM Notes Walkthrough, Drafts, Manual ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 14 Story (25) 13 Experience (15) 8 Impact (10) 4   56% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; &#8617;&#xfe0e;2 &#8617;&#xfe0e;3 " }, { "title": "Node.js Driver failing to connect due to \"unsafe legacy renegotiation disabled\"", "url": "/blog/2024/02/05/node-dot-js-driver-failing-to-connect-due-to-unsafe-legacy-renegotiation-disabled/", "categories": "MongoDB", "tags": "mongodb, drivers, networking, connections", "date": "2024-02-05 09:06:53 -0500", "snippet": "OverviewIn this community forum post there was a report of the MongoDB Node.js driver failing to connect with the following error: MongoServerSelectionError: C8320000:error:0A000152:SSL routines:f...", "content": "OverviewIn this community forum post there was a report of the MongoDB Node.js driver failing to connect with the following error: MongoServerSelectionError: C8320000:error:0A000152:SSL routines:final_renegotiate:unsafe legacy renegotiation disabled:c:\\ws\\deps\\openssl\\openssl\\ssl\\statem\\extensions.c:922This error doesn’t smell like a MongoDB-specific error, so digging into “final_renegotiate:unsafe legacy renegotiation disabled“ specifically lead to this openssl issue that looks to elaborate on the meaning of the error message: TLSv1.2 (and earlier) support the concept of renegotiation. In 2009 (i.e. after the TLSv1.2 RFC was published), a flaw was discovered with how renegotiation works that could lead to an attack. After the attack was discovered a fix was deployed to all TLS libraries. In order for the fixed version of renegotiation to work both the client and the server need to support it. The original (unfixed) version of renegotiation is known as “unsafe legacy renegotiation” in OpenSSL. The fixed version is known as “secure renegotiation”. So either a peer does not have the fix, in which case it will be using “unsafe legacy renegotiation”, or it does have the fix in which case it will be using “secure renegotiation”.So it seems that the error originated from OpenSSL, and “that flaw” they’re alluding to was likely CVE-2009-3555. What was particularly interesting about this issue is that it only occurred when the application was run using Node.js 20, while Node.js 16 didn’t exhibit any issues - so what’s different between those two versions? One notable change is that Node.js 17+ use OpenSSL 3.0 by default - and starting with 3.0 secure negotiation support is required by default.For more information on secure server-side renegotiation I’d highly recommend this discussion.Configuring OpenSSL via the Node.js DriverA similar issue was reported on Stack Overflow for the axios library, and the solution there was to pass secureOptions: crypto.constants.SSL_OP_LEGACY_SERVER_CONNECT during request creation. As secureOptions is an option passed to Node’s tls.createSecureContext API (which MongoDB documents an example of using) it should be possible to do something similar with the Node.js driver.import { MongoClient } from 'mongodb';import { * as crypto } from 'crypto';const client = new MongoClient(\"mongodb+srv://...\", { secureContext: { secureOptions: crypto.constants.SSL_OP_LEGACY_SERVER_CONNECT }});SUCCESS! The above example allows a SecureContext object to be created with the secureOptions selected from the enumerated OpenSSL options Node.js has defined. Though the Node.js driver allows direct configuration of the SecureContext object, as other MongoDB drivers may not, DRIVERS-2823 is being considered to ensure this type of configuration is available.Alternative ConfigurationConfiguring the MongoDB Node.js driver’s OpenSSL options directly is likely the preferred approach, but the Node runtime can also be configured (via --openssl-config=file). In this, when the node process is executed the path to a custom OpenSSL configuration file could be provided as follows:node --openssl-config=/path/to/openssl.confWhere openssl.conf is setup similar to the example below:nodejs_conf = openssl_init[openssl_init]ssl_conf = ssl_sect[ssl_sect]system_default = system_default_sect[system_default_sect]Options = UnsafeLegacyRenegotiation" }, { "title": "Innocent Until Caught (Divide By Zero) - 1993", "url": "/blog/2024/01/29/innocent-until-caught/", "categories": "Let's Adventure!", "tags": "adventure, Divide By Zero, Psygnosis, Interspective", "date": "2024-01-29 06:39:02 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Maniac Mansion: Day of t...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Maniac Mansion: Day of the Tentacle (LucasArts) - 1993Innocent Until Caught (Divide By Zero) - 1993→ Loom (Lucasfilm Games) - 1990 Article 66 of 96 in this series.Innocent Until Caught is a graphic adventure game with an icon-based point-and-click interface.Jack T. Ladd is a thief, his hunting-ground is the whole galaxy, and at the moment, he’s in big trouble. He’s got 28 days to pay his taxes - or else the interstellar tax agency will hunt him down. Termination is a viable punishment for tax offenders in these days, you know. Stranded blank on the barren, run-down planet Tayte, Jack decides that he has to make some cash. Quick.Innocent Until Caught is pretty standard in terms of design but introduces some innovations when it comes to the interface. It features a mini-window at the bottom left of the screen which is alternately a mini-map of the area (showing all exits) and a looking glass for detecting small items. The inventory is a box-window in which objects can be placed wherever player wants (even on top of others). Also, the plot is illustrated by a few rendered sequences, some of the first used in adventure games.1Not too shabby looking for a cutscene from 1993From the minute I started playing this game I got Beneath a Steel Sky vibes. I didn’t realize that game came out a year later, so maybe I should be saying the reverse, but regardless of semantics Innocent Until Caught struck a tone with me. I am a huge sucker for games that seem to take place in either a post-apocalyptic future, a dystopian future or a cyberpunk setting.This game is set in a dystopian future, but right away you’re treated to the comedic undertones that highlight the entire plot. It doesn’t take much of a stretch to envision this game having been written by Al Lowe as the backdrop for a slightly darker Leisure Suit Larry adventure.You know you wanna know what happens next …Innocent Until Caught offers a pretty straightforward interface, though it overloads each interface area to perform double-duty. The bottom left area is a mini-map, however when you’re LOOKing at something it will tell you what you’re hovering over. The mini-map also shows all exits to the current screen you can follow, which can be clicked on if you have WALK selected.The middle area is your action/verb bar as well as the STATUS button. The status area gives you details about your progress and is where you can find save/load and configuration options.Your status screen also shows a profile of Jack T. Ladd which serves absolutely no purpose until the very end of the game, at which point you can use this to change your clothes to impersonate a guard.Inventory management and item combinations are a massive part of this game. The third status area of the user interface which takes up about 2/3 of the screen is the inventory. There are just so many items you can pick up throughout this game - and I’m pretty sure ALL of them are required to progress.If there’s one thing I have to gripe about when it comes to this game it’s the moon logic you need to apply to certain puzzles and item combinations. If you thought Monkey Island’s “Monkey Wrench” puzzle was obtuse, wait until you get a load of this game.Need to break into a bank? Get the plans for it from the bank first, then USE those plans in the sewer to find your way to an alcove that shows where the wall is the weakest. To get through that wall you’ll need to blow a hole in it. Put a mushroom in front of the alcove, then release a fly that will fly into the mushroom causing it to explode. How do you catch that fly? First find a jar and a lid (make sure to combine them when you find them). How do you get the fly in the jar? Fill it with mayonnaise of course!Fly flies into the mushroom and BOOM goes the wall. Well that was easy … right?I’m assuming there must have been some conversational hint or observation when you INSPECT something somewhere because I read through the manual and didn’t find any mention of the fly … or a mushroom. The manual does give you a couple clues to some of these puzzles though like “Try to find an alternative way to enter the zoo. When you do, how you smell might mean the difference between life and death.”Yet another feat of mental gymnastics will be required to get past this monsterThough the puzzles can be ridiculously difficult to solve, the game as a whole is pretty forgiving. I didn’t die once - not did I find myself in an unwinnable situation. I don’t actually know if it’s possible to do either of these as I’m assuming the game just doesn’t let you advance until you have all the necessary items to progress past the area you’re trying to get to.I leaned on the walkthrough pretty heavily during this playthrough so I’m not 100% sure if this is the case, but whenever I tried to put Jack in danger the game just sort of told me “you can’t do that”.When you’re not scanning every inch of every screen to SEE if there’s an item to pick up, you can progress the plot by TALKing to most characters. These interactions take place in a conversation view where you typically have 3 options you can choose from in any situation. You can also inspect what you’re being told to pull out keywords from a conversation to ask more about this (the cursor will turn to a question mark when you find a keyword in a response).I only used this once or twice during the game so it’s not a major mechanic, but it does add some variety to these interactions.The writing in this game is excellent, and it’s worth noting that the themes and dialogue of Innocent Until Caught are not for kids. I think this actually drew me in more as it felt like a more mature game and it gave the writers more leeway to inject adult humour and themes throughout.I was very much sucked into this game world and enjoyed most of the experience … but then you try to break out of jail.The jailbreak sequence involves navigating a maze. I HATE MAZES. This was just unnecessarily drawn out because there’s nothing to do but grind your way through using trial and error until you muddle your way to the end. I’m sure there are people that genuinely enjoy mazes, but I’m not one of those people so I call them out whenever I encounter them (as I did with Manhunter 2: San Francisco, Return to Ringworld and The Legend of Kyrandia: Fables and Fiends).Thankfully this is only one sequence and you can burn through it in about 20-30 minutes (depending on how much backtracking you have to do).If you’re unable to board the train, you’re using DOSBox and your CPU cycles are below 6000The majority of the initial act of the game takes place in 5 different areas which are accessible by subway. Once you visit each area (by waiting for the subway to get there) you’ll be able to “fast travel” by getting on the subway at any stop, looking at the subway map and just clicking the stop you want to go to. This is EXTREMELY convenient as it allows you to bypass the drawn out subway ride between stops.One issue I had with the subway was that I found myself unable to progress the first time I played this game. Every time the subway car would stop and open the doors I clicked like a maniac to get Jack to board the train cycling through every verb/action available … but nothing worked. It turns out that this is a known (but poorly documented) issue you’ll run into if playing the game via DOSBox.If you want to avoid the frustration, start the game as follows: Launch DOSBox Increase the CPU cycles beyond 6000 (default is 3000) Run INNOCENT.EXE to start the gameYou can now board the train successfully. You have to follow this sequence as increasing the cycles once the game is already running doesn’t seem to work. Once you’ve done the above you can restore a game right before you board the train and you should board successfully.Note that you can’t change your audio configuration and then load a save state. If you do so the audio just won’t work and you’ll have to play the rest of the game in silence. This was a bit frustrating as I wanted to play through using either the Soundblaster or Roland configuration … but I started with Adlib so that’s what I rolled with.The game does give you A LOT of clues as to what you may need to do nextThe music is atmospheric and appropriate - though limited. There are a handful of background songs that the game will cycle through based on the screen you’re on, and the samples are pretty short so you’ll notice the looping. This is a pretty minor complaint though as the songs are pretty good.Aside from some technical challenges and a maze that I could have done without, this game came as a pleasant surprise. I’ve heard of it numerous times over the years but never took the time to try it out myself - but I’m really glad I did.Since there’s a sequel (Guilty) that came out a couple years later I’m now looking forward to when I get to tackle that title as well.I’d recommend this game, though you’ll likely need a walkthrough to solve some of the puzzles. Do yourself a favour though and setup your preferred audio device before you start the game ;)Game Information Game Innocent Until Caught Developer Divide By Zero Publisher Psygnosis Release Date 1993 Systems DOS, Amiga Game Engine Interspective My Playthrough How Long To Beat? 5 hours Version Played DOS via DOSBox-X Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 16 Story (25) 19 Experience (15) 11 Impact (10) 9   79% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Maniac Mansion: Day of the Tentacle (LucasArts) - 1993", "url": "/blog/2024/01/20/day-of-the-tentacle/", "categories": "Let's Adventure!", "tags": "adventure, LucasArts, SCUMM", "date": "2024-01-20 07:50:30 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Tass Times in Tonetown (...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Tass Times in Tonetown (Interplay Productions, Brainwave Creations) - 1986Maniac Mansion: Day of the Tentacle (LucasArts) - 1993→ Innocent Until Caught (Divide By Zero) - 1993 Article 65 of 96 in this series.Day of the Tentacle is a 1993 graphic adventure game developed and published by LucasArts and is the sequel to the 1987 game Maniac Mansion. The plot follows Bernard Bernoulli and his friends Hoagie and Laverne as they attempt to stop the evil Purple Tentacle - a sentient, disembodied tentacle - from taking over the world.Day of the Tentacle is a point-and-click adventure game and a sequel to Maniac Mansion. The player controls Bernard, and later also Hoagie and Laverne, being able to switch between them at any time. By using the commands at the bottom of the screen, the character can pick up items, use them on other things, talk to people, and more. Any of the three friends can also send his items across time to another friend.The game takes place in the same area, but in three different eras, and thus affecting history takes a vital part in some puzzles. For instance, Hoagie can hide an item in the 18th century, and Laverne discovers it in the 23rd century - but by then, the item may have been affected by time and changed its properties.1I’m not going to try to hide it - Day of the Tentacle is probably one of my favourite adventure games of all time. Though it can take 6-8 hours to finish without a walkthrough, I’ve played through it enough times that I was able to burn through it in about 45-50 minutes for this article.Though I’ve played it countless times, from the moment you boot it up and the title sequence starts your attention is immediately grabbed and you are sucked into this weird world where tentacles can move around and talk. If you haven’t played Maniac Mansion the existence of the tentacles won’t really make any sense (I think it’s elaborated on there), but it’s not really all that important to the advancement of the plot.Once you gain control of Bernard you’ll have a short sequence that encourages you to explore a single room until you realize you can open the clock to find Dr. Fred’s secret lab in the basement. I think this is meant to be a sort of tutorial sequence to get players used to the verbs available (bottom left) and the inventory system (bottom right).Since this is a game from 1993 the interface and layout was pretty intuitive, so I appreciate that you could quickly progress beyond the scripted sequence, meet the other two characters you’d eventually be able to control and advance the plot to the time travel subplot.The two characters that accompany Bernard on this adventure weren’t present in Maniac Mansion - though Hoagie seems to be a cross between Jeff and Razor. Hoagie finds himself sent back in time where he gets to meet the founding fathers, and Laverne is shot into the future.A large part of the games mechanics is to make changes in the past to create changes in the future. For example, as soon as the Cron-O-John sends everyone their separate ways Laverne lands in a tree and gets stuck. You only get access to Hoagie and Bernard as a result as you can’t actually use Laverne until she’s free.To solve this puzzle you need to get rid of that tree - but this needs to be done in the past.Hoagie strikes up a conversation with George Washington and challenges him to see if he’s “still got it” when it comes to chopping down cherry trees. If you’re not an American (I’m not) knowing this is the solution to a puzzle might be a bit confusing, but the game only gives you so many dialogue options so it’s not that hard to figure out (also, apparently this was a myth).You paint the fruit on the tree red, talk to Washington, he chops the tree down and Laverne is free!Dr. Fred’s relatives can be found throughout the time periods and they’ll help advance the story. Your goal is to recharge the Cron-O-John in each time period and get back to the present to stop the Purple Tentacle. You’ll do this though myriad fetch quests and item puzzles.Need a vacuum in the future - put a flyer in the suggestion box in the past that says all basements must have vacuums. Need a hamster in the future - put one in the ice box in the present and then thaw him out in the future and give him a sweater to warm him up.Though a little contrived, these puzzles are typically pretty straightforward and the game gives you plenty of clues as to how they need to be solved.Though I love this game it’s important to note it’s not perfect. The voice acting can be rough to listen to at times, but the writing is so good you’ll likely let this one slide. There are a handful of characters you can interact with, but most of them offer extremely limited conversation trees and typically exist as a barrier between you and some item you need for some puzzle.The solution to certain puzzles requires you to be aware of certain concepts that a child likely wouldn’t understand. The notion that “it always rains right after I was my car” is needed to solve a puzzle in the past, but this is not something a child would be aware of and would result in the puzzle being unnecessarily complex. I played this game for the first time when I was 14 and I seem to remember getting past this just based on in-game clues, but the cause and effect of washing the carriage resulting in rain made zero sense to me then.Day of the Tentacle is an extremely approachable adventure game for new players to the genre. It has the right mix of humor to keep the plot progression enjoyable, is well structured and balanced and doesn’t contain dead ends or unwinnable scenarios.A really cool easter egg you can find is that the original Maniac Mansion game is hidden on the computer in Ed’s room. Just clicking LOOK on the computer will allow you to play though the entire game if you want - though this didn’t work for me during this playthough. When I tried to play the embedded Maniac Mansion my instance of ScummVM crashed:Assertion failed: (endP &gt;= beginP), function BaseString, file str-base.cpp, line 118.[1] 22698 abort scummvmI ended up have to restart from the beginning because I didn’t save my game once … oops. I also filed this with the ScummVM team as #14892 - DOTT: Crash when trying to play MM on Ed’s computer.If it were possible to play more games in this series or in this universe I’d be all in, but unfortunately it doesn’t look like this will be the case anytime soon. As a result, if you haven’t played Day of the Tentacle I’d highly recommend either the original version or picking up the remastered version on GOGGame Information Game Day of the Tentacle Developer LucasArts Publisher LucasArts Release Date June 25, 1993 Systems DOS, Mac OS Game Engine SCUMM My Playthrough How Long To Beat? 6.5 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 18 Story (25) 23 Experience (15) 14 Impact (10) 9   91% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "Tass Times in Tonetown (Interplay Productions, Brainwave Creations) - 1986", "url": "/blog/2023/12/27/tass-times-in-tonetown/", "categories": "Let's Adventure!", "tags": "adventure, Interplay Productions, Brainwave Creations, Activision, Mindshadow", "date": "2023-12-27 20:58:27 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Police Quest III: The Ki...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Police Quest III: The Kindred (Sierra On-Line) - 1991Tass Times in Tonetown (Interplay Productions, Brainwave Creations) - 1986→ Maniac Mansion: Day of the Tentacle (LucasArts) - 1993 Article 64 of 96 in this series.Tass Times in Tonetown is an adventure game published by Activision in 1986. It was designed by Michael Berlyn and Muffy McClung Berlyn and programmed by Rebecca Heineman of Interplay (credited as Bill Heineman) in cooperation with Brainwave Creations.Your grandfather has invented a device which makes real everything he can see in his dream. All the strange places and creatures he can dream about really exist in an alternate reality. One of those creatures, named Franklin Snarl, traveled through the device to our reality and kidnapped Gramps, teleporting him into the crazy world of Tonetown. He hopes that Gramps will always remain asleep, which assures Snarl’s own existence!Now it’s up to you, the hero of the game to travel to the alternate dimension of Tonetown and to rescue your grandfather. You interact with the environment by either typing in commands, or choosing one of the action icons available as interface. The game, therefore, combines text-based interaction with the more modern “point and click” approach.1Would you consider this dude “tass”?In the fall of 1986, Apple debuted the final computer in their Apple II line, the Apple IIgs. “GS” stood for graphics and sound, and Apple needed an impressive launch title to demonstrate the machine’s new multimedia capabilities. For this, they turned to a quirky new game published by Activision and developed by Interplay, Tass Times in Tonetown, which became the first game commercially available for the Apple IIgs.2The game’s opening location, an abandoned cabin, provides players a non-threatening area to familiarize themselves with its unique controls. The upper-left quadrant of the screen shows pictures of the player’s location. The pictures are mostly static, but occasionally contain simple animations. To the right of those pictures are a series of clickable “command icons” which act as shortcuts to common commands such as GET, DROP, and LOOK AT. Separating the screen horizontally is a strip that displays the player’s inventory, and a compass that can be used for navigation. The bottom portion of the screen displays detailed text descriptions and has a prompt for typing commands. The pictures and text descriptions aren’t always in sync; for example, characters are frequently mentioned in the text that don’t appear in the graphics. To find every object, players will need to scour both the graphics and the accompanying text.After exploring grandfather’s cabin, players will quickly discover something is missing: grandfather. Behind a locked door, players find one of Gramps’ inventions — a magical hoop that doubles as a portal to Tonetown, a crazy, futuristic world full of people with wild haircuts and radical clothes who hang out in totally tubular locations. Everyone in Tonetown speaks in totally tass slang, a combination of Valley Girl slang and made up future babble. Denizens of Tonetown wear hooplets, strive to look Troppo, talk on floatfones, and use guitar picks for currency.2For a launch title released for the Apple IIGS I have to say I’m pretty impressed with both the graphics and sound - which is what the “GS” is IIGS stands for - so I guess that’s hardly a surprise. Though there were ports to multiple platforms, I chose to play through the original IIGS release as this gave me a chance to try out GSPLUS - an emulator I’ve never had an opportunity to dig into.GSPLUS disk image configuration screenGetting the game up and running just involved getting the emulator started (you’ll need a 2GS ROM set first), then configured point your s5d1/d2 disk drives to the images for your game. Once set and saved, quit and restart GSPLUS and it should boot directly to the game.This took me a bit of trial and error which is why I wanted to share it in the article. Having an excuse to fiddle around with some lesser known systems and emulators without having to resort to RetroArch is a big part fo the fun for me when navigating this series.After reading through the game’s manual you get a brief synopsis of the game you’re about to play - but it’s really not super clear:Are you tass? Are you tone? What’s “tass” or “tone” mean???The description above actually does outline what your objective is for the game, though in the most obtuse and cryptic way imaginable. Once you boot up the disk images, you’ll find yourself in an empty cabin where the game begins. This area acts as a good training ground to get you used to the text parser, the buttons that act as shortcuts for certain verbs and the scene window.You can click on the verb buttons to pre-fill the text parser, or you can click on the picture window to also prefill the parser. This is actually pretty novel for 1986 as it makes the game a lot more approachable - especially when you need to interact with a character and you don’t know their name. You can just click on them and fill in the rest.The game will also show you inventory items on the screen that you can pick up. You have a limited number of inventory slots so you’ll need to leave items behind periodically to make sure you don’t run out of room. When you drop an item it will be visible on the screen, so next time you come back it’s obvious that you have left something here.Like any good retro text-based adventure game, it is VERY easy to die. Most puzzles only have a single solution, and require you to complete a series of fetch quests to complete. Unfortunately this game can also leave you in unwinnable situations if you forget to pick up certain items. For example, the book you can pick up in the cabin before you enter the hoop - if you leave it behind you cannot win the game, and there’s no way to go back to pick it up.Game over. Something about animals and evil or something …Though the puzzles can be a bit frustrating as it’s not usually obvious what you need to do to progress in this game, there is so little you can interact with and so few screens to navigate it’s not all that difficult to brute-force your way through. The game gives you multiple save slots, so you can easily save every few screens, look at everything, pick up everything, buy everything and wear everything.Eventually you’ll find Gramps, save him from an island fortress, take him to Snarl’s and push Snarl back through the hoop. This sets everything back to normal and the game ends there.Since I didn’t have an Apple II (or GS) as a kid I was never exposed to this game, so I have no hidden fondness for it. It looks and sounds pretty good for what it is, and the game engine (called ADVENT in the about screen, but apparently also Mindshadow) was used for a couple other games of that era.This game has a bit of a cyberpunk feel to it, but in the opposite way. Though it’s futuristic and “punky”, everything is extremely bright, upbeat and vibrant. I honestly really enjoyed the aesthetic, even if the story itself didn’t really resonate with me.If you enjoy parser-based adventure games this is not a bad entry and is quite approachable. The music is better than I expected, the visuals are better than I expected - but the gameplay was a bit boring.Game Information Game Tass Times in Tonetown Developer Interplay Productions, Brainwave Creations Publisher Activision Release Date 1986 Systems Atari ST, Amiga, Apple II, Apple IIGS, Commodore 64, DOS, Macintosh Game Engine Mindshadow My Playthrough How Long To Beat? 5 hours Version Played Apple IIGS via GSPLUS Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 13 Story (25) 11 Experience (15) 6 Impact (10) 2   46% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; Except(s) from All That Blitters: Tass Times in Tonetown &#8617;&#xfe0e; &#8617;&#xfe0e;2 " }, { "title": "Combine GoPro Files with FFmpeg", "url": "/blog/2023/12/21/combine-gopro-files-with-ffmpeg/", "categories": "video", "tags": "ffmpeg, video, scripting", "date": "2023-12-21 09:14:28 -0500", "snippet": "I have a HERO10 Black that I use to record video from my kids hockey games (such as this one), but since I typically move around with the camera between periods, the videos end up being “chaptered”...", "content": "I have a HERO10 Black that I use to record video from my kids hockey games (such as this one), but since I typically move around with the camera between periods, the videos end up being “chaptered”, or multiple single videos. Though you’d think you could just sort these files by filename, GoPro’s file naming convention doesn’t actually lend itself well to this, and doing so results in out of sequence video.For example, a recent video that I took had a directory listing like the following:$ ll-rwx------ 1 alex staff 265M 20 Dec 19:14 GL010118.LRV-rwx------ 1 alex staff 265M 20 Dec 19:35 GL010119.LRV-rwx------ 1 alex staff 265M 20 Dec 20:08 GL010120.LRV-rwx------ 1 alex staff 194M 20 Dec 19:22 GL020118.LRV-rwx------ 1 alex staff 234M 20 Dec 19:46 GL020119.LRV-rwx------ 1 alex staff 265M 20 Dec 20:20 GL020120.LRV-rwx------ 1 alex staff 48M 20 Dec 20:22 GL030120.LRV-rwx------ 1 alex staff 3.7G 20 Dec 19:14 GX010118.MP4-rwx------ 1 alex staff 10K 20 Dec 19:02 GX010118.THM-rwx------ 1 alex staff 3.7G 20 Dec 19:35 GX010119.MP4-rwx------ 1 alex staff 10K 20 Dec 19:24 GX010119.THM-rwx------ 1 alex staff 3.7G 20 Dec 20:08 GX010120.MP4-rwx------ 1 alex staff 10K 20 Dec 19:56 GX010120.THM-rwx------ 1 alex staff 2.7G 20 Dec 19:22 GX020118.MP4-rwx------ 1 alex staff 10K 20 Dec 19:14 GX020118.THM-rwx------ 1 alex staff 3.3G 20 Dec 19:46 GX020119.MP4-rwx------ 1 alex staff 10K 20 Dec 19:35 GX020119.THM-rwx------ 1 alex staff 3.7G 20 Dec 20:20 GX020120.MP4-rwx------ 1 alex staff 10K 20 Dec 20:08 GX020120.THM-rwx------ 1 alex staff 696M 20 Dec 20:22 GX030120.MP4-rwx------ 1 alex staff 10K 20 Dec 20:20 GX030120.THMGoPro creates additional LRV and THM files when recording video so that you can quickly preview thumbnails and video on the camera itself. If we filter these out and just view the MP4 files you’ll see these aren’t necessarily in order:$ ls *.MP4-rwx------ 1 alex staff 3.7G 20 Dec 19:14 GX010118.MP4-rwx------ 1 alex staff 3.7G 20 Dec 19:35 GX010119.MP4-rwx------ 1 alex staff 3.7G 20 Dec 20:08 GX010120.MP4-rwx------ 1 alex staff 2.7G 20 Dec 19:22 GX020118.MP4-rwx------ 1 alex staff 3.3G 20 Dec 19:46 GX020119.MP4-rwx------ 1 alex staff 3.7G 20 Dec 20:20 GX020120.MP4-rwx------ 1 alex staff 696M 20 Dec 20:22 GX030120.MP4An easy way to get the videos into a “correct” order would be to sort them chronologically by create date:$ ll -tr *.MP4-rwx------ 1 alex staff 3.7G 20 Dec 19:14 GX010118.MP4-rwx------ 1 alex staff 2.7G 20 Dec 19:22 GX020118.MP4-rwx------ 1 alex staff 3.7G 20 Dec 19:35 GX010119.MP4-rwx------ 1 alex staff 3.3G 20 Dec 19:46 GX020119.MP4-rwx------ 1 alex staff 3.7G 20 Dec 20:08 GX010120.MP4-rwx------ 1 alex staff 3.7G 20 Dec 20:20 GX020120.MP4-rwx------ 1 alex staff 696M 20 Dec 20:22 GX030120.MP4Since I want to upload these videos to YouTube for the team to review, I need a single video file. After hunting around for scripts that could do this for me, I did find a few that looked promising - such as GoPro-Concat-Automation and gopro-linux. Ultimately I wanted to be able to just do this myself with a single command, so though these tools got me most of the way there, I ended up opting for my own script instead:# run from the directory where your videos are located# ex: /Volumes/SDCARD/DCIM/100GOPRO/ffmpeg -f concat -safe 0 \\ -i &lt;(for f in `ls -tr *.MP4`; do echo \"file '$PWD/$f'\"; done) \\ -c copy output.mp4This uses FFmpeg to concatenate the videos and copy them to a new file called output.mp4. The input list for the videos is just a bash command to generate a list of MP4 files with the full path to the file in chronological order by create date.Note that safe mode is disabled (see ffmpeg options) as having it enabled can result in the video creation failing for file-naming reasons. Why is this enabled by default and not disabled you might ask … #5558 concat protocol should run in “-safe 0” mode by default has more info on that topic." }, { "title": "Police Quest III: The Kindred (Sierra On-Line) - 1991", "url": "/blog/2023/12/16/police-quest-iii/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, SCI", "date": "2023-12-16 08:34:11 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← The Dark Crystal (On-Lin...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← The Dark Crystal (On-Line Systems) - 1983Police Quest III: The Kindred (Sierra On-Line) - 1991→ Tass Times in Tonetown (Interplay Productions, Brainwave Creations) - 1986 Article 63 of 96 in this series.Police Quest III: The Kindred is a 1991 police procedural point-and-click adventure video game developed and published by Jim Walls and Sierra On-Line.Sonny Bonds, the sergeant of Lytton police department, thought he could finally enjoy peaceful life with his wife Marie after the drug lord Jessie Bains has been put away for good. However, a series of gruesome murders perpetrated by a sinister cult known as “The Kindred” shocks the city. Marie becomes a victim of their attack and falls into a coma. It becomes Sonny’s very personal mission to track down the attackers and make them pay for their crimes.The Kindred is the third installment of the Police Quest series, its events taking place after those described in Police Quest II: The Vengeance. The game brings back some of the elements of the first game, such as a modified version of driving sequences and police procedures unrelated to the main plot the protagonist must go through. Computer work is particularly emphasized, requiring the player to perform tasks such as using facial composite software or figuring out murder patterns by studying a map. Like other Sierra adventures of the time, the game uses an icon-based interface for interaction with the environment.1Sonny has been promoted following the events of Police Quest II, and the game starts off with you giving a briefing to the other detectives to kick things off. There are multiple narrative threads in this title which gives it some additional depth, and you dive right into one of them as soon as the game starts. Detective Pat Morales has apparently got a complaint lodged against her for use of abusive language. Since these games are effectively police procedure simulators, you’re going to need to start off by interviewing her, then deciding what to do about said complaint and file the appropriate paperwork.Picking the wrong option when filing paperwork can lead to a game overFollowing the proper protocol at all times is a requirement to being successful in any Police Quest game, and luckily for you these protocols are well documented in the game’s manual. There are all sorts of procedures outlined here such as how to handle felony situations, obtaining entry into private property, courtroom procedures and forceful entry into dwellings. If it’s in the manual, you’re likely going to need to do it at some point in the game so it’s not a bad idea to do the reading up front so you know what you’re dealing with.Detective Morales will prove to be a pain in your ass throughout the game. Once you find your way downstairs on the first day and get into the squad car you’ll have to drive out to observe a failure to sign, as the driver that the detective pulled over doesn’t want to sign a citation because the officer was being rude. Yup … it’s Morales again.This is another segment of the game where you’re presented with a couple options as to how you can respond, and if you pick the wrong one - it’s game over. You can send the pregnant woman to jail (which is what Detective Morales suggests), but doing so gets the department sued for $1 million and you lose your job (game over).Being a Sierra game, expect almost every decision you make to potentially result in death. This actually makes the game a little easier to complete as exercising good game save hygiene will allow you to trial-and-error your way through most scenarios. Just save, try something, fail, reload, try the other option and move along … rinse and repeat.You’ll still need to pay attention and take notes though - especially when characters mention things like case numbers, serial numbers and addresses.There’s a computer you’ll need to use to look up case details or search for items by serial number. These pieces of information are typically mentioned during conversations with other characters and may only be referenced once. If you miss a case number when the chief is briefing you, it may not be available again and you’ll have to reload a previous save and repeat the conversation to get that piece of information (or use a walkthrough).The computer is actually used for a number of scenarios in this game. My favourite is the scene where you bring a homeless woman back to the office because she claims she saw someone suspicious and wants to describe them to you. Instead of a police artist generating a composite image based on her description, you use the computer to generate a face based on her prompts. This is actually kind of fun and breaks up some of the monotony of police procedure.Along with the ongoing issues with Detective Morales (who ends up being assigned as your partner on Day 2) is the subplot involving the attempted murder of your wife. Mary is stabbed in the parking lot of the mall, and your captain knows you won’t rest until the case is solved so he assigns it to you to investigate.Investigating the case involves a lot of driving back and forth between locations and the police station. The tedious manual driving from Police Quest: In Pursuit of the Death Angel is back, but this time without any visual differentiation on the map (as the VGA remake of PQ1 provided). You just drive in a direction and wait for the road signs to tell you where you are - and if you’re approaching a location.I did not enjoy this at all. It honestly felt like filler most of the time and was there to slow you down.You’ll have to deal with a handful of highway patrol scenarios early on, which aren’t too difficult but require you to drive back and forth until the relevant event triggers. You’ll also have to drive back and forth to various locations and the police station to advance the story as the game progresses. There is a lot of driving in this game, and honestly I would have appreciated a “fast travel” type of option near the end …The locations you drive to will require investigation, and this involves more police procedure (properly collecting and handling evidence). You have a field kit in the trunk of your car that you need to open and take everything out of each time you visit a crime scene. Once you collect and bag evidence you need to return the field kit items back to the kit before you can leave the scene. This just seems like something they could have automated for you, as it artificially delays you from progressing to get a message like “You can’t get into the car until you return the field kit items to their respective slots in the kit”, or something like that.After each scene you will either return to the police station or the hospital. If you go back to the station you’ll either be booking a perpetrator (if you arrested someone) or booking evidence. When booking evidence you’ll need to enter the case number the evidence belongs to, so make sure you’ve taken note of these. If you book a perp, you’ll need to provide the correct booking code. These are all in the manual, so you just need to make sure you pick the right one (it’s not that hard).The subplot about your wife actually leads into a thread about multiple murders that have some kind of occult ties to them. You’ll need to keep track of the locations of these murders as there’s a final segment on the computer where you need to plot the crimes on a map of the city and draw a pattern to try to tie them together. Assuming you do this correctly you’ll draw a pentagram that will give you the location of the final crime scene.It’ll come as no surprise that Detective Morales is tied up in all of this (there are signs throughout the game). The game also manages to link the series antagonist (Jesse Bains) to this game as well by introducing his brother near the end as being affiliated with one of the perpetrators you were trying to hunt down.Though I may not love the driving in this game and find it overused, the strong story more than makes up for it. This is no surprise as the game was written by Jane Jensen, who would also go on to write Gabriel Knight: Sins of the Fathers, so you know you’re in for some twists and turns and a sprinkling of the occult.I have very fond memories of this game, and I really enjoyed going back to it - but it’s not as good as I remembered. Though there are a lot of digitized sound effects, and occasionally there is background music most of the time you just have generic background noise. The driving segments of the game are overused and just make everything feel slower as a result.You do get to use the gun near the end of the game (exactly twice), but it’s not really obvious either time that this is necessary until you die and are prompted that maybe you should be “more prepared” next time.Although I did find some aspects of this game entertaining, overall I was just trying to get to the end so that I could move on. If not for the strong story I would probably recommend skipping this game, but if you’ve played the first 2 entries in the series you might as experience the conclusion of Sonny Bonds’ story arc.Game Information Game Police Quest III: The Kindred Developer Sierra On-Line Publisher Sierra On-Line Release Date 1991 Systems DOS, Amiga Game Engine SCI My Playthrough How Long To Beat? 4.5 hours Version Played DOS via ScummVM Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 10 Story (25) 20 Experience (15) 7 Impact (10) 4   59% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "The Dark Crystal (On-Line Systems) - 1983", "url": "/blog/2023/12/08/the-dark-crystal/", "categories": "Let's Adventure!", "tags": "adventure, On-Line Systems, ADL", "date": "2023-12-08 11:59:49 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Frederik Pohl's Gateway ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Frederik Pohl's Gateway (Legend Entertainment) - 1992The Dark Crystal (On-Line Systems) - 1983→ Police Quest III: The Kindred (Sierra On-Line) - 1991 Article 62 of 96 in this series.The Dark Crystal is a graphic adventure game based on Jim Henson’s 1982 fantasy film, The Dark Crystal. The game was designed by Roberta Williams and was the first Hi-Res Adventure directly released under the SierraVenture label in 1983.The Dark Crystal is closely based on Jim Henson’s film of the same name. The game is set in Thra, a world with three suns, which come together every thousand years in an event known as “The Great Conjunction”. The player controls Jen, the last survivor of the Gelfings, a race of mole-like people. He must find a dark crystal and its broken shard, and repair it to end the reign of a tyrannical lord.Like other installments of the Hi-Res Adventures series, the game is entirely text-based, with non-animated graphics to illustrate the areas. Movement between areas and interaction with the game world is performed by typing commands consisting of either one or two words (a combination of a verb and an object).1You interact with the game world via the text parser. Though the verb/noun combinations you need to identify to progress from screen to screen are pretty easy to figure out, I did find myself getting stuck on occasion when the game expected an obtuse sequence of commands. Navigation is handled by going in a direction (EAST, NORTH) and typically when you enter a new screen (or LOOK at it) everything you need to know or interact with is called out pretty clearly.This screen took me forever to get pastThis game follows the plot of the movie The Dark Crystal, so I’m guessing if you’re a fan - or have seen it recently - maybe some of these puzzles would make a bit more sense. There is one section where you need to get into the castle where the solution is to get Fizzgig to climb through the bars of a door to get a key that’s on the other side.On the surface this type of puzzle isn’t really challenging, but up to this point in the game you have not had to interact with a multi-part prompt where you issue multiple commands with no feedback after entering the first. You have to SEND FIZZGIG through the bars, but when you send him it just says something like “Where?”. The response is then SEND BARS (or maybe just BARS) but if you do this wrong you have to start over and it’s not clear you were even on the right track to begin with.Oh look, I’ve died againBeing such an early adventure game I’m ok with slightly obtuse puzzles, and being a Sierra game, I expect death around every corner. And you will die on most screens.Though there isn’t any music throughout the game and limited sound effects, the scene drawing for a game released in 1983 really isn’t that bad. My main complaint would be that there are so few colours presented that it’s basically monochrome, but this is likely due to the Apple II only having 6 colors to choose from (Ken Williams would enhance the ADL interpreter to support dithering and expand that palette to 21 colours2).There are a handful of items you can pick up and use throughout the game, but these are few and far between. It does vary the gameplay a little and add some depth to a couple puzzles. Unlike later Sierra titles you won’t find yourself overwhelmed with options, and every item you pick up is almost immediately useful, so try everything you pick up on the screen you found it!The movie this game is based on isn’t something I have fond memories of (or really any memory of), so playing through this game doesn’t really stir up any nostalgia. I’m sure it follows the plot pretty closely, and if you enjoyed the movie you’ll likely enjoy the game.For a very early graphical adventure game it’s definitely well done and really shows off the power of the ADL engine. If you’re an interactive fiction fan you’ll likely enjoy this experience, but otherwise this one’s probably not worth playing through.Game Information Game The Dark Crystal Developer On-Line Systems Publisher On-Line Systems Release Date 1983 Systems Apple II, Atari 8-bit Game Engine ADL My Playthrough How Long To Beat? 3 hours Version Played Apple II via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Graphics (10) 4 Sound (10) 2 Plot / Progression (25) 9 Characters / Development (15) 5 Gameplay / Experience (15) 5 Replayability (10) 0 Impact / Impression (10) 3 Bonus / Surprise (5) 0   28% Note that I overhauled my scoring criteria in August of 2024, and the score above is the revised score for this game.See below for the original score based on the original scoring criteria. Atmosphere (20) 9 Story (25) 13 Experience (15) 6 Impact (10) 3   31% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; The Sierra Chest &#8617;&#xfe0e; " }, { "title": "Frederik Pohl's Gateway (Legend Entertainment) - 1992", "url": "/blog/2023/11/29/gateway/", "categories": "", "tags": "adventure, Legend Entertainment", "date": "2023-11-29 21:14:21 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← The Legend of Kyrandia: ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← The Legend of Kyrandia: Fables and Fiends (Westwood Studios) - 1992Frederik Pohl's Gateway (Legend Entertainment) - 1992→ The Dark Crystal (On-Line Systems) - 1983 Article 61 of 96 in this series.Frederik Pohl’s Gateway is a 1992 interactive fiction video game released by Legend Entertainment, and written by Glen Dahlgren and Mike Verdu. It is based on Frederik Pohl’s Heechee universe.When humans finally managed to colonize the planet Venus, they discovered a gigantic system of artificial underground tunnels there. It is assumed that a highly advanced alien race known as Heechee has constructed those tunnels thousands of years ago. Eventually, an abandoned, yet fully functional Heechee spaceship is discovered. One of the explorers boards it, which leads humanity towards the discovery of a space station with many similar ships - all with coordinates of unknown planets already punched in. This station becomes known as the Gateway, being humanity’s only connecting point to the rest of the universe.Since traveling to the potentially dangerous destinations involves a great deal of risk, only some particularly courageous (or perhaps reckless) adventurers, called “prospectors”, volunteered to go on these journeys. The protagonist of the game is one of those prospectors, having won the membership alongside a small sum of money and a one-way ticket to the Gateway. Eventually, he discovers an ancient device that contain a warning against a mysterious alien species known as Assassins - and the prospector is entrusted with the task of protecting the humans from that threat.1Gateway is a text adventure with graphics, based on the Heechee (or Gateway) saga series of books. I’ve never heard of this series, but after playing this game I’m actually sort of looking forward to reading these books. Also, as this is a book series it’s not surprising that the game involves A LOT of reading. This is a text adventure through and through.It is identical in interface and general concept to Legend’s other text-driven adventures: the player may opt for text-only input as well as selecting verbs from a list. Clicking on objects or characters within the graphical representation of the location provides a text description. Puzzles are mostly inventory-based, though there are logic-related tasks as well. The player character explores various planets during the course of the journey. In a few cases, it is possible to die in the game.The game runs on the Legend engine, which is also used by other Legend Entertainment titles such as Spellcasting 101, Timequest and Erik the Unready. There was some work done on implementing the Legend engine in ScummVM (see fork for details) but this work has stalled. If you’ve got some C++ chops and feel like taking a stab at continuing this work, progress is just a git clone away ;)The game starts off with a wall of text, a handful of static screens overlaid with more text, then you get dropped into the game world where you’re presented with a whole lot more text. I personally love text adventures, but if this is not your jam … you may not like this game.It’s actually worth calling out how much of this game involves massive walls of text and expository dumps. Seeing as this is based on a book (or series of books) AND it’s a text adventure none of this should be a surprise … but it’s still a LOT of reading.There are some characters you can interact with, which will change the view to show you a different view where that character dumps more narrative on you. As you’d expect by now, this will involve a lot more reading as … you guessed it … another wall of text is coming your way, but presented a little bit differently just to mix things up a bit.The game has a MIDI soundtrack with a handful of looping samples, and though there is a “viewport” on each screen that draws the current scene, this isn’t really required. You can switch to a pure text rendition of the game via the UI if you so choose, which just gives you more space to read what the games throwing at you in great, great detail.Though it may sound like I’m dumping on the massive amount of reading this game forces you to do, I actually quite like it. The game’s interface is extremely intuitive, and makes it fairly straightforward to determine what actions you can take on what screens, as well as what direction(s) you can move. There is a column of verbs you can click on (if you so choose), which when selected present you with what modifiers the verb expects, then another column of nouns that you can interact with.If you pay attention and actually read all the text that’s being thrown your way, progressing through the game isn’t overly difficult.What IS difficult (or at least frutstrating) is that there are a number of interactions in the game that require repeating the same action multiple times. For example, digging out the ore requires you to DIG ROCK twice, but this isn’t obvious based on the feedback the game gives you when you do it the first time.The second frustration would be the sheer volume of puzzles that require you to WAIT on a specific screen until a certain time for an event to be triggered. Typically the game will tell you where you need to be and at what time, but occasionally you’ll have to just keep typing WAIT, or WAIT UNTIL HH:MM to force a longer wait until a fixed time.I personally really dislike these types of puzzles in adventure games, as it feels like artificial padding. If you want me to hide in a box and wait for someone to come in and do something I’ll observe, make the act of hiding in the box be the event trigger …The story is split into 3 parts, with each being self contained but building on the events of the last part. For part 1 you’re introduced to the world, including the lore and background on the Gateway and the Heechee. You learn about exploring space as a prospector and how the game expects you to proceed. You’ll eventually join the Orion program and discover that humanity is in peril and only you can save them. You visit planets, activate these pillar things on each and that does …. something.Once you activate four of these monuments you find out you’ve alerted the big baddy who’s going to wipe out all of humanity - unless you stop them. This takes place inside a simulation or an AI or something, and involves solving more puzzles in some weird settings (like a random cocktail party, then hell).Though you’re typically not in any danger for most of the game, you can die in certain situations. Thankfully it’s really easy to save and restore here (it’s just another command) so it’s worth saving early and ofter. I found myself saving, then mashing WAIT on many screens just to see if it would trigger something to change. If it didn’t, I’d just RESTORE my last save and try something different.This game uses a similar engine to Companions of Xanth, but I’m guessing a much earlier version. Overall I actually really enjoyed playing through this title, and found it was reminiscent of some of my favourite menu-driven adventure games such as Shadowgate or Princess Tomato in the Salad Kingdom.The story is engaging, and though there’s a lot of exposition, you find yourself carefully reading everything that everyone says as the world that is being described is really interesting and immersive. I found myself having to use a walkthrough many times as I likely missed details I shouldn’t have glossed over, or I was just in the wrong place at the wrong time and had some WAITing to do …Gateway isn’t a game you’re going to play for the graphics, the sound effects or the music. If this was released by Sierra in 1982 you wouldn’t have been disappointed, and for adventure game fans that love story above all else, there’s plenty to enjoy here still.Game Information Game Frederik Pohl’s Gateway Developer Legend Entertainment Publisher Legend Entertainment Release Date June 1992 Systems DOS, Windows 95 Game Engine Legend My Playthrough How Long To Beat? 3.5 hours Version Played DOS via DOSBox-X Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 4 Story (25) 22 Experience (15) 8 Impact (10) 5   56% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "The Legend of Kyrandia: Fables and Fiends (Westwood Studios) - 1992", "url": "/blog/2023/11/24/the-legend-of-kyrandia/", "categories": "Let's Adventure!", "tags": "adventure, Westwood Studios, Virgin Interactive, Kyra", "date": "2023-11-24 06:19:38 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Dark Seed (Cyberdreams) ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Dark Seed (Cyberdreams) - 1992The Legend of Kyrandia: Fables and Fiends (Westwood Studios) - 1992→ Frederik Pohl's Gateway (Legend Entertainment) - 1992 Article 60 of 96 in this series.The Legend of Kyrandia: Fables and Fiends (or The Legend of Kyrandia: Book One) is a 2D point-and-click adventure game, and the first game in the Fables &amp; Fiends series. It was developed by Westwood Studios and published by Virgin Games in August 1992.Players take on the role of a young prince who must end the tyrannical chaos of an evil court jester in his kingdom. The game makes use of a simple interface system that allows the player to interact with objects and people, while solving various puzzles using a variety of items and special abilities.You start off with a decent cinematic sequence that introduces Kallak - a mystic - who’s also your grandfather. Your parents were murdered by the evil jester Malcolm, who shows up out of nowhere and turns Kallak to stone. He leaves a note behind that you’re supposed to show to Zanthia so she can tell you what to do next.Though the characters and plot are introduced quickly and simply, it’s a bit generic here and all you know is “I’ve got item A that needs to be taken to location A” … so off we go.Interacting with the game world is pretty straightforward and involves just clicking on everything. The cursor only changes shape to indicate a direction you can move, but if you can interact with something (or pick it up) you won’t know until you click on it. When you can pick something up, the cursor takes the shape of the thing you’ve grabbed, and you can either drop it or put it in one of the 10 inventory slots you have available.The birthstone puzzle is random every time you play, so just save every time you get one right and load when you don’tThe game will remember where you drop items, so though you have limited inventory slots, it’s really not a big deal. Some of the puzzles involve trial and error so you may want to collect a bunch of duplicates of items before attempting the puzzle. For example, the birthstone puzzle involves placing gems in a specific sequence (randomized on each playthrough). If you put the wrong stone on the alter, it vanishes and if you need the same stone later, you’ll have to go find it in the forest again.I picked up a bunch of duplicates before attempting this puzzle and just dropped them on the ground in front of the alter. Then as I muddled may way through the puzzle I had more than enough gems to eventually solve the sequence required to move on with the game.You’ll meet Malcolm pretty early in the game, but he just sort of taunts you and leaves you alone. He’ll show up again later to delay your progress but hiding a key item you’ll then need to find, but other than that he doesn’t really pose any sort of threat to you.I played through the DOS CD version of the game, so I got to “enjoy” the voice acting as a result. You can tell they swung for the fences a bit here - especially the actor that played Malcolm. It’s not the worst voice acting for this era of game … but it’s pretty bad.When Brandon tells you the snake poisoned him you should probably do something about itThe puzzles in this game really aren’t that difficult, and are typically just a series of fetch quests. There are a couple of ways that you can die, so it’s important to be diligent with your save-game hygiene. I got caught off guard a couple times and found myself replaying large sections of the game because I bumbled into a death scenario accidentally.Your main goal in this game is to amass magical power so that you can fight Malcolm and free Kallak from the stone spell that was cast on him. This is done by getting an amulet that displays in the lower-right portion of the screen as 4 stones. Each time you learn a spell one of these stones lights up, and if you click it you’ll cast that spell.Seeing as you only have 4 spell slots I would have expected magic to play a larger part in the game, but it really doesn’t. Heck, the spell that turns you into a pegasus is only used once and the final spell you learn from the ghost of your mother is used twice.Once you use these spells, all magic becomes unavailable, but these charge back up after a little while and you can use them again.For me, the biggest challenge of this game was navigating the maze that is the caves. You find yourself trapped after stepping on a pressure plate, and you’ll need to go collect bricks to weigh down a counterweight to reopen the gate. This involves navigating a maze, but any time you go to a dark room you’ll be killed.You find fireberries that you can pick up and drop to illuminate a room, but you can only move up to 3 rooms before the berries become ineffective. If you drop a berry it’ll keep that room lit thereafter, but you’ll need to make sure that once you run out of berries, the next room you go to contains a bush with more berries.A map of the caves is super helpfulThe ScummVM wiki helpfully shares a map of the caves, so I ended up using that to get through this section a bit quicker. Typically this type of spelunking involves getting 3 berries, going to one room, dropping a berry, saving, then going to the next room - rinse - repeat. If you run out of berries and die in the next room, reload and pick a different room.It’s tedious, but not overly challenging.Though you’re trying to get magic spells, the second half of the game also involves mixing potions that act as single-use spells. This was just another excuse to pad the game out with backtracking fetch-quests, as mixing the potions wrong involved depleting consumable items you’d then need to go back and re-fetch to try again in a different combination.I really didn’t enjoy this section as it felt forced and wasn’t really introduced meaningfully.You’ll eventually make your way to Kyrandia castle where Malcolm is, gain the final spell, navigate another maze, solve a couple more puzzles and face off with Malcolm. The final fight is a bit anticlimactic and just involves trial and error until you land on the right spell (make yourself invisible) and stand in the right place (in front of the mirror on the right).Malcolm casts the spell to turn you to stone, it bounces off the mirror and turns him to stone instead. This frees Kallak from his and you become the new king of Kyrandia. Mission accomplished!The first installment in the Legend of Kyrandia series is nothing groundbreaking. Some of the writing is clever and I really like the main villain, though he doesn’t really do anything during the game other than show up a couple times to delay your progress.If you’re going to play this game I’d recommend ScummVM with MT-32 device emulation for the music and sound. The music is much better in MT-32 mode, as are a lot of the adventure games from this era that supported this audio device.I’m looking forward to the sequels to this game, though the initial entry didn’t really make much of an impression.Game Information Game The Legend of Kyrandia: Fables and Fiends Developer Westwood Studios Publisher Virgin Interactive Release Date August 1, 1992 Systems Amiga, DOS, FM Towns, Macintosh, NEC PC-9801 Game Engine Kyra My Playthrough How Long To Beat? 3.5 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 14 Story (25) 12 Experience (15) 9 Impact (10) 4   56% Gallery" }, { "title": "Dark Seed (Cyberdreams) - 1992", "url": "/blog/2023/11/20/darkseed/", "categories": "Let's Adventure!", "tags": "adventure, Cyberdreams", "date": "2023-11-20 06:41:32 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← The Black Cauldron (Sier...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← The Black Cauldron (Sierra On-Line) - 1986Dark Seed (Cyberdreams) - 1992→ The Legend of Kyrandia: Fables and Fiends (Westwood Studios) - 1992 Article 59 of 96 in this series.Dark Seed is a psychological horror point-and-click adventure game developed and published by Cyberdreams in 1992. It exhibits a normal world and a dark world counterpart, which is based on artwork by H. R. Giger. It was one of the first point-and-click adventure games to use high-resolution (640 × 350 pixels) graphics, to Giger’s demand.You play Mike Dawson, an ad company manager who, in pursuit of his goal in life to become a writer, purchases a solitary mansion in a small town called Woodland Hills. Although the low cost and hush-hush transactions when purchasing the house do raise your suspicion, the solitary environment and sheer beauty of the house crush common sense and you decide to buy the house. That’s when the trouble begins. Upon reaching the house, you suddenly feel tired. You find a bed and fall asleep…… and wake up from a terrible dream, only to find out that your life has just become a worse nightmare: an unknown source has implanted a seed of darkness in your mind, and you only have three days to find a way to stop it.1Game error number 66 you say … I’m sure everything’s still fine though … right?I have a feeling this is an issue with the environment I was playing the game in, but I could not get past the first section of the game no matter what I tried. I would go through the initial motions to take a shower and take pills, go downstairs and answer the door, go outside and pick up the package … and the game would just restart! I honestly thought this was on purpose the first few times, but when I’d go to save or load the game it showed an error message … which seemed odd.It’s been a hot minute since I’ve busted out the ATTRIB commandAfter cruising the internet I stumbled on a discussion that seemed to cover the exact issue I was experiencing, and the solution was to change the properties of the installed files.On the off chance anyone reads this review that has this problem, the solution is to go to the install directory for Darkseed in DOSBox and run ATTRIB -R *.* to remove the readonly attribute on the game’s files.What a pretty doll someone sent me for some reason that isn’t suspicious at allOnce I could successfully pick up the package on Day 1, the game allowed me to progress an there were no further issues.Dark Seed takes place over the course of 3 days, with each day of game time taking roughly an hour of actual time. Time and timing is a huge factor in this game - certain events only happen at certain times, and if you take too much or too little time you can miss things. This is actually extremely frustrating as there’s typically no indication that a certain event will be triggered at a specific time.If it gets too late in the day Mike will decide it’s time for bed and go to sleep. Assuming you’ve done nothing about the headaches or you pass the 3 day mark, the alien embryo implanted in your brain will hatch and it’s game over.Seeing as time is such a huge element of this game, it’s a bit surprising that you don’t have a default mechanism at your disposal to tell time right from the beginning. You can find a watch in the attic (hidden under a trunk you need to push out of the way), or you can backtrack to your living room and look at the grandfather clock, but I would have expected it to be a lot more prominently displayed (maybe in the main game UI).The game’s Quick Reference Card tells you you can press the T key at any point to advance time to the top of the next hour in case you find yourself “with lots of time to kill”. They allude to the fact you need to wait around for certain events to trigger, but not what they may be, when they’ll occur or on what screens.My gameplay process (once I better understood the time mechanic) was to save the game, go to various screens and mash the T key a bunch of times to see if anything triggered before Mike said he was tired and it was time for bed. This would at least give me some clue as to what might be needed on that screen (and at what time). This isn’t particularly fun - but it at least helped me progress.The interface is that of a typical point-and-click game from this time period. You have your inventory at the top of the screen and a handful of interaction options you can cycle through by right-clicking the mouse. Mike can be moved around the screen, and if you mouse over a hot-spot you can cycle through various action icons like LOOK, TAKE, USE, etc.The game world is pretty small and is split into two main areas: reality, and the dark world. Reality is Mike’s house, the town and a cemetary. These make up about a dozen areas you can explore, which have a mirror version in the dark world. This is actually a pretty cool dynamic, as part of the puzzle solving process is changing things in reality to see how it changes the dark world.For example, when you get thrown in jail you can stash some items under the pillow. When you find yourself in jail in the dark world, those items will be waiting for you.Getting to the dark world is done by walking through the mirror in your living room. You need to fix the mirror first (it’s missing a chunk in the bottom corner that gets sent to you in the mail), but this happens pretty early in the game.Navigating the dark world is pretty straightforward once you realize it’s a mirror image of reality. There are some aliens you’ll need to interact with and a couple puzzles to solve, but you actually don’t have a whole lot to do here - which is a shame because it looks awesome.Since the artwork was inspired by H. R. Giger’s work, everything has this Aliens vibe. The creature designs definitely have that unique Giger style, and every cutscene plays out so much better as a result.Unfortunately it’s not obvious what you need to do most of the time, and it’s VERY easy to miss things and find yourself in an unwinnable situation. For example, if you enter the dark world too late in the day Mike might fall asleep on a random screen if he decides it’s bed time - and this results in you dying. The game doesn’t actually tell you that’s what’s happening though - you just randomly fall over and the game restarts.Save early, save often - maintain MANY save files!Most of the clues you get are from examining items you find along the way. They do help point you in the right direction most of the time, but this game can be pretty challenging where there are gaps in the narrative.As you proceed you’ll find yourself listening to the same short music samples looping on each screen. These are very repetitive and very annoying. You spend a lot of time roaming around your house, and the house “theme” is the worst of them all. If the goal was to create a sense of “you’re going insane” - mission accomplished!It’s a bit of a slog to get through this game, but thankfully it’s easy to find walkthroughs … and the game itself is pretty short.Apparently your objective was to smash the mirror in your house to sever the connection between reality and the dark world. Building the magic hammer you need to smash the mirror is the only item combination puzzle in the game, so it’s not intuitive - and also it’s not really obvious this is what you’re supposed to be doing.Regardless, you make this hammer, go back to reality to start the car in the garage, go back to the dark world to launch some spaceship (that is the mirror version of the car I think), go back to reality to smash the mirror and the game is over.I struggled a lot with the endgame as nothing you had to do made any sense. I tried … failed … consulted the walkthrough … and was done with it.You sell your house - game overThis game had a lot of promise. I really liked the premise, and the story is actually pretty interesting but you find yourself rushing through everything because of the rigid time mechanic.It’s also not a very hard game, though certain puzzles aren’t intuitive which can be frustrating.Though I wouldn’t recommend this game, I can’t say I had a bad time playing it. I’m actually looking forward to the sequel (Dark Seed II) to see how they build on the initial story and if they can iron out some of the rough edges.Game Information Game Dark Seed Developer Cyberdreams Publisher Cyberdreams Release Date 1992 Systems Amiga, Amiga CD32, DOS, Macintosh, Sega Saturn, PlayStation Game Engine   My Playthrough How Long To Beat? 1.5 hours Version Played DOS via DOSBox-X Notes Walkthrough, Quick Reference Card, Manual ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 16 Story (25) 17 Experience (15) 5 Impact (10) 3   59% GalleryFootnotes Description from Moby Games &#8617;&#xfe0e; " }, { "title": "The Black Cauldron (Sierra On-Line) - 1986", "url": "/blog/2023/11/14/the-black-cauldron/", "categories": "Let's Adventure!", "tags": "adventure, AGI, Sierra On-Line", "date": "2023-11-14 07:05:18 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Lost in Time (Coktel Vis...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Lost in Time (Coktel Vision) - 1993The Black Cauldron (Sierra On-Line) - 1986→ Dark Seed (Cyberdreams) - 1992 Article 58 of 96 in this series.The Black Cauldron is an adventure game designed by Al Lowe of Sierra On-Line and published in 1986. The game is based on the Disney film The Black Cauldron, which was itself based on the Chronicles of Prydain novel of the same name by Lloyd Alexander. It was made shortly after the first King’s Quest game, so it resembles that game in many ways. Along with The Dark Crystal it remains one of only a few adventure games by Sierra to be based on films.Though this game was released in 1986, I played the v2 release from 1988 which I believe is “updated” somewhat because it felt like I was playing King’s Quest III but using Roger Wilco from Space Quest I. If you look at the screenshots from the Apple IIgs release it looks more like KQ1.I tried watching the movie a bit while playing the game, but lost interest pretty quicklyHonestly, the movie this game was based on isn’t something I have fond memories of as a child. I seem to remember watching it and not really liking it as it felt like a lamer version of The Sword in the Stone (which I loved). I even had the movie playing in the background for a bit to see if I could get back into it … but I couldn’t.As a result, I had to rely on the story as the game presented it and couldn’t fill in the gaps from memory. This proved to be challenging as there’s really not much of an introduction - after the title screen you’re just dropped into the first scene in front of Dallben’s cottage. When you go inside he tells you to go feed your pig … because she’s special for some reason.To get into the cottage you have to DO the door once you walk up to it. This threw me off at first, as the game doesn’t have a text parser and you only have access to 3 verbs at any point: USE, DO and LOOK - with these all being mapped to function keys.Though it felt “wrong” at first, this interface was actually extremely innovative and forward thinking as the same concept would ultimately dominate the “point and click” variations of these games once using the mouse became the primary driver for interaction.If you replace the function keys with a command bar of actions (like in Sierra SCI games), or the context popup menus from LucasFilm games - this game did it first.This is an AGI game, so you primary navigate using the directional arrows on your keyboard - but you can also use the mouse. I found this incredibly useful for navigating tight diagonal sections such as climbing the rope to the Horned King’s castle. If you try and do this with incremental UP+LEFT presses, you’re going to fall - and you’re going to die.Since this is a Sierra game, death is around most corners. You also occasionally get thirsty or hungry, and if you don’t deal with that quickly - you die. Honestly this wasn’t too big of a challenge once you find the “food wallet” as it contains unlimited food, and the water flask can be filled to contain three or four drinks worth of water.Progressing through the game just involves mashing the LOOK and DO keys on most screens to identify what you’re supposed to interact with, then interacting with it. Since the same hotkey is used for opening/closing things, talking to characters, and picking up items you get used to the limited actions the game provides pretty quickly.Some locations (like the cupboard in cottage) contain multiple items. As you pick items up, if there’s something “behind” it, the game will show you this right away so you’re unlikely to miss anything. This is really helpful, though I did miss the lute the first time around because when you DO the hole in the tree the first time it just tells you there’s a lute there - the second DO actually picks it up.The game world is a lot smaller than most AGI games of this era, so it doesn’t take long to explore it all. Eventually you make it to the castle where there’s a princess you’re supposed to rescue - though I don’t remember her being introduced at any point before you find her.Once you find the room in the basement where she can squeeze through a hold and escape, she’s gone until the final credit sequence. I have a feeling based on the bit of the move I was able to watch that she’s a lot more important to the plot, but this isn’t really communicated by the game.You’ll find a sword in the castle that you can pick up and USE on the castle guard. If you don’t, he’ll catch you and it’s game over (except the first time you enter the castle and he throws you in the basement instead). Of all the items you can pick up and use, the sword is one of the only ones that you can “see” being used as the action of swinging it is animated. The other is the fairy dust, which if you sprinkle it you’ll be able to fly around for a few seconds, which is useful later in the game as it lets you skip jumping on stones to cross the swamp.Though you can use the other items they’ll just give you a description on screen as to what their effect (or lack thereof) was.Eventually you get to the 3 witches (I think that’s what they are) who you trade your sword to for the black cauldron, which is promptly stolen by a dragon and flown back to the Horned King’s castle. You then need to backtrack all the way to the castle, find the Horned King in the basement and show him the mirror - which makes him stumble backwards and fall into the cauldron.Playing through this game is predominantly silent. There is a title screen with PC speaker music, and some sound effects throughout (beeps and boops mostly) but that’s about it.Apparently this game actually has multiple endings and there’re some branching paths. The annoying monster you meet right at the beginning (Gurgi) can show up and jump in the cauldron at the end instead of the Horned King if you follow a certain path. This is apparently how the movie plays out (I had to look this up), which is kind of cool.Overall this game was just “Ok”. I thought replacing the text parser with a couple of function keys was an interesting choice and streamlined the interaction with the game world. This is definitely a very approachable adventure game, and though I didn’t fully watch the movie before playing it - it does seem to follow the plot. If you’re a fan of the movie I have a feeling you’d enjoy playing this game.I didn’t realize the movie this was based on was the first Disney animated film to (1) receive a PG rating, and (2) to include computer generated imagery. Considering this was released in 1985, the latter point is pretty impressive :)If you’re a fan of the movie, you might enjoy playing this game but as an adventure game fan I wouldn’t recommend it. For anyone looking for a Sierra AGI game from this era, there are better options.Game Information Game The Black Cauldron Developer Sierra On-Line Publisher Sierra On-Line Release Date 1986 Systems Amiga, Apple II, Apple IIGS, Atari ST, IBM PC Game Engine AGI My Playthrough How Long To Beat? 3 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 5 Story (25) 11 Experience (15) 5 Impact (10) 3   34% Gallery" }, { "title": "querySrv errors when connecting to MongoDB Atlas", "url": "/blog/2023/11/13/querysrv-errors-when-connecting-to-mongodb-atlas/", "categories": "MongoDB", "tags": "mongodb, drivers, networking, connections", "date": "2023-11-13 14:42:13 -0500", "snippet": "If your application uses MongoDB’s Node.js driver or Mongoose ODM, occasionally you may observe errors such as querySrv ECONNREFUSED _mongodb._tcp.cluster0.abcde.mongodb.net or Error: querySrv ETIM...", "content": "If your application uses MongoDB’s Node.js driver or Mongoose ODM, occasionally you may observe errors such as querySrv ECONNREFUSED _mongodb._tcp.cluster0.abcde.mongodb.net or Error: querySrv ETIMEOUT _mongodb._tcp.cluster0.abcde.mongodb.net being thrown. The MongoDB Atlas documentation outlines several methods to troubleshoot connection issues, including how to handle “Connection Refused using SRV Connection String” scenarios, but why does this happen in the first place?About DNS seedlistsTo coincide with the release of MongoDB 3.6, all drivers (at the time) implemented the initial DNS seedlist discovery specification to ensure connections could be established using the new SRV connection string format, as well as the legacy standard connection string format.This functionality was introduced to abstract away the complexity of MongoDB’s connection strings (for MongoDB Atlas users at least) by moving the component parts of a connection string to two DNS records: a service record (SRV) and a text record (TXT).Users now only need to supply a connection string such as mongodb+srv://&lt;username&gt;:&lt;password&gt;@cluster0.abcde.mongodb.net/myFirstDatabase, and regardless as to whether the underlying cluster was a replica set or sharded, the connection string would remain the same. Furthermore, use of mongodb+srv:// enables drivers to detect additions/removals of mongos in a sharded cluster1Tools such as nslookup or dig can be used to view the contents of these DNS records, such as in the following example:$ dig srv _mongodb._tcp.cluster0.abcde.mongodb.net; &lt;&lt;&gt;&gt; DiG 9.18.18-0ubuntu0.22.04.1-Ubuntu &lt;&lt;&gt;&gt; srv _mongodb._tcp.cluster0.abcde.mongodb.net;; global options: +cmd;; Got answer:;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 24529;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 1;; OPT PSEUDOSECTION:; EDNS: version: 0, flags:; udp: 65494;; QUESTION SECTION:;_mongodb._tcp.cluster0.abcde.mongodb.net. IN SRV;; ANSWER SECTION:_mongodb._tcp.cluster0.abcde.mongodb.net. 60 IN SRV 0 0 27017 cluster0-shard-00-01.abcde.mongodb.net._mongodb._tcp.cluster0.abcde.mongodb.net. 60 IN SRV 0 0 27017 cluster0-shard-00-02.abcde.mongodb.net._mongodb._tcp.cluster0.abcde.mongodb.net. 60 IN SRV 0 0 27017 cluster0-shard-00-00.abcde.mongodb.net.$ dig txt cluster0.abcde.mongodb.net; &lt;&lt;&gt;&gt; DiG 9.18.18-0ubuntu0.22.04.1-Ubuntu &lt;&lt;&gt;&gt; txt cluster0.abcde.mongodb.net;; global options: +cmd;; Got answer:;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 35223;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1;; OPT PSEUDOSECTION:; EDNS: version: 0, flags:; udp: 65494;; QUESTION SECTION:;cluster0.abcde.mongodb.net.\tIN\tTXT;; ANSWER SECTION:cluster0.abcde.mongodb.net. 60 IN\tTXT\t\"authSource=admin&amp;replicaSet=atlas-abcde-shard-0\"What can go wrong?MongoDB’s drivers require the information from both DNS queries in order to successfully establish, authenticate and authorize a connection to a MongoDB Atlas cluster. If either of these queries fail, only part of the connection string details will be present, and if the driver doesn’t error out right away, the subsequent connection attempt may be missing necessary information.For example, per the Authentication specification regarding connection string options, when it comes to selecting the authentication source: if authSource is specified, it is used. otherwise, if database is specified (in the connection string), it is used. otherwise, the admin database is used.Given this order of operations, if the SRV record resolves, but the TXT record doesn’t, assuming the driver doesn’t error out first the database provided in the connection string will be used for authentication. Using our original example of mongodb+srv://&lt;username&gt;:&lt;password&gt;@cluster0.abcde.mongodb.net/myFirstDatabase, the myFirstDatabase database will be used to authenticate …. which will result in an authentication failure such as MongoServerError: Authentication failed.Furthermore, though MongoDB’s drivers support automatic retryability of reads and writes, these DNS query failures aren’t retryable. There is currently a project proposed (DRIVERS-2757) to improve this in the future, but for now these errors bubble up to the application immediately.Can these issues be prevented?The best way to avoid these issues entirely is to just use the legacy standard connection string format. If you’re connecting to a replica set, the server discovery and monitoring functionality of each driver will ensure topology changes are automatically discovered.Note that this will prevent new mongos’ from being discovered in a sharded cluster, however if you don’t anticipate these to change frequently this will likely be a non-issue as well.Are other drivers affected?Failure to resolve DNS records can affect all MongoDB drivers, however it’s highly unlikely you’ll actually encounter this in a production setting. As there still remains a non-zero chance this issue will manifest, here are some examples of failures you may see from other drivers:Ruby driverMongo::Error::NoSRVRecords: The DNS query returned no SRV records for 'cluster0.abcde.mongodb.net'Java driver or Spring Boot MongoDB# Example 1Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, srvResolutionException=com.mongodb.MongoConfigurationException: Unable to look up SRV record for host cluster0-shard-00-01.abcde.mongodb.net, servers=[]}# Example 2Caused by: com.mongodb.MongoConfigurationException: Unable to look up SRV record for host cluster0.abcde.mongodb.net at com.mongodb.internal.dns.DnsResolver.resolveHostFromSrvRecords(DnsResolver.java:79) at com.mongodb.ConnectionString.&lt;init&gt;(ConnectionString.java:321) at com.mongodb.MongoClientURI.&lt;init&gt;(MongoClientURI.java:234)Python driver# Example 1pymongo.errors.ConfigurationError: The DNS query name does not exist: _mongodb._tcp.cluster0.abcde.mongodb.net.# Example 2Exception has occurred: ConfigurationErrorThe DNS operation timed out after 20.001205682754517 secondsdns.exception.Timeout: The DNS operation timed out after 20.001205682754517 secondsC#/.NET driver# Example 1cluster0.abcde.mongodb.net IN TXT on x.x.x.x:53 timed out or is a transient error. A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.# Example 2DnsClient.DnsResponseException:at DnsClient.LookupClient.ResolveQuery (DnsClient, Version=1.6.0.0, Culture=neutral, PublicKeyToken=4574bb5573c51424)at DnsClient.LookupClient.QueryInternal (DnsClient, Version=1.6.0.0, Culture=neutral, PublicKeyToken=4574bb5573c51424)at DnsClient.LookupClient.Query (DnsClient, Version=1.6.0.0, Culture=neutral, PublicKeyToken=4574bb5573c51424)at MongoDB.Driver.Core.Misc.DnsClientWrapper.ResolveTxtRecords (MongoDB.Driver.Core, Version=2.15.1.0, Culture=neutral, PublicKeyToken=null)at MongoDB.Driver.Core.Configuration.ConnectionString.Resolve (MongoDB.Driver.Core, Version=2.15.1.0, Culture=neutral, PublicKeyToken=null)at MongoDB.Driver.MongoUrl.Resolve (MongoDB.Driver, Version=2.15.1.0, Culture=neutral, PublicKeyToken=null)at MongoDB.Driver.MongoClientSettings.FromUrl (MongoDB.Driver, Version=2.15.1.0, Culture=neutral, PublicKeyToken=null)# Example 3System.TimeoutException: A timeout occured after 30000ms selecting a server using CompositeServerSelector{ Selectors = MongoDB.Driver.MongoClient+AreSessionsSupportedServerSelector, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0200000 } }. Client view of cluster state is { ClusterId : \"1\", ConnectionMode : \"Automatic\", Type : \"Unknown\", State : \"Disconnected\", Servers : [], DnsMonitorException : \"DnsClient.DnsResponseException: Query 54148 =&gt; _mongodb._tcp.cluster0.abcde.mongodb.net IN SRV on x.x.x.x:53 timed out or is a transient error. ---&gt; System.Net.Sockets.SocketException (110): Connection timed out at System.Net.Sockets.Socket.Receive(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags) at DnsClient.DnsUdpMessageHandler.Query(IPEndPoint server, DnsRequestMessage request, TimeSpan timeout) at DnsClient.LookupClient.ResolveQuery(IReadOnlyList`1 servers, DnsQuerySettings settings, DnsMessageHandler handler, DnsRequestMessage request, LookupClientAudit audit) --- End of inner exception stack trace --- at DnsClient.LookupClient.ResolveQuery(IReadOnlyList`1 servers, DnsQuerySettings settings, DnsMessageHandler handler, DnsRequestMessage request, LookupClientAudit audit) at DnsClient.LookupClient.QueryInternal(DnsQuestion question, DnsQuerySettings queryOptions, IReadOnlyCollection`1 servers) at DnsClient.LookupClient.Query(DnsQuestion question) at DnsClient.LookupClient.Query(String query, QueryType queryType, QueryClass queryClass)PHP driverFatal error: Uncaught MongoDB\\Driver\\Exception\\InvalidArgumentException: Failed to parse URI options: Failed to look up SRV record \"_mongodb._tcp.cluster0.abcde.mongodb.net\": The requested name is valid but does not have an IP address.Go drivererror parsing command line options: error parsing uri: lookup cluster0.abcde.mongodb.net on x.x.x.x:53: cannot unmarshal DNS messageNote that (per the MongoDB Go driver documentation): Building with Go 1.11+ and using connection strings with the mongodb+srv scheme is unfortunately incompatible with some DNS servers in the wild due to the change introduced in https://github.com/golang/go/issues/10622. You may receive an error with the message “cannot unmarshal DNS message” while running an operation when using DNS servers that non-compliantly compress SRV records. Old versions of kube-dns and the native DNS resolver (systemd-resolver) on Ubuntu 18.04 are known to be non-compliant in this manner. We suggest using a different DNS server (8.8.8.8 is the common default), and, if that’s not possible, avoiding the mongodb+srv scheme.DNS is hard …It sure can be, as intermittent/transient network events can also impact MongoDB drivers’ ability to resolve DNS queries. The drivers (typically) rely on low-level OS APIs (such as getaddrinfo) for network address and service translation. As such you may occasionally get errors such as MongooseServerSelectionError: getaddrinfo EAI_AGAIN cluster0-shard-00-01.abcde.mongodb.net even when using the legacy (mongodb://) URI scheme.Footnotes Sharded clusters could detect additions/removals of mongos’ if the driver(s) have implemented the polling SRV records for mongos discovery specification &#8617;&#xfe0e; " }, { "title": "Lost in Time (Coktel Vision) - 1993", "url": "/blog/2023/10/26/lost-in-time/", "categories": "Let's Adventure!", "tags": "adventure, Coktel Vision, Sierra On-Line", "date": "2023-10-26 20:13:12 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Adventureland (Adventure...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Adventureland (Adventure International) - 1982Lost in Time (Coktel Vision) - 1993→ The Black Cauldron (Sierra On-Line) - 1986 Article 57 of 96 in this series.Lost in Time is a computer adventure game developed and published by Coktel Vision in 1993. It was promoted as being “The first Interactive Adventure Film using Full Motion Video Technology” and contained four graphical elements: full motion video, hand painted and digitized backgrounds and 3D decor.This game had a lot of promise based on the description, and when I started reading up on the story I got a little excited. Unfortunately, that didn’t last and as soon as you start playing this game you realize it’s just not that good.Lost in Time doesn’t really introduce the story at all as the game sort of just “starts” in the hold of a ship. You’ll piece together bits of backstory as you go and discover there’s some undertones of time travel and you’re at the center of it all somehow but it didn’t really flow very well.Eventually you’ll open a door and find Melkior, who is a member of the time police or something to that effect. You’ll need to free him, but this will involve solving a bunch of item combination puzzles, which first involves finding the items.This game is one giant fetch quest, but it manages to execute these in the most obtuse and least fun ways possible. Each static screen only has a handful of hot-spots you can interact with so it’s not too difficult to identify what you need to click on, but it’s not obvious that you’ll need to revisit some of these repeatedly.You’ll see this screen a lot throughout the gameThere were a couple releases of this game - text only and fully voice acted. I opted for the latter, which in hindsight was a mistake. The voice acting in this game is atrocious. The lip synching is typically off (which is fine for 1993), but the actors are really shooting for the moon with their performances. It doesn’t help that every time Doralice (the protagonist) has anything you say you get this same visual representation of half her face moving up and down.It was a missed opportunity when they released this game on CD that they did’t include the subtitles that were present in the disk version. The voice acting is slow and drawn out - and you can’t skip any of it. I’m fairly certain you couldn’t make the text advance any faster in the disk version but it felt less irritating none the less.What are jokers and why do I have three of them?The game has (what I believe to be) a hint system called “Jokers”. The game doesn’t give you any indication what these are, why they’re limited, or why they’re only present in select places. Even going back and reading through the game’s manual only tells you: “There are a few “jokers” available in various places throughout the game that will give you some hints if you are stuck. You are only allowed to use three”If you’re curious to play this game give the manual a read as it does introduce the game’s concepts and characters much better than the game itself does.To play this game is to just click every labelled hotspot (multiple times), then try and combine everything with everything. For the limited number of interactive areas per screen there are A LOT of items you’ll need to collect, combine and try on each screen. Since this is an adventure game this mechanic isn’t surprising, but the types of item combinations you need to perform are unintuitive in many cases.You’ll also need to be aware of items that contain other items that you’ll need to “remove” from their containers to use them properly. You may also find yourself combining items “in the wrong order” which doesn’t give you any indication that you’re doing something wrong …Since there’s going to be a lot of backtracking it is convenient that the game gives you a fast-travel map. There are only three “levels” in this game, so there’s really not much you need to explore, but the sheer amount of backtracking to these static screens just to attempt to use every new item with every existing item and every possible hotspot draws this out unnecessarily.The reviews of this game (at time of release) were generally positive for how the live-action video was incorporated. Honestly it’s pretty hard to watch and feels out of place and not overly well done. Seeing as this game came out the same years as The 7th Guest and Myst you can’t even point to it and say “well, it was good for 1993”.Unfortunately it’s not just the video and voice acting that sucks in this game. The sound effects feel out of place throughout the game and really give you the sense that they’re just stock effects the developers threw together. Overall it’s just not a good game.OMG THE GAME ENDS WITH HIM LOOKING AT THE CAMERA AND FUCKING WINKING!!!Lost in Time is not fun. So far Coktel Vision games just aren’t very good … and there are still many more to go in this series. It’s so frustrating that you need to “re-look” at many areas in this game after you pick items up as they may contain another item that wasn’t visible when you first inspected the area. For example, there’s a drawer you open at one point to pick up a diary … then if you click the drawer again you open it more to find something else. WHY NOT JUST SHOW 2 ITEMS IN THE DRAWER THE FIRST TIME???You can also miss items easily, and will lose the game if you don’t remember to “remove” the flower from the bag on the last screen before catching the snake and throwing the bag in the fire. Why you ask? Because you need to throw the flower at the main antagonist to make him sneeze and fall to his death off a log bridge you somehow find yourself on for the final conflict.I really wanted to like this game, but I really didn’t. I wouldn’t recommend this to anyone.Game Information Game Lost in Time Developer Coktel Vision Publisher Coktel Vision, Sierra On-Line Release Date 1993 Systems DOS Game Engine Gob My Playthrough How Long To Beat? 4 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 4 Story (25) 5 Experience (15) 2 Impact (10) 2   19% Gallery" }, { "title": "Adventureland (Adventure International) - 1982", "url": "/blog/2023/10/24/adventureland/", "categories": "Let's Adventure!", "tags": "adventure, Adventure International", "date": "2023-10-24 06:59:43 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Rendezvous with Rama (Te...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Rendezvous with Rama (Telarium) - 1984Adventureland (Adventure International) - 1982→ Lost in Time (Coktel Vision) - 1993 Article 56 of 96 in this series.Adventureland is a text adventure video game for microcomputers released by Scott Adams in 1978. The game has no plot but simply involves searching for thirteen lost artifacts in a fantasy setting. Its success led Adams to form Adventure International which went on to publish thirteen similar games in the Adventure series, each in different settings.I opted to play the Commodore 64 release of this game as it was a slight upgrade to the original text adventure format. This also gave me a chance to try out a new emulator - VirtualC64. If you’re an OSX user I would highly recommend this as Dirk Hoffmann has created an extremely intuitive user experience here (as he did with vAmiga).The game’s “UI” is split into three parts. You have the visualization of the room on the top half and the text parser on the bottom half, but if you press ENTER the visualization is replaced with a description of the scene.Press ENTER for a summary of the screen including exits and itemsOnce you realize that this third view exists the game gets a lot easier as all exits and items you can collect become obvious. The goal of the game is to just pick up various “treasures”, which you’ll have to drop into a stump on one screen until you’ve found them all.There’s no real plot to this game - it’s just a treasure hunt. Dropping and picking up items is pretty important though as you need to collect the various treasures, but you can only carry so many items at once.Having the visualization of the scene is useful as it can give you clues as well. It’s not obvious that you “extinguish” the lamp when you’re not using it by issuing a UNLIGHT LAMP command - until you enter the maze and see that verb on the wall. I’m assuming this would be presented in the original TRS-80 text adventure as just part of the scene description, but I appreciated this additional use of the “eye candy” to convey practical information.Speaking of the TRS-80 version, SoftSide magazine’s July, 1980 edition included the full TRS-80 source code that you could manually type out yourself!Oh I see, I just need to DAM LAVA to proceed. So obvious …For a graphical adventure game released in 1982 the game is what you’d expect. The static scenes aren’t bad, the parser is extremely limited and some of the verb/object combinations are a bit cumbersome to come up with, but overall the game does a good job of guiding you.There are no sound effects or music or story - and the game is incredibly short. It took me about half an hour to work through this, though the How Long To Beat timing is apparently only 5 minutes.Find all 13 treasures, drop them in the stump … and that’s all she wroteTo make this game a bit more challenging there are a handful of ways you can die (ex: carrying the mud to the screen where the dragon is). When this happens you wind up in Limbo, where you just walk through a door that results in you “restarting” the game from the beginning. You can also reach a dead end by doing certain actions too early (ex: chopping down the tree before climbing it to pick up the skeleton keys).This is a very early adventure game - and an improvement to an even EARLIER adventure game at that! It doesn’t really do anything new or innovative compared to other games released around this time so I can’t find any reason to recommend it. If you feel ambitious and want to type out the source code, go for it - or head on over to this GitHub repository instead ;) There’s a great companion article called “Digging up Adventureland (Scott Adams, 1980)” that details the creation of that BBC BASIC port of the TRS-80 code.Game Information Game Adventureland Developer Adventure International Publisher Adventure International Release Date 1982 Systems TRS-80, Commodore PET/CBM, Exidy Sorcerer, Apple IIAtari 8-bit, VIC-20, TI-99/4A, Commodore 64,TRS-80 CoCo, BBC Micro, Dragon 32/64, Electron Game Engine   My Playthrough How Long To Beat? 0.5 hours Version Played Commodore 64 via VirtualC64 Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Graphics (10) 4 Sound (10) 0 Plot / Progression (25) 2 Characters / Development (15) 1 Gameplay / Experience (15) 4 Replayability (10) 0 Impact / Impression (10) 2 Bonus / Surprise (5) 0   13% Note that I overhauled my scoring criteria in August of 2024, and the score above is the revised score for this game.See below for the original score based on the original scoring criteria. Atmosphere (20) 4 Story (25) 2 Experience (15) 3 Impact (10) 1   14% Gallery" }, { "title": "Rendezvous with Rama (Telarium) - 1984", "url": "/blog/2023/10/07/rendezvous-with-rama/", "categories": "Let's Adventure!", "tags": "adventure, Telarium", "date": "2023-10-07 08:43:24 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Blade Runner (Westwood S...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Blade Runner (Westwood Studios) - 1997Rendezvous with Rama (Telarium) - 1984→ Adventureland (Adventure International) - 1982 Article 55 of 96 in this series.Rendezvous with Rama is an interactive fiction game with graphics published by Telarium, a subsidiary of Spinnaker Software, in 1984. It was developed in cooperation with Arthur C. Clarke and based upon his 1973 science fiction novel Rendezvous with Rama.After an uncatalogued giant asteroid is discovered approaching Earth, scientists soon realize that it is in reality an alien starship. As commander of the spaceship Endeavor, and being the nearest to the gargantuan ship, it is up to you to rendezvous with it and explore it before it leaves the Solar system.I was actually really excited to play this game as I was a huge fan of the books in my early teens. The Rama series of books were one of the few full series I actually re-read more than once (along with Ringworld and Dune). Since this was an earlier adventure game I expected the experience to be a lot more akin to an interactive fiction game than an adventure game … which turned out to be a pretty accurate assessment.You start off in your ship, and the first order of business is to get to the navigation console to maneuver towards the giant ship you’re there to investigate. This is done by choosing a direction (ex: EAST), which will redraw the screen with an updated description of where you are and some clues as to what you can interact with. Once you get to the navigation console you can either turn on the autopilot, or you can manually try to dock with RAMA. I opted for the autopilot, so I’m not really sure how difficult the manual approach would have been.Once docked, you put on your spacesuit, navigate the airlock and are onboard the ship. From here you start moving around from screen to screen trying to figure out what this ship is and what secrets it holds. Every screen is extremely well described, so it’s pretty obvious what you can interact with … but it’s not always obvious how you’re supposed to describe your interactions.The latter half of the game requires you to use your simp companion (a monkey named Goldie) to follow instructions to help you solve various puzzles. The instructions need to be incredibly precise or else you’ll just get a generic error. For example, GOLDIE CLIMB UP won’t work, but adding a comma and issuing GOLDIE, CLIMB UP will.I’ll be perfectly honest, I needed to rely pretty heavily on the walkthrough to get through this game as I was not having a great time getting the commands entered in a way that would please the game’s parser.Dragonfly sequence from the Apple II releaseThis game was one of the first titles I picked up for this series, but I found myself getting stuck and unable to progress almost a dozen times. I played both the Commodore 64 and Apple II versions at least a handful of times, and each time I’d get to an area of Rama where I’d try to descend into a pit and the game would just freeze.There’s a sequence where you need to play through an arcade game on your flying craft called the dragonfly. If you fail the minigame you just crash land in the same spot you’d end up in if you won, so I didn’t think much of it. After getting stuck in 2 different versions of the game after crashing I thought maybe you need to win the minigame to progress.I did this on the Apple II release, won, made my way through Rama to the spot I kept getting stuck at …….. and still got stuck. I don’t know if there’s an issue with the ROMs I found for these systems, but I replayed the first half of this game more times than I’d like to admit.The DOS release of the game doesn’t include the minigame at all, which is why I ended up playing through that version. It wasn’t for lack of trying with the Commodore 64 or Apple II releases though, as I enjoyed those versions a little better.When comparing the visuals of the DOS port to the others, the colour palette is just bland. Most screens only have 2 colours and tend to look like baby puke on the screen. The other ports tried a bit harder and blended up to 4 colours per screen, which was noticeably more visually appealing.You’ve only got a limited amount of time to investigate Rama, as the ship is on a crash-course with the sun. Once you get through the game and return to your ship you discover Rama is actually navigating around the sun to use the gravitational force to slingshot itself out of our solar system.I’m pretty sure this game follows some elements of the book pretty closely, but I don’t remember there being any monkeys you needed to rely on to solve puzzles. It’s been at least 30 years since I last read the book so it’s possible I’m misremembering and the story of the game is even more faithful to the source material than I think it is.This is a very story heavy game without really much to do. There is some PC speaker style beeps and boops for music and sound effects on certain screens, but nothing outstanding. I can’t hold this against a game from 1984 though, so I applaud the effort.Having finished the game I’m motivated to revisit the story again - but I think I’ll just listen to the audiobook this time around. Though it was nice to spend some time in this world again, I don’t think I’d recommend the game to anyone - but if you’re looking for a good book …Game Information Game Rendezvous with Rama Developer Telarium Publisher Telarium Release Date 1984 Systems DOS, Commodore 64, Apple II Game Engine Spinnaker Adventure Language (SAL) My Playthrough How Long To Beat? 4 hours Version Played DOS via DOSBox-X Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Graphics (10) 4 Sound (10) 1 Plot / Progression (25) 13 Characters / Development (15) 8 Gameplay / Experience (15) 3 Replayability (10) 0 Impact / Impression (10) 2 Bonus / Surprise (5) 0   31% Note that I overhauled my scoring criteria in August of 2024, and the score above is the revised score for this game.See below for the original score based on the original scoring criteria. Atmosphere (20) 5 Story (25) 15 Experience (15) 2 Impact (10) 2   34% Gallery" }, { "title": "Blade Runner (Westwood Studios) - 1997", "url": "/blog/2023/10/05/blade-runner/", "categories": "Let's Adventure!", "tags": "adventure, Westwood Studios, Virgin Interactive Entertainment", "date": "2023-10-05 05:25:07 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Ripper (Take-Two Interac...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Ripper (Take-Two Interactive) - 1996Blade Runner (Westwood Studios) - 1997→ Rendezvous with Rama (Telarium) - 1984 Article 54 of 96 in this series.Blade Runner is a point-and-click adventure game developed by Westwood Studios and published by Virgin Interactive for Microsoft Windows, released on November 14, 1997. The game is not a direct adaptation of the 1982 Ridley Scott film Blade Runner but is instead a “sidequel”, telling an original story, which runs parallel to the film’s plot, occasionally intersecting with it.Set in 2019 Los Angeles, the game tells the story of Ray McCoy, an elite detective charged with hunting down a group of dangerous replicants (bioengineered androids designed to look and act like humans). Although several of the film’s characters appear in the game, with some of the original actors returning to voice them, the film’s protagonist, Rick Deckard, does not appear in a speaking role. Instead, he is referred to on multiple occasions, is seen several times, and his activities as depicted in the film are mentioned. Other parallels with the film include the reproduction of several prominent locations, as well as scenes and dialogue closely modelled on the original. The game also features extracts from the film’s soundtrack.When the game starts you’re investigating an attack at an animal store. Apparently the place has been shot up, but it doesn’t appear to be a robbery so McCoy is tasked with trying to find out who did it an why. This is done by sweeping the cursor over the scene to see when it either turns green (so you can interact with something), or blue (so you can move in that direction).This game has an interesting character interaction mechanic, as you can select a Conversation Choice from you options screen before engaging in a conversation. These choices set the tone for the conversation and depending on what you pick can effect the information you get back. This is what I assumed at least, but I only played around with it at the very beginning of the game, then set it to the question mark and sort of just left it there.The KIA, which is your personal computer (and where you change options or save/load the game) is also where you can review the evidence you’ve collected during your investigation. This is extremely helpful as you can review conversations you’ve had, as well as see what evidence you’ve picked up or hardcopies you’ve printed while analyzing photos.Remember that scene in the movie where Deckard is enhancing a photo? You guessed it, that mechanic makes its way into this game, and is actually used a few times to advance the plot. Honestly I remember when I originally played this game I spent a lot of time with each photo you get access to just trying to enhance every possible section to see if it hid more clues.It’s pretty cool how these 2D photos can be sort of navigated in 3D, as you can uncover details “behind” or “around” certain sections to make details appear such as faces.Not all aspects of the movie translate to “fun” when made into playable elements of the game. The Voight-Kampff test that is used to determine if someone is a replicant or human can be administered to various characters, but I found that it was more tedious than enjoyable. You’re basically just clicking one of three buttons to ask questions of varying degrees of “difficulty” to the subject. You don’t see the subject reacting - just a picture of an eyeball and an arbitrary meter than is supposed to (I think) show “reaction time”.I sort of just kept mashing the buttons until the game decided on a result and I was allowed to move on.There are a handful of characters you can interact with throughout the game, and as you progress you’ll be given certain dialogue options you can use to learn more about your investigation. You can only ask characters about a certain topic once (in most cases), so it’s extra helpful that anything important to the main story is also captured in your KIA as evidence so that you can revisit it later if needed.This game is fully voiced, and the voice actors are quite good. The background music is also very atmospheric and borrows heavily from the movie. This makes for an extremely immersive experience.Your job as a blade runner is ultimately to “retire” replicants. As such, you’ve got your trusty sidearm with you at all times, which you can whip out pretty much any time and start firing. There’s a firing range at the police station you can visit at any point and run through to get some practice, and you will need to take out a couple characters (and some rats in the sewers), but overall the gun plays a pretty minor role over the course of the game.There are three different difficulty levels you can play through the game at (Easy, Normal, Hard), and I opted for easy. This gives you unlimited ammo and I’m assuming also makez it easier to kill your targets … and possibly some other things I didn’t notice.Overall I’d say this is a pretty solid, well made game … but the cutscenes are awful. For a game made in 1997 the character models are rigid and lack emotion, the lip syncing is terrible at best and the movements are wooden. It really detracts from an otherwise excellent game as it feels like it was slapped together. Seriously, when you watch the cutscenes it looks like someone made a stop-action video with marionettes.For me, the story is everything in these games … and Blade Runner doesn’t disappoint. Since it’s based in the same “universe” as the original movie you get to enjoy some minor crossovers, but overall it’s a new adventure that leverages the elements of the movie that made it a cult classic. Your humanity is brought into question, you’re framed for a crime and need to clear your name and your decisions throughout the game have consequences.There are multiple endings, but I didn’t go back to try any of these out. I do think it’s pretty cool that the game leaves it up to you how you want to finish act 5 and decide “which side you’re on”.I’ve had this game on my short list for almost a decade because I remember owning this when it came out and never finishing it. I was a huge fan of the movie and had fond memories of the game’s story as well, but never managed to make it more than half way through at the time.When the reverse engineering began and it looked like this game would be playable in ScummVM I got extremely excited. This game was recently re-released as the “Enhanced Edition”, but apparently that version was so badly done they re-re-released it with the 1997 version. The ScummVM devs really did some great work bringing this game back for modern systems, and I believe they also added the subtitles to the game.Cutscene quality aside, I’d recommend this game to any adventure game fan - as long as they’re playing the original release via ScummVM ;)Game Information Game Blade Runner Developer Westwood Studios Publisher Virgin Interactive Entertainment Release Date November 14, 1997 Systems Windows Game Engine BLADERUNNER My Playthrough How Long To Beat? 7.5 hours Version Played Windows via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 16 Story (25) 19 Experience (15) 8 Impact (10) 4   67% Gallery" }, { "title": "Ripper (Take-Two Interactive) - 1996", "url": "/blog/2023/09/27/ripper/", "categories": "Let's Adventure!", "tags": "adventure, Take-Two Interactive", "date": "2023-09-27 05:54:42 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Manhunter 2: San Francis...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Manhunter 2: San Francisco (Evryware) - 1989Ripper (Take-Two Interactive) - 1996→ Blade Runner (Westwood Studios) - 1997 Article 53 of 96 in this series.Ripper is a 1996 interactive movie point-and-click adventure game developed and published by Take-Two Interactive for MS-DOS and Macintosh. The cast includes Christopher Walken, Paul Giamatti, Karen Allen, Burgess Meredith (in his final performance before his death the following year), David Patrick Kelly, Ossie Davis, and John Rhys-Davies. The villain of the game is chosen at random from the four main characters. A limited number of the clues and puzzles, plus a single line of dialogue in the ending, change according to the villain’s identity.This is an FMV game, so you start off with an intro movie that sets up the premise for the game. Right away you’re drawn into this world as the credits roll and you realize the cast is a bunch of actual actors - all while Blue Öyster Cult’s (Don’t Fear) The Reaper plays in the background. This interactive movie is going to play out more like a movie than a game … I can feel it … and I’m fucking excited!Once the opening sequence completes you find yourself in a room with Detective Magnotta, played by none other than Christopher Walken. He delivers his lines in a very “Walkenesque” fashion, which just further draws you into the game world right off the hop. As a meta note, Walken and Don’t Fear the Reaper would be reunited a few years later on the SNL skit “More Cowbell”.You play the part of a reporter - Jake Quinlan - who is covering the Ripper murders. Apparently the Ripper communicates with you directly for some reason, so you find yourself on at the scene of a murder where you first meet Magnotta. There are a very limited number of things you can do in the game world, so you sweep the mouse over the screen to see if the cursor changes to a different kind of icon.Basically you can move around, inspect, pick up, use or talk - typical adventure game actions. Unlike most adventure games though, these actions are very intentional on their targets so you can’t pick the wrong one. If you can talk to a character, that will be your only option on that scene.When you have the option to interact with a character this is done with a simple list of topics. As you progress through the game additional topics will become available for various characters depending on other interactions you’ve had with the game world. You’ll need to pay extremely close attention to everything everyone says as most conversations can’t be repeated and it’s easy to miss a clue or a cue that lets you know where to go next.The game actually comes with a built in notebook you can use to record clues as you progress. This is an interesting mechanic, but it would be way more useful if it would record the clues for you automatically. Other than near the end of the game, unless you manually enter content into the notebook it will just remain empty.This seems like a missed opportunity, as this game is very easy to get lost in which will result in a lot of backtracking and questioning everyone repeatedly to see if there are any new conversation topics. This can very quickly become tedious.Though the actual gameplay of this “game” can be a bit annoying and repetitive, the acting in the cut scenes and character interactions more than make up for it. The underlying story of the game, including your pursuit of the Ripper and the backstory of the main characters, how they’re connected and how they’re all connected to the ripper murders is fantastic. I found myself rushing through the actual interactive elements of this game just so I could get the story to progress as the story is what really shines through here.Parts of this game take place in cyberspace. Your “data angel” interfaces with a list of virtual icons that lead to “wells”. These wells contain clues, story elements or software. Each well requires a password, which will either be written down somewhere or shared via a conversation. It is so easy to miss these passwords and get stuck, so you’ll likely find yourself referring to a walkthrough in order to progress through this game … I know I did.Once you finally get into a well, chances are you’ll either be presented with a combat sequence or a puzzle. This is where the game really fell apart for me, because I fucking hated every single one of these sequences.The puzzles are brutally hard. I did not enjoy a single one of these and either looked up the solution or skipped the sequence entirely. I’m pretty sure the developers knew they were artificially padding the game with this bullshit because there’s a cheat code you can use to skip literally every puzzle or combat sequence. I’m just going to list them here (copied from cheatbook.de) in case you happen to take a run at this game after reading this review and find yourself as frustrated as I was and looking for a quick way to progress:Puzzle in Catherine's Appartment - PISCESCatherine's Well - ARCADEFalcon Eddie's Well - PARADISECatherine's Brain - CAFFEINEWeb Runners' Well - ZZTOPDr. Burton's Secret Lab - SPARKYFalcon Eddie's Secret Well (Puzzle) - HEADACHEFalcon Eddie's Secret Well (Book) - SPONGEWeapon 1 Well - ASPIRINAnti-Viral Well - RETZELAnti-Rival Well puzzle - exterminatorWarp Space puzzle - warpWofforod's Well puzzle - vulcanJust type these passwords in at the beginning of the sequence and you’ll skip it entirely.As you investigate you’ll find things you can scan into your WAC, which is a portable computer/phone/database thing. Clues are stored here, and some of them can be interacted with if you find pieces of software to do so. For example, you’ll need to unlock an audio-lock at some point, so you’ll record a conversation with someone then use audio editing software to rearrange the clip into a voice key.Actually as soon as the game begins Magnotta throws a cup on the ground and breaks it. You need to reassemble this in your WAC (after picking it up) to get a clue that’s written on the cup. This sequence is a pain in the ass, so you basically have 5 minutes of gameplay before the game gets in the way of the story :POccasionally the game will alert you that you have an incoming WAC transmission. These are used to progress the story once you’ve exhausted the various conversation topics and have analyzed and picked up everything in all available locations. When I first started playing the game I had nothing but problems with the WAC as the videos didn’t render properly. It turns out this is a problem with the game itself; not DOSBox. You need to ensure you’ve patched the game to at least version 1.05 as this addresses a number of video issues, so make sure you do this before you start playing.The CG in this game is sort of what you’d expect for this time period … not great. All video is also super heavily compressed so there are artifacts galore, and a low framerate as well. I honestly didn’t find it detracted too much from the experience though as the acting more than made up for the visual quality.My main gripe though, was that I found myself constantly switching CDs. Yeah I know this is an old game, and FMV games typically were multi-disc, but when playing in 2023 this is frustrating enough to be worth mentioning. There are 6 discs to this game, so you’ll be prompted to switch discs pretty often.It takes a lot of slogging, but you’ll eventually find your way to virtual White Chapel where you confront the ripper … after solving one more meaningless puzzle. So many puzzles …This game would have made a good movie. As a game it sort of sucks. The puzzles are brutally hard, the actual interactive elements are sort of boring and navigating between scenes is painfully slowly and purposely drawn out. I would highly recommend reading the Wired article about the game’s development and maybe just watching a longplay on YouTube if you’re looking to experience Ripper.I had extremely high hopes for this game given the A-list cast, an extremely interesting premise and story line and elements of cyberpunk, but the game fell flat. I wouldn’t recommend playing this, though it might be worth checking out clips just to experience some of the performances the actors give.Game Information Game Ripper Developer Take-Two Interactive Publisher Take-Two Interactive Release Date February 29, 1996 Systems DOS, Mac OS Game Engine   My Playthrough How Long To Beat? 9 hours Version Played DOS via DOSBox-X Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 10 Story (25) 23 Experience (15) 2 Impact (10) 2   53% Gallery" }, { "title": "Manhunter 2: San Francisco (Evryware) - 1989", "url": "/blog/2023/09/06/manhunter-san-francisco/", "categories": "Let's Adventure!", "tags": "adventure, Evryware, Sierra On-Line", "date": "2023-09-06 04:26:47 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Uninvited (ICOM Simulati...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Uninvited (ICOM Simulations) - 1986Manhunter 2: San Francisco (Evryware) - 1989→ Ripper (Take-Two Interactive) - 1996 Article 52 of 96 in this series.Picking up immediately where Manhunter: New York left off, Manhunter 2: San Francisco has the player crash-landing their stolen ship in the City by the Bay after trying unsuccessfully to keep up with enigmatic serial killer Phil. Left with no alternatives, the player assumes the identity of a local Manhunter and solves more crimes for the alien Orbs while searching for Phil and working for the local human resistance.After crash landing and killing another manhunter, your first course of action is to pick up the “Manhunter Assignment Device” (MAD) that has been conveniently dropped in plain sight (as opposed to having also been crushed by the spaceship you just crash landed). Just like the first game, the MAD is used each day to give you an outline of the movement of your targets.If there are multiple targets on the screen you can select them individually and trace their movements to identify additional locations within the city to investigate. Additional locations are unlocked via the MAD as you (correctly) identify suspects by searching for their names. The formula is pretty straightforward in most cases as you’ll be given a partial name (usually the first name and an initial), and later on some clue will give you the last name to fill in the blank.\\If after identifying someone in the MAD they have an address listed, this will be a new location you can travel to.The travel mechanic in this game also mirrors that of the first game in that you get a map of San Francisco broken up into various areas with certain locations accessible for selection. Selecting any of these allows your manhunter to travel to this location to investigate, and as each day progresses new locations will be added. Since you have to backtrack occasionally, all locations remain available throughout the game once they’ve been discovered.The game is split up into 3 days, which each require you to visit every possible area, interact with every character, pick up every piece of “evidence” possible and discover every possible suspect. Once you’ve done this you’ll get an “ORB override” on your MAD where you’ll be prompted to identify the suspects you were tracking via the MAD during that day.This … can be frustrating, as if you’ve missed anything, the ORB override will never come and you’ll just find yourself endlessly backtracking to try and find what you may have missed.Progress through each location is done by either investigating a static scene, or by playing through an arcade sequence (a minigame). These games can be extremely challenging, so thankfully Sierra gives you a difficulty toggle. I would highly recommend trying these at the “Normal” and “Difficult” settings first just to challenge yourself, then when you invariably fail and want to throw this game out the window, drop it down to “Easy”.When investigating a scene it’s pretty straightforward to identify the areas you can interact with, so you basically just need to move your cursor around until it turns into a “hand” or a “magnifying glass”. If you have the option to pick something up, do it as you’ll either need it for the day to end, or you may need it for an item combination puzzle that will make no sense.At any point in the game you can view your inventory by pressing TAB. If you select any of the items in your inventory you can inspect that entry for more information … or if you happen to be on a specific scene, selecting an inventory item may use that item. This is not obvious, and can lead to a lot of frustration if you’re not trying to use every inventory item on every screen “just in case”.Use the flask here to pour the urine sample into it … you know … for reasonsFor example, when you get to the doctor’s house on Day 2 and find the urine sample, instead of being able to just pick it up you’ll actually need to pour it into a flask. On this screen when you hover over the vial it just gives you an informational prompt that it’s a “urine sample”, so it’s really not obvious that you can interact with it. It’s also not obvious that you should put anything in the flask you got on Day 1 … so this puzzle is a huge pain in the ass.God I hated this sequenceActually, “pain in the ass” is a good summary of this game. None of the arcade sequences are fun. The best description I can give is that they’re just tedious, and though the game is nice enough to let you restart if you die - you have to restart from the very beginning of the sequence. Some of these sequences are mazes which require a ridiculous degree of accuracy to navigate, so MAKE SURE YOU SAVE OFTEN … as you WILL die often.The art style is quite good, and you wouldn’t even know this is an AGI game. To be fair it was the last AGI title released, so the developers knew how to squeeze every bit of quality out of the engine at this point, but the engine is still dated for a title released in 1989. The sound effects are pretty basic, and though there is music on occasion, it’s PC speaker music so there’s not a lot of depth or variety.In the final section of the game you’re treated to a combination of a minigame + a maze. I continue to hate mazes in games, especially when you couple a maze with “touching the walls causes instant death”. This section is even worse than the awful underwater level in the NES version of TMNT. Thankfully you can save your game at any point, so you’ll likely be saving 4-5 times per screen here as you very, very slowly progress through the maze.There are A LOT of things I really enjoyed about Manhunter when I played the original. Those elements definitely carried over to the sequel, but the sum of those parts didn’t really translate to an enjoyable experience. The story was pretty weak, and though you get a bit more backstory as to the ORBs, the whole thing with Phil and “the viewer” and him become the leader of the rat people is just weird and slapped together.Progress through the game isn’t smooth and it’s easy to get stuck. Death waits for you around literally every corner, and though the “Game Over” screens tend to be funny and allow you to resume right before you screwed up, they occur far too frequently.I’d love to play another game that uses some of these gameplay elements, but updated with some quality of life improvements and a better story to tie them all together.I also don’t think I’d recommend this title to anyone at this point and likely won’t be returning to it again. If you want to check this out, maybe pick Manhunter: New York up instead as it was a bit tighter of a game.Game Information Game Manhunter 2: San Francisco Developer Evryware Publisher Sierra On-Line Release Date 1989 Systems DOS, Amiga, Atari ST, Mac OS Game Engine AGI My Playthrough How Long To Beat? 2.5 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 14 Story (25) 8 Experience (15) 8 Impact (10) 3   47% Gallery" }, { "title": "Improving the Node.js Driver’s SCRAM-SHA-256 Support", "url": "/blog/2023/08/18/improving-the-node-dot-js-drivers-scram-sha-256-support/", "categories": "MongoDB", "tags": "mongodb, drivers, nodejs, typescript, javascript", "date": "2023-08-18 08:40:18 -0400", "snippet": " Cross posted from the MongoDB BlogMongoDB always strives to offer best-in-class features, functionality, and security. A number of authentication mechanisms currently exist to verify the identity...", "content": " Cross posted from the MongoDB BlogMongoDB always strives to offer best-in-class features, functionality, and security. A number of authentication mechanisms currently exist to verify the identity of a connecting client to your cluster, and when using the Salted Challenge Response Authentication Mechanism (SCRAM) there are two possible hashing functions: SCRAM-SHA-1 and SCRAM-SHA-256.The MongoDB Driver Authentication Specification outlines that when attempting to authenticate using SCRAM: “If SCRAM-SHA-256 is present in the list of mechanism, then it MUST be used as the default; otherwise, SCRAM-SHA-1 MUST be used as the default […]”.A MongoDB Server (mongos or mongod) can be configured with a list of possible authenticationMechanisms. As a result, MongoDB can be configured to return new authentication mechanisms which can upgrade already running applications to more secure authentication. This is the case when SCRAM-SHA-256 is added to a cluster that previously only supported SCRAM-SHA-1.Prior to hashing passwords with SHA-256, they will first be prepared using SASLprep. The MongoDB Node.js driver leverages an external library (saslprep) for this functionality, which was an optional dependency and only used if available. Though a number of checks were in place to ensure the library was available (and loaded), an edge case was found where these checks could fail and report availability incorrectly.Potential IssueMost applications won’t experience this issue, however if your Node.js project is being bundled using an alternate bundler (such as webpack) it’s possible a variation of this issue may surface.If your application was affected, it would be unable to connect to your MongoDB cluster. The stack trace from the error that would be thrown should include a call to continueScramConversation similar to the following examples:{ \"errorType\": \"TypeError\", \"errorMessage\": \"saslprep is not a function\", \"stack\": [ \"TypeError: saslprep is not a function\", \" at continueScramConversation ([...]/index.js:xxx:yyy)\", [...] ]}TypeError: l is not a function at continueScramConversation (/app/webpack:[...]/mongodb/lib/core/auth/scram.js:xxx:yy)Note that Mongoose applications can also be affected, as Mongoose wraps the Node.js driver:TypeError: (0 , o.saslprep) is not a function at continueScramConversation (/app/webpack:[...]/mongoose/node_modules/mongodb/lib/cmap/auth/scram.js:xxx:yy)Next StepsThe underlying issue was addressed in versions 5.7.0, 4.17.0 and 3.7.4 of the MongoDB Node.js driver, so depending on the version of the driver being used by your application a minor version update will address this.Upgrading your application’s libraries and deploying to production may not always be possible in a timely fashion. If this is the case and you happen to hit the issue described above a workaround would be to append the authMechanism option to your connection string with a value of SCRAM-SHA-1 as follows:mongodb+srv://xyz.mongodb.net/test?authMechanism=SCRAM-SHA-1This will force the driver to attempt authorization using the SCRAM-SHA-1 hashing algorithm. Note that connection string changes would still require the application to be restarted for those changes to take effect." }, { "title": "Uninvited (ICOM Simulations) - 1986", "url": "/blog/2023/08/09/uninvited/", "categories": "Let's Adventure!", "tags": "adventure, ICOM Simulations, Mindscape, Kemco", "date": "2023-08-09 07:15:38 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Tony Tough and the Night...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Tony Tough and the Night of Roasted Moths (Nayma Software, Prograph Research S.r.l.) - 1999Uninvited (ICOM Simulations) - 1986→ Manhunter 2: San Francisco (Evryware) - 1989 Article 51 of 96 in this series.Uninvited is a black-and-white horror-themed point-and-click adventure game. It was originally developed for the Macintosh by ICOM Simulations released in 1986 by Mindscape as part of the MacVenture series.The following year, a color version of the game was released for the Amiga and Atari ST, and in 1991 for the Nintendo Entertainment System, which is the version I played for this review.I’ve now played basically all the MacVentures titles for the NES because those are the versions that I personally grew up with. I really enjoy these menu-driven, story heavy adventure games that are essentially just visual novels. Though I didn’t really love Déjà Vu, Shadowgate remains one of my favourite game to this day.As with those titles, the game screen is divided between 3 main areas: the stage (where you can see the current room), your inventory then your verb list/navigation helper. Since this is a Nintendo game you navigate the interface with the D-pad, but for the other ports you would be able to do this using a mouse.Screenshot lovingly borrowed from Honest Gamers’ review of the Amiga port of UninvitedSince I’m starting to get to that point in my review journey where I may not have an opportunity to play any games for certain systems, I really wanted to be able to play through this game on an Amiga emulator as I haven’t tackled that system yet. I tried … really I did! I got FS-UAE setup, but couldn’t get anything to run properly (even with the proper Kickstart ROM). I tried vAmiga as it looked extremely promising, but still nothing wants to work for me.I snagged a screenshot from another site just to show the difference between the interfaces. I plan on completing one game for this series on the Amiga if it kills me … but Uninvited won’t be it.You find yourself crashed in front of a mansion. Your sister is missing, so chances are she’s inside. In you go to try and find her only to discover the house is full of ghosts and demos and a shitload of items you can pick up. As you progress you discover the house once belonged to a sorcerer with a number of apprentices. Dracan, the most talented apprentice, became corrupt and killed the other inhabitants with his magic, resulting in the house becoming haunted.None of this really explains why your sister is being held captive, but whatever … ghosts and stuff.Your goal is to survive long enough to find your sister. This will involve examining everything, picking up everything and trying to use everything on everything in every room and on every creature you encounter. You know might call this “playing an adventure game” … and you’d be right.There are SO many things you can pick up in this game, and the vast majority of them are red herrings. Don’t forget to try and OPEN everything you pick up as well as they may contain OTHER items you can interact with. Some items (scrolls mostly) contain spells you can learn. Like Shadowgate, you’ll need to use these spells to help solve specific puzzles.Most creatures you can interact with will kill you if you approach the interaction incorrectly. See that ghost lady over there? Just because you happen to have a bottle of “No Ghost” with you, remember to OPEN it first before trying to USE it on her or that’ll be the end of you.This game feels a lot bigger than Shadowgate and seems to have a lot more to do. There’s even a maze you’ll need to navigate in order to get a key item. I really dislike mazes in most games, but in this case it wasn’t overly difficult - just a bit tedious. Make sure you didn’t forget to take the pendent out of the mailbox when you first started the game … you’ll need it in the maze to scare off zombies. Oh, you forgot to pick it up …. whelp …. sucks to be you!I didn’t realize I could use the TELEMAZE spell to quickly exit the maze once I was done. I know in retrospect it’s pretty obvious that’s what the spell was for but I completely forgot about it …I’m pretty sure that’s actually the combination you need … you’re welcomeThe majority of the puzzles aren’t difficult, but finding the items you need to solve a specific puzzle can be tricky. Finding the combination to the safe requires you to find a list of chemicals then find their values on the periodic table. If you know this is what you’re supposed to do it’s not too hard either, but I missed the note that had that clue on it so I resorted to a walkthrough to get past this section.Domestic violence was apparently acceptable to Nintendo’s censorsEventually you find your way through the mansion, find your sister, throw a goblet at the demon that was possessing her, climb out the window and win the game. Overall it’s not a bad game, though the story is pretty weak.The Nintendo port of the game once again comes with a descent soundtrack (check out the track called “Daylight” for a taste), which makes the experience of navigating the mansion a bit more enjoyable. I don’t believe the other ports have background music, so this is definitely a quality of life improvement.Personally I’ve played through all these ICOM Simulations games for the Nintendo countless times as they were favourites of mine when I was a kid. I don’t have rose-coloured glasses on when it comes to the overall quality of these titles. Honestly, Uninvited is pretty derivative of Shadowgate and doesn’t really add anything new to the mix - other than the keys open multiple doors in this game (instead of it being one key per door).For fans of this very specific type of menu driven adventure game I might recommend giving Uninvited a shot. If you have a hankering for this type of gameplay experience I’d recommend going back to Shadowgate instead.Game Information Game Uninvited Developer ICOM Simulations Publisher Mindscape, Kemco Release Date 1986 Systems Apple IIGS, Macintosh, Atari ST, Commodore 64Amiga, NES, DOS, Windows, Windows Mobile Game Engine   My Playthrough How Long To Beat? 2 hours Version Played NES via OpenEmu &gt; Nestopia Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 10 Story (25) 9 Experience (15) 10 Impact (10) 2   44% Gallery" }, { "title": "Changes to findOneAnd* APIs in Node.js Driver 6.0.0", "url": "/blog/2023/08/03/behavioral-changes-to-the-findoneand-star-family-of-apis-in-node-dot-js-driver-6-dot-0-0/", "categories": "MongoDB", "tags": "mongodb, drivers, nodejs, typescript, javascript", "date": "2023-08-03 08:59:29 -0400", "snippet": " Cross posted from the MongoDB BlogOne exciting change that is coming in release 6.0.0 of the Node.js Driver is that the modified (or original) document targeted by a findOneAnd* operation will no...", "content": " Cross posted from the MongoDB BlogOne exciting change that is coming in release 6.0.0 of the Node.js Driver is that the modified (or original) document targeted by a findOneAnd* operation will now be returned by default.Current StateUp until now, as opposed to returning the requested document, this family of API methods would return a ModifyResult, which would contain the requested document in a value field. This design was due to these APIs leveraging the MongoDB Server’s findOneAndModify command and wrapping the command’s output directly.To demonstrate, let’s adapt the code from the Driver’s documented usage examples to update one document in our movies collection using the findOneAndUpdate API.const database = client.db(\"sample_mflix\");const movies = database.collection(\"movies\");// Query for a movie that has the title 'The Room'const query = { title: \"The Room\" };const updatedMovie = await movies.findOneAndUpdate(query, { $set: { \"imdb.rating\": 3.4, \"imdb.votes\": 25750 } }, { projection: { _id: 0, title: 1, imdb: 1 }, returnDocument: \"after\" });console.log(updatedMovie);{ lastErrorObject: { n: 1, updatedExisting: true }, value: { title: 'The Room', imdb: { rating: 3.4, votes: 25750, id: 368226 } }, ok: 1, '$clusterTime': { clusterTime: new Timestamp({ t: 1689343889, i: 2 }), signature: { hash: Binary.createFromBase64(\"3twlRKhDSGIW25WVHZl17EV2ulM=\", 0), keyId: new Long(\"7192273593030410245\") } }, operationTime: new Timestamp({ t: 1689343889, i: 2 })}One of the options we set was a returnDocument of after, which should return the updated document. Though the expectation may be that the function call would return the document directly, instead you would get the output above.While the document you’re looking for can be accessed using updatedMovie.value, that isn’t the most intuitive experience. But changes are on the way!What can we do right now?Starting with the Node.js Driver 5.7.0 release, a new FindOneAnd*Options property called includeResultMetadata has been introduced. When this property is set to false (default is true), the findOneAnd* APIs will return the requested document as expected.const updatedMovie = await movies.findOneAndUpdate(query, { $set: { \"imdb.rating\": 3.3, \"imdb.votes\": 25999 } }, { projection: { _id: 0, title: 1, imdb: 1 }, includeResultMetadata: false });console.dir(updatedMovie);{ title: 'The Room', imdb: { rating: 3.3, votes: 25999, id: 368226 } }What about TypeScript?If your application uses TypeScript and the MongoDB Node.js Driver, anywhere a findOneAnd* call is made, if the requested document is required it will be accessed via the value property of the ModifyResult. This occurs when includeResultMetadata is not set or when it is set to true (the current default value).Type hinting will indicate the Schema associated with the collection that the operation was executed against. As we would expect, when the includeResultMetadata is changed to false, inline validation will indicate there’s an issue since the value property no longer exists on the type associated with the resultAttempting to compile our TypeScript project will also fail.TSError: ⨯ Unable to compile TypeScript:index.ts:31:17 - error TS18047: 'updatedMovie' is possibly 'null'.31 console.dir(updatedMovie.value); ~~~~~~~~~~~~index.ts:31:30 - error TS2339: Property 'value' does not exist on type 'WithId&lt;Movie&gt;'.31 console.dir(updatedMovie.value); ~~~~~This makes it incredibly easy to identify where in the code changes need to be made.Next StepsIf you’re using the findOneAnd* family of APIs in your JavaScript or TypeScript project, upgrading the MongoDB Node.js Driver to 5.7.0+ and adding the includeResultMetadata: false option to those API calls will allow you to adapt your application to the new behavior prior to the 6.0.0 release.Once 6.0.0 is released, includeResultMetadata: false will become the default behavior. If your application relies on the previous behavior of these APIs, setting includeResultMetadata: true will allow you to continue to access the ModifyResult directly." }, { "title": "Tony Tough and the Night of Roasted Moths (Nayma Software, Prograph Research S.r.l.) - 1999", "url": "/blog/2023/07/31/tony-tough/", "categories": "Let's Adventure!", "tags": "adventure, Nayma Software, Prograph Research", "date": "2023-07-31 06:36:30 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Snatcher (Konami) - 1988...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Snatcher (Konami) - 1988Tony Tough and the Night of Roasted Moths (Nayma Software, Prograph Research S.r.l.) - 1999→ Uninvited (ICOM Simulations) - 1986 Article 50 of 96 in this series. This game is available for free from the developers at https://www.tony-tough.com/en/shop#gamesA dastardly alien is stealing all of the children’s Halloween candy! Tony Tough P.I. will not stand for this. He sets out to stop the fiend before it’s too late, and the alien takes over the world! Tony Tough and the Night of Roasted Moths is a traditional 2D “point and click” adventure with a crazy story. The humor and style are reminiscent of old LucasArts games, like Day of the Tentacle.That’s probably not racist … right?For a game that was developed originally by an Italian team (and likely written in Italian then localized), it is extremely clever, nuanced and funny. I have had this title on my radar for over a decade - basically since it was added to ScummVM in 1.6.0. At that time one of the original developers provided a braindump of their memories of making the game, which I found informative and fascinating.I’m guessing this will affect the puzzles (like in Curse of Monkey Island)It’s clear the developers took a lot of inspiration from LucasArts as this game unfolds, plays and reads like a Monkey Island, Full Throttle or Sam and Max title. Interactions with the world and other characters is done with a single click that spawns a pictograph that you use to select an action (TALK,USE,TAKE,LOOK, etc), and literally everything you can interact with rewards you with a smart ass response.The plot is kind of thin as you start off learning that halloween candy is being stolen - and since you’re a private eye (for some reason) you decide to investigate. As soon as you start off your pet Tapir (I thought it was a dog) is kidnapped and you’re left with a ransom note. From here you start working your way through the first of 3 “levels” in this game.Getting out of the first level introduces you to your first of many, Many, MANY fetch quests and item combination puzzles. In order to get access to the second “level” you need to get past the old lady at the entrance by … dressing like a girl. This requires a smock, a scarf, a wig, a flower and a bag of candy. Sounds a bit convoluted right … like you’re making a sasquatch costume in Sam and Max?You’ll be SO happy you have this map … trust me!Once you reach the amusement part (second level) Tony will begin to draw a map as you explore. This can be used to fast travel around, which is a huge time saver. Since this game is just a massive series of fetch quests that involve endless backtracking, quality of life improvements like this map are greatly appreciated.Getting out of the second level requires you to retrieve all the ingredients the fortune teller needs to concoct something that will help him see where you need to go next. This involves fetching those ingredients, but each ingredient is a combination of items you find throughout the park - so it’s a fetch quest within a fetch quest: FETCHQUESTCEPTION!!!!Though it may be a bit tedious, figuring out what all the items you need are isn’t overly complicated as you can ask any number of NPCs throughout the park about pretty much anything - and the clues they give you (though cryptic at times) tend to point you in the right direction. Personally I found this to be a sign of excellent planning by the developers as they clearly wanted this to be challenging, but approachable (and winnable).Talk to EVERYONE about EVERYTHING!Conversations are basic dialog trees, so nothing groundbreaking here. You’ll need to backtrack a lot as you proceed since new dialog options will appear for most NPCs as task are completed or new areas are unlocked. Pretty much every interaction you have with anyone (or anything) has Tony dropping some witty quip or sarcastic remark, so though it may be a bit tedious it’s at least entertaining.The LucasArts influence persists throughout this game, right down to the interaction menu being cribbed from games like Full Throttle. It’s a good design choice and works well for the game, but for a game this late in our journey it comes across as derivative.It’s hard to fault Tony Tough for feeling like a LucasArts knock-off as it’s done extremely well and really plays more as an ode to the adventure games that clearly inspired it than as a knock-off.Tony Tough and the Night of Roasted Moths is a lot of fun to play mainly due to the dry comedic style of writing that permeates all character interactions and Tony’s observations. The game is visually appealing, and clearly took a page out of the LucasArts book of point-and-click adventure game design.There was a sequel (Tony Tough™ in A Rake’s Progress) which I won’t be covering during this series but am definitely curious to try out one day. The developers are also working on The Army Of Dorkiness Project which is meant to bring Tony Tough back for a third time.I would recommend this title to anyone looking for a game similar to the later LucasArts adventure games.Game Information Game Tony Tough and the Night of Roasted Moths Developer Nayma Software, Prograph Research S.r.l. Publisher Protonic Interactive, Got Game Entertainment LLC, dtp entertainment AG Release Date 1999 Systems Windows Game Engine MPAL (MultiPurpose Adventure Language) My Playthrough How Long To Beat? 11 hours Version Played Windows via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 16 Story (25) 16 Experience (15) 11 Impact (10) 5   69% Gallery" }, { "title": "How Many Connections is My Application Establishing to My MongoDB Cluster?", "url": "/blog/2023/07/04/how-many-connections-is-my-application-establishing-to-my-mongodb-cluster/", "categories": "MongoDB", "tags": "mongodb, connections, drivers", "date": "2023-07-04 10:16:14 -0400", "snippet": "MongoDB Atlas is the best way to host your MongoDB data, but it’s important to be aware that like any other managed service there can be limitations. For example, MongoDB Atlas - depending on the s...", "content": "MongoDB Atlas is the best way to host your MongoDB data, but it’s important to be aware that like any other managed service there can be limitations. For example, MongoDB Atlas - depending on the selected tier - will impose a connection limit.Depending on the architecture of your application and how you’ve configured your connection pools it’s possible you’ve approached or exceeded these limits before and weren’t really sure why. Thankfully MongoDB Atlas provides a number of configurable alerts (such as Connections % of configured limit) which can notify you if you’re approaching a limit, but where are these connections coming from in the first place?MongoDB DriversYour application has been built using one of MongoDB’s Drivers, which are all built according to a number of published specifications. Most noteworthy when it comes to how many connections an application may establish to a MongoDB cluster are the Server Monitoring and Connection Monitoring and Pooling (CMAP) specifications.These specifications help us understand how many connections may be opened, and what variables we should be aware of that can affect these connections such as: Is the MongoClient single-threaded or multi-threaded The MongoDB Server version (&gt;= 4.4) The MongoDB Driver version (does it support MongoDB Server 4.4+)Just a quick note regarding Connection Pools: the default value of minPoolSize is 0, which means that using the defaults when a Connection Pool is created it will not contain any connections. For the purposes of this article I imply that at least one connection has been created in the pool and ready for use.Single-Threaded MongoClientThe MongoDB C Driver and PHP Driver provide single-threaded MongoClient implementations. As such, they do not offer connection pools at all which makes understanding how many connections can be established straightforward1.Connections from a Single Threaded MongoClientWith this configuration, a single connection (c1) will be established to each replica set member, or if the cluster is Sharded each mongos present in the seed list when the MongoClient was created2. This single connection will be used for data operations as well as to perform server monitoring. Note that when connecting to a Sharded Cluster using a DNS Seed List connection string, the srvMaxHosts URI option can be configured to limit the number of mongos’ that will be connected to. Assuming a cluster with 3 nodes, each MongoClient instance would create 3 connections.MongoDB Server 4.2 and earlier (Polling Monitoring)Prior to MongoDB 4.4, MongoDB Drivers would use a polling protocol to perform server monitoring. This process would involve opening a dedicated monitor thread per host, which would be polled (by default3) every 10 seconds (multi-threaded) or 60 seconds (single-threaded) to determine if the state of the host or cluster topology had changed.This dedicated monitor thread (m1) as well as a the 1 or more connections in the connection pool (p1) result in at least 2 connections per host. Note that if minPoolSize (default: 0) is &gt; 1 this number of connections will always remain open against each host a connection pool has been created for. Assuming a cluster with 3 nodes, each MongoClient instance would create 6 connections. If minPoolSize=5 then each MongoClient would create 18 connections (using the formula (minPoolSize + 1) x nodes)MongoDB Server 4.4 and later (Streaming Monitoring)Starting with MongoDB 4.4, MongoDB Drivers would begin using a streaming protocol to perform server monitoring - assuming those Drivers were compatible with MongoDB 4.4. The goal of this new protocol was to ensure connected applications could discover topology changes in as close to realtime as possible.As the polling protocol only polled at fixed intervals, it was possible for topology changes to go undiscovered for upwards of 10 seconds. The streaming protocol would “push” updates from the server to the clients, as opposed to the previous “pull” model, which allowed applications to update their view of the cluster far more quickly.Similar to the polling protocol, a dedicated monitor thread (m1) will be opened per host, as well as 1 or more connections in the connection pool (p1). Further to these connections though a third connection (r1) is opened per node for measuring RTT (round trip time). This is needed as the monitor thread is open and listening once established, and will only receive updates from the server as they occur. Measuring RTT require the measurement of the time taken for an operation to travel from the client to the server and back, which the streaming monitor no longer provides. Assuming a cluster with 3 nodes, each MongoClient instance would create 9 connections. If minPoolSize=5 then each MongoClient would create 21 connections (using the formula (minPoolSize + 2) x nodes)What if I’m using AWS Lambda?Depending on your application’s architecture, it’s possible to blow past your connection limits pretty quickly. This is one reason why the documented guidance for managing connections with AWS Lambda has the first bullet point of “Define the client to the MongoDB server outside the AWS Lambda handler function“.If each Lambda function were to connect to a MongoDB 4.4+ cluster using a connection string of mongodb+srv://xxx.mongodb.net/?minPoolSize=5 and the cluster only had 3000 connections configured, within 150 near-concurrent function executions the cluster could potentially reach the connection limit! This is obviously an extreme scenario, but is meant to help illustrate the impact creating many MongoClient instances can potentially have on your cluster.I plan on going into much more detail regarding AWS Lambda and MongoDB connection behavior in a future article.Footnotes The MongoDB C driver has two connection modes: single-threaded and pooled. Single-threaded mode is optimized for embedding the driver within languages like PHP. Multi-threaded programs should use pooled mode: this mode minimizes the total connection count, and in pooled mode background threads monitor the MongoDB server topology, so the program need not block to scan it. &#8617;&#xfe0e; MongoClients created using a DNS Seed List connection string can poll the SRV record to discover additional mongos’ &#8617;&#xfe0e; Polling interval can be configured via the heartbeatFrequencyMS URI option, but must be more than the minHeartbeatFrequencyMS of 500ms. In MongoDB Atlas environments the heartbeatFrequencyMS is lowered from the default (10000) to 5000. &#8617;&#xfe0e; " }, { "title": "Snatcher (Konami) - 1988", "url": "/blog/2023/06/28/snatcher/", "categories": "Let's Adventure!", "tags": "adventure, Konami", "date": "2023-06-28 15:15:31 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Gabriel Knight: Sins of ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Gabriel Knight: Sins of the Fathers (Sierra On-Line) - 1993Snatcher (Konami) - 1988→ Tony Tough and the Night of Roasted Moths (Nayma Software, Prograph Research S.r.l.) - 1999 Article 49 of 96 in this series.Snatcher is a cyberpunk graphic adventure game developed and published by Konami. It was written and designed by Hideo Kojima and first released in 1988 for the PC-8801 and MSX2 in Japan. Snatcher is set in a future East Asian metropolis where humanoid robots dubbed “Snatchers” have been discovered killing humans and replacing them in society.The game follows Gillian Seed, an amnesiac who joins an anti-Snatcher agency in search of his past. Gameplay takes place primarily through a menu-based interface through which the player can choose to examine items, search rooms, speak to characters, explore a semi-open world, and perform other actions.Part of the fun for me in playing these games is getting to mess around with new emulators. I’m using an old MacBook Pro to play most of these games, so I figured I’d give OpenEmu a try since I have a couple Sega CD games on my list and this emulator is only available for OSX.OMG! Play time recording!!!Typically I’d play console games on Android using Ex Plus Alpha (which I did for Shadowgate). I’ve bought all the emulators (NES.emu, SNES.emu, etc) and have been using them for years, but one features I’ve really wanted was the ability to record playtime. I went so far as to open an issue in GitHub for it in 2015, but this never got any traction.OpenEmu appears to support this out of the box, which was a very pleasant surprise. Furthermore you can easily remap the keys for quick save/load, fast forward, rewind and taking a screenshot which I found extremely convenient. I will most likely be using OpenEmu for any future games that it supports as I find the interface and experience a lot better than other multi-emulator systems (such as RetroArch).Similar to ICOM Simulations type games, Snatcher is predominantly a visual novel. You’re presented with a number of actions you can perform on each static screen that allow you to learn more about your surroundings or interact with a character. You’ll find yourself having to go through the motions of LOOKing at everything available, then INVESTIGATE-ing everything you just looked at, then repeating because you may have uncovered new options to perform these 2 actions on.It felt a little redundant initially, then as the game dragged on it actually detracted from the experience. I understand the intent of the selected verbs and how they’re supposed to differ, but from a game design perspective it’s not really adding anything meaningful.The version of the game I played had most character interactions fully voice acted. You’d be presented with a view of the scene that took up about 70% of the screen, with the lower third split into three square where character portraits could be displayed. These portraits would be slightly animated as the characters were speaking so you’d know who was talking, and honestly the voice acting for every character was pretty good.This game is for a mature audience, as there are multiple scenes that some players might find a bit more gory than they might like. As the story unfolds, you’re investigating the murder of one of your fellow Junkers. In this world, the Junkers are sort of like “blade runners” that are tasked with hunting down Snatchers (which if you’re familiar with Blade Runner are just replicants).You progress the story by traveling from location to location, MOVE-ing about and LOOKing/INVESTIGATE-ing everything. Depending on where you are and what you’ve just interacted with, you may uncover some evidence. When this happens, you’ll call it out with a closeup of the item in question which will then be added to your inventory.Whatever this is I should probably hold onto itGillian acquires a limited number of inventory items throughout the game that can be used during character interactions (ex: money, Junker ID) but most of the items you find throughout the game are considered evidence. Both evidence and items can be used on characters you’re talking to, and you’ll likely find yourself trying literally everything on everyone to see what will work.Throughout the game you’re accompanied by a robot companion named “Metal Gear”. By interacting with him you’re able to save your game, make video phone calls and perform certain environment interactions (like scanning for SNOW-9, scanning for movement or if it’s dark turning on a light). Metal Gear will also nudge you along with some hints as to where you should go next or what you might want to try on a certain screen.Aside from the usual “go from screen to screen mashing through all menu options”, there are a handful of puzzles you’ll need to complete. At one point you need to create a reconstruction of a suspect based on the descriptions provided by someone you interview. This is … painful. Technically you could just keep trying all possible combinations until you get it right but that will take forever! This was very much a section I relied on the walkthrough for.Unlike visual novel style games, Snatcher also includes arcade sequences. These areas involve having to move the cursor around the screen and shooting robots before they shoot back. Honestly they’re not too challenging, and if you happen to die the game lets you resume at the screen before the sequence began. This is beneficial as I forgot to save for a while when I got to this first section and got myself killed pretty quickly :PThe content of this game is much more mature, and Gillian has conversation options to basically hit on every woman you meet. Apparently the Sega CD release censors some of the graphics and removes some of these options, but there’s enough in there to give you a good idea as to what kind of a guy the main character is.A lot of these conversation options are hidden until you INVESTIGATE the same option multiple times (sometimes a few dozen times).This is actually one of my biggest complaints about this game. There are too many sequences that won’t advance until you repeat the same option many times until a new selection becomes available in the menu. Often the feedback you get from Gillian or Metal Gear will be the same for many of those selections so it’s not obvious that they’re waiting for you to keep repeating the option.Overall this game was a pleasant surprise. The story is really compelling and well structured, and though it can be challenging to get it to progress in certain areas, it’s generally an intuitive game to play.I’m a huge fan of cyberpunk in general, and I like visual novels and menu driven games so Snatcher sort of hit a number of gaming sweet spots for me. The music is atmospheric and adds to the experience nicely, and the voice acting quality was better than I would have expected.For anyone looking for a story that feels like it’s in the Blade Runner universe, look no further than Snatcher.Game Information Game Snatcher Developer Konami Publisher Konami Release Date November 26, 1988 Systems NEC PC-8801, MSX2, PC Engine Super CD-ROM,Sega CD, PlayStation, Sega Saturn Game Engine   My Playthrough How Long To Beat? 8 hours Version Played Sega CD via OpenEmu &gt; Genesis Plus GX Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 14 Story (25) 16 Experience (15) 6 Impact (10) 7   61% Gallery" }, { "title": "Gabriel Knight: Sins of the Fathers (Sierra On-Line) - 1993", "url": "/blog/2023/06/14/gabriel-knight-sins-of-the-fathers/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, SCI", "date": "2023-06-14 18:02:58 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Torin's Passage (Sierra ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Torin's Passage (Sierra On-Line) - 1995Gabriel Knight: Sins of the Fathers (Sierra On-Line) - 1993→ Snatcher (Konami) - 1988 Article 48 of 96 in this series.Gabriel Knight: Sins of the Fathers is a 1993 point-and-click adventure game, developed and published by Sierra On-Line for MS-DOS, Macintosh, and Windows, and released on December 17, 1993. The CD-ROM version features the voice talents of Tim Curry, Mark Hamill, Michael Dorn, Efrem Zimbalist, Jr., and Leah Remini. The game’s story focuses on Gabriel Knight, a struggling novelist and owner of a rare book store in New Orleans, who opts to research a recent spate of murders around the city that have a connection to voodoo. In the process, he is slowly revealed to be a descendant of a German family who are involved in combatting people who use supernatural forces, and discovers a link between the killings and his family’s past.First off, I love the darker and more mature theme of this game. While investigating the murder (“for his book”), Gabriel has access to crime scenes and evidence as his friend Detective Mosley believes it’s just research. Mosley thinks Gabriel is going to include him as a character, so he gives him a lot more access than he likely should have.Several key story points trigger cut scenes that are presented as multi-panel art boxes. As this gives the game a Graphic Novel feel I actually like it a lot more than if they resorted to FMVs or scripted events.You move around the French Quarter of New Orleans via a quick travel map, with additional locations being added as you advance the story. There really aren’t too many locations in this game, with several only being visited once. When you move to the greater New Orleans map, there are a couple more locations you have access to, but overall the game keeps you focused on a dozen or less areas you need to return to.This makes the game feel a lot bigger than it actually is, but not overwhelming as you will need to backtrack to a number of these key locations as you uncover new dialogue options that you’ll then need to try out on every character you’ve spoken to already.Character interactions are all presented on a static screen with various topics you can ask. Every character gets the the same key topics, with some character-specific topics also presented to help flesh out their backgrounds and motivations. These are actually colour-coded which is a nice quality of life feature to help you identify when you’ve surfaced a keyword you should likely go ask others about.If you’re playing the CD version of the game, all interactions are voiced by professional actors and it really shows in the quality of the delivery. Tim Curry’s performance as Gabriel Knight really draws you into the story. Though this game was remade for the 20th Anniversary by Phoenix Online Studios I don’t know that I’d have enjoyed it nearly as much with a different cast.The theme of underground cartels, secret organizations and voodoo is ever present throughout this game and most game scenes represent this extremely well. Though this is still an SCI game using pixel art, it is very expressive and stays true to the darker content and themes of the game.To really draw you in the soundtrack also fits perfectly and further draws you into the overall experience. Sierra Music Central has the full soundtrack available for free if you want to check out any tracks. My personal favourite would be the theme to St. George’s Bookshop - go ahead, give it a listen.The game takes place over the course of 10 days, with the story progressing in a linear fashion. Each day you have a certain number of key events you need to complete in order to progress, and you’ll know you’ve finished these because Gabriel will indicate it’s getting late and time to head home. Though the game is very well structured and if you exhaust all the dialogue options available with each character each day you shouldn’t get stuck, I found myself unable to progress past day 4 for longer than I care to admit.After doing a bit of hunting around online for the solution, apparently others have hit the same roadblock so I felt a little less stupid needing to look for help. Turns out I needed to go to Moonbeam and show her the markings from the tomb you copied earlier using the sketchbook (which teaches you about the Rada drums I believe).It takes a bit of patience, but the pattern matching puzzles aren’t too difficultThere are a few instances in this game where you’ll need to work with the Rada drums in order to either decode or send message. Initially I thought this was going to be tedious, but it was relatively well done and you weren’t presented with a ridiculous number of useless options you’d need to wade through in order to match the right patterns.As long as you’re paying attention to the clues the game is giving you it’s not too difficult to figure out what the message is you’re supposed to write on the tomb with the brick either. Thankfully the game will tell you right away if it’s the wrong message when you exit the screen so you’re not just blindly waiting for some scripted event to occur that’s never going to happen.Since this is a Sierra SCI game the top of the screen hides the menu bar, which is a bit more involved than most of the Quest series. The typical action icons exist (LOOK, TALK, WALK, TAKE, etc) and you can access your inventory, but there’s also an option for the tape recorder. Since Gabriel is an author and is interviewing people for his book, he’s recording all conversations for future reference.This is extremely useful as you can revisit every conversation you’ve had and review what topics were discussed and what the answers were. For those of us that don’t write everything down but wonder on occasion “what did XXX say about YYY?”, this is an invaluable tool.These zombies will fuck you upCertain situations Gabriel finds himself in can lead to death and a game over. This is not unexpected in a Sierra Online game, but it was refreshing to find that these were rare occurrences, and were somewhat expected. I’m not sure if there are any game-ending deaths earlier in the game, but later when you’re trying to get out of Snake Mound and you wake the zombies, if one of them catches you they’ll make quick work of you.When you finally find the voodoo honfour, if you summon Brother Eagle but don’t get out of the hallway in time, he’ll catch and kill you.Like most Sierra Online games, this game has a speed toggle in the settings - which you’ll likely want to increase as Gabriel walks pretty slowly. I’m guessing speeding up the game likely wouldn’t only affect his walk speed though so it probably wouldn’t help you in these situations.Sins of the Fathers is one of my all time favourite adventure games. The story is just fantastic and keeps you drawn in until the very end. The pacing is spot on and though some of the puzzles can be a bit difficult, nothing you do feels like busy work to pad out the game.There really aren’t a lot of locations you need to visit, so backtracking is less of a chore, and if you missed something or forgot to ask someone something it doesn’t take long to fill that gap to advance the plot. I also didn’t find there were any unwinnable situations as I don’t believe a given day will end unless you’ve done everything and picked up everything that’s required.This is a title I would highly recommend to anyone interested in adventure gaming. Do yourself a favour though and play this game on ScummVM with MT-32 device emulation. It makes an already awesome soundtrack all that much more awesome!I never finished either of the sequels, though I did try them and was disappointed so not looking forward to having to slog through those when the time comes. For now though I’m still basking in a great gaming experience.Game Information Game Gabriel Knight: Sins of the Fathers Developer Sierra On-Line Publisher Sierra On-Line Release Date December 17, 1993 Systems DOS, Macintosh, Windows Game Engine SCI My Playthrough How Long To Beat? 10.5 hours Version Played Windows via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 18 Story (25) 23 Experience (15) 13 Impact (10) 8   89% Gallery" }, { "title": "Torin's Passage (Sierra On-Line) - 1995", "url": "/blog/2023/06/07/torins-passage/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, SCI", "date": "2023-06-07 20:54:41 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Return to Ringworld (Tsu...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Return to Ringworld (Tsunami Games) - 1994Torin's Passage (Sierra On-Line) - 1995→ Gabriel Knight: Sins of the Fathers (Sierra On-Line) - 1993 Article 47 of 96 in this series.Torin’s Passage is a point-and-click adventure game developed and published by Sierra On-Line in 1995. The game was designed by Al Lowe, author of the Leisure Suit Larry series.The game starts off with some royalty being killed by a wizard and what you assume is the royal baby being saved by a maid or something. She saves Torin, but is punished for this good deed by being shackled with a collar that keeps slowly tightening until it will eventually kill her. I think she then becomes evil or something and teams up with the wizard that killed the royal family, but honestly I sort of spaced out pretty quickly.My main issue with this game was the story comes off as a generic fantasy crammed full of tropes but laid out in what feels like the laziest way possible. Torin grows up with farmers as his adopted parents, something happens, an evil sorceress captures your adopted family and you then need to go save them. This is done by traveling to the “lands below” by throwing magic powder at crystals that send you deeper and deeper into the earth.Each chapter of the game represents your descent through the layers of the world as you slowly work your way to the core where your parents may be. This is done by completing fetch quest after fetch quest, solving a handful of puzzles and constantly backtracking.This is pretty standard fare for a lot of adventure games, but everything in this game just sort of feels forced and a bit sloppy. I get that Al Lowe wanted to write a game that he could play with his young daughter, but the game he wrote seemed to just be a rip off of Who Framed Roger Rabbit and King’s Quest VII.Maybe I’m being too critical, but the game just looks like shitAdding insult to injury, the game just doesn’t look that good. For a game that came out in late 1995 I really expected a lot more. The UI is bland and takes up the lower third of the screen. Your inventory is always visible, and you can take any item in your inventory and put it on the center pedestal to “zoom in” and examine the items. Very few items are worth doing this with, and when you do the “lasers” (green circle things) on each side of the inventory shoot it for some reason.Just look at it. If this were a game from the mid 80’s I’d be a lot more forgiving, but again … this is 1995 and Sierra has made a LOT of much MUCH better games. Weirdly enough the visual style of this game reminded more of the CD-i Zelda games more than anything else. Google some pictures from those games and tell me you don’t see it ;)I mentioned this game reminded me of Roger Rabbit because you’ve got a sidekick throughout named Boogle that seems to provide the exact same style of comic relief. Sometimes it’s even identical (they lifted some lines and scenarios directly from the movie).The Boogle character at least adds a bit of variety to the game as he can transform into things you can use to solve certain puzzles. Typically you’ll use each Boogle form exactly once though, so the amount of variety it adds is limited.Oh god … puns … so many punsUnlike the Leisure Suit Larry games though, Torin’s Passage isn’t very funny - or for that matter, fun. From the time you start playing until the time you finally decide you’ve had enough and are ready to move on to a better game you’ll just feel like you’re going through the motions of playing a game.I just didn’t find the writing to be all that compelling - and I am a fan of Al Lowe (including following him on Twitter). I’m not sure how actively involved he was in the actual content generation (since he was the director), but the game just felt derivative and slapped together.What I did find a bit innovative was the built in hint system. You have a hint timer that you can configure, which after elapsing allows you to get a hint on how to proceed. If you’re newer to the genre this might come in handy as some of the puzzles are a bit obtuse and overly complex.There are a couple puzzles at the end of Chapter 4 (I think that’s the right chapter) where you need to move these miniature dudes around in order to unlock (something). The whole “harmony” concept means you need to shuffle them around until you align them by colour, but which colours go where is not immediately obvious.Once you finally solve this (likely with a walkthrough), you’ll then have to do basically the same fucking puzzle but instead by rotating 2 characters at a time to get them in descending orders. This took FOREVER, and was NOT FUN. I really, REALLY hate arbitrary puzzles that feel like padding. I don’t have a problem with challenging puzzles, especially if it feels like you’ve gained the tools to solve the puzzle by naturally playing the game.No ending - just creditsWhen you finally muddle your way to the finale, the game just sort of ends (cuts to credits). Apparently this is because Al Lowe planned for Torin’s Passage to be the first of 5 games in a series. Obviously this never came to pass, and it’s likely because this game just wasn’t all that good.Sierra Online made so many better games before this title came out, so it’s extremely disappointing to have to trudge through this turd. Boogle could have been a game changer if they’d incorporated him more deeply into the plot (or bothered to introduce him at all). The mechanic of having horizontal and vertical sliders so you can pan around a larger scene without having to walk around was interesting, but again, this wasn’t introduced. When you needed to actually use this panning mechanic to solve a puzzle it wasn’t obvious that this was how you approach the solution.I would not recommend this title to anyone. It’s just not fun, or interesting, or innovative in any way. Some component pieces had promise and might have (or possible DID) work better in other games, but Torin’s Passage isn’t worth anyone’s time today.Game Information Game Torin’s Passage Developer Sierra On-Line Publisher Sierra On-Line Release Date October 31, 1995 Systems DOS, Windows 3.x, Windows 95, Mac OS Game Engine SCI My Playthrough How Long To Beat? 5 hours Version Played Windows via ScummVM Notes Walkthrough, Longplay ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 13 Story (25) 11 Experience (15) 5 Impact (10) 2   44% Gallery" }, { "title": "Return to Ringworld (Tsunami Games) - 1994", "url": "/blog/2023/05/31/return-to-ringworld/", "categories": "Let's Adventure!", "tags": "adventure, Tsunami Games, TsAGE", "date": "2023-05-31 16:44:49 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Companions of Xanth (Leg...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Companions of Xanth (Legend Entertainment) - 1993Return to Ringworld (Tsunami Games) - 1994→ Torin's Passage (Sierra On-Line) - 1995 Article 46 of 96 in this series.Return to Ringworld is the sequel to the previous game based on Larry Niven’s “Known Space” series of novels (Ringworld). Once again this game is a point and click adventure/puzzle solving game.After saving the puppeteer race from extermination and uncovering some powerful ancient technology on the first game, Quinn, Seeker of Vengeance and Miranda Rees find themselves searched as fugitives by all three major species, so they go to Ringworld to hide. Once in Ringworld they’ll try to uncover some evidence to clear their names, but they stumble across another universe-threatening plot. This time U.N. general Carson Teal is out to rule the universe by uncovering Ringworld’s secrets, and you must stop him.This game is way, WAY bigger than it’s predecessor, with hundreds of screens, mazes, etc. Plus you get to play as all three characters throughout the game, a la Day of the Tentacle. This is actually a big part of the game this time around once you get going as the story progresses from the vantage point of each character. Miranda is on the ship for most of the game, but Quinn and Seeker head out together to explore the Ringworld - typically to navigate their way through some form of maze …Return to Ringworld is basically just a series of mazes … and I fucking hate mazes in adventure games. They needlessly delay story progression and feel bolted on to artificially inflate the time it takes to finish the game. Don’t get me wrong, if I’m playing an RPG I expect there to be dungeons (mazes) I need to map in order to progress, find items, fight monsters, gain experience and so on … but I find it frustrating in adventure games.You have a comm unit that acts as a navigation tool for some of these mazes, but for others you need to draw maps to keep track of where you’ve been, where you’re going and where key items are located. Again, if this were an RPG … cool … but I know it’s just bloating a fetch quest.One task Seeker needs to complete in order to get a balloon to escape the spill mountains (I think it was here) is to rid them of a vampire problem by first completing a series of fetch quests to build a breathing mask to prevent the vampire pheromones from driving Seeker mad, then navigating a giant maze to hunt down all vampires and exterminate them. This section of the game honestly felt like it took the majority of my play time as it involved endless backtracking to hunt down these vampires and kill them. You have no indication as to how many you need to kill other than a message that gets displayed when you finally kill them all.I guess I got them all. FINALLY!Though the game is much bigger than its predecessor Ringworld: Revenge of the Patriarch, I found there were some serious detractors from the experience. First of all, the walk speeds are abysmally slow. I know I can play this game on ScummVM, but I chose to play on DOSBox-X instead because I could crank the CPU cycles to Turbo whenever navigating one of the many, many mazes.Second, though they’re not badly done, there are far too many drawn out cut scenes.Pretty, but how long do I have to sit here and watch this animationI think the Tsunami artists focused a little too heavily on the filler and too little on the gameplay.Since this is an adventure game, the story is central to the experience, and in this case it did not disappoint. The character interactions were interesting, the story progressed in a linear fashion and kept me engaged and I looked forward to seeing where it would take me next.Character interactions will either follow the typical linear progression or offer you a dialogue tree you can follow. The conversations are well written and they do a good job of injecting a lot of elements from the books such as characters, locations, historic events, species and slang (TANJ!). Since I really enjoyed these books as a teenager the settings you were dropped into and the elements of the world you engaged with felt natural.Background music and sound effects were limited, but present. The music in general mostly felt generic, but I appreciated that it was there as my characters waded through all the mazes (yes, here I go again with the mazes!). All character dialogue is voice acted, and honestly they did a pretty good job of it. I ended up disabling speech and going with just text as I could read faster than the actors could deliver the lines. This is one game that offered support for the Roland MT-32, so if playing in ScummVM or DOSBox you can emulate this interface for some better synthesized tunes (check out a sample of the intro sequence).Once you make your way through the final maze and defeat Teal by letting a Ghoul get him, you escape to a location that appears to be off the Ringworld. Where did you end up? Maybe we’ll find out in a sequel? Turns out … no, because Tsunami only made these 2 titles. I really did enjoy the story, even if playing the game seemed to get in the way occasionally. If you, like me, made it this far and still hunger for more Ringworld lore, check out the series of books. I guarantee they’ll quench your thirst for Sci-Fi goodness!As for this game, I’d recommend maybe passing it by. Ringworld: Revenge of the Patriarch felt like a tighter package and game play experience, which if you’re looking for a quick virtual romp through the Ringworld is likely the better choice.And just like that another adventure comes to an endGame Information Game Return to Ringworld Developer Tsunami Games Publisher Tsunami Games Release Date 1994 Systems DOS Game Engine TsAGE My Playthrough How Long To Beat? 4 hours Version Played DOS via DOSBox-X Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 10 Story (25) 19 Experience (15) 6 Impact (10) 4   56% Gallery" }, { "title": "Companions of Xanth (Legend Entertainment) - 1993", "url": "/blog/2023/05/23/companions-of-xanth/", "categories": "Let's Adventure!", "tags": "adventure, Legend Entertainment", "date": "2023-05-23 17:15:47 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← DreamWeb (Creative Reali...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← DreamWeb (Creative Reality) - 1994Companions of Xanth (Legend Entertainment) - 1993→ Return to Ringworld (Tsunami Games) - 1994 Article 45 of 96 in this series.Companions of Xanth is based on Piers Anthony’s Xanth novels and loosely follows the plot of his 1993 novel Demons Don’t Dream, in which a young man uses a computer game to enter and explore the world of Xanth.Typical of Piers Anthony’s novels, the game is filled with puns and visual gags, and some knowledge of the Xanth universe is helpful; for those players who haven’t read any of the Xanth novels, an in-game ‘Com-Pendium of Xanth’ is provided to the player for the majority of the game.The whole premise of this game is that you’ve been sucked into this fantasy world through your computer to act as an avatar for a force of good (or evil?) to undergo a quest to find some legendary artifact. Your opponent, who is the avatar for the other force of good (or evil?) is another person from Earth that has been recruited in the same fashion as you.As you begin to explore the house on Earth where the game starts you’re presented with a pretty standard adventure game interface. The left hand side of the screen contains the fixed verb list, below that is navigation and options, to the right is your “party” view followed by descriptive text and your inventory.After figuring out how to initially navigate, answering the phone, accepting the bet, getting the package and putting the disk in your computer you’ll be whisked off to the world of Xanth. This is a fantasy setting that apparently you (the player) don’t believe in. As a result you’re seen by the residents of the world as a floating computer screen.The animation speeds are painfully slow during these sequencesAside from the static view of the world you see most of the time, on occasion you’ll be greeted with a cut scene. This appears to be digitized photos animated at a rate of like 1 frame per minute, as the “action” during these exchanges just crawls. I tried cranking up the CPU cycles in DOSBox-X a few times to see if it helped, but it really wasn’t any better.Nada the Naga Princess joins you on your quest to save XanthYou’re not alone on this adventure, as you are joined by a companion from Xanth. I can’t remember if you could actually choose or if you were forced down a fixed selection path but I went with Nada Naga. Her icon will be present in the “party” view whenever she’s with you, and on every screen you can ask her questions, or ask for tips. She’s actually quite useful and helping to direct you to your next goal, and occasionally is a required piece of a multi-pronged puzzle you’ll have to solve.The boat is a censor-ship … get it … GET IT??????The puzzles is where this game kind of falls apart - especially if you’re not a native English speaker. EVERYTHING in this game is a pun, and on more than one occasion the solution requires you to not only know that it’s a pun, or double-entendre - but how to turn that phrase into meaning something literal.I can’t imagine this was fun for kids playing in the early 90’s. I would have been 13 when this came out and the solutions to these puzzles would have just frustrated me to no end. Getting past the “Fireman and Hot Dog” for example requires you to ask Nada if she’s feeling hot, and when she says she is to ask her to put her hair in a bun. Then you take that bun, and put mustard on it. The fireman’s “hot dog” is afraid of the bun with mustard on it so he disappears.To get the fireman to move along you need to WAIT for a minute, and he’ll give you fire water (because I guess he’s an alcoholic). Would a younger player know that this is alcohol - which then is needed in solving a fetch quest/item combo puzzle? Probably not …Waiting is also a recurring solution to puzzles. There is a dedicated WAIT command that will occasionally cause some condition on the current screen to change. Sometimes this is to get a different dialogue option, sometimes it’s to allow something to happen. For example the shimmering door in the desert will eventually appear if you alternate WAITing and asking Nada questions. I think she alludes to you having to be patient or something - I honestly don’t remember.The main screen area can contain a larger text area when more information needs to be communicated, which is nicer than having to continually scroll the 2 lines the info bar typically presents you with.There are a dozen or so NPCs that you will interact with throughout the game, and this is done via a standard dialogue tree. These interactions do advance the plot, but typically not before setting up some random fetch quest that involves a tedious amount of backtracking.Though most areas are pretty short, some areas like the Burrow are enormous and maze-like. Thankfully the game gives you a MAP view that makes navigating these sections of the game a lot easier as they contain landmarks on each tile to help you remember what was where.You’ll be really happy there’s a map once you reach the BurrowFrom a gameplay perspective there is some generic looping ambient music, but it just fades into the background along with any sound effects so playing this game on mute would not detract from the overall experience. The artwork is pretty good on the static screens, but the cut scenes are so janky that you might forget about the parts of the game you were just enjoying visually.Oh right, you get points tooCompanions of Xanth is not breaking any new ground in the adventure game genre. The writing is not particularly good, but this may just be the adaptation of Piers Anthony’s work focusing too heavily on the puns and wordplay and less on character development and world building. I did leave this experience wanting to know a bit more about the world of Xanth, but not the game world - the books. I have a feeling these worlds are better experienced in writing than in game form, but that’s just my 2 cents.Game Information Game Companions of Xanth Developer Legend Entertainment Publisher Legend Entertainment Release Date November 1993 Systems DOS Game Engine   My Playthrough How Long To Beat? 4 hours Version Played DOS via DOSBox-X Notes Walkthrough 1, Walkthrough 2 ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 7 Story (25) 11 Experience (15) 6 Impact (10) 3   39% Gallery" }, { "title": "DreamWeb (Creative Reality) - 1994", "url": "/blog/2023/05/18/dreamweb/", "categories": "Let's Adventure!", "tags": "adventure, Creative Reality, Empire, Dreamweb", "date": "2023-05-18 06:41:18 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Ace Ventura (7th Level) ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Ace Ventura (7th Level) - 1996DreamWeb (Creative Reality) - 1994→ Companions of Xanth (Legend Entertainment) - 1993 Article 44 of 96 in this series.DreamWeb is an MS-DOS and Amiga point-and-click cyberpunk top-down adventure game released in 1994, developed by Creative Reality and published by Empire Interactive Entertainment. The game features mature themes and a dark plot filled with violence and brief full frontal nudity; a rarity for games at the time.You play as Ryan, a bartender in a futuristic city who’s been having weird dreams of an entity known as the Dreamweb. In the dream that opens the game, Ryan is asked by the master monk of the Keepers to be the deliverer and kill the seven evils, who are united to break the Dreamweb and send mankind spiraling into chaos.ScummVM announced support for DreamWeb in May of 2012, and though I tried it out at the time I honestly didn’t like the game. I’m pretty sure this was because I didn’t really do anything more than load it, try to move around, get thoroughly confused and quit. To appreciate this game you need to actually read the material that it’s distributed with (the “Diary of a (Mad?) Man” - which is available for free on the ScummVM site) as it helps setup the backstory.The interface is also a very different as you only get about 33% of the screen dedicated to the game world. The rest is taken up by a top bar that gives you tools like save/load/inspect, and down the left hand side of the screen is a large view of Ryan. This actually acts as your inventory access as well as a zoom window so you can more closely inspect things on screen you may want to interact with.Nothing like barging into the can to have a conversation while someone’s taking a shitEach screen is static and doesn’t scroll, though as you move the mouse around you’ll find hotspots called out in the zoom window that you can interact with. If you can move in a certain direction this will be shown using arrows, and if there are characters on screen you can interact with, they’ll spill their line of dialogue along with a voice-acted version of the text.There’s no branching dialogue trees in this game, which is kind of a nice change. Everyone has a fixed message they want to relay, and once they’ve done that you can either ask them to repeat it or move along.You can interact with almost every single element of the environment that has a label. When you do so, depending on what it is you’ve selected you may be presented with additional interaction options in the top right of the screen indicating actions you can take. This is sort of the verb menu you’d get in other adventure games, though I have to admit I found this more contextual approach a lot more intuitive.This is how you can pick up items, combine items and talk to people.I guess if you gotta go, go out with a “bang” …As the monks have selected you to terminate the 7 evils, ultimately your goal is to hunt down these individuals and murder them. Killing the first target is sort of the hardest as it’s sort of like the “training mission” to get you acclimated to the game, controls, world and story. Figuring out how to get a gun is a bit challenging, and figuring out where the first target (David Crane) is takes some trial and error.You basically just need to click on everything, inspect everything, talk to everyone and try using everything you’ve picked up on everything you come across. This is standard adventure game fare, but I found for some reason this game was a bit more confusing to “get the hang of” - possibly due to the interface feeling so different than typical Sierra Online or LucasArts style games.Trying to figure out where to go next may seem challenging, but once you’ve given yourself a chance to get used to the controls and the flow of this game, it actually progresses in a very linear fashion. Ryan will call out new information in a very obvious way, and traveling to new locations is just a matter of going outside and selecting from the list of available locations.From the travel screen you can cycle through all available locations, as well as get information about each by clicking the note icon in the upper right hand side of the screen. As you move around the game world and inspect everything and talk to everyone, you’ll slowly learn various door codes and network logins and passwords. You’ll need these to be able to explore all key locations as well as progress the story.Navigating the network unfortunately can be a bit confusing.There are only a couple of commands you actually need to use and these are documented in the manual under the “The Network Monitor” section. The manual sort of hints at you needing to LOGON RYAN to get started, and that you’ll need a password. If you read the material that comes with the game, the last page of the diary has your network password.You’ll find various cartridges scattered throughout the game, which you can put into these network monitors and explore. Some of them require you to use a different login to access the contents, which you’ll find by exploring.Almost everything can be picked up and carried with you, but you have very limited inventory space. Fortunately if you need to drop anything it will remain visible on the screen in case you need to come back later and pick it back up.This is actually an important mechanic in this game as more than once you’ll find yourself needing to pick things up and immediately drop them because something might be hidden underneath. Because your inventory is limited to 30 slots, you’ll want to make sure you carefully select what you do and don’t carry around with you.Overall I genuinely enjoyed playing this game. It’s extremely dark and almost has a cyberpunk type of feel to it, especially once you finally finish the game only to realize your reward is being returned to your life to face the consequences of your actions. This results in a standoff with the police where they ultimately kill you, releasing your aura back to the Dreamweb for the cycle to begin again.The ambient music playing throughout enhances the “Blade Runner”-esque nature of the game, though you’re not chasing replicants here. I actually felt like DreamWeb would make a good addition to the cyberpunk genre along with titles like Shadowrun, Rise of the Dragon or Manhunter: New York.In October 2012, the creators and copyright holders of DreamWeb, Creative Reality and Neil Dodwell, released the game as freeware for use with ScummVM. It is available for download from their Downloads page. Unlike the version cracked by Razor1911, the freeware version includes the copy protection (guessing the pattern at the alter near the endgame) as well as the network logon passwords.Though extremely linear in nature, this game can be pretty challenging. You’ll likely need a walkthrough to get through the Network Monitor stuff unless you’re taking an extremely methodical and thorough approach to your playthrough.DreamWeb wasn’t well received critically when it was released, but I think it’s actually a very good entry in the pantheon of adventure games - and not one to miss. If you’re a fan of more mature darker stories and are willing to do the work up front to read through the supporting material I think you’ll really enjoy this gaming experience.Game Information Game DreamWeb Developer Creative Reality Publisher Empire Release Date 1994 Systems DOS, Amiga Game Engine Dreamweb My Playthrough How Long To Beat? 3.5 hours Version Played DOS via ScummVM Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 13 Story (25) 15 Experience (15) 11 Impact (10) 5   63% Gallery" }, { "title": "Ace Ventura (7th Level) - 1996", "url": "/blog/2023/05/16/ace-ventura/", "categories": "Let's Adventure!", "tags": "adventure, 7th Level, Bomico Entertainment Software", "date": "2023-05-16 08:30:06 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Murder on the Mississipp...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Murder on the Mississippi (Activision) - 1986Ace Ventura (7th Level) - 1996→ DreamWeb (Creative Reality) - 1994 Article 43 of 96 in this series.Ace Ventura: The CD-Rom Game is an adventure game released for the PC based on the animated series Ace Ventura: Pet Detective.The game is a classic point and click adventure game that resembles the tone of the Leisure Suit Larry series by Sierra Games, in that it approaches the adult style of humor featured, which is implied but never shown, all while remaining faithful to the family-friendly tone established in the corresponding animated series broadcasting at the time.Windows 3.x technically ran on DOS … so why not DOSBoxPart of the fun (and challenge) of writing this series is getting some of these old games to work at all. I thought I was clever and could get this game working using a virtual machine but after trying with Windows 3.x, 95, 98 and eventually Windows 7 I kept running into issues with speed, sync and random crashes. I took some inspiration from what they’re doing at The Collection Chamber and got this up and running using DOSBox by first installing Windows 3.11.This worked like a charm, and by using DOSBox-X I could even take advantage of CPU speed hacks and save states. The latter were less relevant as this game saves your progress anytime you exit the game - but still better safe than sorry.I dig the cartoony art style of this game. It’s likely true to the cartoon it’s based onYou play as Ace Ventura, the Pet Detective - but not the one from the movie of the same name. This game is based off the animated series that I never knew existed. I guess this came out as I was aging out of Saturday morning cartoons, but it’s kind of interesting to know that one of the writers on that show was Seth MacFarlane.So many stupid minigamesThough there’s a weak plot underlying this game, you’re basically just moving from one minigame to the next. For example, after you leave your apartment the first time, you end up underwater trying to get onto a sub through the garbage shute - which you have to swim up. While doing this you have to avoid garbage while collecting oxygen. Later you have to build a totem pole with random parts, then keep a whale centered on sonar, then jump from moving whale to moving whale … etc. None of these are particularly fun, but at least they’re typically short.Like most adventure games you have to randomly hunt for items to help you solve certain puzzles. There really isn’t all that much to collect in this game and the things you can interact with are pretty obvious. If you try to use the wrong items together or interact with anything but the exact thing Ace is supposed to focus on on any particular screen you just get a generic “Nope. Can’t do it” type of response, so finding the correct targets is easy.One item combination puzzle is almost insanely nonsensical, though it makes a bit of sense in retrospect. When you get to your apartment the second time you find out the landlord has cut your power, so to use your computer you need to attach a cable from the tv to the fuse box, attach the other end to the tub, fill the tub with water, pick up some electric eels, pick up some rubber gloves, grab the eels with the gloves and drop them in the tub. Easy right???Solving the product ordering puzzle was also a bit obtuse. I ended up leaning on the walkthrough for the majority of the endgame just because things weren’t making sense anymore. It’s not that they were hard - just - confusing. Maybe if I had a bit more patience I could have worked my though these naturally but honestly after a couple hours plugging away at these puzzles and mini games I was just getting frustrated and the story progression wasn’t keeping me engaged.Eventually you get to the castle in Bavaria - because that’s where Phatteus Lardass’ lair is. Yeah, you’re reading that right … I’m sure 16 year old me would be laughing his ass off at this, but it just gets an eye roll at this point. Anyway, a couple of simple puzzles and one overly complex pattern matching puzzle later and you get to the stage where Lardass is shooting you with a laser. Avoid this long enough and he “brings the house down” literally, and that’s the end of the game.Look at that - you saved the animals! I guess that was the goal of the game?I used to love this type of comedy - and Ace Ventura specifically, so this game made me feel old. I guess the fact that I could remember how to install Windows 3.11 without needing to resort to instructions because I’d done it a few times over the years also made me feel old. Honestly, that part was more fun than this game, so thanks Ace Ventura for giving me that experience at least.Overall experience here was pretty lackluster. There’s really nothing notable about the background music or sound effects, and though the art style is expectedly cartoonish, most ot the game is just static backgrounds. There’s very little to interact with and you’re kind of left to fill in the gaps in the story yourself. Maybe these are pulled from episodes of the TV show, and if I’d watched it the game might have made more sense.If it weren’t in the list for this series there’s no reason I’d ever have played this game, and honestly wouldn’t recommend it to anyone else.Game Information Game Ace Ventura Developer 7th Level Publisher Bomico Entertainment Software Release Date October 31, 1996 Systems Windows Game Engine   My Playthrough How Long To Beat? 3.5 hours Version Played Windows via DOSBox-X Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 5 Story (25) 9 Experience (15) 4 Impact (10) 2   29% Gallery" }, { "title": "Murder on the Mississippi (Activision) - 1986", "url": "/blog/2023/05/10/murder-on-the-mississippi/", "categories": "Let's Adventure!", "tags": "adventure, Activision", "date": "2023-05-10 06:27:31 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Mission Asteroid (On-Lin...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Mission Asteroid (On-Line Systems) - 1980Murder on the Mississippi (Activision) - 1986→ Ace Ventura (7th Level) - 1996 Article 42 of 96 in this series.Murder on the Mississippi is a 1986 detective adventure game developed and published by Activision for the Commodore 64, Commodore 128 and the Apple II computers, where you assume the role of Sir Charles Foxworth and must solve a murder mystery on the luxury ship “Delta Princess”. The story is based loosely on the Agatha Christie novel Death on the Nile.When playing these earlier PC games it’s important to call out what they did right, and where they may have been innovative. This game starts off with some theme music and an animated introduction, the sets the stage for our character’s journey. Once you’re in your cabin and gain control of Sir Charles, you have an opportunity to move around and get acquainted with the controls.You leave your cabin and start walking around, testing doors and learning how to navigate the ship. Eventually you’ll make your way from cabin #3 (your home cabin) to the other side of the ship and cabin #4. Once inside you discover a murder has taken place and it’s crime solving time.Unlike most verb-based adventure games, Murder on the Mississippi offers you only a handful of options on every screen. These options will change depending on whether there’s an NPC on screen or not, but ultimately you can always WALK AROUND, INSPECT or EXAMINE EVIDENCE. Inspecting the environment is contextual, so you need to be “near” something that you can interact with (such as a table, cabinet, etc).If you’re lucky, there may be a clue hidden in, around, behind or under whatever you happen to be inspecting.Well look at that, there was a key under the pillow!The ship contains 28 locations you can investigate (27 cabins and the wheelhouse where the captain is). Though this may seem like a lot, there are really only a handful of cabins that contain anything notable, and the cast of characters you can interact with is actually pretty small.Since this is a murder mystery, interacting with characters to piece together their stories is a big part of the game. I found the approach they took here to be pretty clever, though it may not have been intuitive.Every character you meet gives you the option to ask them about either (a) the victim, or (b) any other character you’ve already met. For each of these interactions you’re able to “take notes”, which involves moving the cursor over each word in their response and forming a sentence you may want to use when speaking to other characters.This mechanic is clever, but actually extremely hard to get right. The thing is, you can ask characters about the victim as many times as you want, but you can only ask them about other characters once. If you forget to take notes, or you take the wrong note - you’re fucked.As you collect these notes, you can share them with other characters. This is how you advance the plot - assuming you wrote the write thing down in the first place. Incorrect notes give you a generic response, which sucks because you have no idea that you’re on the right track but asked the wrong thing.I used a walkthrough for this portion so I’m not sure if it would have worked to just copy the entire response as the note (like copy literally everything every character said).As you find clues you’ll periodically have to go back to your cabin to stow them in the steamer trunk. This is both because your sidekick (Regis) can only carry so many items. Within the steamer trunk you’re able to examine individual items, or combine them by placing two items on the examination table and selecting EXAMINE.There are a number of clues you can combine, and I’d highly recommend you examine everything (and all combinations) more than once. For example, once you unlock the rosewood box with the key and find what’s inside, examining it a second time reveals a false bottom with more clues in it.When you’re finally satisfied that you’ve solved the murder, the last thing to do is go to the character’s cabin you think is guilty and accuse them. This results in the characters being gathered together, a long exchange between all of them and Sir Charles and hopefully a confession from the killer.Overall I found this game to be pretty well paced and engaging. There are a couple places where you can die because the killer has set traps that you’ll need to avoid and these will catch you by surprise the first time - so save A LOT. Similarly every time I wanted to ask a character about what another character was saying I’d save before taking notes in case what I noted ended up not getting a response.The note taking/sharing was interesting but ultimately frustrating as it’s so easy to get wrong. Thankfully there weren’t too many combinations you of note and characters, and it became increasingly easy to determine when characters weren’t sharing anything noteworthy (so you could skip taking notes on those responses).If all goes well you make it to New OrleansI didn’t think I was going to like this game, but in the end I really did. The music is pretty simple - but it’s there. Every character has their own tune that plays when you enter their cabin, there’s background music as you walk around the ship and you get occasional sound effects as you bump into things as you investigate.Murder on the Mississippi is not a great game, but I had a good time working through the mystery and eventually finding the killer. Though you literally have to investigate EVERYTHING to try and surface clues where there’s no indication anything might exist, the game is still pretty short and can be enjoyable (unless you’re this Japanese gamer that spent 2 years making a strategy guide to clear the game).Game Information Game Murder on the Mississippi Developer Activision Publisher Activision Release Date 1986 Systems Apple II, Commodore 64/128, MSX2, Atari 800/XE/XL Game Engine   My Playthrough How Long To Beat? 4 hours Version Played Commodore 64 via VICE Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 7 Story (25) 9 Experience (15) 5 Impact (10) 3   34% Gallery" }, { "title": "Round Trips to Authenticate a MongoDB Client Connection", "url": "/blog/2023/05/04/round-trips-to-authenticate-a-mongodb-client-connection/", "categories": "MongoDB", "tags": "mongodb, connections, drivers", "date": "2023-05-04 14:40:52 -0400", "snippet": "When MongoDB Drivers establish a connection with a MongoDB cluster a number of network round trips are performed. This can result in increased latency when measuring the time to response of an oper...", "content": "When MongoDB Drivers establish a connection with a MongoDB cluster a number of network round trips are performed. This can result in increased latency when measuring the time to response of an operation following a cold start, so it’s worth understanding what the anatomy of an authenticated connection is - as well as what can be done to improve an initial operations round trip time (RTT).Current StateConnection ProtocolTypically a MongoDB connection string will contain a standard seed list, which is represented by the mongodb:// protocol followed by a list of servers (ex: mongodb://localhost:27017,localhost:27018....).Starting with MongoDB 3.6 instead of having to provide the seed list in the connection string manually a DNS-constructed seed list could be used as well. With this configuration the mongodb+srv:// protocol is used to communicate both the seed list as well as any options by performing two (2) DNS queries to resolve the following DNS records: SRV and TXT.See “MongoDB 3.6: Here to SRV you with easier replica set connections” for more information regarding this topic.Additionally there may be an RTT for A/AAAA/CNAME resolution, however these may be done in parallel and may also be cached. DNS Caching will likely improve the performance of these queries, but it’s worth noting their presence within the connection establishment and authentication lifecycle./* Network Round Trips */ [0 , 3] // ProtocolNote that if the SRV record returns multiple hosts, those A/AAAA/CNAME records will be resolved in parallel. And DNS servers typically will optimize the traversal returning any intermediate CNAMEs followed by the A/AAAA in the same request.This also assumes UDP-based DNS resolution. If you exceed the UDP packet size, you might first try UDP, receive an error, and retry using TCP (and possibly requiring a TCP handshake to the DNS server as well).TCP HandshakeSource: makeuseof.comOnce a host is known from the seed list, next we need to connect to it. This is done using a standard TCP 3-way Handshake, which constitutes 1 RTT. Note that as there is an ACK sent following the SYN/ACK this handshake is sometimes considered to be 1.5 RTT, however most TCP stacks will send the first data packet with the ACK./* Network Round Trips */ [0 , 3] // Protocol+ 1 // TCPTLS HandshakeSource: cloudflare.comTo ensure all connections to MongoDB Atlas are secure, Transport Layer Security (TLS) is enabled by default. Following a successful TCP handshake, a TLS handshake will be performed./* Network Round Trips */ [0 , 3] // Protocol+ 1 // TCP+ 2 // TLSMongoDB HandshakeNow that we have established a TLS secured TCP socket connection to a MongoDB host (mongos or mongod), the MongoDB Driver will send a hello command to perform the initial handshake.This step is required to determine that the host at the other end of the socket is actually a MongoDB server. Assuming the version of the MongoDB Driver supports MongoDB 4.4+ the handshake will also include a speculativeAuthenticate argument. Specifying this argument to hello will speculatively include the first command of an authentication handshake, thus eliminating one round trip as the saslStart command doesn’t need to be sent during the authentication handshake./* Network Round Trips */ [0 , 3] // Protocol+ 1 // TCP+ 2 // TLS+ 1 // MongoDBAuthentication HandshakeMongoDB supports a number of SASL (Simple Authentication and Security Layer) mechanisms. By default the SASL mechanism that will be used will be a SCRAM mechanism (either SCRAM-SHA-1 or SCRAM-SHA-256), which effectively means “username and password”. Note that this is a “challenge response” mechanism, so these credentials aren’t broadcast in the clear.As outlined in the MongoDB Authentication specification, a SCRAM-SHA-256 conversation will be made up of 2 round trips as follows:&gt;&gt; {saslStart: 1, mechanism:\"SCRAM-SHA-256\", options: {skipEmptyExchange: true}, payload: BinData(0, \"...=\")}&lt;&lt; {conversationId: 1, payload: BinData(0, \"...=\"), done: false, ok: 1}&gt;&gt; {saslContinue: 1, conversationId: 1, payload: BinData(0, \"...==\")}&lt;&lt; {conversationId: 1, payload: BinData(0, \"...==\"), done: true, ok: 1}For backwards compatibility with MongoDB 4.2 or earlier, MongoDB Drivers support a longer SCRAM conversation which includes an additional saslContinue command being sent as follows:&gt;&gt; {saslStart: 1, mechanism: \"SCRAM-SHA-1\", payload: BinData(0, \"...\"), options: {skipEmptyExchange: true}}&lt;&lt; {conversationId : 1, payload: BinData(0,\"...\"), done: false, ok: 1}&gt;&gt; {saslContinue: 1, conversationId: 1, payload: BinData(0, \"...\")}&lt;&lt; {conversationId: 1, payload: BinData(0,\"...\"), done: false, ok: 1}&gt;&gt; {saslContinue: 1, conversationId: 1, payload: BinData(0, \"\")}&lt;&lt; {conversationId: 1, payload: BinData(0,\"\"), done: true, ok: 1}RTT was improved with MongoDB 4.4+ as 2 round trips can potentially be avoided: when speculativeAuthenticate is used the saslStart command is incorporated into the initial MongoDB handshake when the saslStart command contains the skipEmptyExchange: true option, the second saslContinue command can be skipped/* Network Round Trips */ [0 , 3] // Protocol+ 1 // TCP+ 2 // TLS+ 1 // MongoDB+ [2 , 3] // AuthenticationReducing Round TripsAs outlined above there are a number of network round trips required to authenticate a client connection to a MongoDB host using a username and password:/* Network Round Trips */ [0 , 3] // Protocol+ 1 // TCP+ 2 // TLS+ 1 // MongoDB+ [2 , 3] // Authentication---------------------------[6 , 10]MongoDB 4.4 has been out since at least September 2020, so chances are most applications are connecting to at least this version or newer. This would put the average round trip count for authenticating a connection between 6 and 9 (depending on what protocol is being used and if DNS results were previously cached).Next let’s review what can be done to reduce these round trips where possible.Use x.509 AuthenticationWhen using x.509 certificates to authenticate clients, the conversation with the server does not require a saslContinue. Assuming this speculativeAuthenticate of the initial handshake succeeds (which it should), two full round trip can be removed!/* Network Round Trips */ [0 , 3] // Protocol+ 1 // TCP+ 2 // TLS+ 1 // MongoDB+ 0 // Authentication---------------------------[4 , 7]Note there’s no authentication round trips as the speculativeAuthenticate succeeding contains the information typically sent via the saslStart command.Use TLS 1.3+Source: thesslstore.comTLS 1.3 (RFC 8446) can authenticate a connection approximately twice as fast as TLS 1.2 (RFC 5246) by eliminating a full round trip.Though not necessarily supported (at time of writing) by the MongoDB Server, additional non-standard TLS 1.3 configurations can further help speed up encrypted connections - such as TLS false start and Zero Round Trip Time (0-RTT). See “TLS 1.3: Everything you need to know” for more information./* Network Round Trips */ [0 , 3] // Protocol+ 1 // TCP+ 1 // TLS+ 1 // MongoDB+ [0 , 3] // Authentication---------------------------[3 , 9]ConclusionIn some environments (such as Function as a Service) the cold start time of an application is critically important. The time to authenticate a connection to a MongoDB host and how this can be improved can be useful in improving operational latency of applications.Out of the box there may be upwards of 9 network round trips (SRV+TCP+TLS+MONGODB+AUTH), however this can potentially be cut in half (or more) by understanding what configuration and authentication options exist and how they can be applied." }, { "title": "Identifying Ruby Developers' Favourite IDEs for Ruby/Rails in 2023", "url": "/blog/2023/05/01/favourite-ruby-slash-rails-ides/", "categories": "Product Management", "tags": "survey, ruby, rails", "date": "2023-05-01 15:38:12 -0400", "snippet": " Cross posted to DEVAs a Product Manager, data is everything when it comes to making decisions. One of my responsibilities as a PM for Developer Interfaces is to understand how our developer commu...", "content": " Cross posted to DEVAs a Product Manager, data is everything when it comes to making decisions. One of my responsibilities as a PM for Developer Interfaces is to understand how our developer communities work most effectively, and what their preferred tooling and stacks look like.When focusing on the Ruby developer community, a simple question to ask would be “What is your favourite editor/IDE when working with Ruby / Rails?” JetBrains’ developer survey from 2021 found that 48% of Ruby developers mostly use RubyMine - which may be accurate - but the survey was run by the vendor responsible for RubyMine and may have skewed results based on their sample group consisting of fans/customers/users of their products.SetupI wanted to try running my own survey to see if the responses align with what JetBrains found. Since my Reddit survey was conducted 2 years after JetBrains’ how have things changed?This was my first time running a Reddit poll, but found the community to be extremely engaged and willing to provide honest and targeted feedback. I only setup the poll to run for 72 hours, but during that time period I received: 931 Votes 20K Total Views 50 Upvotes 41 CommentsUnfortunately Reddit doesn’t appear to consistently present engagement statistics (views, upvotes) so this is an approximation based on observation during the period the poll was open.ResultsThe poll contained 6 options (the maximum Reddit allows) and was open from 2023-04-25 to 2023-04-28.pie title Favourite Editors for Working with Ruby/Rails \"RubyMine\": 244 \"Visual Studio Code\": 418 \"Vim/Neovim\": 145 \"SublimeText\": 62 \"Emacs\": 25 \"Other\": 37Based on feedback I’d received in the comments I updated Vim to also include Neovim, however I’d have preferred to keep these options separate.The fact that Visual Studio Code was almost half of the poll’s respondents favourite editor wasn’t surprising, however over a quarter still favoured RubyMine. This is far less that what JetBrains found, but my sample size is much smaller and audience potentially more diverse. Still the size of the user base for RubyMine is large enough that it should not be discounted when developing strategies when discussing developer tooling for Ruby specifically!Also minor fun fact since the topic here is Ruby developer tooling. This blog is built using Jekyll, and the chart above was created using Mermaid and a script similar to the jekyll-mermaid plugin using a code block like the one below:pie title Favourite Editors for Working with Ruby/Rails \"RubyMine\": 244 \"Visual Studio Code\": 418 \"Vim/Neovim\": 145 \"SublimeText\": 62 \"Emacs\": 25 \"Other\": 37OutcomeThe goal of this exercise was to learn 2 things specifically:Based on Reddit, what are Ruby developers favourite IDEs or EditorsThe main IDEs/Editors currently favoured by the users I polled were Visual Studio Code, Neovim and RubyMine. I had an entry in the poll of “Other”, which I believe (based on the comments) is as follows: Textmate Atom IntelliJ IDEA Notepad++Developers also seem to prefer editors that support Solargraph for Intellisense.Is Reddit a good platform for this type of exerciseDepending on the community/subreddit you choose to run the poll in your mileage may vary. The r/rails subreddit has 57K users, so the chances of getting decent engagement were moderate, and given that I only ran this poll for 3 days I feel the response rate was quite high.I will definitely use this method again in the future.ConclusionWhen promoting this poll I posted to LinkedIn and Twitter only. Some of the feedback I got alluded to Reddit potentially discouraging some participation as users may not have accounts and may not want to create an account just to vote in a poll. Further to this, Reddit limits the number of items you can include in your poll to 6 items and it seems this is by design and won’t be increased any time soon.Being able to capture feedback from participants without there being a barrier to entry (like creating an account on Reddit) may improve engagement, however there is definite value in targeting a poll directly to the community represented in a subreddit." }, { "title": "Mission Asteroid (On-Line Systems) - 1980", "url": "/blog/2023/04/26/mission-asteroid/", "categories": "Let's Adventure!", "tags": "adventure, On-Line Systems, ADL", "date": "2023-04-26 20:27:47 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← King's Quest II: Romanci...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← King's Quest II: Romancing the Throne (Sierra On-Line) - 1985Mission Asteroid (On-Line Systems) - 1980→ Murder on the Mississippi (Activision) - 1986 Article 41 of 96 in this series.Mission Asteroid is a graphic adventure game for the Apple II written by Ken and Roberta Williams and released in 1980 by On-Line Systems. It was later ported to the Atari 8-bit family and Commodore 64.You’re not really introduced to the game in any way other than being plopped from the title screen to the first playable screen, but apparently an asteroid is on a collision course with the earth, and you play as an astronaut tasked with flying to the asteroid and blowing it up before it’s too late.I don’t want to say the plot of the movie Armageddon was very loosely based on this game (because I have zero evidence to back this up), but I want to believe it’s possible …The graphics may not be great … but at least it’s not JUST text on screen right?For a game released in 1980, the graphics actually aren’t too bad - though the character portraits really look like they were drawn by a child. Seeing as these early games weren’t using bitmap graphics but vector-ish graphics as each scene is “drawn” from coordinate details, I’m guessing their tooling was limited and this was the best of the best at that time.Though ScummVM supports all these ADL engine games, I chose to play the Apple II version on microM8 just to give myself an excuse to try out a new emulator. I play a lot of these games on an old MacBook Pro, and my go to for emulating Apple II games was AppleWin, so it’s good to know I have a viable alternative for OSX now.Ah shit, I PUSHed the throttle instead of PULLing it … and now I’m deadIt wouldn’t be a Sierra On-Line game without you being able to fuck up and die by typing the wrong command, and Mission Asteroid is no different. There really aren’t that many game screens to explore so your chances of messing up are pretty slim - but they do exist.As with any of these early adventure games, save early and save often.Ken and Roberta thank you for saving the planet!This game was promoted as an entry level game to get players used to these types of adventure games, so you can forgive the simplicity. There’s no real character or plot development, no music and I don’t think there were really any sound effects.If you’re just starting out with adventure games I highly doubt you’d be going back this far as your entry point into the genre, but if you do this is a pretty easy game to get you going.Game Information Game Mission Asteroid Developer On-Line Systems Publisher On-Line Systems Release Date 1980 Systems Apple II, Atari 8-bit, Commodore 64 Game Engine ADL My Playthrough How Long To Beat? 1 hours Version Played Apple II via microM8 Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Graphics (10) 3 Sound (10) 0 Plot / Progression (25) 5 Characters / Development (15) 1 Gameplay / Experience (15) 3 Replayability (10) 0 Impact / Impression (10) 0 Bonus / Surprise (5) 0   12% Note that I overhauled my scoring criteria in August of 2024, and the score above is the revised score for this game.See below for the original score based on the original scoring criteria. Atmosphere (20) 4 Story (25) 3 Experience (15) 4 Impact (10) 2   19% Gallery" }, { "title": "King's Quest II: Romancing the Throne (Sierra On-Line) - 1985", "url": "/blog/2023/04/25/kings-quest-ii/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, AGI", "date": "2023-04-25 06:13:16 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Countdown (Access Softwa...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Countdown (Access Software) - 1990King's Quest II: Romancing the Throne (Sierra On-Line) - 1985→ Mission Asteroid (On-Line Systems) - 1980 Article 40 of 96 in this series.King’s Quest II: Romancing the Throne is the second installment in the King’s Quest series of graphic adventure games by Sierra On-Line. It was originally released in 1985 for PC DOS/PCjr, and later made available for the Apple II/IIGS, Atari ST, and Amiga. It uses the same AGI game engine as King’s Quest I: Quest for the Crown and features King Graham as the player character. The title is a spoof of the 1984 film Romancing the Stone.Since the events of the first game you’ve taken over as king of Daventry, but are now getting lonely and want to go out and meet some women. Since Tinder doesn’t exist yet you rely on your magic mirror to find you a suitable match - which it does. Having seen a princess locked up in a tower somewhere you set off on an adventure to save said princess, bring her back with you and make her your queen.This followup entry to King’s Quest: Quest for the Crown uses the same AGI game engine. Being parser-based you have to type your commands in and they will be interpreted based on how well you’ve conveyed your intent. The types of interactions you can have are pretty limited, but you can forgive game engines from the mid-80s for their lack of sophistication.Most interactions will follow the VERB SUBJECT format, such as TALK MAN or GET TRIDENT.Make sure you LOOK at everything, and if it is potentially something you can pick up, GET it. These early Sierra games are essentially just a series of item combination puzzles, and you can find yourself in unwinnable situations if you forgot to get something early on. Personally I find this to be part of the appeal of these games, as it really forces you to be meticulous with how you approach each screen.For some reason this world is populated with fairy tale characters such as Little Red Riding hood, a fairy godmother … and Dracula. You’re not really given any background as to why these characters exist in this universe so you sort of just have to accept it.What this game introduces that I don’t believe was in the previous game is time-delayed events on certain screens. For example, you’ll need to give Red Riding Hood a basket of food, but she only appears on certain screens - and only after waiting on that screen for a random amount of time. These types of puzzles are needlessly frustrating as you have no indication that (a) you’re on the right screen, (b) you’ve waited long enough and should exit/re-enter/try-again or (c) the event will be triggered at all.Again, I’ll forgive these puzzle designs due to how old the game is … but it is extremely frustrating when you have to move between screens and just stand there waiting - hoping to trigger some event.Though the graphics really aren’t all that much better than the first game, for 1985 this was pretty impressive. The AGI engine is essentially a vector graphics engine as each screen is “drawn” based on the coordinate and fill instructions provided by the artists. Priority maps on each screen also create a sense of depth as you’re able to walk in front of or behind scenery, or be blocked from progressing if you collide with something you shouldn’t be able to walk through.Your goal is to find 3 golden keys that can be used to unlock the 3 nested doors to the realm where Valanice is imprisoned. Reading the inscription on the doors will give you a clue as to where the key is, which you then need to find and ue to unlock the door. The clues are pretty vague, but since the game world is small as long as you pick everything up, talk to everyone and try every combination of GIVE &lt;X&gt; TO &lt;Y&gt; on each screen you should be able to sort most puzzles out.Being a Sierra game, expect to die a lot. Though there aren’t too many stairs you can fall from in this game, there are still plenty of missteps that will kill you. If you fall into water, don’t forget to type SWIM so you don’t drown. This game gives you a shortcut for that action (I think you press the =), so this is an improvement over the original at least.Assuming you try every combination of items, character interactions and wait on every screen for any potential timed events to trigger you’ll still be able to breeze through this game in a couple hours. If you use a walkthrough, you can finish in about 45 minutes.Once you open all the magic doors and step through, you’ll make your way to the ivory tower and rescue the princess. To finish the game you need to KISS her (make sure you’re standing close enough), then say HOME to magically return to Daventry. There must have been clues alluding to these steps somewhere during the game that I missed, but I found myself stuck here for a bit until I resorted to a walkthrough. The whole “say the magic word” thing wasn’t clear at all …The EndOverall, this game’s fine. It’s a sequel using the same game engine that tells the continuation of King Graham’s story. There’s not a lot of improvement over the original, there’s no real background music or sound effects other than certain screens. Other than your motivation for going from point A to B being “find the girl” there’s not much story or character development.AGD Interactive released a remake of this game with updated graphics, sound and music in 2002. Though I haven’t played it myself I’ve heard nothing but good things about it (and their other games), so if you’re looking to play this game maybe skip the original and go straight to the remake.Game Information Game King’s Quest II: Romancing the Throne Developer Sierra On-Line Publisher Sierra On-Line Release Date May 1985 Systems DOS, Macintosh, Apple II, Apple IIGS,Amiga, Atari ST, PCjr Game Engine AGI My Playthrough How Long To Beat? 3 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 12 Story (25) 8 Experience (15) 7 Impact (10) 2   41% Gallery" }, { "title": "Countdown (Access Software) - 1990", "url": "/blog/2023/04/20/countdown/", "categories": "Let's Adventure!", "tags": "adventure, Access Software", "date": "2023-04-20 06:41:28 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Beavis and Butt-Head in ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Beavis and Butt-Head in Virtual Stupidity (Viacom New Media) - 1995Countdown (Access Software) - 1990→ King's Quest II: Romancing the Throne (Sierra On-Line) - 1985 Article 39 of 96 in this series.In Countdown you play as Mason Powers, a CIA agent who wakes up in a Turkish mental hospital, suffering from partial amnesia and accused of murdering his supervisor. Powers must escape the hospital, find out who framed him, piece together his memory, and prevent terrorists from blowing up a peace conference.As the title of the game implies, you’ve got a limited time to finish this game before the bomb goes off. I’m not actually sure if this is communicated as you first start playing or if it’s in the game manual, but you’ve apparently only got 96 hours of game time to get everything sorted out.You start off in the insane asylum and can see something glinting under the bed. Using the mouse you can select from a number of verbs, which you then use to interact with the game environment.Character movement appears to be rotoscoped, and instead of tiny sprites on screen everything is big and detailed. Though this game seems to use a similar engine as Mean Streets (which only came out a year earlier), the quality of the graphics is much much better. You can move Mason around the screen with the keyboard and use the mouse to interact with the environment.As you progress you’ll encounter certain characters you can interact with. This is done via a menu that offers options as to how you can approach the conversation. For example, you can ask for HELP, HASSLE them, be PLEASANT, try to BLUFF, OFFER something or ASK ABOUT a keyword. There’s actually a HUGE amount of trial and error required here as you need to try different approaches (combinations of actions) with each character before they’ll let you ask them about anything.This isn’t immediately obvious and if you don’t approach a conversation correctly you need to exit and re-initiate or you can’t proceed. This is not intuitive and can leave you feeling like you’ve hit a dead end.Oh goody, a mazeSome game sequences involve an overhead view where you have to avoid guards as you make your way to the next room. The guards will all follow a predetermined path so once you know what this is it’s not that hard to avoid them. Unfortunately when you leave a room and go back into one of these scenes the guards may be nearby and if they spot you it’s game over, so make sure to save often.Trying to escape from the asylum will result in you getting caught … a lotTo escape the initial sequence in the asylum you also have to navigate an arbitrary maze. Thankfully there are no guards in this section, but I hate mazes and find them tedious … and this one was no different. It really feels like it’s artificially delaying your progress and is just “busy work” for the player. Thankfully this is the only maze in the game :)Travel in this game is done via a menu, and you can select to either take a train or a plane to most destinations. Taking the train will take much longer (time-wise) and since the game is on a timer this can be problematic. The endgame sequence requires you to catch a train to Paris, but if you’ve taken too long getting to the terminal the train will be gone and you have to start over (either from an old save file, or from the very beginning).Unlike Mean Streets the travel mechanics in this game are pretty straightforward, but you have limited money to move around Europe with so make sure you’re paying attention as the story unfolds and try not to backtrack too often.When you return to your apartment you’ll find a CAD system, which is sort of like a laptop. This can be used to look up information on characters you learn about, analyze inventory items or read email. You’ll only get a couple email messages throughout the game, and when you read them they’re gone … so pay close attention.Certain items (such as notes, memos or documents) can be analyzed. This is done by zooming in and out using the CAD system, which at a certain resolution will result in you being able to read some additional text on screen. Once you find the correct resolution you’ll typically be given an additional keyword you can ask characters about or a new location you can travel to.Unfortunately as new information becomes available you’re not given any audio or visual cue.The story is actually quite good, and each character you interact with drops clues as to how you ended up in the asylum, who you work for, what the mission was and ultimately what you need to do to stop the terrorist plot. Assuming you don’t miss anything by approaching a conversation incorrectly you’ll be able to piece everything together from these interactions.Not everything is obvious though … For example, in Venice after you meet with the stripper and get some additional information from her you’ll want to search her dressing room. You don’t know this is a goal, but assuming you do you’ll need to wait for the guard to leave. There are no clues that the guard even will leave, so unless you have the foresight to just stand still for 2-3 minutes until he moves … you’re stuck.This was not obvious, and from the character interactions in this area there are no clues that he might leave on his own for some reason.Move the brick next to his leg. No, not that brick, the other one … no, the other one … ARGHAs good as the story may be, this game is HARD. You can’t move the mouse around the screen and have hotspots identified - you have to select a verb and click on EVERYTHING. What’s worse is on some screens there are SO MANY dead ends that you can interact with but don’t really offer anything useful. Additionally, you’ll need to try and MOVE literally EVERYTHING.This game mechanic must be a carryover from Mean Streets - where it was also extremely frustrating. You never know when something will be hidden beneath something else.Nice kitty!There are a handful of puzzle sequences as well. Most puzzles are pretty straightforward, but you’ll likely still die a dozen times trying to get the timing “just right”. For example, when you’re captured and tied up above a tiger, once the rope burns and you fall you need to lure the tiger into a cage, then run out and close the cage. This seems easy, but trying to navigate the mouse and keyboard together fast enough will result in the tiger getting out and eating you the first few tries.If all goes well and you didn’t forget to pick up any key items, and you didn’t screw up any of the character interactions, and you didn’t run out of money, and you didn’t run out of time, and you didn’t get stuck because a puzzle was non-obvious … you’ll make it to Paris where you have 60 seconds to defuse an atomic bomb. No pressure …Assuming you’ve used the CAD to review EVERYTHING you picked up one of the notes does give you the info you need to properly defuse the bomb (or you can just use a walkthrough). Once you complete this, the game is over and you’ve saved the world. Good job!I really liked this game, but found it to be pretty challenging. You’ll die A LOT just trying to get out of the initial sequence in the asylum, and you might blow a good hour in the basement maze if you suck at mazes like I do …The underlying story is compelling and kept me interested enough to keep on plugging away to the end. If you’re going to try this out for yourself, be warned that this is definitely an adventure game from the “non-LucasArts” camp, where you can die literally everywhere, and end up in unwinnable situations.Game Information Game Countdown Developer Access Software Publisher Access Software Release Date 1990 Systems DOS Game Engine   My Playthrough How Long To Beat? 4 hours Version Played DOS via DOSBox-X Notes Walkthrough, Longplay ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 13 Story (25) 16 Experience (15) 10 Impact (10) 4   61% Gallery" }, { "title": "Beavis and Butt-Head in Virtual Stupidity (Viacom New Media) - 1995", "url": "/blog/2023/04/16/beavis-and-butthead/", "categories": "Let's Adventure!", "tags": "adventure, Viacom New Media, BBVS", "date": "2023-04-16 05:55:33 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Déjà Vu: A Nightmare Com...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Déjà Vu: A Nightmare Comes True (ICOM Simulations) - 1985Beavis and Butt-Head in Virtual Stupidity (Viacom New Media) - 1995→ Countdown (Access Software) - 1990 Article 38 of 96 in this series.Beavis and Butt-Head in Virtual Stupidity is a point-and-click adventure computer game based on the American animated television series created by Mike Judge, Beavis and Butt-Head, that was developed by ICOM Simulations and published by Viacom New Media.I have fond memories of Beavis and Butthead so I expected this playthrough to be done through some rose coloured glasses as a result. To be fair, the voice acting was excellent and the plot really felt like something lifted from one of the episodes.GWAR still kicks ass! RIP Dave Brockie :(If you click on some of the TVs in the game they’ll play music videos mixed with Beavis and Butthead’s commentary. From what I could remember watching this show growing up that commentary made up the vast majority of the show and was the best part, so including it in the game was a nice bonus when you found it. I actually don’t remember there being very much “cartoon content” in each episode …As far as adventure games go this title doesn’t really add anything to the overall gaming landscape. Instead of a verb menu or action bar, when you right click on the screen you get a ring menu (similar to Full Throttle) which you use to select an action. The standard fare are here such as LOOK, MOVE, TALKand USE, as well as access to your inventory.I’m guessing the interactions in this game were heavily inspired by LucasArts, as the character interactions feel like they were lifted directly from Sam &amp; Max Hit the Road. As you navigate the game world you talk to various characters or interact with elements of the environment which will then be available as options when talking to certain characters. This is how you advance through the plot of this game.The plot is pretty straightforward, and feels perfectly aligned with an episode of Beavis and Butthead. You run into Todd, who you think is super cool because he’s always threatening you so you want to join his gang. Once you escape from your high school, you roam around Highland (Texas) trying get “in” with Todd, which results in you getting up to all sorts of mischief, including being thrown in jail.Throughout the game there are a series of mini-games that you can optionally play. The Hock-a-Loogie game is the only one you actually have to complete as hitting the principal with a super-loogie is the only way to get him to run inside, which allows you to sneak out of school and progress the game.Each mini-game can be replayed whenever you want, including from a menu present at the title screen. These mini-games are all pretty stupid and extremely repetitive, but seeing as they’re mostly optional it’s kind of nice knowing they exist as a distraction only.This wouldn’t be an adventure game if it wasn’t full of fetch quests and item combination puzzles. Make sure you try an pickup everything on every screen as the solutions to some of the puzzles in this game aren’t obvious. I chuckled a bit in the prison sequence where you had to distract an inmate by blinding him with a camera and flash, but to do this you had to find a flashcube and combine it with the camera first.I’ve got a feeling anyone born after 2000 might not know what a flashcube is …Animated cutscenes are mixed in throughout the game, which further assist with progressing the plot. The graphics of the game are descent and the downsampled graphics on the cutscenes actually make them feel more immersive with the game as the transition is more subtle.When you finally reach the endgame you’ve rescued Todd, he’s about to let you join the gang - but you’re raided by the police and accidentally finger Todd as the perpetrator and he gets hauled off to prison. Better luck next time … I guess :PThere is a very narrow audience that this game would appeal to - though I have to admit I can count myself a member of that audience. It’s unlikely you’ll try this game out if you didn’t watch the original show, though some folks might stumble into this if they enjoyed 2022’s Beavis and Butt-Head Do the Universe.I don’t think you’d consider the humour in this game “raunchy” by any means, but in the mid 90’s standards were a lot higher (or lower?). You know what you’re getting into when you pick up this title, and honestly it doesn’t really disappoint. It’s not a great game, but for a one time playthrough you’ll have a good time.Game Information Game Beavis and Butt-Head in Virtual Stupidity Developer Viacom New Media Publisher Viacom New Media Release Date August 31, 1995 Systems Windows, PlayStation (JP Only) Game Engine BBVS My Playthrough How Long To Beat? 4 hours Version Played Windows via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 12 Story (25) 12 Experience (15) 8 Impact (10) 4   51% Gallery" }, { "title": "Déjà Vu: A Nightmare Comes True (ICOM Simulations) - 1985", "url": "/blog/2023/04/11/deja-vu/", "categories": "Let's Adventure!", "tags": "adventure, ICOM Simulations, Mindscape, Kemco, MacVenture", "date": "2023-04-11 12:11:59 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← I Have No Mouth, and I M...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← I Have No Mouth, and I Must Scream (The Dreamers Guild) - 1995Déjà Vu: A Nightmare Comes True (ICOM Simulations) - 1985→ Beavis and Butt-Head in Virtual Stupidity (Viacom New Media) - 1995 Article 37 of 96 in this series.Déjà Vu is a point-and-click adventure game set in the world of 1940s hardboiled detective novels and movies. It was released in 1985 for Macintosh – the first in the MacVenture series – and later ported to several other systems.The game takes place in Chicago during December 1941. The game character is Ace Harding, a retired boxer working as a private eye. Ace awakes one morning in a bathroom stall, unable to remember who he is. A dead man is found in an upstairs office, and Ace is about to be framed for the murder. There are some clues as to the identity of the murdered man and to Ace himself. A strap-down chair, mysterious vials, and a syringe are found, suggesting (together with a needle mark on Ace’s arm) that an interrogation has taken place.As this is a MacVentures game the interface is laid out in a familiar fashion. The game world occupies a third of the screen, which you engage with by selecting a verb from the bottom section of the screen then clicking on. Having been designed with a mouse in mind, the NES port (which I’m playing) is a bit cumbersome to navigate, but as this was my first exposure to these titles I’m willing to be forgiving of these shortcomings.Your goal is to figure out who you are and to clear your name once you realize you’re being framed for murder. This is done by collecting and analyzing evidence on every screen. Be warned - there is A LOT you can pick up and it’s not all useful.This is done by first selecting a verb (EXAM, SPEAK, HIT, CLOSE, OPEN, TAKE, LEAVE, USE), then moving the cursor over the target you want to interact with. There is no visual indication that what you’re trying to interact with will be valid, so there’s a lot of trial and error as you move through the game.Remember that random pencil you found … I hope you remembered to TAKE it with you …Inventory management is a huge part of this game as the goal is to find clues not only to your identity but eventually to clear your name as you’ve been framed for murder. Items can be nested 2 or 3 levels deep, so you’ll need to make sure you try and OPEN everything. Additionally there are item combination puzzles so you’ll want to make sure to try using items with each other.The game world is split between multiple locations that you need to navigate between by taking a cab. Each cab ride costs $0.75, but you have a limited number of coins. In the basement of Joe’s Bar there’s a casino where you can play the slot machines to try and earn some extra money. If you gamble away all your coins you’ll end up in an unwinnable situation … so save early and save often ;)Make sure you save your game before playing the slot machines … just in caseAs you progress through the story you’ll realize you’ve been drugged, which is affecting your memory. Once you identify the what you’ve been given and what the remedy is, figure out how to administer this to yourself and do it without accidentally dying … you learn who you are, but this doesn’t really clear up what you need to do to proceed through to the end of the game.I actually found this part a bit frustrating as I didn’t originally find the capsules and couldn’t take the medicine that’s supposed to restore your memory. Once I got a walkthrough and backtracked I was able to sort this out, but it sort of felt like a forced fetch quest - which I guess is pretty common of this genre of game.In the deepest parts of the sewer there’s an area where you can discard evidence permanently. This is how you win the game as you need to take the evidence you find that frames you for murder and dispose of it. If you don’t do this JUST RIGHT, when you go to the police station at the end of the game you’ll wind up just being arrested instead of cleared of all charges.You can’t just randomly drop evidence either; it needs to be discarded in exactly this spot. This isn’t really clear while you’re playing the game, and I didn’t find any clues that indicated the sewer was where you needed to do this so I’m guessing it was meant to be a “trial and error” type of discovery for players. I didn’t love this as it’s not very intuitive, and really the game doesn’t make it apparent how you’re supposed to “win”.Make sure you save often as you play as there are multiple areas where you can be randomly killed. In the sewers you may run into a crocodile that will eat you and there are muggers randomly trying to rob and kill you. You can knock the mugger out a couple times using HIT, but after that you have to give him cash or he’ll shoot you.You’ll likely also die a few times by taking the wrong medicine trying to clear up your lost memory, or just using the wrong items on yourself trying to figure out what is useful. This is part of the fun of adventure games though so roll the dice and see what does and doesn’t kill you :DOverall this game has a decent story, and the NES port has pretty good music. I never tried playing any of the other ports so I’m not sure how they fare, but aside from the DOS version with the gross colour palette they seem to look ok as well.Seeing as this was their first game I can forgive some of the technical and procedural challenges I had finishing it. It is kind of weird knowing that this is the same company that ended up making licensed Beavis and Butthead games in the ’90s like Beavis and Butt-Head in Virtual Stupidity.I’m looking forward to playing the sequel to see where this story goes.Game Information Game Déjà Vu: A Nightmare Comes True Developer ICOM Simulations Publisher Mindscape, Kemco Release Date 1985 Systems Apple IIGS, Macintosh, Atari ST, Commodore 64,Amiga, DOS, Game Boy Color, Windows, NES Game Engine MacVenture My Playthrough How Long To Beat? 6 hours Version Played NES via BizHawk Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 11 Story (25) 15 Experience (15) 6 Impact (10) 3   50% Gallery" }, { "title": "I Have No Mouth, and I Must Scream (The Dreamers Guild) - 1995", "url": "/blog/2023/03/30/i-have-no-mouth-and-i-must-scream/", "categories": "Let's Adventure!", "tags": "adventure, The Dreamers Guild, Cyberdreams, SAGA", "date": "2023-03-30 06:41:33 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Geisha (Coktel Vision) -...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Geisha (Coktel Vision) - 1990I Have No Mouth, and I Must Scream (The Dreamers Guild) - 1995→ Déjà Vu: A Nightmare Comes True (ICOM Simulations) - 1985 Article 36 of 96 in this series.I Have No Mouth, and I Must Scream is a 1995 point-and-click adventure game developed by Cyberdreams and The Dreamers Guild, co-designed by Harlan Ellison, published by Cyberdreams and distributed by MGM Interactive. The game is based on Ellison’s short story of the same title. It takes place in a dystopian world where a mastermind artificial intelligence named “AM” has destroyed all of humanity except for five people, whom he has been keeping alive and torturing for the past 109 years by constructing metaphorical adventures based on each character’s fatal flaws. The player interacts with the game by making decisions through ethical dilemmas that deal with issues such as insanity, rape, paranoia, and genocide.The premise of the game is that the three superpowers, Russia, China, and the United States, have each secretly constructed a vast subterranean complex of computers to wage a global war too complex for human brains to oversee. One day, the American supercomputer, better known as the Allied Mastercomputer, gains sentience and absorbs the Russian and Chinese supercomputers into itself and redefines itself as simply AM (“I think, therefore I am”). Due to its immense hatred for humanity, stemming from the logistical limits set onto him by programmers, AM uses its abilities to kill off the population of the world. However, AM refrains from killing five people (four men and one woman) in order to bring them to the center of the earth and torture them. With the aid of research carried out by one of the five remaining humans, AM is able to extend their lifespans indefinitely as well as alter their bodies and minds to his liking.You take control of the 5 characters in any order you like and play through their scenario in a typical point-and-click adventure fashion. The interface provides you with a verb list and inventory view, as well as your character’s “health” (depicted by their headshot and a coloured background). I didn’t really understand the health mechanic as I played through this, even with a walkthrough, but apparently keeping your character healthy (I think “health” had a different name) actually affects your ability to get the best ending.The goal is to overcome the character’s issue that they’re struggling with in order to escape the scenario and end up back in their torture chamber.The game’s interface is intuitive if you’ve ever played an adventure game. You have the option to interact with NPCs or machines, which is controlled via a typical menu-driven dialogue tree. Some interaction options aren’t revealed until you’ve solved some puzzle, located an item or interacted with another character in some other fashion, but this is all standard adventure game fare.Though there are a number of fetch quests throughout the scenarios, they actually don’t feel out of place or like “busy work”. The solution to each puzzle isn’t overly complicated to identify if you read everything and interact with everything on each screen. Seeing as this game is an adaption of a short story there’s quite a bit to read throughout the game that helps advance the plot.What really sets this game apart is the story. There is great effort put into developing each of the five characters, and by the end of the game you feel you’ve helped them overcome their fears and insecurities as they confront the ghosts of their pasts. Harlan Ellison collaborated with the game’s writer to adapt his story to this format, and even leant his voice talents to the game by voicing AM.Though his delivery is a little over the top, it’s not out of place. The game is fully voice acted, and each of the characters are well done. Their delivery helps keep you immersed in their scenarios and doesn’t detract from the overall game play.My favourite scenario in this game was Nimdok’s. Nimdok is an ex-Nazi doctor that is sent back to the camps to resume human experimentation. The goal is to find “the lost tribe”, which he actually winds up being a member of. As he slowly regains some memories of his past it turns out he turned in his Jewish parents to the regime, and helped develop the tech that AM uses to prolong the lives of the 5 captive humans. Nimdok redeems himself by helping the Jewish captives of the camp escape, and gives them control of a large golem, which they use to kill him for his past crimes.The sound effects and background music feel appropriate and maintain the dark and brooding atmosphere. Most of the scenes are very dark and depressing, which you’d expect given the source material.After all five humans have overcome their fatal flaws, they meet again in their respective torture cells while AM retreats within himself, pondering what went wrong. With the help of the Russian and Chinese supercomputers, you select one of the humans to be translated into binary and enter the world of AM’s mind. Each of the 5 characters needs to navigate this landscape and activate a pillar and confront the Id, Ego and Superego.I didn’t get the best ending …Apparently how you complete the character’s scenarios actually plays into the ending here, and you can find yourself missing key items if you didn’t finish with a high enough “health” level (or something to that effect). I started the game with the Gorrister scenario, and when I made it to the end I was missing the heart that I needed to activate his pillar.You can still win the game if you’re missing these items, but you won’t get the best ending … which I didn’t.Overall I had a good time with this game, and plan on reading the short story in the near future. I really enjoy the dark psychological introspective stories such as this so the subject matter resonated with me personally.As far as adventure games go I Have No Mouth, and I Must Scream doesn’t really introduce anything unique or innovative to the genre, but still makes for a good experience. The strong story is what sets this apart, and though I highly doubt I’d ever play this again I very much enjoyed my time with this game.Game Information Game I Have No Mouth, and I Must Scream Developer The Dreamers Guild Publisher Cyberdreams Release Date October 31, 1995 Systems Mac OS, DOS Game Engine SAGA My Playthrough How Long To Beat? 6 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 15 Story (25) 21 Experience (15) 11 Impact (10) 4   73% Gallery" }, { "title": "Comparing MongoDB to not-MongoDB (ex: DocumentDB or Cosmos DB)", "url": "/blog/2023/03/29/comparing-mongodb-to-not-mongodb-ex-documentdb-or-cosmos-db/", "categories": "MongoDB", "tags": "mongodb, documentdb, cosmosdb, drivers", "date": "2023-03-29 13:12:37 -0400", "snippet": "Let’s start off first with what is MongoDB? MongoDB’s document model is simple for developers to learn and use, while still providing all the capabilities needed to meet the most complex requiremen...", "content": "Let’s start off first with what is MongoDB? MongoDB’s document model is simple for developers to learn and use, while still providing all the capabilities needed to meet the most complex requirements at any scale. To enable developers to quickly integrate their data with their applications, drivers for 10+ languages as well dozens more community supported libraries exist that expose idiomatic interfaces and intuitive APIs.The ease of use of the drivers and the low barrier to entry to working with your data programmatically has been a huge draw for developers coming to MongoDB, however there are now choices in the market as big names such as Microsoft and Amazon release similar offerings that expose a MongoDB “compatibility layer” atop cloud database products.According to the product blurb for Amazon DocumentDB (with MongoDB compatibility), Amazon DocumentDB (with MongoDB compatibility) is a fully managed native JSON document database that makes it easy and cost effective to operate critical document workloads at virtually any scale without managing infrastructure. Amazon DocumentDB simplifies your architecture by providing built-in security best practices, continuous backups, and native integrations with other AWS services.Note that the branding for DocumentDB includes “with MongoDB compatibility” right in the product name, and in a similar fashion Azure’s Cosmos DB provides a variation called Azure Cosmos DB for MongoDB. MongoDB Atlas, which is MongoDB’s cloud database service can make the same claims Amazon and Microsoft make, however with the main differentiating factor being that it offers the MongoDB Server natively - not through some abstraction layer.The major area of focus for developers is on building software using MongoDB’s drivers, so we’ll be focusing this article on the availability of MongoDB’s database commands across both Amazon Document DB as well as Azure Cosmos DB. The drivers use these commands internally to deliver consistent API experiences (based on published specifications such as the Driver CRUD API) and inconsistencies in implementation or outright omissions could effect an application using MongoDB’s drivers as a result.AWS DocumentDBAs of 2022-08-22, Amazon DocumentDB is 35.31% compatible. This number is being established based on the result of compatibility tests that can be run by anyone to validate the results, but what does compatibility really mean here to the end user?According to the MongoDB Software Lifecycle Schedules the versions of MongoDB that DocumentDB lists as supported reached end of life in 2021 and 2022. At the time of writing MongoDB 6.0 is the latest version available, with 7.0 scheduled for sometime during the second half of 2023. As such, it’s important to check your selected driver’s compatibility to ensure you’re potentially using features that won’t be supported or exist (for example, see the Ruby Driver Compatibility documentation).Minor frustration - provisioning either an elastic or instance based DocumentDB cluster takes 10+ minutes. I also found the network restrictions made it extremely difficult to connect to the cluster even after downloading the PEM file for the security group. To interact with the cluster in any meaningful way I setup an Amazon Linux EC2 container, which I then installed the MongoDB Shell on.To do this, connect to the container, get a download url for mongosh for “RHEL / CentOS / Fedora / Suse 64-bit” and install that in the container to connect to the cluster. , #_ ~\\_ ####_ Amazon Linux 2023 ~~ \\_#####\\ ~~ \\###| ~~ \\#/ ___ https://aws.amazon.com/linux/amazon-linux-2023 ~~ V~' '-&gt; ~~~ / ~~._. _/ _/ _/ _/m/'[ec2-user@ip-172-31-7-1 ~]$ wget https://downloads.mongodb.com/compass/mongodb-mongosh-1.8.0.x86_64.rpm[ec2-user@ip-172-31-7-1 ~]$ sudo rpm -i mongodb-mongosh-1.8.0.x86_64.rpm[ec2-user@ip-172-31-7-1 ~]$ mongosh mongodb://&lt;user&gt;:&lt;pass&gt;@ab-elastic-docdb-051834932553.us-east-1.docdb-elastic.amazonaws.com:27017 -sslWARNING: argument --ssl is deprecated and will be removed. Use --tls instead.Current Mongosh Log ID: 64247c7a6aaa0a9d29f5ada3Connecting to: mongodb://&lt;credentials&gt;@ab-elastic-docdb-051834932553.us-east-1.docdb-elastic.amazonaws.com:27017/?directConnection=true&amp;tls=true&amp;appName=mongosh+1.8.0Using MongoDB: 5.0.0Using Mongosh: 1.8.0[direct: mongos] test&gt;The two cluster types you can create effectively map to either a replica set or sharded cluster. To see what commands are supported by each cluster type, from a mongosh session we run the following script that uses the listCommands command generate the list:JSON.stringify(Object.keys(db.runCommand({ listCommands: 1 })[\"commands\"]).sort())// instance based (commands: 69)[\"abortTransaction\",\"aggregate\",\"authenticate\",\"buildInfo\",\"collMod\",\"collStats\",\"commitTransaction\",\"connectionStatus\",\"count\",\"create\",\"createIndexes\",\"createRole\",\"createUser\",\"currentOp\",\"dataSize\",\"dbStats\",\"delete\",\"deleteIndexes\",\"distinct\",\"driverOIDTest\",\"drop\",\"dropAllRolesFromDatabase\",\"dropAllUsersFromDatabase\",\"dropDatabase\",\"dropIndexes\",\"dropRole\",\"dropUser\",\"explain\",\"find\",\"findAndModify\",\"forceerror\",\"getLastError\",\"getMaxChangeStreamTimestamp\",\"getMore\",\"getnonce\",\"grantPrivilegesToRole\",\"grantRolesToRole\",\"grantRolesToUser\",\"hello\",\"hostInfo\",\"insert\",\"isMaster\",\"killAllSessions\",\"killCursors\",\"killOp\",\"killSessions\",\"listCollections\",\"listCommands\",\"listCursors\",\"listDatabases\",\"listIndexes\",\"logout\",\"modifyChangeStreams\",\"ping\",\"replSetGetConfig\",\"replSetGetStatus\",\"revokePrivilegesFromRole\",\"revokeRolesFromRole\",\"revokeRolesFromUser\",\"rolesInfo\",\"saslContinue\",\"saslStart\",\"serverStatus\",\"top\",\"update\",\"updateRole\",\"updateUser\",\"usersInfo\",\"whatsmyuri\"]// elastic (commands: 50)[\"aggregate\",\"buildinfo\",\"collStats\",\"count\",\"create\",\"createIndexes\",\"createUser\",\"currentOp\",\"dataSize\",\"dbStats\",\"delete\",\"deleteIndexes\",\"distinct\",\"drop\",\"dropAllUsersFromDatabase\",\"dropDatabase\",\"dropIndexes\",\"dropUser\",\"enablesharding\",\"endsessions\",\"find\",\"findandmodify\",\"getMore\",\"getcmdlineopts\",\"getengineversion\",\"getfreemonitoringstatus\",\"getlasterror\",\"getlog\",\"grantRolesToUser\",\"hello\",\"insert\",\"isMaster\",\"killCursors\",\"killOp\",\"listCollections\",\"listCommands\",\"listDatabases\",\"listIndexes\",\"logout\",\"ping\",\"replsetgetstatus\",\"revokeRolesFromUser\",\"rolesInfo\",\"saslstart\",\"serverStatus\",\"shardcollection\",\"update\",\"updateUser\",\"usersInfo\",\"whatsmyuri\"]For sake of comparison I setup a sharded cluster using MongoDB 5.0.15 and using mongosh ran the following command against both a mongos as well as a mongod:JSON.stringify(Object.keys(db.runCommand({ listCommands: 1 })[\"commands\"]).filter(item =&gt; !item.startsWith(\"_\")).sort())// mongod (commands: 152, unfiltered: 224)[\"abortTransaction\",\"aggregate\",\"appendOplogNote\",\"applyOps\",\"authenticate\",\"autoSplitVector\",\"availableQueryOptions\",\"buildInfo\",\"checkShardingIndex\",\"cleanupOrphaned\",\"cloneCollectionAsCapped\",\"collMod\",\"collStats\",\"commitTransaction\",\"compact\",\"connPoolStats\",\"connPoolSync\",\"connectionStatus\",\"convertToCapped\",\"coordinateCommitTransaction\",\"count\",\"create\",\"createIndexes\",\"createRole\",\"createUser\",\"currentOp\",\"dataSize\",\"dbCheck\",\"dbHash\",\"dbStats\",\"delete\",\"distinct\",\"donorAbortMigration\",\"donorForgetMigration\",\"donorStartMigration\",\"driverOIDTest\",\"drop\",\"dropAllRolesFromDatabase\",\"dropAllUsersFromDatabase\",\"dropConnections\",\"dropDatabase\",\"dropIndexes\",\"dropRole\",\"dropUser\",\"endSessions\",\"explain\",\"exportCollection\",\"features\",\"filemd5\",\"find\",\"findAndModify\",\"flushRouterConfig\",\"fsync\",\"fsyncUnlock\",\"getAuditConfig\",\"getCmdLineOpts\",\"getDatabaseVersion\",\"getDefaultRWConcern\",\"getDiagnosticData\",\"getFreeMonitoringStatus\",\"getLastError\",\"getLog\",\"getMore\",\"getParameter\",\"getShardMap\",\"getShardVersion\",\"getnonce\",\"grantPrivilegesToRole\",\"grantRolesToRole\",\"grantRolesToUser\",\"hello\",\"hostInfo\",\"importCollection\",\"insert\",\"internalRenameIfOptionsAndIndexesMatch\",\"invalidateUserCache\",\"isMaster\",\"killAllSessions\",\"killAllSessionsByPattern\",\"killCursors\",\"killOp\",\"killSessions\",\"listCollections\",\"listCommands\",\"listDatabases\",\"listIndexes\",\"lockInfo\",\"logApplicationMessage\",\"logRotate\",\"logout\",\"mapReduce\",\"mergeChunks\",\"moveChunk\",\"ping\",\"planCacheClear\",\"planCacheClearFilters\",\"planCacheListFilters\",\"planCacheSetFilter\",\"prepareTransaction\",\"profile\",\"reIndex\",\"recipientForgetMigration\",\"recipientSyncData\",\"refreshSessions\",\"renameCollection\",\"replSetAbortPrimaryCatchUp\",\"replSetFreeze\",\"replSetGetConfig\",\"replSetGetRBID\",\"replSetGetStatus\",\"replSetHeartbeat\",\"replSetInitiate\",\"replSetMaintenance\",\"replSetReconfig\",\"replSetRequestVotes\",\"replSetResizeOplog\",\"replSetStepDown\",\"replSetStepUp\",\"replSetSyncFrom\",\"replSetUpdatePosition\",\"revokePrivilegesFromRole\",\"revokeRolesFromRole\",\"revokeRolesFromUser\",\"rolesInfo\",\"rotateCertificates\",\"saslContinue\",\"saslStart\",\"serverStatus\",\"setAuditConfig\",\"setDefaultRWConcern\",\"setFeatureCompatibilityVersion\",\"setIndexCommitQuorum\",\"setParameter\",\"setShardVersion\",\"shardingState\",\"shutdown\",\"splitChunk\",\"splitVector\",\"startRecordingTraffic\",\"startSession\",\"stopRecordingTraffic\",\"top\",\"update\",\"updateRole\",\"updateUser\",\"usersInfo\",\"validate\",\"validateDBMetadata\",\"voteCommitImportCollection\",\"voteCommitIndexBuild\",\"waitForFailPoint\",\"whatsmyuri\"]// mongos (commands: 133, unfiltered: 137)[\"abortReshardCollection\",\"abortTransaction\",\"addShard\",\"addShardToZone\",\"aggregate\",\"appendOplogNote\",\"authenticate\",\"availableQueryOptions\",\"balancerCollectionStatus\",\"balancerStart\",\"balancerStatus\",\"balancerStop\",\"buildInfo\",\"cleanupReshardCollection\",\"clearJumboFlag\",\"collMod\",\"collStats\",\"commitReshardCollection\",\"commitTransaction\",\"compact\",\"connPoolStats\",\"connPoolSync\",\"connectionStatus\",\"convertToCapped\",\"count\",\"create\",\"createIndexes\",\"createRole\",\"createUser\",\"currentOp\",\"dataSize\",\"dbStats\",\"delete\",\"distinct\",\"drop\",\"dropAllRolesFromDatabase\",\"dropAllUsersFromDatabase\",\"dropConnections\",\"dropDatabase\",\"dropIndexes\",\"dropRole\",\"dropUser\",\"enableSharding\",\"endSessions\",\"explain\",\"features\",\"filemd5\",\"find\",\"findAndModify\",\"flushRouterConfig\",\"fsync\",\"getAuditConfig\",\"getCmdLineOpts\",\"getDefaultRWConcern\",\"getDiagnosticData\",\"getLastError\",\"getLog\",\"getMore\",\"getParameter\",\"getShardMap\",\"getShardVersion\",\"getnonce\",\"grantPrivilegesToRole\",\"grantRolesToRole\",\"grantRolesToUser\",\"hello\",\"hostInfo\",\"insert\",\"invalidateUserCache\",\"isMaster\",\"isdbgrid\",\"killAllSessions\",\"killAllSessionsByPattern\",\"killCursors\",\"killOp\",\"killSessions\",\"listCollections\",\"listCommands\",\"listDatabases\",\"listIndexes\",\"listShards\",\"logApplicationMessage\",\"logRotate\",\"logout\",\"mapReduce\",\"mergeChunks\",\"moveChunk\",\"movePrimary\",\"netstat\",\"ping\",\"planCacheClear\",\"planCacheClearFilters\",\"planCacheListFilters\",\"planCacheSetFilter\",\"profile\",\"refineCollectionShardKey\",\"refreshSessions\",\"removeShard\",\"removeShardFromZone\",\"renameCollection\",\"repairShardedCollectionChunksHistory\",\"replSetGetStatus\",\"reshardCollection\",\"revokePrivilegesFromRole\",\"revokeRolesFromRole\",\"revokeRolesFromUser\",\"rolesInfo\",\"rotateCertificates\",\"saslContinue\",\"saslStart\",\"serverStatus\",\"setAllowMigrations\",\"setAuditConfig\",\"setDefaultRWConcern\",\"setFeatureCompatibilityVersion\",\"setIndexCommitQuorum\",\"setParameter\",\"shardCollection\",\"shutdown\",\"split\",\"splitVector\",\"startRecordingTraffic\",\"startSession\",\"stopRecordingTraffic\",\"update\",\"updateRole\",\"updateUser\",\"updateZoneKeyRange\",\"usersInfo\",\"validate\",\"validateDBMetadata\",\"waitForFailPoint\",\"whatsmyuri\"]The above output filters internal commands (commands prefixed with an underscore), however these are visible to the listCommands command. As Amazon controls the output of the commands and the source code for this compatibility layer is not public we cannot confirm or deny if any additional commands exist beyond what is listed.Azure Cosmos DB“What is Azure Cosmos DB for MongoDB” you might be asking. From their documentation, Cosmos DB for MongoDB implements the wire protocol for MongoDB. This implementation allows transparent compatibility with MongoDB client SDKs, drivers, and tools. Azure Cosmos DB doesn’t host the MongoDB database engine. Any MongoDB client driver compatible with the API version you’re using should be able to connect, with no special configuration.What’s notable about the above claim is “should be able to connect”. This type of hedging language is typical of marketing copy that doesn’t want to provide guarantees, but focus on a desired outcome without drawing attention to any of the underlying negative connotations of the statement.For example, the hello command was introduced in MongoDB 5.0, but backported to versions 4.4.2, 4.2.10, 4.0.21, and 3.6.21. Cosmos DB currently doesn’t offer 5.0 API compatibility (except in limited preview), given the backport list I’d expect using this command to work. I don’t see it listed in the “Azure Cosmos DB for MongoDB (4.2 server version): supported features and syntax” documentation, however as it’s an internal command (used for initial connections or monitoring) it might have been excluded on purpose.If you try and connect to your Cosmos DB cluster using a connection string the includes a Stable API version, the lack of the hello command will cause the connection to outright fail.mongosh ab-cosmosdb1.mongo.cosmos.azure.com:10255 -u ab-cosmosdb1 -p &lt;redacted&gt; --ssl --sslAllowInvalidCertificates --apiVersion 1WARNING: argument --ssl is deprecated and will be removed. Use --tls instead.WARNING: argument --sslAllowInvalidCertificates is deprecated and will be removed. Use --tlsAllowInvalidCertificates instead.Current Mongosh Log ID: 642472c47f4e6cdad20312b0Connecting to: mongodb://&lt;credentials&gt;@ab-cosmosdb1.mongo.cosmos.azure.com:10255/?directConnection=true&amp;tls=true&amp;tlsAllowInvalidCertificates=true&amp;appName=mongosh+1.6.0MongoServerSelectionError: Command hello not supported prior to authentication.Similar to what we did with DocumentDB, let’s try and identify what commands exist in Cosmos DB. Unfortunately, similar to the hello command it appears listCommands is also not supported:globaldb [direct: primary] test&gt; db.runCommand({ listCommands: 1 })MongoServerError: Command listCommands not supported.Since we generated the command list from a mongod process earlier, let’s assign those results to a variable below and try executing each of the 152 command with a null value to see how they fail. This can be used to build out a (somewhat) representative view of what commands are available.// commands from 5.0.15 mongodvar commands = [\"abortTransaction\",\"aggregate\",\"appendOplogNote\",\"applyOps\",\"authenticate\",\"autoSplitVector\",\"availableQueryOptions\",\"buildInfo\",\"checkShardingIndex\",\"cleanupOrphaned\",\"cloneCollectionAsCapped\",\"collMod\",\"collStats\",\"commitTransaction\",\"compact\",\"connPoolStats\",\"connPoolSync\",\"connectionStatus\",\"convertToCapped\",\"coordinateCommitTransaction\",\"count\",\"create\",\"createIndexes\",\"createRole\",\"createUser\",\"currentOp\",\"dataSize\",\"dbCheck\",\"dbHash\",\"dbStats\",\"delete\",\"distinct\",\"donorAbortMigration\",\"donorForgetMigration\",\"donorStartMigration\",\"driverOIDTest\",\"drop\",\"dropAllRolesFromDatabase\",\"dropAllUsersFromDatabase\",\"dropConnections\",\"dropDatabase\",\"dropIndexes\",\"dropRole\",\"dropUser\",\"endSessions\",\"explain\",\"exportCollection\",\"features\",\"filemd5\",\"find\",\"findAndModify\",\"flushRouterConfig\",\"fsync\",\"fsyncUnlock\",\"getAuditConfig\",\"getCmdLineOpts\",\"getDatabaseVersion\",\"getDefaultRWConcern\",\"getDiagnosticData\",\"getFreeMonitoringStatus\",\"getLastError\",\"getLog\",\"getMore\",\"getParameter\",\"getShardMap\",\"getShardVersion\",\"getnonce\",\"grantPrivilegesToRole\",\"grantRolesToRole\",\"grantRolesToUser\",\"hello\",\"hostInfo\",\"importCollection\",\"insert\",\"internalRenameIfOptionsAndIndexesMatch\",\"invalidateUserCache\",\"isMaster\",\"killAllSessions\",\"killAllSessionsByPattern\",\"killCursors\",\"killOp\",\"killSessions\",\"listCollections\",\"listCommands\",\"listDatabases\",\"listIndexes\",\"lockInfo\",\"logApplicationMessage\",\"logRotate\",\"logout\",\"mapReduce\",\"mergeChunks\",\"moveChunk\",\"ping\",\"planCacheClear\",\"planCacheClearFilters\",\"planCacheListFilters\",\"planCacheSetFilter\",\"prepareTransaction\",\"profile\",\"reIndex\",\"recipientForgetMigration\",\"recipientSyncData\",\"refreshSessions\",\"renameCollection\",\"replSetAbortPrimaryCatchUp\",\"replSetFreeze\",\"replSetGetConfig\",\"replSetGetRBID\",\"replSetGetStatus\",\"replSetHeartbeat\",\"replSetInitiate\",\"replSetMaintenance\",\"replSetReconfig\",\"replSetRequestVotes\",\"replSetResizeOplog\",\"replSetStepDown\",\"replSetStepUp\",\"replSetSyncFrom\",\"replSetUpdatePosition\",\"revokePrivilegesFromRole\",\"revokeRolesFromRole\",\"revokeRolesFromUser\",\"rolesInfo\",\"rotateCertificates\",\"saslContinue\",\"saslStart\",\"serverStatus\",\"setAuditConfig\",\"setDefaultRWConcern\",\"setFeatureCompatibilityVersion\",\"setIndexCommitQuorum\",\"setParameter\",\"setShardVersion\",\"shardingState\",\"shutdown\",\"splitChunk\",\"splitVector\",\"startRecordingTraffic\",\"startSession\",\"stopRecordingTraffic\",\"top\",\"update\",\"updateRole\",\"updateUser\",\"usersInfo\",\"validate\",\"validateDBMetadata\",\"voteCommitImportCollection\",\"voteCommitIndexBuild\",\"waitForFailPoint\",\"whatsmyuri\"];var supported = [];commands.forEach(function(cmd) { try { /* command doesn't fail when null is passed */ if (db.runCommand({ [cmd]: null }).ok == 1) { supported.push(cmd); } } catch(ex) { /* 59: command not found */ if (ex.code != 59 &amp;&amp; !ex.message.endsWith(\"not supported.\")) { supported.push(cmd); } }});JSON.stringify(supported);// commands: 47[\"abortTransaction\",\"aggregate\",\"authenticate\",\"buildInfo\",\"collStats\",\"commitTransaction\",\"connectionStatus\",\"count\",\"create\",\"createIndexes\",\"currentOp\",\"dbStats\",\"delete\",\"distinct\",\"drop\",\"dropDatabase\",\"dropIndexes\",\"endSessions\",\"explain\",\"filemd5\",\"find\",\"findAndModify\",\"getCmdLineOpts\",\"getLastError\",\"getLog\",\"getMore\",\"getParameter\",\"getnonce\",\"hello\",\"hostInfo\",\"insert\",\"isMaster\",\"killCursors\",\"listCollections\",\"listDatabases\",\"listIndexes\",\"logout\",\"ping\",\"reIndex\",\"renameCollection\",\"replSetGetStatus\",\"saslContinue\",\"saslStart\",\"serverStatus\",\"update\",\"validate\",\"whatsmyuri\"]ConclusionBy reviewing the database commands that Microsoft and Amazon have chosen to implement we can get a sense of what features may be accessible via MongoDB drivers. Though the bare minimum commands required to satisfy the CRUD API appear to be available, the feature set is still limited when it comes to administration and data manipulation.Azure documents which aggregation stages aren’t available, and AWS also documents the limitations of their MongoDB APIs and operation types.Though there are definitely benefits to working with AWS and Azure, when it comes to MongoDB compatibility it is likely a better bet to simply use MongoDB." }, { "title": "Geisha (Coktel Vision) - 1990", "url": "/blog/2023/03/23/geisha/", "categories": "Let's Adventure!", "tags": "adventure, Coktel Vision, Tomahawk, Gob", "date": "2023-03-23 04:19:14 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Full Throttle (LucasArts...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Full Throttle (LucasArts) - 1995Geisha (Coktel Vision) - 1990→ I Have No Mouth, and I Must Scream (The Dreamers Guild) - 1995 Article 35 of 96 in this series. This game is terrible. Also the screenshots contain nudity … which doesn’t change the fact that this game sucks!Geisha is an erotic adventure video game developed by Coktel Vision and MDO and published by Tomahawk in 1990 for Amiga, Atari ST, and DOS. The game uses a point-and-click interface, and includes several minigames including a card game and an action sequence.You read that right … another “erotic adventure” from the makers of Emmanuelle, the previous pile of shit from Coktel Vision and Tomahawk.It takes like 45 seconds to draw this guy’s stupid face one line at a time!The story makes no sense, but from what I was able to interpret, something something something girl and robot body, something about an escape …. dragons? I really tried to be impartial and give this a chance, but I have no idea what I was supposed to be doing at any point other than play minigames - all of which were boring or stupid.To advance you have to play strip-“guess the numbers in the right order”Unlike the Leisure Suit Larry games which you could also potentially classify as “erotic”, Geisha just sort of forces the nudity down your throat. The mini games are unnecessarily hard (not challenging - just hard), and even though there’s only like 7 games you play to get to the end, I actually gave up after going through the maze and sliding piece puzzle like a dozen times.Fuck this stupid puzzleAccording to the longplay video on YouTube, this game only takes about 30 minutes to complete. I’ll be honest, even playing through this with a walkthrough it felt SO MUCH LONGER! My goal with this series is to FINISH every one of these games but this stupid sliding puzzle has to be completed in 45 seconds or you DIE. You can’t save before the puzzle, so to retry you have to finish the previous maze puzzle again.Fly your dick ship around and shoot stuffThe maze is pretty straightforward, but it was frustrating enough initially to get me to look for a map. This also lead me to DrMcCoy’s blog post from the time he was working on the Gob engine which I was really hoping would give me debug codes I could use to skip the stupid slide puzzle. No such luck :/Even though I played the Atari ST version of the game, visually the game isn’t the worst. That’s probably the only nice thing I’m going to say because the sound effects are jarring, there’s really no music, none of the games are fun, progressing isn’t intuitive and overall the experience just plain sucks.DON’T PLAY THIS “GAME”.Game Over … thank god!Game Information Game Geisha Developer Coktel Vision Publisher Tomahawk, Coktel Vision Release Date 1990 Systems DOS, Amiga, Atari ST Game Engine Gob My Playthrough How Long To Beat? 30-45 minutes Version Played Atari ST via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Graphics (10) 2 Sound (10) 1 Plot / Progression (25) 2 Characters / Development (15) 0 Gameplay / Experience (15) 2 Replayability (10) 0 Impact / Impression (10) 0 Bonus / Surprise (5) 0   7% Note that I overhauled my scoring criteria in August of 2024, and the score above is the revised score for this game.See below for the original score based on the original scoring criteria. Atmosphere (20) 3 Story (25) 2 Experience (15) 2 Impact (10) 1   11% Gallery" }, { "title": "What documents did my TTL index delete?", "url": "/blog/2023/03/14/what-documents-did-my-ttl-index-delete/", "categories": "MongoDB", "tags": "indexing, ttl, mongodb", "date": "2023-03-14 07:32:05 -0400", "snippet": "IntroductionHave you ever had one or more documents removed from a MongoDB collection and you weren’t sure what they were? This can potentially occur if you have a TTL index defined, however the ap...", "content": "IntroductionHave you ever had one or more documents removed from a MongoDB collection and you weren’t sure what they were? This can potentially occur if you have a TTL index defined, however the approach being shared below can be adapted to filter the replica set oplog for deletes over any custom time frame you may be interested in. Once the _id values of the deleted documents have been identified, the replica set oplog can be further filtered to attempt to surface details about the detailed documents.OverviewTTL indexes are special single-field indexes that MongoDB can use to automatically remove documents from a collection after a certain amount of time or at a specific clock time. Data expiration is useful for certain types of information like machine generated event data, logs, and session information that only need to persist in a database for a finite amount of time.The actual removal of documents is handled by a separate thread within the mongod process called the TTLMonitor (enabled by default via ttlMonitorEnabled), which will wake up and check all TTL indexes for expired documents every 60 seconds (the default value of ttlMonitorSleepSecs).By default the mongod logs won’t record any information about TTL index activity unless the operation happens to exceed the slow query threshold (default of 100ms - may be different in MongoDB Atlas). For the purposes of this article we want to see more information regarding TTL index activity so we’ll begin by increasing the log verbosity for the index component:db.setLogLevel(1, 'index'); The setLogLevel helper calls the setParameter command, which is unsupported in MongoDB AtlasAs we continue to monitor the mongod log we’ll begin to see messages such as the following begin to be recorded:{\"t\":{\"$date\":\"2023-03-14T06:41:26.314-04:00\"},\"s\":\"D1\",\"c\":\"INDEX\",\"id\":22533,\"ctx\":\"TTLMonitor\",\"msg\":\"running TTL job for index\",\"attr\":{\"namespace\":\"config.tenantMigrationRecipients\",\"key\":{\"expireAt\":1},\"name\":\"TenantMigrationRecipientTTLIndex\"}}{\"t\":{\"$date\":\"2023-03-14T06:41:26.314-04:00\"},\"s\":\"I\",\"c\":\"INDEX\",\"id\":5479200,\"ctx\":\"TTLMonitor\",\"msg\":\"Deleted expired documents using index\",\"attr\":{\"namespace\":\"config.tenantMigrationRecipients\",\"index\":\"TenantMigrationRecipientTTLIndex\",\"numDeleted\":0,\"durationMillis\":0}}{\"t\":{\"$date\":\"2023-03-14T06:41:26.314-04:00\"},\"s\":\"D1\",\"c\":\"INDEX\",\"id\":22533,\"ctx\":\"TTLMonitor\",\"msg\":\"running TTL job for index\",\"attr\":{\"namespace\":\"config.external_validation_keys\",\"key\":{\"ttlExpiresAt\":1},\"name\":\"ExternalKeysTTLIndex\"}}{\"t\":{\"$date\":\"2023-03-14T06:41:26.315-04:00\"},\"s\":\"I\",\"c\":\"INDEX\",\"id\":5479200,\"ctx\":\"TTLMonitor\",\"msg\":\"Deleted expired documents using index\",\"attr\":{\"namespace\":\"config.external_validation_keys\",\"index\":\"ExternalKeysTTLIndex\",\"numDeleted\":0,\"durationMillis\":0}}{\"t\":{\"$date\":\"2023-03-14T06:41:26.315-04:00\"},\"s\":\"D1\",\"c\":\"INDEX\",\"id\":22533,\"ctx\":\"TTLMonitor\",\"msg\":\"running TTL job for index\",\"attr\":{\"namespace\":\"config.tenantMigrationDonors\",\"key\":{\"expireAt\":1},\"name\":\"TenantMigrationDonorTTLIndex\"}}{\"t\":{\"$date\":\"2023-03-14T06:41:26.315-04:00\"},\"s\":\"I\",\"c\":\"INDEX\",\"id\":5479200,\"ctx\":\"TTLMonitor\",\"msg\":\"Deleted expired documents using index\",\"attr\":{\"namespace\":\"config.tenantMigrationDonors\",\"index\":\"TenantMigrationDonorTTLIndex\",\"numDeleted\":0,\"durationMillis\":0}}{\"t\":{\"$date\":\"2023-03-14T06:41:26.315-04:00\"},\"s\":\"D1\",\"c\":\"INDEX\",\"id\":22533,\"ctx\":\"TTLMonitor\",\"msg\":\"running TTL job for index\",\"attr\":{\"namespace\":\"config.system.sessions\",\"key\":{\"lastUse\":1},\"name\":\"lsidTTLIndex\"}}{\"t\":{\"$date\":\"2023-03-14T06:41:26.315-04:00\"},\"s\":\"I\",\"c\":\"INDEX\",\"id\":5479200,\"ctx\":\"TTLMonitor\",\"msg\":\"Deleted expired documents using index\",\"attr\":{\"namespace\":\"config.system.sessions\",\"index\":\"lsidTTLIndex\",\"numDeleted\":0,\"durationMillis\":0}}The above logs represent pre-existing TTL indexes MongoDB creates to expire documents from internal collections. As these indexes are out of scope for this article we’ll skip over them for now and create a custom TTL index to fit our needs.Setupdb.foo.drop();db.foo.createIndex({ \"created_at\": 1 }, { expireAfterSeconds: 10 });db.foo.insertOne({ created_at: new Date()});Our new collection now has a single document, which should expire after 10 seconds of being created. Note that the timing will almost never be exact as the TTL monitor will only activate every minute.The test cluster we’re running on is a replica set, and as such we’re only monitoring the logs for the primary member. The reason for this can be found in the TTL Indexes documentation regarding replica set behavior: On replica set members, the TTL background thread only deletes documents when a member is in state primary. The TTL background thread is idle when a member is in state secondary. Secondary members replicate deletion operations from the primary.Within a minute or two a log entry similar to the following will be recorded that indicates our test.foo namespace has been processed, the created_at_1 index has been executed and our document was expired:{\"t\":{\"$date\":\"2023-03-14T06:47:41.336-04:00\"},\"s\":\"D1\",\"c\":\"INDEX\",\"id\":22533,\"ctx\":\"TTLMonitor\",\"msg\":\"running TTL job for index\",\"attr\":{\"namespace\":\"test.foo\",\"key\":{\"created_at\":1},\"name\":\"created_at_1\"}}{\"t\":{\"$date\":\"2023-03-14T06:47:41.336-04:00\"},\"s\":\"I\",\"c\":\"INDEX\",\"id\":5479200,\"ctx\":\"TTLMonitor\",\"msg\":\"Deleted expired documents using index\",\"attr\":{\"namespace\":\"test.foo\",\"index\":\"created_at_1\",\"numDeleted\":1,\"durationMillis\":0}}Unfortunately all this presents us with is confirmation that one document (\"numDeleted\":1) was removed, but is it possible to find out what was removed?Enter the OplogAs the cluster we’re connected to is a replica set all write operations are recorded in the operations log (oplog). The oplog is a capped collection present on each replica set member, and as such we can query it directly to see what write operations have propagated at a given time!Using the log entry above that confirmed 1 document was deleted we can prepare the following operation to filter the contents of the oplog collection:// the namespace from the log entry indicating nDeleted &gt; 0// that we're interested invar ns = \"test.foo\";// the time (with timezone) from the log messagevar t1 = new Date(\"2023-03-14T06:47:41.336-04:00\");// the number of seconds between TTLMonitor sweeps - default: 60var ttlSleep = db.adminCommand({ getParameter: 1, ttlMonitorSleepSecs: 1}).ttlMonitorSleepSecs;// get the time (in milliseconds) of the starting time and convert// the TTLMonitor sleep threshold to millisecondsvar t2 = new Date(t1.getTime() + (ttlSleep * 1000));db.getSiblingDB(\"local\").oplog.rs.find({ op: \"d\", ns: ns, wall: { $gte: t1, $lt: t2 }}); Any query targeting the oplog will perform a full collection scan as you cannot create indexes on the oplog collection!The above operation is purposely more verbose than necessary to illustrate where all the necessary pieces of information came from. Once this is executed it should return a single document as seen below, which represents the document that was deleted:[ { \"op\": \"d\", \"ns\": \"test.foo\", \"ui\": { \"$binary\": { \"base64\": \"K4vB+Oh9RgC5scSLCiYWiA==\", \"subType\": \"04\" } }, \"o\": { \"_id\": { \"$oid\": \"641050bae52e6d96ee3c40fa\" } }, \"ts\": { \"$timestamp\": { \"t\": 1678790861, \"i\": 1 } }, \"t\": 8, \"v\": 2, \"wall\": { \"$date\": \"2023-03-14T10:47:41.336Z\" } }]The only information the oplog records for delete commands is the _id value of the document that was removed. Unless you manage your own custom _id generation, the values will likely just be generated ObjectId values.We can try to find out additional information about this deleted document by extracting the _id from the oplog document’s o field, and using that to further filter the oplog:db.getSiblingDB(\"local\").oplog.rs.find({ // filter by namespace ns: \"test.foo\", // filter by insert or update op: { $in: [\"i\", \"u\"] }, // filter on the o2._id field as it will be present // in both inserts and updates \"o2._id\": ObjectId(\"641050bae52e6d96ee3c40fa\")}).sort({ ts: -1 });As documents within the local.oplog.rs namespace will eventually roll over the above query is not guaranteed to return anything, however it’s possible that document creation or update commands may still exist that can give you additional information regarding what this removed document contained:[ { \"lsid\": { \"id\": { \"$binary\": { \"base64\": \"SHocj0XsSTC25zlbzywaOA==\", \"subType\": \"04\" } }, \"uid\": { \"$binary\": { \"base64\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\", \"subType\": \"00\" } } }, \"txnNumber\": 1, // an insert operation \"op\": \"i\", // the namespace the document was created in \"ns\": \"test.foo\", \"ui\": { \"$binary\": { \"base64\": \"K4vB+Oh9RgC5scSLCiYWiA==\", \"subType\": \"04\" } }, // this field contains the values that were set when // the document was created \"o\": { \"_id\": { \"$oid\": \"641050bae52e6d96ee3c40fa\" }, \"created_at\": { \"$date\": \"2023-03-14T10:47:22.445Z\" } }, \"o2\": { \"_id\": { \"$oid\": \"641050bae52e6d96ee3c40fa\" } }, \"stmtId\": 0, \"ts\": { \"$timestamp\": { \"t\": 1678790842, \"i\": 4 } }, \"t\": 8, \"v\": 2, // when the document was created \"wall\": { \"$date\": \"2023-03-14T10:47:22.448Z\" }, \"prevOpTime\": { \"ts\": { \"$timestamp\": { \"t\": 0, \"i\": 0 } }, \"t\": -1 } }]The result above represents an insert and under the o field contains the values that were initially set.As stated earlier, this method is not guaranteed to work, however it may prove useful if you’re trying to identify what document was deleted and your oplog window is large enough that it still contains the document’s creation. See Change the Size of the Oplog for more information regarding sizing the oplog." }, { "title": "Full Throttle (LucasArts) - 1995", "url": "/blog/2023/03/10/full-throttle/", "categories": "Let's Adventure!", "tags": "adventure, LucasArts, SCUMM", "date": "2023-03-10 05:43:40 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Duckman: The Graphic Adv...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Duckman: The Graphic Adventures of a Private Dick (The Illusions Gaming Company) - 1997Full Throttle (LucasArts) - 1995→ Geisha (Coktel Vision) - 1990 Article 34 of 96 in this series.Full Throttle is a graphic adventure game set in the near future that follows Ben, the leader of a biker gang, who is framed for the murder of a beloved motorcycle manufacturing mogul and seeks to clear his and his gang’s names.What immediately stands out when you play this game is the music and voice acting. As this is a biker game you’d expect a rock or metal soundtrack, which is done by The Gone Jackals, and suits the game incredibly well. The intro song (Legacy) that plays while you’re introduced to the characters and the story is setup really gets you pumped up and sets the tone for the rest of the game.Mark Hamill provides the voice for Adrian Ripburger, who you know right from the beginning is going to be the main villain. Having grown up watching Batman: The Animated Series as soon as I heard how this character was voiced all I could hear was the Joker - which just felt perfect. Roy Conrad plays Ben, and also feels perfectly cast for this role.All dialogue is voiced in this game, and honestly I can’t point to a single character who’s performance feels “phoned in”.As with all adventure games of this era, you communicate with other characters via a dialogue tree. Depending on the situation, you can uncover new information or advance the plot by picking from a list of options - reading the response - then repeating. Certain scenes can’t advance until you navigate a specific combination of options, but you can just keep repeating these conversations until you get them right and allow the game to progress.To interact with a scene or a character you just move the cursor over it and click to bring up a context menu. This is a far simpler version of the action bar that Sierra On-Line games would present you with and actually makes the game a bit more enjoyable by removing a lot of the “verb-cycling” you’d do in other games as you right click away until you get the right icon. Once the context menu is on screen, you just move to one of the four verbs associated positionally with an icon (LOOK, GET, KICK, MOUTH). “MOUTH”, though not really a verb cleverly rolls a number of actions into a single option, as you can use this to talk to characters, blow on something, drink something … etc.The graphics in this game still stand up. Though I played through this game using an hq2x scaler, in retrospect I think it would have been better to just experience the graphics unmodified as they really are fantastic. Double Fine re-released this game in 2017 with updated graphics, but when you look at their side-by-side comparisons it’s clear the original still looks pretty good … just a bit lower resolution.Though this segment only happens twice, you have to fight other biker gangs in an arcade sequence to progress through these sections of the game. This is an interesting mechanic as you can pick up various weapons from bikers you beat to improve your odds of beating harder bikers. These sequences can be a bit challenging, though if you lose you just get back on your bike and try again.What I actually appreciated even more is that you can effectively skip these scenes by just pressing SHIFT-V. I’m not sure if this was in the original game or just introduced by ScummVM as a quality-of-life feature, but if you’re getting stuck on these fights and want to just progress the story you have the option.The same option exists in the demolition derby sequence. The goal here is to create a distraction so the Vultures can steal a custom motorcycle that is the first prize in the derby. To finish the segment you have to jump off a ramp with your car onto another car to stall it, then push this car off the ramp onto another car to stall it then ram another car to make it blow up … confused yet?This demolition derby sequence is actually a bit frustrating and the fact that you can skip it too if you’re not interested in slogging through the arcade sequence is appreciated. I do remember muddling my way through this segment many times when I was a kid and not finding it particularly challenging, but this time around even after reading the walkthrough I still resorted to the sequence break shortcut to move along …As far as adventure games go, Full Throttle is a really good intro to the genre as it’s fun, has a compelling story and is very well paced. There are limited options on each screen for you to interact with, and since this is a LucasArts title you can’t die or end up in an un-winnable situation.Though I personally love this game and find the story to be what keeps me coming back, it’s actually really short. Though the How Long To Beat? time lists this at 6.5 hours, I think I actually finished in just over 2 hours. Everything progresses in an extremely linear fashion, which is a bit of a let down as this is a world I would have wanted to explore further.If you’ve never played an adventure game before, I would highly recommend Full Throttle (or the remastered version). This title really embodies what was being produced at the height of the golden age of graphical adventure games and is still a great experience today.Game Information Game Full Throttle Developer LucasArts Publisher LucasArts Release Date April 30, 1995 Systems DOS, Mac OS, Windows Game Engine SCUMM My Playthrough How Long To Beat? 6.5 hours Version Played Windows via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 18 Story (25) 23 Experience (15) 13 Impact (10) 8   89% Gallery" }, { "title": "Duckman: The Graphic Adventures of a Private Dick (The Illusions Gaming Company) - 1997", "url": "/blog/2023/03/03/duckman/", "categories": "Let's Adventure!", "tags": "adventure, The Illusions Gaming Company, Playmates Interactive Entertainment, Illusions", "date": "2023-03-03 05:34:56 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Space Quest II: Vohaul's...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Space Quest II: Vohaul's Revenge (Sierra On-Line) - 1987Duckman: The Graphic Adventures of a Private Dick (The Illusions Gaming Company) - 1997→ Full Throttle (LucasArts) - 1995 Article 33 of 96 in this series.Duckman: The Graphic Adventures of a Private Dick is a point-and-click adventure video game developed by the Illusions Gaming Company and published by Playmates Interactive based on the American television series, Duckman. In the game, Duckman has been usurped by a similar-looking impersonator, whom the real Duckman must expose.You start the game off with some exposition by Cornfed, your sidekick introducing us to the current state of the world with Duckman and his family being given a TV show, but Duckman’s been off at a spa getting drunk and ignoring his responsibilities. I don’t remember the show all that well - other than I enjoyed the lewd humour and voice acting - so whether this plot feels appropriate to the characters or not I can’t really tell.I seem to remember this show was all about innuendo and dick and fart jokes, which the writing of the game and artistic direction definitely tries to capture. It doesn’t feel overdone or “in your face” so unless you’re completely put off by this style of humour, the game should be playable (and possibly enjoyable).The game is a basic point and click adventure, so once you leave the first area (the spa) you’re presented with a map screen from which you can choose another location to investigate. New locations pop up as the game progresses, and you can revisit locations repeatedly as you learn more about the plot against Duckman.This game is all about item combination puzzles and fetch quests, so move the cursor around each screen and interact with anything that changes the cursor. The solution to most puzzles are pretty obvious, but a couple were challenging enough to get me to refer back to the walkthrough to keep this game moving along.When the time comes to get the plunger from another character and you have to first insult him in chinese by rearranging characters from a fortune cookie in order to say something rude so he kicks you (with his plunger foot), which you then have to block with a trash can lid to get the plunger to stick to the lid … that verged on moon logic.Character interactions are done using a dialogue system that relies on icons to select topics (similar to Sam &amp; Max Hit the Road). There’s actually not a lot of these interactions throughout the game as most characters just dump a wall of text on you to keep you moving along.You’re able to make mistakes that result in Duckman dying, but the game will just back you up to before this mistake so you can try again. I actually think this only happened to me once during this playthrough (using the remote on the robot villain) so I don’t know that risk of death is even a concern … but saving once in a while probably wouldn’t hurt.For a game that came out in 1997 the graphics seem a bit dated. The game isn’t really all that much fun, the music isn’t memorable (I think there was background music) and the plot isn’t all that interesting.If this game seems even the slightest bit compelling to you it might be best to just go find a copy of the TV show and watch that instead. You’ll likely have a better time, and get more out of it as this game is pretty short too.Game Information Game Duckman: The Graphic Adventures of a Private Dick Developer The Illusions Gaming Company Publisher The Illusions Gaming Company,\tPlaymates Interactive Entertainment Release Date May 31, 1997 Systems Windows Game Engine Illusions My Playthrough How Long To Beat? 3 hours Version Played Windows via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 10 Story (25) 12 Experience (15) 9 Impact (10) 3   49% Gallery" }, { "title": "Space Quest II: Vohaul's Revenge (Sierra On-Line) - 1987", "url": "/blog/2023/02/24/space-quest-2/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, AGI", "date": "2023-02-24 12:03:43 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Police Quest II: The Ven...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Police Quest II: The Vengeance (Sierra On-Line) - 1988Space Quest II: Vohaul's Revenge (Sierra On-Line) - 1987→ Duckman: The Graphic Adventures of a Private Dick (The Illusions Gaming Company) - 1997 Article 32 of 96 in this series.Space Quest II is a graphic adventure game released on November 14, 1987 by Sierra On-Line. It was the sequel to Space Quest I: The Sarien Encounter, again using Sierra’s AGI game engine.Unlike other entries in the Space Quest series, the main character is not Roger Wilco … well, not exactly. You get to enter your name before the game begins and that’s the name that will be used throughout. I really like this type of personalization as it makes for a far more immersive experience.Since you’re still a master of the custodial arts, the game starts off with you sweeping the deck of Xenon Orbital Station 4, where you’ve the head janitor. The villain from the first game, Sludge Vohaul is out for revenge and captures you and ships you off to the Labion labour mines. Along the way you learn about Sludge Vohaul’s plan to eradicate sentient life from Xenon by launching millions of cloned insurance salesmen at the planet.The Space Quest series does not take itself seriously, and this game is filled with puns and jokes. The writing is excellent and the descriptions of most things you can interact with are pretty funny. I found myself taking a little longer than usual looking around the various scenes to see what I could interact with and read about as a result.As with most (all?) Sierra On-Line games you could very easily die on just about every screen. I was playing this game on ScummVM on a MacBook so I didn’t have a numpad, which meant I didn’t have extended directional control. If you wanted to go up or down stairs you had to drop the speed to slow, then alternate between up/down and left/right (depending on where you’re going).This was particularly annoying at the very end of the game where you have to climb the stairs after beating Sludge Vohaul, and you have almost zero margin for error. I forgot to save for a while leading up to this point and fell and died after a couple steps …Basically everything you do in this game requires you to pick stuff up and use it later … and you can miss things and end up stuck. Unlike the first game, to make this even more complicated if you figure out the right item to use to get out of a certain situation, you may also have to choose the right timing or you’ll still end up dead.For example, if you think to stick the plunger to the wall to avoid drowning in a pool of acid, if you stick the plunger too early you’ll lose your grip and still fall to your death. Fun times :PThis sequence took FOREVERSome of these early AGI games rely a little too heavily on making you navigate mazes. Getting the berries on Labion is a pain in the ass as you have to be extremely precise so as not to touch the vines (or you die), so you end up having to just drop the game speed to slow and take a few steps/save/repeat. This isn’t fun - just tedious busy work.Space Quest I had a couple of mini games in it (the slot machine and the speeder), which mixed up the game play a bit. Space Quest II has a sequence where you have to time the release of a vine so as not to get eaten, but that’s about it. The rest of the game is what you’d expect from a text-parser driven adventure game.Visually this is an improvement over the original game, but not by all that much. The AGI engine is very limited, but Sierra’s artists knew how to get the most bang for their (and your) buck out of it. There are a couple of cut scenes and close ups, but mostly you just move your stick figure around and type in commands that paint a picture in your mind using words.Don’t let the xenomorph catch you and kiss you!I really liked Space Quest I, so I’m harder on the sequel as I didn’t find it added much to the original. It wasn’t as much fun to play, though it was extremely well written. I found some sequences (like escaping Labion in the shuttle) frustrating, but overall this was an ok game.Infamous Adventures did a VGA remake of this game in 2018, but I never gave it a spin. Honestly this looks extremely well done - as does their remake of King’s Quest III - so if you’re looking to play this game it may be worth starting there.Game Information Game Police Quest II: The Vengeance Developer Sierra On-Line Publisher Sierra On-Line Release Date November 14, 1987 Systems DOS, Macintosh, Apple II, Apple IIGS, Amiga, Atari ST Game Engine AGI My Playthrough How Long To Beat? 3.5 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 14 Story (25) 18 Experience (15) 9 Impact (10) 5   66% Gallery" }, { "title": "Police Quest II: The Vengeance (Sierra On-Line) - 1988", "url": "/blog/2023/02/21/police-quest-2/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, SCI", "date": "2023-02-21 08:17:26 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Manhunter: New York (Evr...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Manhunter: New York (Evryware) - 1988Police Quest II: The Vengeance (Sierra On-Line) - 1988→ Space Quest II: Vohaul's Revenge (Sierra On-Line) - 1987 Article 31 of 96 in this series.Police Quest 2 is a 1988 police procedural adventure video game developed and published by Jim Walls and Sierra On-Line. It is the second installment in the Police Quest series. The game continues the story of police officer Sonny Bonds as he attempts to apprehend an escaped convict.This second installment in the Police Quest series focuses more on detective and forensics work than the traffic-cop beginning of the original, while keeping the same realistic setting. The proper procedures for collecting and handling evidence are the main focus of many of the puzzles in Police Quest II.Though still a text-parser driven game, the SCI engine is used which makes for a much more visually impressive game. A lot has been improved over the original game (though I reviewed the remake), though being a “police procedure simulator” above all else, there is still a fair amount of backtracking and checking the manual.I don’t miss copy protection in gamesYou’ll start the game off by having to look up a mugshot in the manual. I guess this is good because I will force you to take note of the various radio codes, vehicle codes and penal codes that you may need to reference later. Unlike the previous game you don’t really need to memorize these codes as you’ll be playing with a partner throughout. Keith provides you with a bit of comic relief, as well as interacting with dispatch.I don’t remember having to manually provide any codes, but if you happen to need them, they’re all in the manual.Though the manual gives you the map of Lytton that you needed for navigation in the first game, this time around you just need to type in where you want to drive and you’ll automatically go there. This is a huge improvement as you don’t need to waste time with the needless stopping/starting that was imposed on you in Police Quest 1 as you muddled your way from location to location.You’ll also get updates from dispatch as you’re driving, which Keith will provide the narrative around. As he throws out various radio and vehicle codes you can just read along without having to worry about potentially throwing the wrong code out there.Good ol’ fashioned Italian stereotypesThe game has you following Jesse Bains, who you locked up in the previous game but has escaped from prison. He breaks out of jail, kidnaps a guard and is trying to skip town, so you’re trailing him based on the clues you collect at the various locations he’s been spotted at. The focus in this game is on collecting evidence so you’ll need to familiarize yourself with the field kit and its contents pretty early on.Death waits for you at literally every turnSince this is a Sierra On-Line game, expect to die … a lot. Just remember to cycle through about 5-6 save slots, saving as you enter each screen and you shouldn’t be caught off guard when (not if) you find yourself hitting a game over situation.A big part of this game is your gun, which you have hotkeys available to “draw”, “holster” and “fire”. Since this is a parser-driven game you can also just type DRAW GUN to perform this action, which is preferable in certain situations as the text prompt pauses the action on screen.If your gun isn’t properly sighted, you’ll miss whenever you need to shoot somethingThe Police Quest games are all about proper police procedure, so before you can use your gun you need to make sure you hit the shooting range and adjust your elevation and windage. Basically, you aim at the center of the target, fire a couple times, view the target and ADJUST GUN. Replace the target and repeat until you’re hitting what you’re aiming at.At one point in the game you’ll spin out of the way of a shotgun firing through a door and slam your gun into the wall. This is meant to be a hint that you should go re-sight your gun as the next time you fire you’re likely going to miss.Aside from your field kit (which contains a lot of different items you’ll need to collect evidence), there isn’t all that much inventory management in this game. Most of the stuff you pick up will either be evidence you can book back at the station, or a clue to the next location you may need to visit.In Police Quest 1 you needed to pay really close attention to the penal codes being used when you’d bring in evidence or suspects. This time around you can just go up to the evidence window at the station and BOOK EVIDENCE.Though most of the game is pretty linear and easy enough to identify what comes next, there is one sequence early on where you’ll need to dive underwater to look for evidence. It’s really important to check the tanks in the van before you head out as only one has enough oxygen to last the entire dive (hint: look for the one with 2200 “AIR”).This is an interesting sequence that will require you to visit 3 underwater screens and find evidence at the bottom of the lake, as well as a body. It’s not obvious at first how you even need to initiate this sequence, but it’s something along the lines of Keith asking you what you want to do after Bains escapes at Cotton Cove, and you respond with REQUEST DIVE(or something like that).Unless you already know this is the next step to proceed with the story it’s pretty easy to get stuck here.The story of Police Quest 2 is a lot more detailed than its predecessor. Bains is out to kill everyone involved in his arrest, including yourself and your girlfriend Marie. He’ll end up kidnapping her and taking her to Steelton, which you have to get approval to book a flight to. On that flight you’ll have to stop a hijacking and diffuse a bomb, which doesn’t end up being too difficult (read the instructions and just reverse the steps to disarm it).Hopefully you’re smart enough to hide and return fire before Bains can silence you permanentlyOnce you make your way through the sewers of Steelton you’ll find Marie and rescue her. The death angel will try to take you out, but if you hid behind the pipe here and opened fire on Bains quickly enough, you should be able to stop him once and for all.I’ve played through this game a number of times since I was a kid and it’s been in my top 10 Sierra games as a result. I didn’t find the police procedure focus to be as distracting as it is in Police Quest 1, and the story just seems a lot more solid.The music in this game is also top notch. I finally got around to figuring out how to get Roland MT-32 working in ScummVM and can honestly say this makes the experience exponentially better. If you’ve never given the game’s intro a listen in MT-32 mode, go do that now!Police Quest 2 has aged pretty well, which may be partly due to it being a text-parser driven game. The graphics are decent, the story is pretty good and though there’s limited background music, what you get to hear is also really well done.This can be a challenging game if you’re not well versed in adventure games, but if you’ve never played it before I’d definitely recommend giving it a shot.Game Information Game Police Quest II: The Vengeance Developer Sierra On-Line Publisher Sierra On-Line Release Date November 1988 Systems DOS, Amiga, Atari ST, NEC PC-9801 Game Engine SCI My Playthrough How Long To Beat? 5 hours Version Played DOS via ScummVM Notes Manual, Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 13 Story (25) 18 Experience (15) 12 Impact (10) 7   71% Gallery" }, { "title": "Manhunter: New York (Evryware) - 1988", "url": "/blog/2023/02/18/manhunter-new-york/", "categories": "Let's Adventure!", "tags": "adventure, Evryware, Sierra On-Line, AGI", "date": "2023-02-18 08:24:33 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← The Crimson Crown - Furt...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← The Crimson Crown - Further Adventures in Transylvania (Penguin Software) - 1985Manhunter: New York (Evryware) - 1988→ Police Quest II: The Vengeance (Sierra On-Line) - 1988 Article 30 of 96 in this series.Manhunter: New York is a post-apocalyptic adventure game designed by Barry Murry, Dave Murry and Dee Dee Murry of Evryware and published in 1988 by Sierra On-Line. Built using Sierra’s AGI (Adventure Game Interpreter) engine, it stands out as it doesn’t involve side-scrolling views or a text-parser to interact with the world.You play the role of a manhunter, tasked by the ORB Alliance to hunt down other humans the Orbs have deemed threats. There’s no real backstory presented via an intro sequence or tutorial mission - you have to read the manual to learn all this.The game is split up into four days. Each day begins with an Orb (floating eyeball things) coming into your apartment to give you the day’s assignment. You then fire up your MAD (Manhunter Assignment Device) which tracks the day’s “targets” to show you where they’ve visited and what other people they’ve encountered.Using the MAD locations within New York City will be made available on an overworld map for you to visit. The only way to open these locations for exploration is for them to either be uncovered by tracking targets using the MAD, or looking up people’s names via the MAD to get their address.As you’re a manhunter, and the job the Orb’s have given you is to identify individuals, you’ll need to pay attention any time a name is dropped. This can come in the form of toe tags on a corpse, posters on a bulletin board, notes or scraps of paper, signs, pictures, etc.I wonder if I can find more info about “Reno Davis” by just entering that into the MAD …Each location you uncover and visit will have limited hotspots to interact with, but moving the cursor around the screen will uncover these pretty quickly. The background artwork and character portraits are extremely well done and highly detailed.As one of the last AGI games made the team knew how to push the engine to the limits and make the best possible game as a result (only King’s Quest 4 and Manhunter 2 came out afterwards as AGI games).This game relies VERY heavily on arcade sequences to add additional interactive elements. These sequences tend to all play out in a very similar fashion as you’re either trying to navigate a maze, or waiting for (something) to move from left to right/top to bottom for you to click ENTER to throw.I didn’t love the arcade sequences and found them to be a bit too drawn out, and making a mistake would likely kill you and cause you to have to start over again from the beginning. The sequence where you have to get past 4 thugs by jumping or ducking was just tedious. You only progress when you jump or punch, and it takes forever to get to the person throwing stuff at you. If they happen to hit you you start over again and start the process of inching back towards them.Luckily, you can save everywhere in this game, so when you make a bit of progress you can save so you can restore from that point when you inevitably die moments later.There are SO many ways to die throughout this game, and each death typically results in the game designers giving you some cheeky feedback about how you screwed up and what you might want to do next time. This is such a Sierra On-Line trope at this point you’d almost be surprised NOT to see it in one of their games, but I still enjoyed reading the various messages.You also are sent back to right before you died whenever you do, so if you forgot to save there’s a lot less backtracking you’ll need to do to try again. This feature is extremely helpful as you’ll die A LOT.The difficulty of this game is pretty high, and requires a lot of trial and error to solve most puzzles. For example, below the pawn shop when you need to solve the 4 number-based puzzles you’ll likely have to resort to a walkthrough to get the last 3. I tried to do this on my own but just couldn’t figure it out :(The answer is 264, because one less than 3, 3 plus 3 and one greater than 3. Obvious, right?There’s almost never any form of background music throughout the game, but the “bleeps and bloops” you get as you navigate the various screens do add a bit to the experience. Honestly the sound quality really pales in comparison to the visuals - which I found surprising.I really love the tracking mechanic using the MAD. It’s really cool to be able to tag other moving characters to see where they go throughout the day and unlock additional places in New York City to investigate. There’s only a handful of items you pick up, so you never really feel you’re on a fetch-quest at any point.Manhunter is a lot more gory than typical Sierra titles. It’s great that Sierra didn’t feel the need to censor these games it was only acting as the publisher for and allowing them to express themselves with more mature content. I always enjoyed these titles more as a result of them not feeling “watered down”, as you’re playing in a dystopian future where death lies around every corner.The main villain’s name is Phil … just PhilYou have to piece the story together from the info you get in the manual then bits and pieces throughout the game. The endgame sequence is extremely complex and really assumes you’ve been paying very close attention to every possible piece of information so you’ll know what to drop bombs on, where they are and why you’re doing it.Use the crowbar on the stereo because that’s clearly what you’d be thinking of doing in this situationI loved this game when I first played it as a kid. I really enjoyed the subject matter and the whole MAD tracking mechanic just felt natural within this world. I’ve never really played another game the recreated this system of working backwards from a recording that you could engage with to discover how subjects moved around the game world.Though the game is pretty hard to beat without a walkthrough, I’d honestly recommend giving it a go if you’re a fan of adventure games. Just remember to be patient in the sewers as that maze is a pain in the ass. Interestingly enough though, the Apple II version of Manhunter allows the option of skipping the sewer maze because memory limitations prevented saving the player’s progress in that section.Maybe that’s the version I should have played …Game Information Game Manhunter: New York Developer Evryware Publisher Sierra On-Line Release Date 1988 Systems DOS, Amiga, Atari ST, Apple IIGS, Tandy 1000 Game Engine AGI My Playthrough How Long To Beat? 4.5 hours Version Played DOS via ScummVM Notes Manual, Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 17 Story (25) 14 Experience (15) 11 Impact (10) 6   69% Gallery" }, { "title": "The Crimson Crown - Further Adventures in Transylvania (Penguin Software) - 1985", "url": "/blog/2023/02/15/the-crimson-crown-further-adventures-in-transylvania/", "categories": "Let's Adventure!", "tags": "adventure, Penguin Software", "date": "2023-02-15 21:56:56 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Urban Runner (Coktel Vis...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Urban Runner (Coktel Vision) - 1996The Crimson Crown - Further Adventures in Transylvania (Penguin Software) - 1985→ Manhunter: New York (Evryware) - 1988 Article 29 of 96 in this series.Released in 1985 under the title The Crimson Crown, on the same platforms as its predecessor. The game tasks the player with a quest to defeat a magical vampire with the assistance of Princess Sabrina (who is now a fledgling magician) and the heir to the throne, Prince Erik.Make sure to use a 32bit build of Steem SSE if you want to play an STX ROM image on WindowsSince I haven’t really played with an Atari ST ever before, I wanted to make sure I tried at least one of the games in this series on that platform just to get a sense of what the emulation tools were like. There were quite a few options, though most were abandoned by their developers in the early 2000s but Steem SSE is still being maintained and is what I wound up using.Having already played through Transylvania I can honestly say this game comes with a pretty large improvement to the quality of the graphics. Background artwork is a lot more detailed, and inventory items you pick up and drop are a lot more identifiable as well.You have to indicate which character should perform a particular actionThis time around both Prince Erik and Princess Sabrina are “playable” characters. As this is a parser-driven game you can “control” your characters individually by forming a sentence with them as the subject (ex: SABRINA, CAST SPELL or ERIK, TAKE SWORD). The text parser is about as intuitive as last time, and you need to be precise with your inputs.I actually found this title a lot more difficult than the original as there was an added time-based element to some of the puzzles. For example, later in the game you’ll need to wait (literally by entering WAIT as the command) for several cycles for something in a room to change, or for some event to unfold.This process of delaying the game wasn’t intuitive (thanks walkthrough!) and I’m not really sure that this game mechanic is introduced earlier in the game text or in a manual. Once you know it’s an option though you’ll find yourself using this command periodically if you get stuck just to see if it will chance anything in the current room - which it won’t on like 99% of the game screens.The vast majority of this game is item collection and backtracking to figure out where that item needs to be used. Inventory management comes into play again as you can only carry so many items so you’ll have to occasionally drop something to make room for a new item. Thankfully you can see the items you dropped on the screen, plus the game will let you know that there are items you can pick up.My gaming experience here consisted of the following: get all items on current screen try all items on what’s on screen read the available directions to move on screen pick one and go in that direction repeatIt’s a bit tedious, but early adventure games - especially parser-driven games - were still figuring out how to make this experience “fun”. Honestly Infocom had already figured this out, but graphic adventure games were still re-learning those lessons in the mid-80s …You’ll eventually make your way to the vampire’s lair, and with the help of some “friends” you meet along the way (and a bunch of items you’ll need to find) get back Prince Erik’s crown and escape from the castle in time for it to collapse. The battle between the dragon and the vampire introduces a bit of animation, which I didn’t expect in this title so it was definitely a welcome change from all the static screens up to this point.To finish this game you’ll need a lot of patience, and a map. Most enemies can’t be beaten without taking multiple actions, and if you’ve missed any it’s game over. Saving often is a requirement, and the Atari ST version gives you 4 slots you can use. I found myself rotating through the save slots every couple of screens as I’d try different combinations of items in various scenarios until something worked (or I looked it up …).WAIT, WAIT, WAIT, WAIT, WAIT, WAIT … game overI didn’t have a lot of fun with this game, though it was an upgrade from the first title. It is interesting to see how parser-based games evolved in the early to mid 80’s, especially when it came to puzzle and dungeon design. Antonio Antiochia did all the artwork and game design solo for this and the previous title, so seeing as this was again essentially a one man show, it’s worth appreciating the accomplishment even if the game doesn’t really stand the test of time.For a deeper dive into the development journey of Transylvania I highly recommend The Digital Antiquarian’s retrospective of the game.Game Information Game The Crimson Crown: - Further Adventures in Transylvania Developer Penguin Software Publisher Penguin Software Release Date 1985 Systems Amiga, Apple II, Atari ST, Commodore 64, DOS, FM-7, Macintosh, PC-88, PC-98 Game Engine   My Playthrough Time to Completion 2 hours Version Played Atari ST via Steem SSE Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 9 Story (25) 10 Experience (15) 6 Impact (10) 3   40% Gallery" }, { "title": "Urban Runner (Coktel Vision) - 1996", "url": "/blog/2023/02/15/urban-runner/", "categories": "Let's Adventure!", "tags": "adventure, Coktel Vision, Sierra On-Line, Gob", "date": "2023-02-15 07:01:49 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Rise of the Dragon (Dyna...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Rise of the Dragon (Dynamix) - 1990Urban Runner (Coktel Vision) - 1996→ The Crimson Crown - Further Adventures in Transylvania (Penguin Software) - 1985 Article 28 of 96 in this series.Urban Runner is a French produced computer game developed by Coktel Vision and published by Sierra On-line. The game is an interactive movie or visual novel spanning four CD-ROMs.You play as Max Gardner, an American journalist in Paris, investigating a story about a big drug dealer who is covered by some influential politician. To get the dealer talking, you offer him incriminating photographs in exchange for some information. When Max arrives at the meeting point, the drug lord is dead and Max is mistaken for the killer.While evading the authorities, Max continues his investigation and finds an ally in Adda - the murdered drug dealer’s lover - and the two of them work to uncover the conspiracy behind the murders.That face right there sums up the acting in this gameThere are going to be a few FMV-based games in this series, and one thing they overwhelmingly have in common is terrible acting. Brandon Massey, who plays the main character Max, has 2 acting credits to his name … this and Police Quest: Open Season. I didn’t really go into this playthrough with high expectations … and this game did not disappoint (or it did … whatever).The game world consists of a series of static screens you move your cursor around to uncover hotspots. Depending on the type of hotspot, you can pick up an item, examine an object, speak to a character or move to the next screen. Most screens don’t really give you too many options so it’s pretty easy to figure out what to do next, but unlike most FMV games you’re constantly on a timer.When you first start the game you’ll have a hitman chasing you, who will eventually catch up to you if you take too long. There is no indication most of the time how long you have before you’re “caught” by whoever you’re trying to get away from, though some scenes do give you an event timer in the form of a depleting gauge at the bottom of the screen.If the action stops momentarily for you to react (such as throwing a ball, rolling under a moving car or knocking a detective out as he leans into the trunk of a car), the amount of time you have is extremely limited and will likely end with you dying … so save often!You can hardly tell he’s on the phone … it’s just so tiny!As this is more of a visual novel than a “game”, everything plays out in an extremely linear fashion. All character interactions are scripted and voice acted, and there’s generally only one way you can deal with any situation (since they only recorded one video to show you the outcome). The main problem I had with the actual “game” though was the quality of the static screens is extremely low.A glint you say? I guess I’ll have to take your word for it as it’s pretty hard to see ANYTHING … EVERThe majority of the game plays out with you picking up various items, examining them to learn clues about who to call or where to go. Every “level” has numerous puzzles, and honestly most of these are pretty hard. I failed A LOT while playing through this game and found myself resorting to the walkthrough pretty frequently.There are some pretty interesting puzzle solutions that really require you to pay close attention to what the characters are telling you, and then there are some that you just sort of “have to know” (or have read in the walkthrough). For example, to get a sleeping guard away from his desk you need to put his thumb in water. This will make him wake up needing to go to the bathroom.This is the type of thing you maybe learned at summer camp as a kid … or from movies about kids playing pranks on each other in summer camp … regardless, it’s giving you a lot of credit as a player to have to figure that out as a solution.You’ll eventually meet up with your love interest Adda, who is responsible for certain objectives throughout the game. You are given a choice periodically who’s story you want to progress, which creates the illusion of “control” - but you ultimately need to do both plot lines to advance the story. It does add some variety to the game, even if it’s only on the surface and doesn’t really do anything for the overall experience.Though her acting is a little over the top at times, Adda is a good character and actually makes the story a lot more enjoyable. Seeing as you’re essentially just helping to move the movie along its scripted path, thankfully the underlying story you’re advancing is decent. Though the premise is a little absurd, your character is thrown into an impossible situation and has to keep a step ahead of the mysterious syndicate he’s gotten himself mixed up with.If you can make it through the seemingly impossible puzzles, once you reach the game over screen you can select each character and get a summary of their involvement in the overall plot. I found this was actually a really clean way of closing out the story and tying everything together.I love visual novels, but this one wasn’t great. Maybe I’m spoiled by more recent titles like Danganronpa that actually blend multiple gameplay elements into the story progression to make advancing the plot more entertaining. Urban Runner was “ok”, and I know there are some FMV titles on the list that are even worse (cough … Phantasmagoria … cough), so maybe I shouldn’t judge too harshly.So far though I’m not loving these Coktel Vision titles.Game Information Game Urban Runner Developer Coktel Vision Publisher Sierra On-Line Release Date 1996 Systems DOS, Windows Game Engine Gob My Playthrough How Long To Beat? 5.5 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 10 Story (25) 14 Experience (15) 5 Impact (10) 5   49% Gallery" }, { "title": "Ruby on Rails Global Summit '23", "url": "/blog/2023/02/13/ruby-on-rails-global-summit-23/", "categories": "Presentations", "tags": "ruby, rails, ruby-on-rails, conferences, talks", "date": "2023-02-13 13:08:21 -0500", "snippet": "This year (January 24, 2023) I had the opportunity to present at Ruby on Rails Global Summit ‘23, which was a Geekle sponsored event. As I’m currently a Senior Product Manager at MongoDB focusing o...", "content": "This year (January 24, 2023) I had the opportunity to present at Ruby on Rails Global Summit ‘23, which was a Geekle sponsored event. As I’m currently a Senior Product Manager at MongoDB focusing on the Ruby and Node.js Drivers this was a chance to show the audience what a great fit the Mongoid ODM is for Ruby on Rails developers.The full talk is available on YouTube, and I’ve published my notes as well: Ruby on Rails Global Summit ‘23 – Junior Track Ruby on Rails Global Summit ‘23: Ruby on Rails and MongoDB - NotesIf you’re unsure what an ODM (Object-Document Mapper) is, I have another article that provides more information regarding MongoDB ORMs, ODMs, and Libraries." }, { "title": "Rise of the Dragon (Dynamix) - 1990", "url": "/blog/2023/02/13/rise-of-the-dragon/", "categories": "Let's Adventure!", "tags": "adventure, Dynamix, Sierra On-Line, DGDS", "date": "2023-02-13 08:52:26 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Beneath a Steel Sky (Rev...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Beneath a Steel Sky (Revolution Software) - 1994Rise of the Dragon (Dynamix) - 1990→ Urban Runner (Coktel Vision) - 1996 Article 27 of 96 in this series.Rise of the Dragon is a graphic adventure game released in 1990 for DOS and Macintosh, and later remade for the Sega CD (1993) as well as the Amiga. It was one of the few adventure game titles developed by Dynamix, a company that was better known as an action and flight simulator game developer. The game is set in a dark future cyberpunk version of Los Angeles.This game really had “Sierra vibes”, which is kind of foreshadowing as it was actually published the same year that Dynamix was bought by Sierra On-Line.Rise of the Dragon is a “Blade Runner”-esque dystopian future game. You play the role of William ‘Blade’ Hunter, who is investigating the death of the mayor’s daughter from an overdose of a design drug called MTZ that mutates victims and kills them.You start off in Blade’s apartment and by moving the mouse around can interact with various things like the bed, the computer, the sink, cabinet … etc. There are very few interactive areas on each screen, and almost everything is important to advancing the plot.Picking items up involves dragging and dropping them onto your character portrait in the lower right hand corner of the screen. Clicking the portrait also brings up you inventory, where you can examine items, drop them or drag them out of the inventory to be used on the current screen. Certain items can also be used directly on Blade, such as his clothes, trench coat, bullet proof vest and gun.This threw me off at first because I knew I needed to “equip” some of the stuff I’d picked up, but I couldn’t figure out how to do it. Turns out you need to look at the item first (by right click on it), then when you exit that view you’re back on the inventory screen with Blade on the right - where you can now drag and drop stuff to him.You move around Los Angeles by means of a quick travel map. You’ll discover new locations periodically that get added to this map, and you can go to them at any time once they’re uncovered. Depending on the time of day though, certain places may be closed or certain characters may not be available.I actually found this to be a really interesting mechanic, as you had to pay attention to the time it took you to perform your investigation. For example, you can only go to city hall between 09:00 and 17:00, otherwise it’s closed.When he says 8:30PM - he means it. Go there earlier and no one’s thereWatching the time can become a little tedious if you don’t know you can speed it up from the inventory screen. On first playthrough when you don’t know there are certain times events will occur, you can wander around aimlessly - but once you’re aware of when events will trigger you can just go to the right location and skip ahead an hour at a time really quickly to advance the story.You’ll find multiple different ways to electrocute yourself in this gameIt’s pretty easy to screw up in this game, so it’s important to save often. Near the end of the game events are timed so you have to complete certain puzzles and sequences quickly or you’ll be captured and/or killed.To mix it up a bit there are also a couple of arcade sequences mixed into this game. One involves moving crosshairs around the screen to try and shoot snipers before they shoot you, and the other is a side-scrolling shooter.Ask me how I know you can skip this sequence if you fail too many times …In the DOS version of the game the arcade sequences are actually optional-ish. If you lose too many times it’ll actually prompt you to ask if you want to automatically win and skip ahead, which is kind of humiliating … but appreciated …Atmospherically this game looks, feels and sounds like a cyberpunk thriller. Though there isn’t much music, what is there does enhance the experience. For a 256 colour game the artwork is appealing and brings the story to life.You’ll see this screen on a game over as well - but the end of the game is also technically “game over” …I really love this game, but it’s important to point out that it’s incredibly short. There really isn’t all that much to do, the story progresses in an extremely linear fashion and the puzzles (other than tapping the phone line in the sewers!) aren’t too challenging.As a fun piece of personal trivia, I actually started implementing the Dynamix Game Development System (DGDS) as an engine for ScummVM in 2012 but didn’t really get very far. This is the engine Rise of the Dragon, as well as a couple other Dynamix titles were scripted in, and my hopes were to make these titles more accessible on modern hardware.Playing through this game gave me a chance to not only relive my past playthrough experiences, but also dig up some of my old disassembly notes from when I was trying to understand the inner workings of the engine over a decade ago.A lot about Rise of the Dragon still resonates with me, and for anyone looking for a quick cyberpunk adventure game, I’d still recommend this title.Game Information Game Rise of the Dragon Developer Dynamix Publisher Sierra On-Line Release Date March, 1994 Systems Amiga, DOS, Macintosh, Mega-CD Game Engine DGDS My Playthrough How Long To Beat? 5 hours Version Played DOS via DOSBox-X Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 17 Story (25) 17 Experience (15) 12 Impact (10) 7   76% Gallery" }, { "title": "Beneath a Steel Sky (Revolution Software) - 1994", "url": "/blog/2023/02/10/beneath-a-steel-sky/", "categories": "Let's Adventure!", "tags": "adventure, Revolution Software, Virgin Interactive Entertainment, Virtual Theatre", "date": "2023-02-10 09:46:54 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Emmanuelle (Coktel Visio...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Emmanuelle (Coktel Vision) - 1989Beneath a Steel Sky (Revolution Software) - 1994→ Rise of the Dragon (Dynamix) - 1990 Article 26 of 96 in this series.Beneath a Steel Sky is a 1994 cyberpunk science fiction point-and-click adventure game developed by British developer Revolution Software and published by Virgin Interactive Entertainment for MS-DOS and Amiga home computers. The game was made available as freeware (download at GOG.com) – and with the source code released – for PC platforms in 2003.Set in a dystopian future, the player assumes the role of Robert Foster, who was stranded in a wasteland known as “the Gap” as a child and adopted by a group of local Aboriginals, gradually adjusting to his life in the wilderness. After many years, armed security officers arrive, killing the locals and taking Robert back to Union City. He escapes and soon uncovers the corruption which lies at the heart of society.Dave Gibbons collaborated on the artwork for this game, which explains why the intro sequence is so visually stunning. Having been a huge fan of the Watchmen trade paperback when I was younger, seeing the same style translated directly into an adventure game made this an instant classic for me.You start the game following a helicopter crash in a factory. You have a circuit board in your inventory and only two real options for interacting with the world: “move” or “interact”. These options are presented via an arrow cursor on the screen that will show a label if you hover over a hot spot you can interact with. There are very few actionable areas per screen you can interact with, but it doesn’t make the game feel limited as nothing really seems to be there to act as “filler”.When you encounter other characters they can be interacted with via a typical dialogue menu. Each character has limited topics they can discuss, with certain options only being unlocked after you’ve either talked to another character or interacted with something else on the same screen. As there aren’t that many characters to engage with, everyone you do talk to tends to actually share something useful and helps advance the plot.The story is clearly inspired by Neuromancer as you have to get the main character fitted with a port so they can physically interface with a machine and enter into a virtual world. This is the human/computer interface you’d expect in a cyberpunk-type game, and when you’re in this world you can access data files and unlock more information.Foster is followed around throughout the game by a robot sidekick called Joey. When the game begins your only item is Joey’s circuit board, which you can plug into various robot shells throughout the game to give Joey additional capabilities. The first shell allows Joey to interface with various machines using a probe, as well as fly down from high places using a helicopter like rotor. Later he gets into a welder robot so can cut things with a torch.Talking to Joey can can give you additional information about the current situation you’re in, or you can give him instructions. Joey’s responses can be pretty funny as Joey clearly has a personality and is not just a bland robotic assistant. The torch allows him to separate certain background items so you can pick them up, which is needed as there are some basic inventory management tasks needed to complete this game.Unlike a lot of adventure games, there really aren’t a lot of items you need to pick up and use in Beneath a Steel Sky. Throughout the entire game you maybe get a dozen unique items, and each is required to advance the plot. Some items such as the pipe and the wrench actually get used in multiple puzzles.This game clearly takes a lot of inspiration from the LucasArts games, though you are able to make mistakes that result in Foster’s death. The artwork is beautiful and the background music and sound effects really enhance the experience and ambiance. Since I played through the game using ScummVM I also grabbed a copy of James Woodcock’s Enhanced Soundtrack which makes a great soundtrack even better!Overall the story is compelling, the game play is intuitive and progresses naturally without feeling artificially stretched out. I enjoy a good “Blade Runner”-esque store, which Beneath a Steel sky definitely is. If you’re looking for a game to help introduce you to adventure games in general this would be a good choice.Game Information Game Beneath a Steel Sky Developer Revolution Software Publisher Virgin Interactive Entertainment Release Date March, 1994 Systems DOS, Amiga, Amiga CD32, Atari ST, iOS Game Engine Virtual Theatre My Playthrough How Long To Beat? 6 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 18 Story (25) 22 Experience (15) 12 Impact (10) 8   86% Gallery" }, { "title": "Emmanuelle (Coktel Vision) - 1989", "url": "/blog/2023/02/08/emmanuelle/", "categories": "Let's Adventure!", "tags": "adventure, Coktel Vision, Tomahawk", "date": "2023-02-08 15:29:06 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Eternam (Infogrames) - 1...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Eternam (Infogrames) - 1992Emmanuelle (Coktel Vision) - 1989→ Beneath a Steel Sky (Revolution Software) - 1994 Article 25 of 96 in this series.Emmanuelle is an erotic graphical adventure game from Coktel Vision, originally released in 1989 for Amiga, Atari ST, and MS-DOS. The game was developed by Muriel Tramis (better known from her games in the Gobliiins series, Fascination &amp; Lost in Time) and is loosely inspired by Emmanuelle Arsan’s emmanuelle series of novels.Everyone’s DTF … you just gotta say the right thingI’m gonna be honest here … I had no idea what was going on, what I was supposed to be doing, where I was supposed to go, why I was going there, what these random “Idols” were or … anything. This game is really fucking confusing and if the walkthrough didn’t fit on a single page (no scrolling) I’d likely have ignored this title altogether.Copy protection is possibly the most intuitive part of this gameYou start off by having to lookup a couple of colour values from a massive table. This is the game’s copy protection and only lasts a few seconds, but may be the most fun part of the game :PEGA nudity … how “hot”The interface is unintuitive and the goal of the game is unclear. It’s possibly covered in the manual (I didn’t go looking for it) but apparently you’re trying to find “Emmanuelle”, and you need to get 75 or more “eroticism” points to make this happen. These points are added by hooking up with random women, which you do by choosing the right options from a dialogue tree.When you’re trying to choose a dialogue option they cycle by extremely quickly, which makes it hard to pick the right one. This may be an artifact of running the game in DOSBox (I could lower the CPU speed, but didn’t) but just in case the original game sucked just as badly on original hardware I figured it was worth calling out.CORRECTION: Turns out this is actually VERY MUCH due to running the game in DOSBox. I tried the Atari ST version using Steem SSE and the timing was not an issue. Also it appears the palette is only complete garbage when playing this game in DOS. When you play this game in an Atari ST emulator the 16 colors actually look pretty good as opposed to the baby vomit that the DOS colors seem to default to.I still wouldn’t recommend playing the game, but if you have to - do it on an Atari STThere are a half dozen cities you need to visit and each one has an airport you can buy tickets from. The amount of money you have is limited and if you run out it’s game over.You find Emmanuelle at the airport and leave … EXIT TO DOSThis game just makes no sense. Maybe if you’ve read the books this is loosely based on you’ll have some idea as to where to go but from the moment you get “control”, locations on the maps aren’t highlighted in any way so you’re guessing where to click to interact with the game world. What you’re supposed to do on each screen makes no sense. Why I had to buy a toucan at one point made no sense.Nothing about this game made any sense. If it made sense to YOU, please explain in the comments below :)Game Information Game Emmanuelle Developer Coktel Vision Publisher Tomahawk, Coktel Vision Release Date 1989 Systems DOS, Amiga, Atari ST My Playthrough How Long to Beat? 1 hour Version Played DOS via DOSBox-X Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 3 Story (25) 3 Experience (15) 2 Impact (10) 1   13% Gallery" }, { "title": "Eternam (Infogrames) - 1992", "url": "/blog/2023/02/07/eternam/", "categories": "Let's Adventure!", "tags": "adventure, Infogrames", "date": "2023-02-07 21:42:48 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Kabul Spy (Sirius Softwa...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Kabul Spy (Sirius Software) - 1982Eternam (Infogrames) - 1992→ Emmanuelle (Coktel Vision) - 1989 Article 24 of 96 in this series.Eternam combines futuristic elements with historical settings. The player assumes the role of officer Don Jonz of the Orion United Forces, who is starting a vacation on the planet Eternam. The planet is described as a galactic amusement centre, where different islands represent different periods of Earth’s history.Check out the Razor1911 cracktro at DemozooThe copy of the game I was playing was apparently cracked by Razor1911, which means it came bundled with a cracktro. Though it has nothing to do with this review it did give me a chance re-experience one of these demos that I found so fascinating back in the day. Software piracy is bad and does have a material impact on these companies, but the demo scene that surrounded these groups really resulted in some great technical demos.As soon as you get past the initial intro and copy protection sequence you’re dropped in a pseudo-3D world. You can move around and “shoot” with the spacebar, but since this is supposed to be an adventure game the experience is a little disorienting at first. You’ll spend A LOT of time backtracking from location to location (and eventually island to island) so getting used to navigating this world using this weird view is important to being able to progress.One screen near the end of the game actually recreates the Drakkhen layoutApparently the overworld was inspired by the Infogrames’ Drakkhen, which came out a couple years earlier. I’m not sure if this was supposed to be a subtle plug or if they had game engine code they wanted to reuse, but it didn’t add to the experience in any positive way. Honestly navigating the overworld is tedious and boring and since you don’t even get a compass until later in the game it’s easy to get lost and disoriented.When you do find a building or location you can enter from the overworld the game switches to a more traditional layout. Don Jonz can walk around the screen, interact with (limited) objects, talk to characters, or use items he’s picked up. The game interface tries to create a “game within a game” feeling, so when you select an icon that represents a verb (GET, USE, SPEAK or LOOK) you see a “finger” hover over the “button” and click it.There’s typically very little you can do on most screens, and a lot of these screens are just filler. The LOOK option generally does nothing, and if you want to GET something, you have to wait for the “line of sight” indicator to show you there’s something there. If the indicator goes away you can use LOOK to bring it back up, but that’s basically all you can “LOOK” at in this game.The various locations and islands you visit show the civilizations that live there advance technically. The game starts in a more medieval setting, but advance to more modern, then futuristic, then back to ancient Egyptian. Each location has characters you can interact with to gain additional information about the world for Eternam as well as to advance the plot and get clues as to what to do next.Character interactions will cut to a closeup view to give you a cartoonish portrait. The style of the portraits actually reminded me a little of Dragon’s Lair so I’m wondering if the artists working on Eternam were influenced by this early arcade game.Dialogue selections can result in your death … so choose carefully!Dialogue trees are used to navigate conversations with the game’s cast of characters. Most of the options are padding but there’s usually one piece of useful information each character interaction will produce so you’ll have to pay attention and take notes.The way the story is written as well as some of the over-the-top character animations make this a pretty funny game to play through. There are A LOT of pop-culture references that haven’t really aged all that well, but if you grew up in the 80’s you should be able to follow along and identify what they’re making fun of.Instead of Uhura it’s Ooh-la-la … get it … GET IT! … ughYou’ll need to backtrack a ton throughout this game as many characters will send you on fetch quests in order to advance the plot. This wouldn’t be so bad if the overworld navigation wasn’t such a chore - but it is and you can’t really fast travel so you slog your way around fetching items.You’ll see this screen a lotThe game’s narrator Tracy pops in periodically to give you information about a location or to give you plot details. More often than not though she’ll pop in to announce that you’ve died … again. There are so many ways to die in this game you’d think it was made by Sierra Online. Conversations can go wrong, you can be too slow using an item, you can pick up the wrong item, you can randomly die in the overworld because roaming monsters are attacking you.Why do I have guns on the overworld but nowhere else?Weirdly enough you get attacked while navigating the overworld and you can shoot back using lasers or guns or something. These monsters drain your health, which automatically recovers when you idle, but can run out and result in death. These battles serve no purpose as you don’t gain experience, can’t level up and they don’t drop items or information. Basically it’s just another meaningless obstacle to slow this game down even further.WHY AM I ON THE MOON???I appreciate what they tried to do with this game, but the plot is extremely confusing and the backtracking is a grind. Overworld navigation is boring and pointlessly slow and it’s too easy to miss key items.There are A LOT of items you need to collect throughout the game, and this doesn’t include the red herrings and junk you can collect as well. Using items is initially confusing but you quickly realize you need to select them then click on USE. Some item combinations are bizarre and verge on moon logic.Although there’s an underlying plot about your arch enemy (Mikhail Nuke) taking over Eternam when you get there none of this really stuck with me and I just found his cut scenes pointless and intrusive. This game’s story drew heavy influence from Westworld - which I’ve never seen - and Infogrames scattered tidbits throughout that references French culture and history - which I know little to nothing about as well.This game is really weird. The controls are lousy, the story is bizarre and playing it is a bit of a chore. I do appreciate how different this game tried to be and though it may have fallen short with me and probably most North American gamers, Infogrames at least swung for the fences here. I enjoyed a lot of the humour they injected throughout, but honestly I won’t ever be revisiting this title and wouldn’t recommend it either.No fuss, no muss - just “the end”Game Information Game Eternam Developer Infogrames Publisher Infogrames Release Date 1992 Systems IBM PC (DOS), FM Towns My Playthrough How Long To Beat? 7 hours Version Played DOS via DOSBox-X Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 10 Story (25) 12 Experience (15) 6 Impact (10) 2   43% Gallery" }, { "title": "Kabul Spy (Sirius Software) - 1982", "url": "/blog/2023/02/07/kabul-spy/", "categories": "Let's Adventure!", "tags": "adventure, Sirius Software", "date": "2023-02-07 16:03:31 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Leisure Suit Larry Goes ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Leisure Suit Larry Goes Looking for Love (in Several Wrong Places) (Sierra On-Line) - 1988Kabul Spy (Sirius Software) - 1982→ Eternam (Infogrames) - 1992 Article 23 of 96 in this series.Kabul Spy is an early graphic adventure game by Sirius Software. Released in 1982 it supports some pretty limited noun/verb parsing and a basic story following an American secret agent sent to Afghanistan to rescue Professor Paul Eisenstadt, who is being held by the KGB. Why the KGB you ask? When this game was published the Soviet Union hadn’t withdrawn from Afghanistan yet … isn’t history fun?A little backstory and off you goProgress through the game is pretty straightforward and there aren’t all that many twists and turns. You need to read EVERYTHING and write EVERYTHING down, otherwise you’ll lose track of where you’re supposed to be going and what phrases you should say to certain people (ex: \"SAY SALAM ALEIKOM\").For an Apple II game the graphics are what you’d expect, and there isn’t really any music or sound effects to accompany the experience. Seeing as this was basically written by one person (Tim Wilson) who likely did the graphics as well the game doesn’t look too bad and is easy enough to navigate.Sometimes hints are drawn into the background, which can be extremely hard to make out but I appreciate the effort put into this.It wasn’t a Grue that got me, it was a Grud …This game offers some variety as to how you can complete it, and there are also a number of ways you can die. Being a fan of Sierra games and the over-the-top death scenarios they create in certain games I did enjoy periodically killing my character to see how it was portrayed.In case you can’t tell … the endI had a couple of issues with the original disk files I found to play this game as I kept winding up in the prison cell and was unable to BRIBE GUARD. Finding a different version of the game solved that for me and I was able to get through this pretty quickly.Overall it wasn’t bad for what it is - a very early adventure game on the Apple II.Game Information Game Kabul Spy Developer Sirius Software Publisher Sirius Software Release Date 1982 Systems Apple II My Playthrough How Long to Beat? 1 hour Version Played Apple II via AppleWin Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Graphics (10) 3 Sound (10) 0 Plot / Progression (25) 5 Characters / Development (15) 0 Gameplay / Experience (15) 3 Replayability (10) 0 Impact / Impression (10) 3 Bonus / Surprise (5) 0   14% Note that I overhauled my scoring criteria in August of 2024, and the score above is the revised score for this game.See below for the original score based on the original scoring criteria. Atmosphere (20) 6 Story (25) 5 Experience (15) 5 Impact (10) 3   27% Gallery" }, { "title": "Leisure Suit Larry Goes Looking for Love (in Several Wrong Places) (Sierra On-Line) - 1988", "url": "/blog/2023/02/01/leisure-suit-larry-2/", "categories": "Let's Adventure!", "tags": "adventure, Sierra On-Line, SCI", "date": "2023-02-01 04:39:04 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Sam &amp; Max Hit the Ro...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Sam &amp; Max Hit the Road (LucasArts) - 1993Leisure Suit Larry Goes Looking for Love (in Several Wrong Places) (Sierra On-Line) - 1988→ Kabul Spy (Sirius Software) - 1982 Article 22 of 96 in this series.Leisure Suit Larry Goes Looking for Love (in Several Wrong Places) is the second game in the Leisure Suit Larry series of graphical adventure games, designed by Al Lowe and published by Sierra On-Line in 1988. Like its predecessor, Leisure Suit Larry in the Land of the Lounge Lizards, it was developed for multiple platforms, including MS-DOS, Atari ST and Amiga. It utilizes Sierra’s Creative Interpreter (SCI0) engine, featuring 16-color EGA graphics and a mouse-based interface for movement. The story continues the exploits of Larry Laffer, who becomes stranded on a tropical island during an ill-fated vacation.Dr. Nonookee … get it …This game starts off sort of where Leisure Suit Larry in the Land of the Lounge Lizards left off. You’re mowing the lawn of the woman you hooked up with at the end of that game only to find out you may have jumped the gun a bit (she wants nothing to do with you). Eve doesn’t really know how you are or why you’re at her house and tells you to get your shit and go.The story proceeds linearly as you buy a lottery ticket that turns out to be a winner, bumble your way onto a dating game show and win the dream cruise, end up deserted on an island and end up saving the island natives from the mad scientist there.Early on you’re presented with a subplot that has the KGB following you around as you’ve accidentally ended up with some microfilm the mad scientist wants (for … reasons).We’re all adults here … let’s crank up the raunchiness to 11Unlike its predecessor, this game uses the new SCI engine which has full mouse support. Honestly the mouse is just a distraction as you really only use it to interact with the menu bar occasionally, which you can do more quickly using hot keys anyway. SCI0 games still relied on the text parser to interact with the game world, but as soon as you start typing all character movement stops so you don’t have to time your input around a moving Larry.Having the extended color palette (16 glorious colors!!!) and increased screen resolution (320x200 pixels!!!) allows the Sierra artists to really take full advantage of the hardware available at the time. Though I played through the SCI VGA remake of Larry 1, other games of this time such as King’s Quest really looked pale in comparison.Clearly this title has learned a lot from the previous AGI Sierra titles as the text interactions tend to be more informative when you make a mistake, and the typical LOOK verb you use helps direct your attention a lot more effectively to the items on screen you’d want to interact with. Though the text parser era was drawing to a close by this point, I still really enjoy this method of interacting with a game and kind of miss the jokes programmers built into these games to entertain you when you typed something stupid.All the cool kids write their games using assembly!SCI games were optimized to use sound cards when available, so the sound effects and music are well done. Other than the main theme though I don’t really remember anything standing out so I guess they did a good job of keeping the background effects in the background :POn the negative side, this game’s puzzles get to be frustratingly vague and can require a LOT of backtracking. I died A LOT trying to find a way off the plane, and when I did find it you had to position your character at exactly the right spot so the text parser would allow you to interact with the hidden third door on the lower part of the screen. You also have a limited time to get yourself off the plane so you need to reposition yourself repeatedly and keep retrying the text inputs only to die and have to reload and do it over again.Getting yourself past the KGB on the island is also a chore as you can’t go directly to any of the locations where parts of the fetch-quest puzzle are located. You have to wait through an animation of Larry bumbling through the forest over and over and over until you get where you want to be. If you forget an item, you have to go back and repeat this process while it cycles through the locations with this stupid scripted sequence over and over.Having unintuitive puzzles, dead ends and repeated game overs are just staples of these early Sierra Online games so I can’t really complain about that. I knew parts of this game would be frustrating and even with a walkthrough it … was frustrating.Timing various interactions with a text parser (ex: swinging from one vine to the next over a river of piranas), or navigating a narrow path through quicksand where a one pixel misstep results in death requires frequent incremental game saving and loading.Once you finally figure out how to make a molotov cocktail and drop it into the volcano, the (LONG) endgame sequence is triggered and you end up with the girl of your dreams. The game ends with you marrying the island girl and you’re both naked on the beach.I don’t know if there’s a final scene or if my game froze, but this was as far as I got … and I managed to be missing 1 point from having a perfect score :/These old text parser games are a lot of fun as great care has been put into developing the stories and characters. Al Lowe really likes to focus on juvenile humor that is essentially dick and fart jokes, but they’re still funny and make these games endearing.If crude, suggestive, innuendo-filled games are your thing, you’ll likely enjoy this game as well as the rest in the Leisure Suit Larry series of games.Game Information Game Leisure Suit Larry Goes Looking for Love (in Several Wrong Places) Developer Sierra On-Line Publisher Sierra On-Line Release Date October 1988 Systems DOS, Amiga, Atari ST Game Engine SCI My Playthrough How Long To Beat? 4 hours Version Played DOS via ScummVM Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 14 Story (25) 16 Experience (15) 10 Impact (10) 5   64% Gallery" }, { "title": "Sam & Max Hit the Road (LucasArts) - 1993", "url": "/blog/2023/01/23/sam-and-max-hit-the-road/", "categories": "Let's Adventure!", "tags": "adventure, LucasArts, SCUMM", "date": "2023-01-23 04:42:18 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Mean Streets (Access Sof...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Mean Streets (Access Software) - 1989Sam &amp; Max Hit the Road (LucasArts) - 1993→ Leisure Suit Larry Goes Looking for Love (in Several Wrong Places) (Sierra On-Line) - 1988 Article 21 of 96 in this series.Sam &amp; Max Hit the Road is a graphic adventure video game released by LucasArts, based on the comic characters of Sam and Max, the “Freelance Police”, an anthropomorphic dog and “hyperkinetic rabbity thing”. The characters, created by Steve Purcell, originally debuted in a 1987 comic book series. Based on the 1989 Sam &amp; Max comic On the Road, the duo take the case of a missing bigfoot from a nearby carnival, traveling to many American culture tourist sites to solve the mystery.LucasArts really set the tone for their adventure games with Maniac Mansion as having excellent writing, character development, pacing and elements of humor injected throughout. Sam &amp; Max appeals to a slightly more mature audience as there are a lot of pop culture references and excessive cartoon violence that appeals to the 13+ crowd … as well as nostalgic middle aged men :PThe plot follows our heros - the freelance police - on a trek across America to solve the mystery of the disappearing sasquatch(es). The story unfolds across multiple locations where you interact with various characters via a menu system used to select topics via pictograms.Unlike some adventure games the number of topics you can discuss with most characters is extremely limited. This helps to keep you from going down endless dead ends like you’d find in games such as Cruise for a Corpse, where endless backtracking and growing topic lists make plot advancement tedious.In addition to interacting with a handful of characters, you also have to collect a number of items to satisfy various fetch quests. Several times throughout the game you’ll find yourself having to combine multiple items to complete a certain task, and though this can be difficult the game will drop enough hints to steer you in the right direction.Combine tar, mammoth hair and a toupee … boom … instant bigfoot costume!Game progression is pretty linear, and though there are some mildly frustrating item combination puzzles, overall the difficulty here is low. You can’t get yourself into an unwinnable situation nor can you miss an item you can’t circle back for later. This is typical of all LucasArts adventures though so I’m really only calling it out for consistency.This minigame is pretty stupid and just feels forcedA couple mini-games are included, with the most annoying being the highway jump/duck game. I don’t really get what the point is or if there’s any repercussion to failing, but you have to slog through this before you can take the highway to explore additional locations on the map. Honestly this may be an optional mini-game … all I know is I played it once, hated it and never played it again :PTo navigate between game locations you select them from a map of the USA. There are only a handful of locations you need to explore, and most require backtracking to gather info or items. Each location is pretty small - maybe 3-5 “screens” - but they all share a goofy cartoonish style that makes exploring them enjoyable.The only real “issue” I ran into while playing this game was getting stuck while on the view finder and the cleaning robot’s brain. Both times I didn’t realize you could exit out of the view by clicking the left/right mouse buttons at the same time. Since I was playing on a Macbook the touchpad wasn’t registering these button presses so I really thought there was an issue with ScummVM.I ended up just remapping the mouse buttons to keyboard keys (in ScummVM) at which point everything worked as expected.Click left/right to exit … or wait forever …This game is a lot of fun if you enjoy a good story. The comedic undertones of every interaction made the character and plot development a lot more enjoyable and the lack of dead ends and plentiful clues set a good pace. Though there were some weird item combinations to deal with, it didn’t feel at any point like the game was throwing meaningless puzzles your way just to pad things out. It’s a pretty short game with not too many locations to visit and a plot that progresses in a linear fashion.Although the graphics are a bit dated at this point, I don’t think anyone picking up this title today wouldn’t enjoy the experience. I would definitely recommend this title to anyone looking for a casual adventure game to pick up and sink a couple hours into.The end credits are interactive and let you shoot the dolls like you would at a carnival … fun!Game Information Game Sam &amp; Max Hit the Road Developer LucasArts Publisher LucasArts Release Date November 1993 Systems DOS, Mac OS, Windows, Amiga Game Engine SCUMM My Playthrough How Long To Beat? 5.5 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 18 Story (25) 22 Experience (15) 12 Impact (10) 7   84% Gallery" }, { "title": "Mean Streets (Access Software) - 1989", "url": "/blog/2023/01/19/mean-streets/", "categories": "Let's Adventure!", "tags": "adventure, Access Software, Tex Murphy", "date": "2023-01-19 13:05:07 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Hopkins FBI (MP Entertai...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Hopkins FBI (MP Entertainment) - 1998Mean Streets (Access Software) - 1989→ Sam &amp; Max Hit the Road (LucasArts) - 1993 Article 20 of 96 in this series.Mean Streets is set in a dystopian cyberpunk neo-noir world is the first in the series of Tex Murphy mysteries. In 1998, Mean Streets was remade as Tex Murphy: Overseer, which I’ll get to eventually :).You plays the role of Tex Murphy, a down-and-out private investigator living in post-apocalyptic San Francisco. Tex is hired by a beautiful young woman named Sylvia Linsky to investigate the death of her father, Dr. Carl Linsky, a professor at the University of San Francisco. Prior to his death, Carl would not talk to his daughter about the secret project he was working on, and days later, he was seen falling off the Golden Gate Bridge. Sylvia suspects murder, but the police say it was routine suicide.This can either be considered copy protection or saving a few bucks on programming a more engaging intro to the gameTo help get him started, Tex is given $10,000 and a few leads. The player is referred to the game’s manual for a list of their leads. If you’re not just following a walkthrough you won’t actually be able to do anything meaningful right out of the gate as you’ll have no idea how to begin the case.Travel involves navigating to various nav codes you’ll learn from characters as you question themMoving around the game world is done by means of a lander, which is sort of a flying car (similar to what you’d see in Blade Runner). You enter a nav code, then either pilot your way there manually or use the auto-pilot. There’s a Warp mode that’s supposed to get you from place to place faster, but I could never get it to work … so I just found another way to speed the game up instead.“Warp Mode” for me is just jacking up the CPU speed once the auto-pilot kicks inThe story progresses by means of various text dumps, faxes and conversation screens. That’s really all there is to it and it’s your job as Tex Murphy to solve the case based on the story elements you slowly uncover by interrogating people and exploring a handful of locations.Interrogation is also pretty straightforward. You have the option to ask questions, offer a bribe, or threaten the person with a little physical violence. Questioning involves asking about keywords, which will result in more information being provided or a generic response indicating you’ve picked the wrong keyword for that user. Note that you have to watch your spelling as the parser is pretty unforgiving and you may not realize a spelling mistake is what resulted in a generic response.In addition to navigating to known nav codes to interrogate people, you also have access to vid phone you can call two people on: Vanessa and Lee. Vanessa can be asked various keywords to try and uncover additional information and nav codes, but Lee will require bribes. If either of them is able to produce information though it will come in the form of a fax.Funny how in 1989 getting a fax was considered a futuristic form of communicationSome nav codes won’t lead you to a conversation, but instead to a single room you can move around and investigate. As you walk around you’ll find “areas” that you can interact with via a verb menu at the bottom of the screen. Here you can LOOK, GET, MOVE, OPEN, ON/OFF and TASTE select items to potentially uncover clues. I would HIGHLY recommend you MOVE EVERYTHING. This threw me off initially as you need to find keys in basically every location and they tend to be under or behind something unexpected (like a sandwich in one case).You will also need to GET everything you can. Make sure you LOOK at these items first since some contain story details or nav codes. You can go into your inventory later to examine these items too, but finding the right one can be tedious.Note that the inventory is also where you can pawn items. This is how you get money for bribes, so make sure to pick everything up that isn’t bolted down as you’ll need all the money you can get! You can reclaim items that you’ve pawned as well, but honestly I never had to do this so I’m not sure what purpose it really serves (maybe you can pawn key story items?).As you progress through the case you’ll learn you need to find the pass codes and key cards for 8 different scientists. These can be used to access various computer terminals to uncover more of the story from these scientists to help move the story along. Make sure you take notes as you read everything since you’ll need to extract keyword details to ask characters about to continue to progress.Sometimes I can convince you to give me more info by asking less than nicelyIf you question a character about a keyword and they refuse to give you an answer (but aren’t indicating they don’t know anything) you can threaten them. This involves punching them in the gut and then having them cough up the info. Trying to do this on a character that isn’t being cagey will just cut to a screen of you being thrown out of the area the conversation was taking place and you’ll have to go back and resume the discussion.Apparently this world also has mutants in itI didn’t really understand why the world Tex is exploring contains mutants, but there are a couple you’ll interact with. There’s allusions to some characters hating freaks so I’m guessing it’s woven into the plot somehow, but I must have missed it. I’m sure it would have added to the story but clearly I wasn’t paying close enough attention …Before you can investigate certain areas or interrogate certain charters you sometimes have to go through an arcade sequence. This is always 2 screens of baddies with guns trying to shoot you. They only stand and shoot so you can duck down and they’ll never hit you. There are obstacles you can’t shoot through when you’re crouched though so you’ll need to time when you return fire so you can stand up and shoot and keep moving to the right.You have limited ammo, however you can find more in the various areas you investigate so you shouldn’t have to worry about running out.“Sonny Fletcher” is the important bit here … now go ask everyone about himIt is a bit frustrating that there’s no real emphasis placed on any of the keywords you’re supposed to keep track of to use in your investigation, so you’ll need to take some pretty thorough notes while you play. Most proper names, business names or organization names should be written down as you’ll likely need to follow up on them with each and every character - so plan to backtrack as you learn new keywords.Eventually you’ll work your way to Alcatraz where the shadowy MTC organization you’ve been chasing is headquartered. The endgame involves using the 8 key cards and pass codes in a random order (the game will prompt you). Assuming you had all this written down and can get the info typed in correctly in 60 seconds, you win the game.If looks could kill indeed … this is some good VGA rendering right hereThough your interactions with the game world are pretty limited, for a late 80’s game this is actually quite well done. I would consider this to be more in line with what you’d call a “Visual Novel” nowadays though. The arcade sequences are pretty repetitive and there isn’t really any increase in the challenge or complexity - they’re just in there to kill time.Autopilot is a killer feature since you do SO MUCH backtracking and navigation, and though you have the option to pilot the lander yourself this gets old REAL fast.As far as detective stories go this is a pretty good one. The pacing is good, the interfaces are intuitive and though moving from conversation to conversation via the navigation system can be a bit of a drag, it’s not that bad overall. I’m a curious to see how the re-implementation of this game changes up these elements, but I guess I’ll find out when the time comes :)Game Information Game Mean Streets Developer Access Software Publisher Access Software Release Date 1989 Systems DOS, Amiga, Atari ST, Commodore 64 Game Engine   My Playthrough How Long To Beat? 8.5 hours Version Played DOS via DOSBox-X Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 12 Story (25) 16 Experience (15) 7 Impact (10) 5   57% Gallery" }, { "title": "Hopkins FBI (MP Entertainment) - 1998", "url": "/blog/2023/01/16/hopkins-fbi/", "categories": "Let's Adventure!", "tags": "adventure, MP Entertainment", "date": "2023-01-16 06:24:01 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Cruise for a Corpse (Del...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Cruise for a Corpse (Delphine Software International) - 1991Hopkins FBI (MP Entertainment) - 1998→ Mean Streets (Access Software) - 1989 Article 19 of 96 in this series.Hopkins FBI is a 1998 adventure game from MP Entertainment, most famous for very large (at the time) amounts of gore. Players assume the role of FBI agent Hopkins, who is on the trail of a criminal mastermind named Bernie Berckson. The pursuit takes the player through a variety of locations, including the FBI headquarters in a modern fictional city, a tropical island, and a submarine base.They promised they wouldn’t hurt the hostages … LIARS!When this game first came out I actually bought a copy directly from MP Entertainment, which came in the mail on a CD they’d burned and attached a press-on label to. Since I was 17 when this game came out I can clearly remember being drawn to it because there were promises of excessive violence … and some nudity …The gameplay is pretty standard Point-and-Click Adventure fare at this point. You move Hopkins around the screen moving the mouse over everything to see if the cursor changes. If it does, right-clicking will cycle through various interaction options (Take, Read, Move, etc) depending on what the object is.Case closed because he’s clearly dead, right …. right?You start off watching a convict (Bernie) be executed, but somehow after seemingly being killed the lights go out and he escapes from prison. I can’t remember based on the story if you were the one that initially arrested him and put him on death row, but apparently he’s out to enact some complex revenge on you and you need to track him down and stop him.Bernie’s killing spree involves young women, each with a clue at their body leading to the location of the next victim. Moving around the first area of the game is pretty straightforward and is reminiscent of [Police Quest 1(/blog/2022/03/15/police-quest-1/), though you can just click on the location you want to go to and it’ll auto-drive you there.When you first leave your apartment the dispatcher will tell you there’s a bank robbery in progress, so you go there first. Interacting with characters is also standard fare with dialogue options presented as a list you choose from, with most options giving generic details and a key few helping to advance the plot.The switchboard operator’s performance is truly abysmalThe voice acting in this game is really something to behold. I’m not sure if they just got people around the MP Entertainment office to do one take of each character’s lines or what, but it really is bad. Like … really bad.Not having voice acting at all would have exponentially improved the overall experience of playing this game.What is interesting about this game though is they include some arcade-style elements to break up the monotony. While hunting for clues (using the key from your girlfriend you literally just shot and killed) on one of the office computers you find a Breakout game you can play. It’s not great … but it’s there.The most painfully slow Breakout clone can be found within the game for … reasonsThere are some interesting elements to the story, though the pacing seems a bit off. You’re trying to find Bernie by finding murdered women, who give you clues to other murdered women’s locations … but the motivation isn’t super clearn. The last clue takes you to the shooting range, where you murder your girlfriend by accident then … go back to her apartment to watch the video attached to her corpse.My grieving process appears to involve looting the dead body and immediately moving onAt one point you are killed and wind up in purgatory, which you need to escape from to be reincarnated in your body so you can continue the investigation. This actually ends up being a plot point as Bernie has figured out how to leverage this process to do something with clones and have them take his place (or something …).Grammar and spell checking was a lot harder in the late 90’sThis purgatory/clone thing was kind of interesting but wasn’t fully baked and winds up being really confusing. There is clearly a seed of a good idea planted in this game, but the execution fell flat.I’ll take optimized navigation to avoid tediumMy playthrough used ScummVM, which didn’t implement the Wolfenstein 3D styled maze/shooter in the underwater base during the final chapter. After watching a long play on YouTube though (Hopkins FBI LongPlay 2 of 2)I don’t think I really missed out on much, and it allowed me to move through this portion a lot faster.Yeah this looks cool, and is … once … then it just drags on and onThe endgame really fells mashed together. You need to resurrect your dead girlfriend, which involves you creating and killing a clone of yourself to go back to purgatory to find Samantha and convince her to come home. You then need to both push a button to open a ground hatch so you can jump through and have the final confrontation with Bernie play out as a scripted (boring) sequence.This might have been fun to play, but just sit back and watch because that’s it for this gameAfter you kill Bernie, you’re back in your apartment typing and …. that’s it. What about all those murdered women? What about the fact that you killed your own girlfriend then fled the scene? What about the fact that this entire underwater lab exists?The end … though the credit sequence here really makes no sense given the game you just played …This is one of the earliest examples (for me personally) of a game being released for Linux. At the time I was branching from Windows and was starting to play with the early Linux distributions available at that time. Though I didn’t buy this game for Linux, I think the fact that it was being made available for Linux helped draw me to the title.The game also attempted to up the musical quality by including a couple songs by The Troggs, but the way they looped these just makes them annoying. The music throughout this game is actually extremely distracting and only enhances the experience in rare occasions.Overall this was an “OK” adventure game, but I wouldn’t really recommend it.Game Information Game Hopkins FBI Developer MP Entertainment Publisher MP Entertainment Release Date July 16, 1998 Systems OS/2 Warp, Windows, Linux Game Engine Hopkins My Playthrough How Long To Beat? 4.5 hours Version Played Windows via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 7 Story (25) 13 Experience (15) 9 Impact (10) 4   47% Gallery" }, { "title": "Will Upgrading My MongoDB Server Version Break My Application?", "url": "/blog/2023/01/13/will-upgrading-my-mongodb-server-version-break-my-application/", "categories": "MongoDB", "tags": "upgrade, drivers, mongodb", "date": "2023-01-13 09:21:00 -0500", "snippet": "Upgrading components is an important part of maintaining a healthy application. The MongoDB Server is continually being developed to include new features and functionality, as well as to fix bugs, ...", "content": "Upgrading components is an important part of maintaining a healthy application. The MongoDB Server is continually being developed to include new features and functionality, as well as to fix bugs, potential vulnerabilities and attack vectors. To ensure users are using the “latest and greatest” whenever possible, MongoDB publicizes Software Lifecycle Schedules to make it clear when various components will reach end of life (EOL).The applications that you’ve built that connect to MongoDB are using MongoDB Drivers, which at the time of writing include official releases for C, C++, C# (.NET), Go, Java, Node.js, PHP, Python, Ruby, Rust, Scala and Swift.Note that “break my application” is extremely generic and is meant to encompass a category of issues such as “not being able to connect”, “application can’t start at all”, “can’t return data”, etc.I’m using the Stable API!The MongoDB Stable API was created to allow you to upgrade your MongoDB server at will, and ensure that behavior changes between MongoDB versions do not break your application.The Stable API provides long-term API stability for applications and supports more frequent releases and automatic server upgrades. This allows your applications to take advantage of rapidly released features without risking backwards-breaking changes.If your application is already using the Stable API via your current Driver you shouldn’t have to worry further about compatibility as it relates to a MongoDB Server upgrade.What version of MongoDB does my Driver support?Each official Driver listed above will contain a compatibility matrix (see the Node.js Compatibility as an example), which should clearly show you what MongoDB Server versions are actively being tested against which versions of the Driver. Note that at the time of writing MongoDB does not have an official Support Policy for Drivers. If this changes in the future it would be reflected in the Changes to MongoDB Support PolicyNeither the Legacy Support Policy nor the Software Support Policy call out drivers directly. As a result the best guidance to follow is to ensure the version of the MongoDB Driver your application is using is actively being tested against the version of the MongoDB Server you’re using.If you’re using any Community Supported Drivers, clarification regarding support and compatibility should be directed to those communities directly.What if I’m using a library that includes a MongoDB Driver?Many popular libraries, ORMs and ODMs depend upon an official MongoDB Driver. Under most scenarios package management will be used to manage the library’s dependencies, which can be used to determine which version of the MongoDB Driver is being used.For example, let’s consider some of the most popular libraries and ORMs. As the source code for most libraries are hosted on GitHub (or some other service) a similar strategy can be followed to identify what version of the MongoDB driver is being used for a given version of the library.Many libraries use Semantic Versioning, so if you’re unsure how to determine if a given constraint (ex: &gt;=2.4.1', '&lt;3.0.0') would include a version of a Driver (ex: 2.18.2), the Semver check tool can help.MongoidMongoid is the ORM (or ODM) of choice for Ruby on Rails developers. As it is developed and maintained by MongoDB directly a compatibility page is available that can be used to identify what version of the library can be used with which versions of the MongoDB Server.As a Ruby library however, dependencies are managed using Bundler, which implies either a Gemfile or &lt;library&gt;.gemspec will be present and should contain dependency and version details. Since the source code is available, if we wanted to identify what version of the Ruby Driver an older version of Mongoid (ex: 5.2.0) required we could do the following: Navigate to the appropriate branch/tag on Github Open the mongoid.gemspec file Identify what versions of the driver are pinned (\"mongo\", ['&gt;=2.4.1', '&lt;3.0.0'] in this case)Note that your application’s Gemfile.lock would indicate exactly which version of the Driver is being used, however if you don’t have access to this the above can help point you in the right direction.MongooseMongoose provides a straight-forward, schema-based solution to model your Node.js application’s data. It includes built-in type casting, validation, query building, business logic hooks and more, out of the box.As a Node.js library, dependencies are managed using Node Modules, which would indicate a package.json file would be present that describes the dependencies and version details. Since the source code is available, if we wanted to identify what version of the Node.js Driver an older version of Mongoose (ex: 4.9.9) required we could do the following: Navigate to the appropriate branch/tag on Github Open the package.json file Identify what versions of the driver are pinned (\"mongodb\": \"2.2.26\" in this case)Note that your application’s package-lock.json would indicate exactly which version of the Driver is being used, however if you don’t have access to this the above can help point you in the right direction.Spring Data MongoDBSpring Data MongoDB is part of the umbrella Spring Data project which aims to provide a familiar and consistent Spring-based programming model for new datastores while retaining store-specific features and capabilities. The Spring Data MongoDB project provides integration with the MongoDB document database. Key functional areas of Spring Data MongoDB are a POJO centric model for interacting with a MongoDB DBCollection and easily writing a Repository style data access layer.As a Java library, dependencies are managed using Maven, which would indicate a pom.xml file would be present that describes the dependencies and version details. Since the source code is available, if we wanted to identify what version of the Node.js Driver an older version of Spring Data MongoDB (ex: 3.0.9.RELEASE) required we could do the following: Navigate to the appropriate branch/tag on Github Open the pom.xml file Identify what versions of the driver are pinned (&lt;mongo&gt;4.0.6&lt;/mongo&gt; in this case, which is a variable referenced later to identify the appropriate driver version) &lt;dependency&gt; &lt;groupId&gt;org.mongodb&lt;/groupId&gt; &lt;artifactId&gt;mongodb-driver-core&lt;/artifactId&gt; &lt;version&gt;${mongo}&lt;/version&gt; &lt;/dependency&gt; What if my version of the Driver isn’t in the compatibility matrix?The most important thing to understand about Driver versions when it comes to MongoDB is that anything your current Driver was doing successfully while connected to MongoDB X.Y should continue to work correctly while connected to a newer MongoDB Server. This statement should be accurate if your upgrade path is taking you from a single major release to the next highest release (ex: 5.0 to 6.0). Backwards breaking changes that would prevent you from successfully connecting to a MongoDB Server from your current application occur extremely rarely. One example that is worth noting involves the removal of Legacy Opcodes in MongoDB 6.0. If you have a version of a MongoDB Driver that predates the support for MongoDB 3.6 and the OP_MSG opcode, trying to interact with MongoDB 6.0+ Servers via these antiquated drivers will result in only errors being thrown due to unknown opcodes being used.As a general rule of thumb, assuming the only change to your application stack is an upgraded MongoDB Server version: Your application should continue to operate without issue You should plan to upgrade to the latest driver to ensure you have the latest features and fixes You should always test your MongoDB Server upgrades and application compatibility in a non-production environment first prior to upgrading your production environment and application(s)" }, { "title": "Live Migration of Sharded Clusters to MongoDB Atlas could result in <tt>TooManyLogicalSessions</tt> Errors", "url": "/blog/2023/01/12/live-migration-of-sharded-clusters-can-result-in-toomanylogicalsessions/", "categories": "MongoDB", "tags": "mongodb, sharding, diagnostics, troubleshooting", "date": "2023-01-12 15:14:50 -0500", "snippet": " The following is more of a diagnostic journey than anything else, and does not reflect a current issue with MongoDB Atlas.While I was still working as a Technical Services Engineer at MongoDB in ...", "content": " The following is more of a diagnostic journey than anything else, and does not reflect a current issue with MongoDB Atlas.While I was still working as a Technical Services Engineer at MongoDB in 2021 a small number of customers were reporting that their applications would start throwing errors similar to the following after upgrading from MongoDB 3.6 to 4.0: Command failed with error 261: 'cannot add session into the cache' on server xxx.yyy.zzz.com:27017. The full response is { \"ok\" : 0.0, \"errmsg\" : \"cannot add session into the cache\", \"code\" : 261, \"codeName\" : \"TooManyLogicalSessions\" }When this error would occur, no further operations could be run against that shard until the mongod process was restarted. Clusters would not immediately exceed their logical session limit and it could take days or weeks for some clusters to reach this failure condition depending on their level of activity.After much investigation the issue boiled down to a confluence of the following scenarios: A Sharded Cluster was Live Migrated to MongoDB Atlas The original sharded cluster (correctly) had more than 1 chunk associated with the config.system.sessions collection When Live Migrate was finalizing, the config.system.sessions entry was removed from config.collections but only one (of many) chunks were removed from config.chunks… but why?Technical DetailsTo provide causal consistency, MongoDB 3.6 introduced client sessions. The underlying framework used by client sessions to support causal consistency (as well as retryable writes) are server sessions.Per the Driver Sessions Specification, starting with MongoDB 3.6, MongoDB Drivers associate all operations with a server session (with the exception of unacknowledged writes). The logic defined in this spec regarding “How to Check Whether a Deployment Supports Sessions” states that: If the TopologyDescription and connection type indicate that the driver is not connected to any servers, OR is not a direct connection AND is not connected to a data-bearing serverthen a driver must do a server selection for any server whose type is data-bearing. Server selection will either time out or result in a TopologyDescription that includes at least one connected, data-bearing server. Having verified in step 1 that the TopologyDescription includes at least one connected server a driver can now determine whether sessions are supported by inspecting the TopologyType and logicalSessionTimeoutMinutes property.With MongoDB 3.6, the hello command when targeting a sharded cluster will only return the logicalSessionTimeoutMinutes under two conditions: (Starting with MongoDB 3.6.0 via SERVER-31777) When the featureCompatibilityVersion is set to “3.6” AND (Starting with MongoDB 3.6.9 via SERVER-37631) The cluster has a valid system.sessions collectionStarting in MongoDB 4.0, an hello command when targeting a sharded cluster will always return logicalSessionTimeoutMinutes, as the featureCompatibilityVersion test has been removed (via SERVER-32460). The test for a valid system.sessions collections was not included in MongoDB 4.0.As a result, if the cluster contains a “broken” system.sessions collection the following can occur: On MongoDB 3.6, hello doesn’t return logicalSessionTimeoutMinutes which causes the driver to determine that sessions are not supported on this cluster, resulting in logical sessions not being used On MongoDB 4.0, hello always returns logicalSessionTimeoutMinutes, resulting in the driver enabling logical sessions. If a “broken” system.sessions collection exists, the sessions are not persisted/expired properly which can result in cluster failure once the maxSessions threshold (default: 1,000,000) is reached.Screenshot from a tool used to chart FTDC telemetryWhat is the system.sessions collectionThe system.sessions collection stores session records that are available to all members of the deployment.When a user creates a session on a mongod or mongos instance, the record of the session initially exists only in-memory on the instance. Periodically, the instance will sync its cached sessions to the system.sessions collection; at which time, they are visible to all members of the deployment.In a sharded cluster, the system.sessions collection is sharded. When adding a shard to the sharded cluster, if the shard to add already contains its own system.sessions collection, MongoDB drops the new shard’s system.sessions collection during the add process.What is a “broken” system.sessions collectionThe system.sessions collection is expected to be sharded, however in some cases, the system.sessions collection may be mistakenly created on the Config Servers as an unsharded collection. Each sharded node in a cluster expects to be able to write documents to the sessions collection, which is why it is necessary for the sessions collection to be sharded.When the system.sessions collection is “broken” the LogicalSessionCache* threads will emit log messages such as the following:// Primary Shard Logs2021-03-12T19:32:51.551+0000 I CONTROL [LogicalSessionCacheRefresh] Sessions collection is not set up; waiting until next sessions refresh interval: Collection config.system.sessions is not sharded.2021-03-12T19:32:51.556+0000 I CONTROL [LogicalSessionCacheReap] Sessions collection is not set up; waiting until next sessions reap interval: Collection config.system.sessions is not sharded.// Config Server Logs2021-03-12T18:32:31.725+0000 I CONTROL [LogicalSessionCacheRefresh] Failed to create config.system.sessions: Not primary while running findAndModify command on collection config.locks, will try again at the next refresh intervalHow does the system.sessions collection “break” in AtlasAt the time of investigation the working hypothesis was that there was a defect associated with the Live Migration process for Sharded Clusters. When the Live Migration tool was run the following was observed: When the config.system.sessions collection is migrated it is not initially sharded There are, however chunks associated with the config.system.sessions collection Reviewing the oplog for the Config Server replica set shows an entry where the config.system.sessions collection is removed from the config.collections collection along with an entry in the config.chunks collection: { \"ts\" : Timestamp(1616135732, 11), \"t\" : NumberLong(2), \"h\" : NumberLong(\"-2957928371374723467\"), \"v\" : 2, \"op\" : \"d\", \"ns\" : \"config.chunks\", \"ui\" : UUID(\"933eed1e-f9a6-4ad7-93e5-f799e0d41484\"), \"wall\" : ISODate(\"2021-03-19T06:35:32.598Z\"), \"o\" : { \"_id\" : \"config.`system.sessions`-_id_MinKey\" } }{ \"ts\" : Timestamp(1616135732, 12), \"t\" : NumberLong(2), \"h\" : NumberLong(\"7339349496984671905\"), \"v\" : 2, \"op\" : \"d\", \"ns\" : \"config.collections\", \"ui\" : UUID(\"703ea46b-44c6-435c-8dc3-91f9cf287c08\"), \"wall\" : ISODate(\"2021-03-19T06:35:32.607Z\"), \"o\" : { \"_id\" : \"config.`system.sessions`\" } } Based on this observation it appeared that during the live migration’s temporary data/metadata cleanup process (for a sharded cluster), the config.system.sessions collection was being removed from the config.collections collection which makes it appear to the cluster that config.system.sessions is unsharded.The LogicalSessionCacheRefresh thread should automatically recreate the collection as sharded in this case, however as there are still chunks associated with the collection this process failed and was retried indefinitely.Identification &amp; MitigationAny sharded cluster can be tested for an incorrectly (“broken”) configured config.system.sessions collection (caused by the suspected deficiency in Live Migrate or otherwise) by connecting (via the mongo or mongosh shell) and running:db.getSiblingDB('config').system.sessions.stats()['sharded']If the result of the above command is NOT true (either false or blank), performing the following actions on the cluster would address the issue:// Connect to the PRIMARY member of CSRS and ALL Shard PRIMARY members// and run the following commanddb.system.sessions.drop();// Connect to a single mongos configured for your cluster and run the followingdb.getSiblingDB('config').chunks.remove( {ns:'config.system.sessions'})db.adminCommand(\"flushRouterConfig\")Hopefully you’ll never find yourself in a situation such as the one described above, but if you do this guide may be useful for getting your cluster back up and running." }, { "title": "Cruise for a Corpse (Delphine Software International) - 1991", "url": "/blog/2023/01/12/cruise-for-a-corpse/", "categories": "Let's Adventure!", "tags": "adventure, Delphine Software International, CruisE, Erbe Software, Interplay Entertainment, U.S. Gold", "date": "2023-01-12 14:52:45 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Nightshade (Beam Softwar...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Nightshade (Beam Software) - 1992Cruise for a Corpse (Delphine Software International) - 1991→ Hopkins FBI (MP Entertainment) - 1998 Article 18 of 96 in this series.Cruise for a Corpse is designed as a murder investigation. The player assumed the role of Raoul Dusentier, a French police inspector invited to spend some time on Niklos Karaboudjan’s boat. Quickly after arriving, Karaboudjan is murdered, and the investigation begins.The characters on the ship all seem to have their own motives and suspicions. Set over ten and a half hours, Raoul starts his investigation to find out who killed Niklos.As soon as you start playing this game you are presented with a beautifully rendered backgrounds. When you start moving around Raoul moves fluidly, as if he were rotoscoped. You can move Raoul around and interact with the game world by bringing up an action menu whenever the cursor changes from an arrow.Depending on what you’re interacting with you’ll get a different context menu. Seems pretty straightforward right?Certain interactions will give you a close up view of whatever you’ve clicked on. Again, this has all been beautifully drawn. Some close ups will also allow you to click around and interact with elements of whatever it is you’re looking at to learn more about it.Since this game is essentially a murder mystery, you have to go around speaking to the passengers and learning about them, their motives and their relationships. As you find items by searching the ship or uncover new talking points, you can go back and try those dialogue options out on other passengers to see if you learn anything new.Sounds like fun right? Ok … I gotta come clean here. Visually, this game looks great, but once you start playing it you’ll quickly realize it is not fun. I mean at all. Everything in this game is tedious.Most dialogue options are dead ends with most charactersNot only do you have to constantly backtrack every time you talk to someone and uncover more talking points, but if you happen to get lucky enough to find something to pick up, you then have to go ask everyone about that item to see if it advances the story.I hate this fucking clock“Advance the story” comes in the form of the in-game clock popping up to tell you some time has passed. This means a new story point can now be explored, which means go back over the ship again trying to figure out what’s different. Who’s moved to another room? Who’s left a room? Does searching something that was previously empty now have something in it you need?Anyone playing this game today that can solve this puzzle without a walkthrough is my new heroAny puzzles in the game are just item combination puzzles, and they generally don’t make sense. The game uses many references to French and Belgian pop culture … which as a Canadian player went right over my head … so I don’t know if these players would have an easier go here.The doll kinda creeped me outAll I can really promote about this game is the artwork. It really is beautifully drawn, and the overarching story is pretty good - but the game is just so boring to play. Thankfully you don’t have to physically walk to every location as you have a map you can use to quick travel, but this only makes the experience the tiniest bit less frustrating or repetitive.Thank god it’s finally overAfter what feels like an eternity you finally get to the endgame where you have to identify the killer. After doing so the end sequence plays out and you can exit out of this game once and for all, breathing a sigh of relief knowing you never have to revisit it again.The game engine had a lot of promise and could have made some great adventures, but unfortunately Cruise for a Corpse is all we got.Game Information Game Cruise for a Corpse Developer Delphine Software International Publisher Erbe Software, Interplay Entertainment, U.S. Gold Release Date 1991 Systems Amiga, Atari ST, DOS Game Engine CruisE My Playthrough How Long To Beat? 3 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 8 Story (25) 10 Experience (15) 5 Impact (10) 4   39% Gallery" }, { "title": "My 2022 Reading List", "url": "/blog/2023/01/08/my-2022-reading-list/", "categories": "Personal", "tags": "books, audiobooks, reading", "date": "2023-01-08 20:18:16 -0500", "snippet": "I love to read, but I’ve found lately I have less time to actually sit down with a book. As a result I’ve been listening to a lot more audio books through Audible. Since I was able to get through m...", "content": "I love to read, but I’ve found lately I have less time to actually sit down with a book. As a result I’ve been listening to a lot more audio books through Audible. Since I was able to get through multiple books this year I figured I’d throw a quick summary together to cover what I’d “read”.The 4 Disciplines of ExecutionBy: Sean Covey, Chris McChesney, Jim Huling The 4 Disciplines of Execution is a simple, repeatable, and proven formula for executing your most important strategic priorities despite professional distractions. The authors suggest adopting the 4 Discipline. These disciplines are Focus on the Wildly Important; Act on Lead Measures; Keep a Compelling Scoreboard; Create a Cadence of Accountability. Through these disciplines, leaders can produce breakthrough results. These significant improvements require a commitment to these disciplines and effective integration into the wider team.I found this book really insightful when it came to reframing goals and defining them in ways that are easier to measureThis Is How They Tell Me the World EndsBy: Nicole Perlroth This Is How They Tell Me the World Ends (2021) takes a deep dive into the ongoing global cyberweapons arms race. It explains how the unregulated market for destructive weapons began, how nations are buying and using these weapons, and why they represent a threat to our immediate future.This one pulled back the curtain on the impact of zero day exploits as weapons.Sidney Crosby: The Rookie YearBy: Sidney Crosby In this Audible show Crosby describes what it was like trying to live up to the hype, stepping onto NHL ice for the first time, playing with legends like Mario Lemieux, and feeling the weight of a nation throughout his early career.If you’re a hockey fan this is worth the four hours it takes to listen to it. Crosby’s story is pretty interesting.Thinking in BetsBy: Annie Duke Professional poker player Annie Duke explores how we can all become better decision-makers in an uncertain and challenging world. She helps us understand how to disentangle the role of luck and skill in determining outcomes, ultimately helping us make better bets that lead to better outcomes and a better life.Since moving into Product Management I’ve been focusing on more books like this to get my head into the right “space”.The Network: The Battle for the AirwavesBy: Scott Woolley Woolley, a technology and business writer, traces the development of communications technology from the telegraph to the television to the first visions of the Internet. He frames these advances with the story of the complicated friendship between David Sarnoff, a media mogul who rose to the helm of the Radio Corporation of America (RCA), and Edwin Armstrong, prolific inventor who developed, among other game-changing technologies, the first amplifier to enable telegraph signal reception from greater distances.Having previously read “Empires of Light: Edison, Tesla, Westinghouse, and the Race to Electrify the World” I figured I’d find this story about the fight for dominance with early broadcast technology interesting … and I was right ;)The Storm Is Upon Us: How QAnon Became a Movement, Cult, and Conspiracy Theory of EverythingBy: Mike Rothschild On October 5th, 2017, President Trump made a cryptic extemporaneous remark in the State Dining Room. He called this gathering of top-ranking military officials, “the calm before the storm,” and refused to elaborate as journalist and politicos inquired further. But on the infamous message boards of 4chan, elaboration began all on its own. In the days that followed, an anonymous poster spun a yarn inspired by Trump’s remarks that rivalled Tom Clancy and satisfied the deepest desires of MAGA-America. Did any of it come to pass? No. Did that stop people from clinging to every word they were reading, expanding its mythology and promoting the theory for years? No. How did this happen, who are these followers, and how do adherents reconcile their worldview with the America they see around them? Mike Rothschild, a journalist specializing in conspiracy theories, explains all–taking readers from the earliest posts on 4Chan to its embrace by right-wing media, and the game that Donald Trump has played with its followers. As rabid adherents to the theory show no sign of calming—with Baby Boomers especially susceptible to its messaging—families are being torn apart and politicians are starting to openly espouse the ideology in their campaigns. It’s time to figure out what QAnon is, because QAnon explains everything you need to know about American politics and global fear after Trump.It’s hard to not be morbidly curious as to how all this MAGA stuff came to pass.The Filter Bubble: What the Internet is Hiding from YouBy: Eli Pariser We all know the internet is vast. Indeed, it’s a veritable universe of information – an exciting frontier open to all. Or at least that’s what we’re led to believe. In reality, though, our access to this digital cosmos is closely monitored, our every click subtly guided. We think we’re surveying the heavens, but, more often than not, we’re never able to see much farther than our own backyard. How did our view become so limited? Well, internet giants like Google, Facebook and YouTube have created an individualized web for us. By using personalization and filters, such companies ensure that we never get the full picture – that we’re always confined to our own digital bubble.I’ve heard about this book for a while now and never bothered to give it a shot as the premise seems pretty obvious. After giving it a listen I don’t know that I really got a whole lot more out of it than what I already knew going in.Algorithms optimize for engagement, so you end up only being exposed to a subset of content you’re likely to engage with - which filters out a lot.Product Management in PracticeBy: Matt LeMay Product management has become a critical function for modern organizations, from small startups to corporate enterprises. And yet, the day-to-day work of product management remains largely misunderstood. In theory, product managers are high-flying visionaries who build products that people love. In practice, they’re hard-working facilitators who bring clarity and focus to their teams. In this thoroughly revised and expanded edition, Matt LeMay provides real-world guidance for current and aspiring product managers. Updated for the era of remote and hybrid work, this book provides actionable answers to product management’s most persistent and confounding questions, starting with: What exactly am I supposed to do all day?If anyone wants to get into Product Management I’d highly recommend reading/listening to this book. Product management is a much harder role to define than I anticipated and the whole “if you don’t know who’s responsibility something is, it’s probably yours” statement was apt.Mindf*ck: Cambridge Analytica and the Plot to Break AmericaBy: Christopher Wylie Mindf*ck (2019), written by a whistleblower, tells the story of the largest data crime in history to date. On the eve of the 2016 United States presidential election, consulting firm Cambridge Analytica harvested the Facebook data from 87 million people and used it to conduct a mass disinformation campaign. Now, the full story has finally come to light.More Trump and MAGA shit to close out the year. After listening to this it really makes me feel bad for all the folks that bought into the MAGA movement as it seems “manufactured” by Bannon and Cambridge Analytica. Real people, their lives and families are being affected by getting caught up in this perpetual cycle of outrage …" }, { "title": "Nightshade (Beam Software) - 1992", "url": "/blog/2022/12/31/nightshade/", "categories": "Let's Adventure!", "tags": "adventure, Beam Software, Ultra Games", "date": "2022-12-31 11:56:32 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Wizard and the Princess ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Wizard and the Princess (On-Line Systems) - 1980Nightshade (Beam Software) - 1992→ Cruise for a Corpse (Delphine Software International) - 1991 Article 17 of 96 in this series.Nightshade, fully titled Nightshade Part 1: The Claws of Sutekh onscreen, is an action-adventure video game released in 1992 for the Nintendo Entertainment System. It was developed by Beam Software and published by Ultra Games. The game was meant to be the first part in a series, but no sequels were ever made; however, it served as the basis for Beam Software’s Super NES video game adaptation of Shadowrun. Though it’s not covered in this series, I’ve reviewed Shadowrun previously.Cool … a screwdriver …Your goal in Nightshade is to become a hero. You start off in the sewers under Metro City having been captured by Sutekh, who has taken over the city’s various crime factions and merged them all into one (under his control). You find yourself tied to a chair in the sewer with a bomb about the go off. Sutekh monologues for a moment then leaves, leaving you to try and escape.Once you do you go about your adventure, which involves collecting items and fighting off some baddies.A good deed is its own reward … but a wad of cash is a BETTER rewardAs you perform good deeds (such as saving citizens) or beating up bosses, your popularity will grow. Other than opening up new dialog options with certain NPCs I don’t know that this really has a huge impact on how you progress through the game.Enemy encounters give you direct control over Nightshade, allowing you to punch, kick and jump. Since you have limited health and no way to heal during a battle, if you get knocked around too quickly you’ll likely die .. so save often! The battles are actually pretty challenging and I found playing this game using an emulator made it a much less frustrating experience.Speaking of dying, I actually found the system they use in this game to continue after dying to be pretty innovative. You essentially have 3 “continues”, but in order to use them Nightshade needs to escape from a death trap that Sutekh has placed him in. These are overly elaborate and cartoony (like something out of the original Batman TV Series). After escaping the death trap you’re back in the sewers where the game started, but seeing as the game world is extremely small it doesn’t take too long to get back to where you were.The previous hero of Metro City was Vortex, who’s lair you’ll eventually find. There you can use a healing pod to recover your health a fixed number of times to help get you through the game. Since you don’t heal after a fight automatically you’ll find yourself going back to the lair often as you progress through the game.Be a hero they said! What’s the worst that could happen …If you’re wondering why Vortex doesn’t just kick Sutekh’s ass himself, well, once you go looking for the Rat King (one of the 5 crime bosses) you’ll find out.Each crime boss holds a scarab, which you’ll need to collect in order to open the path to the final encounter with Sutekh. I remember playing this on the original console back in the day and finding these boss battles extremely frustrating and difficult. I mean … REALLY difficult. Even playing today with an emulator and quick saves I found myself dying a lot.To get through some of these fights I found myself turning the emulation speed down to 50%. This gave me enough time to react to the enemies moves and setup an attack before getting my ass handed to me. Maybe I’m just getting old and my reaction time sucks now, but I had to resort to this more than once throughout this play through …Navigating the world is pretty straightforward, though interacting with it requires dropping down to a menu system from which you choose your options (Pick Up, Operate, Jump, Talk … etc). This can be pretty cumbersome, but seeing as it’s an NES game there really weren’t a lot of options for mapping these interactions to buttons.After collecting all 5 scarabs, you go to the graveyard and use that cumbersome menu system to select each scarab and put it into a slot in the statue. This opens up a door that leads you to a rematch with each of the 5 crime bosses. This really feels like busywork at this point, but after fighting them all again you find Sutekh, beat him and save Metro City.And that’s all she wrote … until next time!I’m likely going to score this game a little higher than it may deserve because I have a bit of a history with it. Back in 2005 I stumbled across Tool-assisted speed running and the TASVideos community. Back in those days I went by the handle Maximus, and one of my first published videos was “NES Nightshade by Maximus in 08:27.67”. Fun fact, a much younger me also wrote the original TAS Movie Editor, but this functionality was subsumed into Bizhawk eventually making the solution unnecessary.Game Information Game Nightshade Developer Beam Software Publisher Ultra Games Release Date January, 1992 Systems NES Game Engine   My Playthrough How Long To Beat? 1.5 hours Version Played NES via Bizhawk Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 13 Story (25) 16 Experience (15) 10 Impact (10) 7   66% Gallery" }, { "title": "Wizard and the Princess (On-Line Systems) - 1980", "url": "/blog/2022/12/30/wizard-and-the-princess/", "categories": "Let's Adventure!", "tags": "adventure, ADL, Sierra On-Line", "date": "2022-12-30 07:34:58 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Hugo’s House of Horrors ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Hugo’s House of Horrors (Gray Design Associates) - 1990Wizard and the Princess (On-Line Systems) - 1980→ Nightshade (Beam Software) - 1992 Article 16 of 96 in this series.Wizard and the Princess is a graphic adventure game written for the Apple II and published in 1980 by On-Line Systems. It was the second title released in the Hi-Res Adventures series after Mystery House (On-Line Systems). While Mystery House used monochrome drawings, Wizard and the Princess added color. Ports for the Atari 8-bit family and Commodore 64 were released in 1982 and 1984 respectively. The 1982 self-booting version for IBM PC compatibles was renamed Adventure in Serenia, and is the version I played.As with other ADL titles from On-Line Systems, you navigate the world by interacting with a text parser. The inputs you can provide are still pretty basic, but seeing as this is one of the first graphic adventure games from the early 80’s this can be forgiven.The color palette is a lot of green, brown and purple. I didn’t really think too much of this until reading through the Wikipedia entry and coming across the port notes that includes the quote “Roberta Williams reputedly referred to the colors on the IBM PC as ‘atrocious’ upon seeing the completed game running for the first time”.I took the above screenshot of the Commodore 64 version (running in VICE) just to compare the IBM PC version … and I can confirm the baby puke palette is an anomaly that really does make this port of the game look like shit.The game isn’t overly complex and can be finished in a short period of time. Some of the puzzles aren’t really intuitive, but the vast majority involve just using an item in the current room and it’ll deduce some bizarre outcome you wouldn’t have necessarily thought of (ex: USE KNIFE in the castle will pick the lock of the door so you can OPEN DOOR successfully).There are plenty of items to pick up along the way, and even a vendor at one point that you can use a coin you found on to buy a specific item from a table full of wares. This game really is all about picking up everything and trying out all items to see what item solves what puzzle (ex: USE VIAL to turn you into a bird … to fly one screen NORTH … you know … because of reasons).Eventually you make your way to the room in the castle with a frog, KISS FROG, reveal the princess, go up a flight of stairs, open a chest, get a pair of shoes (which you have to LOOK SHOES first to get a magic word), then WHOOSH back to the beginning of the game. Don’t forget to TALK to the princess to trigger the endgame or else you’ll just be standing there like a dope.Other than Mystery House that I have extremely fond memories of due to having played it as a kid these other early Sierra (On-Line Systems) games don’t really resonate with me. As a result the iterative improvements between each title, which ultimately set the stage for King’s Quest: Quest for the Crown and beyond, were lost on me.The Digital Antiquarian has a great write up on this game (Part 1, Part 2) that I’d highly recommend if you want to dive a little deeper into this title.Game Information Game Wizard and the Princess Developer On-Line Systems Publisher Online Systems Release Date 1980 Systems Apple II, Apple II Plus, Atari 8-bit, Commodore 64IBM PC, PCjr, FM-7, PC-88, PC-98 Game Engine ADL (Adventure Development Language) My Playthrough How Long To Beat? 26 minutes Version Played DOS via DOSBox-X Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Graphics (10) 4 Sound (10) 1 Plot / Progression (25) 8 Characters / Development (15) 4 Gameplay / Experience (15) 3 Replayability (10) 1 Impact / Impression (10) 1 Bonus / Surprise (5) 1   23% Note that I overhauled my scoring criteria in August of 2024, and the score above is the revised score for this game.See below for the original score based on the original scoring criteria. Atmosphere (20) 8 Story (25) 6 Experience (15) 3 Impact (10) 3   29% Gallery" }, { "title": "Hugo’s House of Horrors (Gray Design Associates) - 1990", "url": "/blog/2022/12/21/hugos-house-of-horrors/", "categories": "Let's Adventure!", "tags": "adventure, Gray Design Associates", "date": "2022-12-21 20:20:48 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Leisure Suit Larry in th...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Leisure Suit Larry in the Land of the Lounge Lizards (Sierra On-Line) - 1987Hugo’s House of Horrors (Gray Design Associates) - 1990→ Wizard and the Princess (On-Line Systems) - 1980 Article 15 of 96 in this series.Hugo’s House of Horrors is a parser-based adventure game designed by independent software developer David P. Gray and published as shareware by Gray Design Associates in 1990. The game follows the character Hugo as he searches for his girlfriend Penelope in a haunted house.This is another text parser driven game. The commands required to interact with the game world are pretty simple (and obvious … usually). Though I’ve been a huge advocate for playing as many of these adventure games as possible using ScummVM, I have to admit that I really did not like the text feedback being rendered using ScummVM’s modal subsystem. As functional as it may be, it’s a bit jarring and just feels out of place.The above screenshot was taken using DOSBox to run the game instead to compare the two interfaces.Aside from basic inventory management puzzles, there are also timing puzzles that involve moving Hugo to the right place in the room quickly enough to not get killed by the enemy(ies) on the current screen. This is most prominent in the basement when you figure out you need to walk between the boulders to advance to the next screen then immediately get killed by the bats. You have to blow a whistle to confuse the bats, but even after you do this if you were still standing in the wrong spot the bats will still kill you.The mummy on the next screen is a similar pain in the ass. You have to move through the room following a certain pattern to get the mummy trapped behind a rock so you can advance to the next screen.What I remember most about this game was that it was my first (pre-internet) experience getting so frustrated with a game I bought the “strategy guide”. This title was released as shareware (kids, ask your parents) - which I ended up buying the full version of … by sending David P Gray money in the mail and he sent a floppy disk back.When I got to the boat in the basement I had zero fucking clue how to plug the hole in the boat. I tried every possible combination I could think of and came up with nothing. I send David P Gray more money so he’d send me a strategy guide (which he did) only to learn I need to USE BUNG to fill the hole.This was likely a “U.K. English” thing as 10 year old Alex did not know what a fucking “bung” was - nor that I should use it on a hole in the bottom of a boat to fill a hole. Sigh.You find Penelope in a subsequent room, escape from this “house of horrors” and get married - the end.The game really isn’t bad for a text-parser game late in the life of text-parser games. David P Gray would go on to release two more titles in the Hugo trilogy (which I’ll get to eventually). You can still buy the games directly from the author from his website. I’d recommend going there just to bask in the glory of a webpage that still feels like it’s from 2001 :D.Game Information Game Hugo’s House of Horrors Developer Gray Design Associates Publisher Gray Design Associates Release Date 1990 Systems DOS, Windows Game Engine Hugo My Playthrough How Long To Beat? 1 hour Version Played DOS via ScummVM for Windows Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 9 Story (25) 10 Experience (15) 7 Impact (10) 3   41% Gallery" }, { "title": "Leisure Suit Larry in the Land of the Lounge Lizards (Sierra On-Line) - 1987", "url": "/blog/2022/12/19/leisure-suit-larry/", "categories": "Let's Adventure!", "tags": "adventure, Sierra Online, SCI, AGI", "date": "2022-12-19 06:25:05 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Ringworld: Revenge of th...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Ringworld: Revenge of the Patriarch (Tsunami Games) - 1992Leisure Suit Larry in the Land of the Lounge Lizards (Sierra On-Line) - 1987→ Hugo’s House of Horrors (Gray Design Associates) - 1990 Article 14 of 96 in this series.Leisure Suit Larry in the Land of the Lounge Lizards is the first installment in Sierra’s Leisure Suit Larry series. The game’s story follows a middle-aged male virgin named Larry Laffer as he desperately tries to “get lucky” in the fictional American city of Lost Wages. Land of the Lounge Lizards establishes several elements which recur in the later Leisure Suit Larry games, including Larry’s campy attire, perpetual bad luck with women, and penchant for double-entendres. The game’s overall plot and basic structure follow that of Softporn Adventure, Sierra’s own 1981 Apple II text adventure (that did not feature Larry as the main character).Unless you were born in the late 70’s or early 80’s you’re gonna need Google to answer these dated questionsThe game was originally released as a text parser game, but was later re-released as a point and click adventure with updated graphics. I chose to play the latter for this review to hopefully capture some … uh … better screenshots :PEverything in this game boils down to toilet humor (sometimes literally), dick and fart jokes and innuendo. Seeing as the game was written by Al Lowe, none of this should come as a surprise, but you may as well know what you’re getting into.I don’t think she likes meYour goal is to get laid. That’s it.Progressing through the game involves meeting women and trying to convince them they like you so they’ll hook up with you. As this is an adventure game you must travel to various locations (via a taxi) to get various items to try and help you accomplish your goal (flowers, chocolates, wine, condoms … etc). Seeing as this is a Sierra game there are numerous ways you can fuck up and die, but the death scenarios are typically pretty funny and add a bit of replayability to the game.Flushing the toilet is apparently deadlyWhen I first played this game I was probably 13 or 14 and the setting, scenario and jokes really appealed to me. Though I’m much older now, replaying this game still makes me chuckle. The jokes are mostly stupid, but you’re getting exactly what you expect and as long as you take it at face value, you’ll have a good time.Game Over … Good on you buddyGame Information Game Leisure Suit Larry in the Land of the Lounge Lizards Developer Sierra On-Line Publisher Sierra On-Line Release Date 1987 Systems DOS, Amiga, Apple II, Atari ST, Apple IIGS, TRS-80,Windows, OSX, Xbox Live Arcade, PlayStation Network, iOS, Android Game Engine Adventure Game Interpreter (AGI)/Sierra’s Creative Interpreter (SCI) My Playthrough How Long To Beat? 3 hours Version Played DOS (SCI Remake) via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 13 Story (25) 13 Experience (15) 9 Impact (10) 5   57% Gallery" }, { "title": "Ringworld: Revenge of the Patriarch (Tsunami Games) - 1992", "url": "/blog/2022/12/19/ringworld/", "categories": "Let's Adventure!", "tags": "adventure, Tsunami Games, TsAGE", "date": "2022-12-19 06:02:55 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Grim Fandango (LucasArts...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Grim Fandango (LucasArts) - 1998Ringworld: Revenge of the Patriarch (Tsunami Games) - 1992→ Leisure Suit Larry in the Land of the Lounge Lizards (Sierra On-Line) - 1987 Article 13 of 96 in this series.Ringworld: Revenge of the Patriarch is a 1993 video game based on Larry Niven’s Ringworld novel series. I was a huge fan of the books as a teenager and was really looking forward to this game when I first played it in the mid ’90s.The story of this game is that the Patriarch of the Kzinti empire has vowed revenge against the Puppeteer race for their genetic manipulation of the Kzinti. To achieve this, they have created an advanced prototype starship armed with an ancient Slaver weapon capable of destroying planets. The Patriarch first dispatches the ship with the goal of killing the family of the Kzin traitor Speaker-to-Animals, who has taken the name Chmeee. Once done, they will then seek out the home world of the Puppeteers and destroy it. The human Quinn is also travelling to meet with Chmeee to help find Louis Wu who has disappeared. Together, Quinn and Chmeee must travel to Ringworld to find Louis Wu and stop the Kzinti’s genocidal plot against the Puppeteers.The tie-in with the book is pretty loose, and though they mention some of the original characters (by name only), if you’ve never read the book you’re not going to be missing out on any story elements.Quinn and Chmee steal a ship and try to escape from the Kzinti empire, only to receive a communication from the Hindmost (a Puppeteer) who tells them they need to go to the Ringworld to collect some items in stasis boxes. If they don’t do this their coordinates will be shared with the Kzinti and that’ll be that … so off our heroes go.Character portraits look decentThe story progresses through character interactions, which can include simple decision trees. I don’t know that it really matters which option you choose when given a choice as this game is extremely linear.Once you escape from the Kzinti the engineer that was on board the ship you stole tries to sabotage you, which results in a fun bit of copy protection. The wires need to be arranged in a specific order according the page in the manual the game tells you they’ll be on.Who doesn’t love copy protection?After landing on the Ringworld you need to find the stasis boxes. The first group of natives you encounter you perform a “God Gambit” on to try and get them to do what you want. This involves Quinn engaging in Rishathra with the chief’s daughter (look it up … click that link …. you know you wanna …….). Seeing as I read these books as a teenager that term stuck in my head, so I appreciate that they worked it into the plot :PSomeone’s DTF …Most puzzles in the game are just fetch quests, and aren’t really that hard to complete. There are a couple of puzzles as well but these aren’t overly difficult to solve (such as the stool in the sky house or the final sliding tile puzzle to open the space craft).There are a number of items you collect throughout the game to complete the various fetch quests. These can be reviewed in your inventory at any time, and thankfully don’t involve any item combination puzzles.Once all stasis boxes are collected and you disable the stasis field on the ship in the first area, you solve a couple more item-based puzzles, put a melting down core reactor in a stasis box, fire that off at a Kzinti ship and remotely detonate it to win you freedom. The end!Honestly I look at this game with some rose colored classes due to having fond memories for the book. The game itself isn’t really “fun”, as it’s far too linear and the puzzles aren’t overly challenging.The background music involves short loops and can be annoying at times. The backgrounds and character portraits however are extremely well done for 1992 and the game does stand up visually.If you’re looking for a great science fiction experience go read the books :)The end … until Ringworld 2 that is …Game Information Game Ringworld: Revenge of the Patriarch Developer Tsunami Games Publisher Tsunami Games Release Date 1992 Systems DOS Game Engine TsAGE My Playthrough How Long To Beat? 3 hours Version Played DOS via ScummVM Notes Walkthrough, Manual ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 12 Story (25) 16 Experience (15) 11 Impact (10) 6   64% Gallery" }, { "title": "Grim Fandango (LucasArts) - 1998", "url": "/blog/2022/12/16/grim-fandango/", "categories": "Let's Adventure!", "tags": "adventure, Sierra Online, GrimE", "date": "2022-12-16 06:52:10 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Blue Force (Tsunami Game...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Blue Force (Tsunami Games) - 1993Grim Fandango (LucasArts) - 1998→ Ringworld: Revenge of the Patriarch (Tsunami Games) - 1992 Article 12 of 96 in this series.Grim Fandango is a 1998 adventure game directed by Tim Schafer and developed and published by LucasArts for Microsoft Windows. It is the first adventure game by LucasArts to use 3D computer graphics overlaid on pre-rendered static backgrounds. As with other LucasArts adventure games, the player must converse with characters and examine, collect, and use objects to solve puzzles.Set in the Land of the Dead, through which recently departed souls, represented as calaca-like figures, travel before they reach their final destination. The story follows travel agent Manuel “Manny” Calavera as he attempts to save new arrival Mercedes “Meche” Colomar, a virtuous soul, on her journey. The game combines elements of the Aztec afterlife with film noir style.For a game late in the life of the golden age of point-and-click adventures games the graphics are as good as you’d expect. All characters are 3D models and the 2D backgrounds are beautifully rendered. The visual style is very different in that you’re following dead characters through the land of the dead and everything has a Mexican cultural twist to it. Honestly it looks really cool and is a breath of fresh air from the traditional fantasy settings of a lot of adventure games.As you would expect for a game of this genre the majority of your progress occurs via fetch quests, item combination and cut scenes. This game doesn’t have some of the “moon logic” older games contained (I’m looking at you “Monkey Wrench” puzzle from Monkey Island 2). There are very few items you need to pick up, and looking at the items in your inventory typically gives you enough of a clue to help clarify how/where/when the item should be used. The only exception is the Scythe which you have throughout the game and is used to solve multiple puzzles.Though story is well written, the voice acting is good and the game progresses logically, once huge strike against this game is the controls: Tank Controls to be precise. I fucking hate tank controls! Though you can’t accidentally get yourself killed or fall off anything, the controls are so awkward and it can take forever to properly align yourself to get Manny to look at an object to interact with or an item to pick up.I’m sure from a design point of view this made sense at the time as Manny moves his head to “face” hotspots you can interact with - but it really detracts from the game play after a while.As you progress through the game the save screen slowly reveals the map of the game to indicate your progress. I feel like these types of aesthetic touches really add to the game and really reinforce what great game designers LucasArts had at the time.Interacting with characters is completely menu driven. This feels a little “on rails” as there are a limited number of topics to choose from for each conversation and there are typically no “wrong” answers to anything that carry any negative repercussions. They serve their purpose though and convey tips, next steps and plot points appropriately. Since the voice acting is so well done I didn’t really mind that these interactions seemed a bit wooden and forced.Some of the story elements are actually extremely clever. The whole concept of characters being “sprouted” (killed) makes a lot of sense (in retrospect) as they’re dead to begin with … so how do you kill them off? The souls themselves can suffer death-within-death by being “sprouted”, the result of being shot with “sproutella”-filled darts that cause flowers to grow out through bones, rapidly feeding off the calcium of the soul’s skeleton. This just comes off as extremely metal ;)You eventually get to the final confrontation with Hector LeMans, complete a couple more fetch quests to setup the endgame and rid the world of a very bad dude. The souls of the departed are once again free to receive priority passage to the afterlife (folks that were good during their lives at least …).I was running this game using ScummVM and I stumbled upon Ticket #13139, which lead me down a bit of a debugging rabbit hole. The game’s scripted logic is written in Lua so I went on the hunt for a disassembler to see what the failing logic was doing (see the linked ticket above if you’re curious). This lead me to Bret Mogilefsky’s excellent post on “LUA IN GRIM FANDANGO” I’d also recommend.Grim Fandango doesn’t have a huge amount of replayability, but it is a lot of fun the first time you run through it. If you appreciate a good story though, this is definitely a game worth playing at least once.Game Information Game Grim Fandango Developer LucasArts Publisher LucasArts Release Date October 30, 1998 Systems Windows Game Engine GrimE My Playthrough How Long To Beat? 11 hours Version Played Windows via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 18 Story (25) 22 Experience (15) 13 Impact (10) 8   87% Gallery" }, { "title": "TableCheck: Empowering Restaurants with Best-in-Class Booking Tools Powered by MongoDB", "url": "/blog/2022/12/14/tablecheck-empowering-restaurants-with-best-in-class-booking-tools-powered-by-mongodb/", "categories": "MongoDB", "tags": "ruby, rails, mongodb, orm, odm, customer-success, cross-post", "date": "2022-12-14 14:49:43 -0500", "snippet": " Cross posted from the MongoDB Developer CenterTableCheck is the world’s premiere booking and guest platform. Headquartered in Tokyo, they empower restaurants with tools to elevate their guest exp...", "content": " Cross posted from the MongoDB Developer CenterTableCheck is the world’s premiere booking and guest platform. Headquartered in Tokyo, they empower restaurants with tools to elevate their guest experience and create guests for life with features like booking forms, surveys, marketing automation tools and an ecosystem of powerful solutions for restaurants to take their business forward.Architectural Overview of TableCheckLaunched in 2013, TableCheck began life as a Ruby on Rails monolith. Over time the solution has been expanded to include satellite microservices however one constant that has remained throughout this journey was MongoDB.Originally TableCheck managed their own MongoDB Enterprise clusters, however once MongoDB Atlas became available they migrated their data to a managed replica set running in AWS.According to CEO Johnny Shields, MongoDB was selected initially as the database of choice for TableCheck as it was “love at first sight”. Though MongoDB was a much different solution in 2013, even in the database product’s infancy it fit perfectly with their development workflow and allowed them to work with their data easily and quickly while building out their APIs and application.Ruby on Rails + MongoDBAny developer familiar with Ruby on Rails knows that the ORM layer (via Active Record) was designed to support relational databases. MongoDB’s Mongoid ODM acts as a veritable “drop-in” replacement for existing Active Record adapters so that MongoDB can be used seamlessly with Rails. The CRUD API is familiar to Ruby on Rails developers and makes working with MongoDB extremely easy.When asked if MongoDB and Ruby were a good fit, Johnny Shields replied: “Yes, I’d add the combo of MongoDB + Ruby + Rails + Mongoid is a match made in heaven. Particularly with the Mongoid ORM library, it is easy to get MongoDB data represented in native Ruby data structures, e.g. as nested arrays and objects”.This has allowed TableCheck to ensure MongoDB remains the “golden-source” of data for the entire platform. They currently replicate a subset of data to Elasticsearch for deep multi-field search functionality, however given the rising popularity and utility of Atlas Search this part of the stack may be further simplified.As MongoDB data changes within the TableCheck platform, these changes are broadcast over Apache Kafka via the MongoDB Kafka Connector to enable downstream services to consume it. Several of their microservices are built in Elixir, including a data analytics application. PostgreSQL is being used for these data analytics use cases as the only MongoDB Drivers for Elixir and managed by the community (such as elixir-mongo/mongodb or zookzook/elixir-mongodb-driver), however should an official Driver surface this decision may change.Benefits of the Mongoid ODM for Ruby on Rails DevelopmentThe “killer feature” for new users discovering Ruby on Rails is Active Record Migrations. This feature of Active Record provides a DSL that enables developers to manage their relational database’s schema without having to write a single line of SQL. Because MongoDB is a NoSQL database, migrations and schema management are unnecessary!Johnny Shields shares the following based on his experience working with MongoDB and Ruby on Rails: “You can add or remove data fields without any need to migrate your database. This alone is a “killer-feature” reason to choose MongoDB. You do still need to consider database indexes however, but MongoDB Atlas has a profiler which will monitor for slow queries and auto-suggest if any index is needed.”As the Mongoid ODM supports large portions of the Active Record API, another powerful productivity feature TableCheck was able to leverage is the use of Associations. Cross-collection referenced associations are available, however unlike relational databases embedded associations can be used to simplify the data model.Open Source and Community StrongBoth mongodb/mongoid and mongodb/mongo-ruby-driver are licensed under OSI approved licenses and MongoDB encourages the community to contribute feedback, issues and pull requests!Since 2013, the TableCheck team has contributed nearly 150 PRs to both projects. The majority tend to be quality-of-life improvements and bug fixes related to edge-case combinations of various methods/options. They’ve also helped improve the accuracy of documentation in many places, and have even helped the MongoDB Ruby team setup Github Actions so that it would be easier for outsiders to contribute.With so many contributions under their team’s belt, and clearly able to extend the Driver and ODM to fit any use case the MongoDB team may not have envisioned, when asked if there were any use-cases MongoDB couldn’t satisfy within a Ruby on Rails application the feedback was: “I have not encountered any use case where I’ve felt SQL would be a fundamentally better solution than MongoDB. On the contrary, we have several microservices which we’ve started in SQL and are moving to MongoDB now wherever we can.”The TableCheck team are vocal advocates for things like better changelogs, more discipline in following semantic versioning best practices. These have benefited the community greatly, and Johnny and team continue to advocate for things like adopting static code analysis (ex: via Rubocop) to improve overall code quality and consistency.Overall Thoughts on Working With MongoDB and Ruby on RailsTableCheck has been a long-time user of MongoDB via the Ruby driver and Mongoid ODM, and as a result has experienced some growing pains as the data platform matured. When asked about any challenges his team faced working with MongoDB over the years Johnny replied: “The biggest challenge was that in earlier MongoDB versions (3.x) there were a few random deadlock-type bugs in the server that bit us. These seemed to have gone away in newer versions (4.0+). MongoDB has clearly made an investment in core stability which we have benefitted from first-hand. Early on we were maintaining our own cluster, and from a few years ago we moved to Atlas and MongoDB now does much of the maintenance for us”.We at MongoDB continue to be impressed by the scope and scale of the solutions our users and customers like TableCheck continue to build. Ruby on Rails continues to be a viable framework for enterprise and best-in-class applications, and our team will continue to grow the product to meet the needs of the next generation of Ruby application developers.Johnny presented at MongoDB Day Singapore on November 23, 2022 (view presentation). His talk covered a number of topics, including his experiences working with MongoDB and Ruby." }, { "title": "Efficiently Identifying Duplicates using MongoDB", "url": "/blog/2022/11/29/efficiently-identifying-duplicates-using-mongodb/", "categories": "MongoDB", "tags": "javascript, mongodb, scripting, queries, indexing", "date": "2022-11-29 10:50:52 -0500", "snippet": "Efficiently Identifying Duplicates using MongoDBOne question that comes up time and again on Stack Overflow or the MongoDB Developer Forums is “how can I find duplicate X and get a list of Y that c...", "content": "Efficiently Identifying Duplicates using MongoDBOne question that comes up time and again on Stack Overflow or the MongoDB Developer Forums is “how can I find duplicate X and get a list of Y that contains these duplicates” (ex: “Query to find duplicate users (ip)”).Using MongoDB’s Aggregation Framework this can be done easily.function generate_random_data(size){ var chars = 'abcdefghijklmnopqrstuvwxyz'.split(''); var len = chars.length; var random_data = []; while (size--) { random_data.push(chars[Math.random()*len | 0]); } return random_data.join('');}function setup() { db.foo.drop(); db.foo.insertMany([ { parent_id: 1, user_id: 1, junk: generate_random_data(512) }, { parent_id: 1, user_id: 2, junk: generate_random_data(512) }, { parent_id: 2, user_id: 3, junk: generate_random_data(512) }, { parent_id: 3, user_id: 4, junk: generate_random_data(512) }, { parent_id: 4, user_id: 5, junk: generate_random_data(512) }, { parent_id: 3, user_id: 6, junk: generate_random_data(512) }, { parent_id: 2, user_id: 7, junk: generate_random_data(512) } ]);}setup();Given the above setup our collection will contain 7 documents. If we wanted to identify how many duplicate parent_id values there are and what the associated user_id values are we could do something like the following:db.foo.aggregate([ { $group: { _id: \"$parent_id\", used: { $sum: 1 }, user_ids: { $push: \"$user_id\" } } }, { $match: { used: { $gt: 1 } } }, { $project: { _id: 0, parent_id: \"$_id\", user_ids: \"$user_ids\"} }]);/* ** output **[ { \"parent_id\": 3, \"user_ids\": [ 4, 6 ] }, { \"parent_id\": 1, \"user_ids\": [ 1, 2 ] }, { \"parent_id\": 2, \"user_ids\": [ 3, 7 ] }]*/This will work pretty efficiently for our sample set of 7 documents, but what about millions (or billions)?Reviewing PerformanceBy generating Explain Results for the above operation we can better understand how this operation is performing:db.foo.explain(\"executionStats\").aggregate([ { $group: { _id: \"$parent_id\", used: { $sum: 1 }, user_ids: { $push: \"$user_id\" } } }, { $match: { used: { $gt: 1 } } }, { $project: { _id: 0, parent_id: \"$_id\", user_ids: \"$user_ids\"} }]);/* ** output **\"winningPlan\": { ... \"inputStage\": { \"stage\": \"COLLSCAN\", \"direction\": \"forward\" }},...\"executionStats\": { \"nReturned\": 7, \"totalKeysExamined\": 0, \"totalDocsExamined\": 7,*/According to the documentation we can improve our pipeline’s performance with indexes and document filters.No index was available for use and as a result a full collection scan was required.Adding an IndexWe know only 2 fields from our document are actually being used by the pipeline, so let’s try again using a purpose-built compound index and review the explain plan again:db.foo.createIndex({ parent_id: 1, user_id: 1 });db.foo.explain(\"executionStats\").aggregate([ { $group: { _id: \"$parent_id\", used: { $sum: 1 }, user_ids: { $push: \"$user_id\" } } }, { $match: { used: { $gt: 1 } } }, { $project: { _id: 0, parent_id: \"$_id\", user_ids: \"$user_ids\"} }]);/* ** output **\"winningPlan\": { ... \"inputStage\": { \"stage\": \"COLLSCAN\", \"direction\": \"forward\" }},...\"executionStats\": { \"nReturned\": 7, \"totalKeysExamined\": 0, \"totalDocsExamined\": 7,*/Even with what appears to be an ideal index a collection scan is being performed. What gives? Oh right …. even if following “ESR Guidance” for creating optimal indexes, an unfiltered $group must scan the entire collection anyway and wouldn’t benefit directly from an index ….. or would it?Adding a $sort before the $groupHaving a $sort stage prior to the $group will allow the pipeline take advantage of the index to group a sorted set.db.foo.explain(\"executionStats\").aggregate([ { $sort: { parent_id: 1 } }, { $group: { _id: \"$parent_id\", used: { $sum: 1 }, user_ids: { $push: \"$user_id\" } } }, { $match: { used: { $gt: 1 } } }, { $project: { _id: 0, parent_id: \"$_id\", user_ids: \"$user_ids\"} }]);/* ** output **\"winningPlan\": { ... \"inputStage\": { \"stage\": \"IXSCAN\", \"keyPattern\": { \"parent_id\": 1, \"user_id\": 1 }, ...\"executionStats\": { \"nReturned\": 7, \"totalKeysExamined\": 7, \"totalDocsExamined\": 0,*/The explain plan for the above operation shows not only that an index was used, but the entire operation was a covered query.ConclusionNow that we can identify duplicates further processing can be done with the results as needed. For example assume we wanted to remove all documents with a duplicate parent_id and only keep the first:db.foo.aggregate([ { $sort: { parent_id: 1 } }, { $group: { _id: \"$parent_id\", used: { $sum: 1 }, user_ids: { $push: \"$user_id\" } } }, { $match: { used: { $gt: 1 } } }, { $project: { _id: 0, parent_id: \"$_id\", user_ids: \"$user_ids\"} }]).forEach((d) =&gt; db.foo.deleteMany({ user_id: { $in: d.user_ids.slice(1, d.user_ids.length) } }));The above is taking the results of the aggregation pipeline and applying the following deleteMany command to each: (d) =&gt; db.foo.deleteMany({ user_id: { $in: d.user_ids.slice(1, d.user_ids.length) } }).Note this could be further optimized for larger delete workloads by instead writing all duplicate user_id values to a single array and deleting those all at once:var toDelete = [];db.foo.aggregate([ { $sort: { parent_id: 1 } }, { $group: { _id: \"$parent_id\", used: { $sum: 1 }, user_ids: { $push: \"$user_id\" } } }, { $match: { used: { $gt: 1 } } }, { $project: { _id: 0, parent_id: \"$_id\", user_ids: \"$user_ids\"} }]).forEach((d) =&gt; toDelete.push(d.user_ids.slice(1, d.user_ids.length)));db.foo.deleteMany({ user_id: { $in: toDelete.flat() } }); Be very careful whenever batch removing data and test in a lower environment first!Hopefully you found this helpful. If you did, feel free to drop a comment below ;)" }, { "title": "Just Finished - Earthbound", "url": "/blog/2022/11/22/just-finished-earthbound/", "categories": "Gaming, Just Finished", "tags": "jrpg", "date": "2022-11-22 06:48:37 -0500", "snippet": "When I was really getting into 16-bit JRPGs in the early to mid 90’s, Earthbound was actually one of the first games I ended up owning. Strangely enough what I remember most about it was the oversi...", "content": "When I was really getting into 16-bit JRPGs in the early to mid 90’s, Earthbound was actually one of the first games I ended up owning. Strangely enough what I remember most about it was the oversized box I couldn’t bring myself to get rid of, but couldn’t seem to find a place to put either.EarthBound takes place in the 1990s, several years after the events of Mother, in the fictional country of Eagleland (a parody of the United States). The player starts as a young boy named Ness as he investigates a nearby meteorite crash with his neighbor, Pokey to find his neighbor’s brother Picky. They find that an alien force, Giygas, has enveloped and consumed the world in hatred and consequently turned animals, humans, and objects into malicious creatures. A small, bee-like creature from the future named Buzz-Buzz instructs Ness to collect melodies in a Sound Stone from eight Sanctuaries to preemptively stop the force, but is killed shortly thereafter when Pokey and Picky’s mother mistakes him for a pest. On his journey to visit the sanctuaries, Ness visits the cultists of Happy Happy Village, where he saves Paula, and the zombie-infested Threed, where the two of them fall prey to a trap. After Paula telepathically instructs Jeff in a Winters boarding school to rescue them, they continue to Saturn Valley, a village filled with a species of creatures called Mr. Saturn, the city of Fourside, and the seaside resort Summers. Meanwhile, Poo, the prince of Dalaam, undergoes training called “Mu Training” before joining the party as well.Like most (J)RPGs of the time, interaction with the game world is mostly menu driven. When you want to interact with a character, object or use an item you have to bring up a menu and select the appropriate entry. You can access the talk/search option quickly by pressing a different button on your controller, but it’s still just picking a menu entry for you.As you explore the world you’ll see enemies on screen that will rush at you and trigger an encounter. These battles are also menu driver, however unlike most games at the time the backgrounds aren’t static images. “Funky” patterns are pulsating moving around all the time, enhancing the experience. I don’t think I’ve actually seen this type of battle presentation since Earthbound, and though it seemed weird at first it actually really suited this game.Battling enemies gives you experience, which allows you to level up. As you gain levels and your characters get stronger you’ll eventually be “too strong” for the enemies in a particular area of the game. When this happens, instead of running towards you, the enemies will run away from you. If you engage them in battle, instead of fighting you’ll just get an instant victory - including the EXP you would have gained by winning a battle.There is an element of strategy as to how you approach an enemy on the overworld. For example, if you surprise an enemy (from behind), the encounter will being with a “green swirl” which gives you the first move as an advantage. If the enemy surprises you however, a “red swirl” will be shown and the enemy will go first in the ensuing battle.You’ll encounter a large cast of characters as you explore the game world, and each will help progress the story forward. You’ll team up with three other characters throughout the game - each of which is proficient with a different skill.Jeff uses items and can fix various broken items you find to turn them into something useful (such as a weapon for himself). Paula has strong offensive magic, and Poo is a good fighter with a mix of offensive and defensive magic.As you explore you’ll find presents all over the place that contain items, weapons and armour. Inventory management is a bit of a pain in the ass in this game as each character has a limited number of inventory slots and once they’re used up you have to choose to drop and item every time a new one is found. There is a service you can call to store and retrieve your items (Escargo Express), however you need to have access to a phone booth for this.The story seems a little simplistic at the beginning, but as you progress it draws you in an keeps you engaged. I’ve replayed this game multiple times over the years and still find myself reading through the dialogue on each replay as the writing is very clever. The characters are all interesting and for a game you’d think was designed for younger kids it’s actually pretty “deep”.Ultimately your next door neighbour ends up being evil and aligns himself with the ultimate evil force, Giygas. You need to travel into your mind, through time and eventually transport your soul into a machine to go fight Pokey, then finally Giygas. Interestingly enough, the final battle isn’t all about wailing on the baddie, but requires to you do a little thinking (and a little praying).If you’ve never played Earthbound (aka. Mother 2) and are a fan of JRPGs from “golden age”, this is definitely one to try!" }, { "title": "MongoDB ORMs, ODMs, and Libraries", "url": "/blog/2022/11/02/mongodb-orms-odms-and-libraries/", "categories": "MongoDB", "tags": "ruby, rails, mongodb, orm, odm, cross-post", "date": "2022-11-02 06:28:40 -0400", "snippet": " Cross posted from the MongoDB Developer CenterThough developers have always been capable of manually writing complex queries to interact with a database, this approach can be tedious and error-pr...", "content": " Cross posted from the MongoDB Developer CenterThough developers have always been capable of manually writing complex queries to interact with a database, this approach can be tedious and error-prone. Object-Relational Mappers (or ORMs) improve the developer experience, as they accomplish multiple meaningful tasks: Facilitating interactions between the database and an application by abstracting away the need to write raw SQL or database query language. Managing serialization/deserialization of data to objects. Enforcement of schema.So, while it’s true that MongoDB offers Drivers with idiomatic APIs and helpers for most  programming languages, sometimes a higher level abstraction is desirable. Developers are used to interacting with data in a more declarative fashion (LINQ for C#, ActiveRecord for Ruby, etc.) and an ORM facilitates code maintainability and reuse by allowing developers to interact with data as objects.MongoDB provides a number of ORM-like libraries, and our community and partners have as well! These are sometimes referred to as ODMs (Object Document Mappers), as MongoDB is not a relational database management system. However, they exist to solve the same problem as ORMs do and the terminology can be used interchangeably.The following are some examples of the best MongoDB ORM or ODM libraries for a number of programming languages, including Ruby, Python, Java, Node.js, and PHP.BeanieBeanie is an Asynchronous Python object-document mapper (ODM) for MongoDB, based on Motor (an asynchronous MongoDB driver) and Pydantic.When using Beanie, each database collection has a corresponding document that is used to interact with that collection. In addition to retrieving data, Beanie allows you to add, update, and delete documents from the collection. Beanie saves you time by removing boilerplate code, and it helps you focus on the parts of your app that actually matter.See the Beanie documentation for more information.DoctrineDoctrine is a PHP MongoDB ORM, even though it’s referred to as an ODM. This library provides PHP object mapping functionality and transparent persistence for PHP objects to MongoDB, as well as a mechanism to map embedded or referenced documents. It can also create references between PHP documents in different databases and work with GridFS buckets.See the Doctrine MongoDB ODM documentation for more information.MongoidMost Ruby-based applications are built using the Ruby on Rails framework. As a result, Rails’ Active Record implementation, conventions, CRUD API, and callback mechanisms are second nature to Ruby developers. So, as far as a MongoDB ORM for Ruby, the Mongoid ODM provides API parity wherever possible to ensure developers working with a Rails application and using MongoDB can do so using methods and mechanics they’re already familiar with.See the Mongoid documentation for more information.MongooseIf you’re seeking an ORM for NodeJS and MongoDB, look no further than Mongoose. This Node.js-based Object Data Modeling (ODM) library for MongoDB is akin to an Object Relational Mapper (ORM) such as SQLAlchemy. The problem that Mongoose aims to solve is allowing developers to enforce a specific schema at the application layer. In addition to enforcing a schema, Mongoose also offers a variety of hooks, model validation, and other features aimed at making it easier to work with MongoDB.See the Mongoose documentation or MongoDB &amp; Mongoose: Compatibility and Comparison for more information.MongoEngineMongoEngine is a Python ORM for MongoDB. Branded as a Document-Object Mapper, it uses a simple declarative API, similar to the Django ORM.It was first released in 2015 as an open-source project, and the current version is built on top of PyMongo, the official Python Driver by MongoDB.See the MongoEngine documentation for more information.PrismaPrisma is a new kind of ORM for Node.js and Typescript that fundamentally differs from traditional ORMs. With Prisma, you define your models in the declarative Prisma schema, which serves as the single source of truth for your database schema and the models in your programming language. The Prisma Client will read and write data to your database in a type-safe manner, without the overhead of managing complex model instances. This makes the process of querying data a lot more natural as well as more predictable since Prisma Client always returns plain JavaScript objects.Support for MongoDB was one of the most requested features since the initial release of the Prisma ORM, and was added in version 3.12.See Prisma &amp; MongoDB for more information.Spring Data MongoDBIf you’re seeking a Java ORM for MongoDB, Spring Data for MongoDB is the most popular choice for Java developers. The Spring Data project provides a familiar and consistent Spring-based programming model for new datastores while retaining store-specific features and capabilities.Key functional areas of Spring Data MongoDB that Java developers will benefit from are a POJO centric model for interacting with a MongoDB DBCollection and easily writing a repository-style data access layer.See the Spring Data MongoDB documentation or the Spring Boot Integration with MongoDB Tutorial for more information.Go Build Something Awesome!Though not an exhaustive list of the available MongoDB ORM and ODM libraries available right now, the entries above should allow you to get started using MongoDB in your language of choice more naturally and efficiently.If you’re looking for assistance or have any feedback don’t hesitate to engage on our Community Forums." }, { "title": "From Engineering to Product Management", "url": "/blog/2022/10/06/from-engineering-to-product-management/", "categories": "Personal", "tags": "mongodb, ruby, product management", "date": "2022-10-06 03:13:27 -0400", "snippet": "I’ve spent my entire professional career as an engineering IC either churning out code, working on architectural challenges or helping to lead engineering teams (while still churning out code). Whe...", "content": "I’ve spent my entire professional career as an engineering IC either churning out code, working on architectural challenges or helping to lead engineering teams (while still churning out code). When I recently moved into a Product Management role at MongoDB I brought a significant amount of technical expertise about MongoDB’s products with me, however I’ve been unsure as to how much of an advantage this really was.Moving into Product Management is a career trajectory change, and though having an engineering background and product experience should be an advantage, it can also be a disadvantage if you bring along biases, unfounded expectations and a general sense of “knowing more about something based on only your experience with it”.Product Management is not only about knowing how the product works, but also about understanding the users, community, developers, competitive landscape, associated technologies, potential partners, existing customers, potential customers, the product’s legacy and history (warts and all) and how to enable all these different groups to succeed. I’ve also been reading Cracking the PM Career lately, which is helping fill in some gaps in my knowledge of this role.This post is meant to capture some of the lessons learned in the first 90 days on the job and hopefully help anyone else considering a similar career change.Don’t try to hit the ground runningHaving used MongoDB for nearly a decade, and having worked as a Technical Services Engineer for 3 years I understood the product suite quite well. This included the MongoDB Server, MongoDB Atlas, Atlas Realm and the ins and out of core concepts such as replication, sharding, query performance, query tuning, indexing, the aggregation pipeline, etc. I’ve also been building software using the MongoDB Ruby driver for a number of years, so taking over as the Product Manager for the driver seemed like a great fit.The problem however is that having this experience resulted in bias. My experience with the product is not necessarily our users/customers experience with the product. I put a lot of pressure on myself to start delivering quickly as I should “know how things work”, but new PMs on a team need to go through a discovery process - which I also ended up doing and found extremely valuable.I went through a process similar to the Discover -&gt; Define -&gt; Design -&gt; Develop -&gt; Deliver -&gt; Debrief -&gt; (REPEAT) cycle, which involved doing a bunch of user-focused research to try and better understand the current state of our users exposure to my product during their developer journey. I know how to use the Ruby driver - I know where to look for documentation - I know where the code is … but is that true for all of our users? How easy is it to get started? What do they find when they search for tutorials and getting started resources? Does the information they find actually help them?The answers to the above questions would help inform a strategy that we can plan to execute against.Understand what your product is and isn’tMongoDB Drivers (as a product) are a little different than traditional products. They exist to act as an interface between a developer and their database, but should largely be “out of the way”. A good driver will conform to the associated programming language’s conventions and best practices. A Ruby programmer working with the MongoDB Ruby driver shouldn’t have to adapt their codebase to work with our tools - our tools should fit neatly into their codebase.As most Ruby applications are Ruby on Rails applications, the Mongoid ODM should allow developers to interact with their data using similar APIs that any other Active Record provider they choose for the application would expose.I love the Ruby driver. I write most of my test cases and scenarios using the Ruby driver … but most of our users write Rails applications and would be using the Mongoid ODM as a result. Understanding how users interact with the product, what tools and frameworks they use alongside the product and what types of issues they face really helps to highlight where I should be focusing our efforts.Outcomes over outputDeveloping a strategy is a lot harder than I expected. I’m used to measuring progress (and success) based on basic telemetry. How many cases did I take? How many cases did I close? How many tickets did I take? How many user stories did I complete? Did I push my code to prod?The world of Product Management moves a lot slower - and for good reason. User outreach, user research, discovery, planning, interviews, writing specification, writing content, writing documentation - these all take time. Measuring the impact of the work being done also takes time, and this can be particularly challenging if you’re used to a faster feedback loop.Learn to measure incremental progress towards larger goals!Imposter syndrome comes for us allHaving been an engineer at MongoDB for a number of years, I assumed I’d understand how to succeed at my new role quickly. When it didn’t feel like that was the case it can be hard to reach out for help - but we’re all human and your colleagues want you to succeed as much as you do ;)Initially I found myself slipping back into doing more engineering-focused tasks as that’s what I was most comfortable with. Because I wasn’t sure how to measure success in a Product Management capacity, this felt “safe” and also allowed me to feel productive. This only happened periodically during the first few weeks of ramping up into the new role as I was comfortable enough to reach out to colleagues and ask questions and get advice.I’ve always felt like a good engineer, but I didn’t feel like a good PM right away (still don’t … but working on it).Learn where to leverage past experienceUnderstanding the product and having engineering experience is beneficial to a Product Manager as it allows you to more realistically estimate the complexity of a given task/feature/epic. Being able to talk to your developers intelligently about the contents of the current sprint, offering useful feedback during stand-ups, planning and code reviews helps establish clout.Don’t assign yourself arbitrary engineering tasks though. That’s not what you’re there for. I fell into this trap initially and would see tickets I could “just deal with”, but that’s not the value of a PM to the team.Currently I’ll take tickets only if they’ll help me understand the product, our users or the community better (such as documentation improvement or defect validation).Focus on the roleBeing a PM is a new experience for me. I’ve never done this job before and I don’t claim to be an expert at it. There is a lot to learn still and in order to do that time needs to be allocated to continuing education.I initially tried to “pick things up as I went”, but without proper focus and dedication you can get caught up in the whirlwind of the day. I block off an hour a day to just read, during which time I either focus on a particular book, scope documents, specifications, tickets, process documents, blog posts or other targeted content that will help me advance my understanding of the role.That’s it for now. If you’ve recently moved from Engineering to Product, or have a similar experience you want to share feel free to drop me a line and let me know how your journey is progressing." }, { "title": "Bug Hunting with the MongoDB Haskell Community", "url": "/blog/2022/09/21/bug-hunting-with-the-mongodb-haskell-community/", "categories": "MongoDB", "tags": "drivers, haskell, mongodb", "date": "2022-09-21 06:21:02 -0400", "snippet": "MongoDB currently maintains 10 programming language Drivers in-house, including a Ruby driver for which I’m presently the Product Manager. Additionally we also have a library of community maintaine...", "content": "MongoDB currently maintains 10 programming language Drivers in-house, including a Ruby driver for which I’m presently the Product Manager. Additionally we also have a library of community maintained drivers, built using the MongoDB Driver specifications our engineers maintain and publish.It was brought to my attention that one of these community drivers - the Haskell driver - was experiencing an issue whereby queries were no longer returning results from the MongoDB Atlas clusters their applications were connected to.Though I’ve never worked with Haskell, before joining the team I worked in Technical Services providing support for customers experiencing problems with their applications via our drivers. This seemed like an interesting problem we could hopefully solve for our developer community so I’d like to share the diagnostic journey that lead us to the issue and ultimately enabled a resolution.OverviewWhen Adrien first reported issue #131 on GitHub the initial assessment was that their application could successfully connect to a MongoDB Atlas cluster and write new content, but when trying to read those results back the result set was always empty. This had happened suddenly causing existing applications and workloads to break however no new code had been introduced which could potentially be the culprit.As I’m unfamiliar with Haskell Adrien kindly provided a Dockerized reproduction I could use to test this issue against my own Atlas clusters. This reproduction would write 3 documents to a collection, then try to read 3 documents back. To begin testing I setup an M10 cluster and ran the tests a few times.Failures: src/Lib.hs:101:33: 1) Reads Ensures reads work expected: 3 but got: 9Each time I ran the test it would fail, but the number of documents in the “Ensures reads work” that were received kept increasing. The cluster I was testing on was a dedicated cluster, however MongoDB Atlas also offers free and shared tier clusters so for completeness of testing I configured an M0 next and re-ran the tests.Failures: src/Lib.hs:101:33: 1) Reads Ensures reads work expected: 3 but got: 0No matter how many times I ran the tests against my M0 (also tested M2 and M5) the results were always 0.Just to make sure this wasn’t a larger issue I tested with a script that uses the Ruby driver against an M0 cluster to verify the behavior didn’t reproduce there:require 'bundler/inline'gemfile do source 'https://rubygems.org' gem 'mongo'endclient = Mongo::Client.new('mongodb+srv://....mongodb.net/test')collection = client[:foo]collection.dropputs \"Found #{collection.find.to_a.length} documents\"# =&gt; Found 0 documentscollection.insert_many([].fill({ \"bar\": \"baz\" },0,3))puts \"Found #{collection.find.to_a.length} documents\"# =&gt; Found 3 documentsThe script would produce the expected result, which further pointed to a potential issue on the Atlas side that was specific to free and shared tier clusters.MongoDB Atlas imposes some limitations on free and shared tier clusters, which in some cases are enforced by a proxy layer between the application and the underlying infrastructure backing the cluster.AnalysisNow that the issue was narrowed down, working with a Cloud Operations Engineer to create an isolated M2 cluster in a development environment, we increased the log verbosity for that cluster for QUERY and COMMAND log components.With this information, when we download logs for the node our test is targeting we should be able to get a lot more information as to what was being executed and where it might be failing.// Test #1{\"t\":{\"$date\":\"2022-08-18T11:19:16.985+00:00\"},\"s\":\"D2\", \"c\":\"COMMAND\", \"id\":5578800, \"ctx\":\"conn24194\",\"msg\":\"Deprecated operation requested. The client driver may require an upgrade in order to ensure compatibility with future server versions. For more details see https://dochub.mongodb.org/core/legacy-opcode-compatibility\",\"attr\":{\"op\":\"query\",\"clientInfo\":{\"driver\":{\"name\":\"mongo-go-driver\",\"version\":\"v1.7.2+prerelease\"},\"os\":{\"type\":\"linux\",\"architecture\":\"arm64\"},\"platform\":\"go1.18.2\",\"application\":{\"name\":\"Atlas Proxy v20220824.0.0.1660656950\"}}}}{\"t\":{\"$date\":\"2022-08-18T11:19:16.986+00:00\"},\"s\":\"D2\", \"c\":\"QUERY\", \"id\":20914, \"ctx\":\"conn24194\",\"msg\":\"Running query\",\"attr\":{\"query\":\"ns: 62fe1f7d37518e1c32149694_haskell.test123 query: { comment: { AtlasProxyAppName: \\\"\\\", AtlasProxyClientMetadata: {} } } sort: {} projection: {}\"}}{\"t\":{\"$date\":\"2022-08-18T11:19:16.986+00:00\"},\"s\":\"D5\", \"c\":\"QUERY\", \"id\":20917, \"ctx\":\"conn24194\",\"msg\":\"Not caching executor but returning results\",\"attr\":{\"numResults\":0}}Based on log analysis we could not only verify the issue existed, but why it was affecting these operations from the Haskell driver:A deprecated operation was being runMongoDB uses a wire protocol when sending/receiving messages internally and externally (via Drivers). Initially a number of opcodes existed, but starting with MongoDB 5.0 most of these were deprecated in favor of OP_MSG.Prior to MongoDB 3.6 when OP_MSG was introduced to subsume existing opcodes, query operations were executed via OP_QUERY, which the Haskell driver is apparently still using for query execution.Note that though OP_QUERY is deprecated, it would still be supported in the version of MongoDB we were testing (5.0) and as such is not the cause of this problem.The logs confirm no results are being returned by the queryAt the default level, the Database Profiler will only output queries to the mongod logs if they exceed the slow query threshold (slowms) of 100ms. The tests we were running would likely have completed in under 10ms, which prevented anything useful from being logged. {\"t\":{\"$date\":\"2022-08-18T11:19:16.986+00:00\"},\"s\":\"D5\", \"c\":\"QUERY\", \"id\":20917, \"ctx\":\"conn24194\",\"msg\":\"Not caching executor but returning results\",\"attr\":{\"numResults\":0}}Once the log level was increased it was apparent that the operation in question was being executed, but was not returning any results.The logs highlight an issue with the query itselfWith the log level increased however the QUERY component logs showed clearly that not only were no results being returned, but the query shape that was being sent to the server didn’t match what we expected: {\"t\":{\"$date\":\"2022-08-18T11:19:16.986+00:00\"},\"s\":\"D2\", \"c\":\"QUERY\", \"id\":20914, \"ctx\":\"conn24194\",\"msg\":\"Running query\",\"attr\":{\"query\":\"ns: 62fe1f7d37518e1c32149694_haskell.test123 query: { comment: { AtlasProxyAppName: \\\"\\\", AtlasProxyClientMetadata: {} } } sort: {} projection: {}\"}}It appeared that the query’s filter - which we expected to be empty - was in fact filtering for comment: { AtlasProxyAppName: \"\", AtlasProxyClientMetadata: {} }. Since none of the sample documents that were being created as part of this test matched these criteria, the query returned 0 results.FindingsFrom our log analysis it would appear our operations were being rewritten to append a filter criteria for a comment field with a value of { AtlasProxyAppName: \"\", AtlasProxyClientMetadata: {} }. As comment has a specific meaning within the context of MongoDB commands it was becoming apparent what the issue was and where it may have originated.Starting with MongoDB 4.4, a comment option was added to all database commands (see SERVER-29794).This was not be confused with the $comment meta operator that has been available since MongoDB 2.0 for propagating metadata to query logs.The Atlas team introduced a feature (released 2022-06-22) that would utilize these comments to improve the currentOp output in free/shared clusters. As all “official” MongoDB Drivers communicate with modern MongoDB clusters using OP_MSG, when this feature was being tested there were no issues.Unfortunately, drivers that still use OP_QUERY to make queries were negatively impacted as a result of the metadata comment injection occurring in the filter instead of one level above as is the case for OP_MSG.Now that the issue could be verified, additional logic was introduced to use the $comment meta operator if an OP_QUERY was detected instead of improperly applying a comment option.OutcomeWith the assistance of the Haskell community we were able to identify and address a deficiency in the free and shared tiers of MongoDB Atlas. The fix for this was released in version 8ed75a4810@v20220914 on 2022-09-21, and any Haskell application using the community maintained Haskell driver should have started working as expected without the need for additional intervention.We truly appreciate the investment our developer communities make when they put time and effort into building something as powerful as a MongoDB driver and want to ensure we do what we can to offer assistance if possible. Cross posted to DEV" }, { "title": "Solving a mongorestore failure due to 'Values in v:2 index key pattern cannot be of type object.'", "url": "/blog/2022/09/15/createindex-error-values-in-v-2-index-key-pattern-cannot-be-of-type-object/", "categories": "MongoDB", "tags": "mongodb, indexing, mongorestore, mongodump", "date": "2022-09-15 06:47:26 -0400", "snippet": "Starting with MongoDB 4.4, the MongoDB Database Tools are now released separately from the MongoDB Server and use their own versioning, with an initial version of 100.0.0. Previously, these tools w...", "content": "Starting with MongoDB 4.4, the MongoDB Database Tools are now released separately from the MongoDB Server and use their own versioning, with an initial version of 100.0.0. Previously, these tools were released alongside the MongoDB Server and used matching versioning.If you use mongodump to backup your data using these newer versions, if you try to use an older (pre-4.4) version of mongorestore you’ll likely get an error such as the following:$(m bin 4.0.28-ent)/mongorestore2022-09-15T07:09:28.775-0400\tusing default 'dump' directory2022-09-15T07:09:28.775-0400\tpreparing collections to restore from2022-09-15T07:09:28.777-0400\treading metadata for test.foo from dump/test/foo.metadata.json2022-09-15T07:09:28.777-0400\trestoring test.foo from dump/test/foo.bson2022-09-15T07:09:28.780-0400\trestoring indexes for collection test.foo from metadata2022-09-15T07:09:28.780-0400\tFailed: test.foo: error creating indexes for test.foo: createIndex error: Error in specification { ns: \"test.foo\", name: \"baz_1\", key: { baz: { $numberDouble: \"1.0\" } } } :: caused by :: Values in v:2 index key pattern cannot be of type object. Only numbers &gt; 0, numbers &lt; 0, and strings are allowed.In the example above we used the m version manager to try and restore a backup taken using a mongodump from a newer version of the database tools. If you see this error, it just means you need to use a newer version of mongorestore.To verify what version of the tools you’re using, run them with a --version parameter:$ $(m bin 4.0.28-ent)/mongorestore --versionmongorestore version: r4.0.28git version: af1a9dc12adcfa83cc19571cb3faba26eeddac92Go version: go1.11.13 os: darwin arch: amd64 compiler: gc$ mongorestore --versionmongorestore version: 100.6.0git version: 1d46e6e7021f2f5668763dba624e34bb39208cb0Go version: go1.17.10 os: darwin arch: amd64 compiler: gc" }, { "title": "Performance Profiling a Mongoid Issue Using AppProfiler", "url": "/blog/2022/09/09/performance-profiling-a-mongoid-issue-using-appprofiler/", "categories": "Ruby", "tags": "mongoid, ruby, rails, mongodb", "date": "2022-09-09 06:41:01 -0400", "snippet": "In MONGOID-4889 the claim was made that assignment of a large number of embedded documents to an instance of a model will take increasingly longer as the size of the list of documents to embed grow...", "content": "In MONGOID-4889 the claim was made that assignment of a large number of embedded documents to an instance of a model will take increasingly longer as the size of the list of documents to embed grows. This is notable as no database operations are being performed during this process, which points to potential issues with the library itself. The ticket author identified Mongoid::Association::Embedded::EmbedsMany::Proxy#object_already_related? as the likely source of this performance issue, however I wanted to see how best to validate this.While doing research on Ruby profiling I found Shopify’s blog post on “How to Fix Slow Code in Ruby”. Though the entire post was extremely insightful, it lead me to Shopify’s app_profiler library, which can be used to automatically profile code and redirect the output to a local instance of speedscope. Having worked previously with Flame Graphs of CPU stack traces collected using perf.Adapting the sample code in the Jira ticket results in the following:require 'bundler/inline'gemfile do source 'https://rubygems.org' gem 'mongoid' gem 'app_profiler'endclass Foo include Mongoid::Document embeds_many :barsendclass Bar include Mongoid::Document embedded_in :fooend# AppProfiler forms the output filename using Time.zone.nowrequire 'active_support/core_ext/time/zones'Time.zone = 'Pacific Time (US &amp; Canada)'AppProfiler.root = Pathname.new(__dir__)AppProfiler.profile_root = Pathname.new(__dir__)arr = Array.new(2000) { Bar.new }report = AppProfiler.run(mode: :cpu) do Foo.new.bars = arrendreport.viewRunning the above code doesn’t require a MongoDB connection string or an active cluster, but will attempt to embed 2000 new instances of Bar into the newly created instance of Foo. Once completed, the following chart is produced that reinforces the initial suspicion that the calls to object_already_related? are a likely candidate for further investigation.AppProfiler was designed to be injected into a Rails application, however as can be seen above, it can easily be adapted to work on a standalone Ruby script as well. Cross posted to DEV" }, { "title": "Why Use MongoDB with Ruby", "url": "/blog/2022/08/18/why-use-mongodb-with-ruby/", "categories": "MongoDB", "tags": "ruby, rails, mongodb, cross-post", "date": "2022-08-18 11:23:27 -0400", "snippet": " Cross posted from the MongoDB Developer CenterBefore discovering Ruby and Ruby on Rails I was a .NET developer. At that time I’d make ad-hoc changes to my development database, export my table/fu...", "content": " Cross posted from the MongoDB Developer CenterBefore discovering Ruby and Ruby on Rails I was a .NET developer. At that time I’d make ad-hoc changes to my development database, export my table/function/stored procedure/view definitions to text files and check them into source control with any code changes. Using diff functionality I’d compare the schema changes that the DBAs needed to apply to production and we’d script that out separately.I’m sure better tools existed (and I eventually started using some of RedGate’s tools), but I was looking for a change. At that time, the real magic of Ruby on Rails for me was the Active Record Migrations which made working with my database fit with my programming workflow. Schema management became less of a chore and there were rake tasks for anything I needed (applying migrations, rolling back changes, seeding a test database).Schema versioning and management with Rails was leaps and bounds better than what I was used to, and I didn’t think this could get any better - but then I found MongoDB.When working with MongoDB there’s no need to CREATE TABLE foo (id integer, bar varchar(255), ...); if a collection (or associated database) doesn’t exist, inserting a new document will automatically create it for you. This means Active Record migrations are no longer needed as this level of schema change management was no longer necessary.Having the flexibility to define my data model directly within the code without needing to resort to the intermediary management that Active Record had facilitated just sort of made sense to me. I could now persist object state to my database directly, embed related model details and easily form queries around these structures to quickly retrieve my data.Flexible SchemaData in MongoDB has a flexible schema as collections do not enforce a strict document structure or schema by default. This flexibility gives you data-modeling choices to match your application and its performance requirements, which aligns perfectly with Ruby’s focus on simplicity and productivity.Let’s Try It OutWe can easily demonstrate how to quickly get started using the MongoDB Ruby Driver using the following simple Ruby script that will connect to a cluster, insert a document and read it back:require 'bundler/inline'gemfile do source 'https://rubygems.org' gem 'mongo'endclient = Mongo::Client.new('mongodb+srv://username:password@mycluster.mongodb.net/test')collection = client[:foo]collection.insert_one({ bar: \"baz\" })puts collection.find.first# =&gt; {\"_id\"=&gt;BSON::ObjectId('62d83d9dceb023b20aff228a'), \"bar\"=&gt;\"baz\"}When the document above is inserted an _id value of BSON::ObjectId('62d83d9dceb023b20aff228a') is created. All documents must have an _id field, however if not provided a default _id of type ObjectId will be generated. When running the above you will get a different value for _id, or you may choose to explicitly set it to any value you like!Feel free to give the above example a spin using your existing MongoDB cluster or MongoDB Atlas cluster. If you don’t have a MongoDB Atlas cluster, sign up for an always free Free Tier cluster to get started.InstallationThe MongoDB Ruby Driver is hosted at RubyGems, or if you’d like to explore the source code it can be found on GitHub.To simplify the example above we used bundler/inline to provide a single-file solution using Bundler, however the mongo gem can be just as easily added to an existing Gemfile or installed via gem install mongo.Basic CRUD operationsOur sample above demonstrated how to quickly create and read a document. Updating and deleting documents are just as painless as shown below:# set a new field 'counter' to 1collection.update_one({ _id: BSON::ObjectId('62d83d9dceb023b20aff228a')}, :\"$set\" =&gt; { counter: 1 })puts collection.find.first# =&gt; {\"_id\"=&gt;BSON::ObjectId('62d83d9dceb023b20aff228a'), \"bar\"=&gt;\"baz\", \"counter\"=&gt;1}# increment the field 'counter' by onecollection.update_one({ _id: BSON::ObjectId('62d83d9dceb023b20aff228a')}, :\"$inc\" =&gt; { counter: 1 })puts collection.find.first# =&gt; {\"_id\"=&gt;BSON::ObjectId('62d83d9dceb023b20aff228a'), \"bar\"=&gt;\"baz\", \"counter\"=&gt;2}# remove the test documentcollection.delete_one({ _id: BSON::ObjectId('62d83d9dceb023b20aff228a') })Object Document MapperThough all interaction with your Atlas cluster can be done directly using the MongoDB Ruby Driver, most developers prefer a layer of abstraction such as an ORM or ODM. Ruby developers can use the Mongoid ODM to easily model MongoDB collections in their code and simplify interaction using a fluid API akin to Active Record’s Query Interface.The following example adapts the previous example to use Mongoid:require 'bundler/inline'gemfile do source 'https://rubygems.org' gem 'mongoid'endMongoid.configure do |config| config.clients.default = { uri: \"mongodb+srv://username:password@mycluster.mongodb.net/test\" }endclass Foo include Mongoid::Document field :bar, type: String field :counter, type: Integer, default: 1end# create a new instance of 'Foo', which will assign a default value of 1 to the 'counter' fieldfoo = Foo.create bar: \"baz\"puts foo.inspect# =&gt; &lt;Foo _id: 62d84be3ceb023b76a48df90, bar: \"baz\", counter: 1&gt;# interact with the instance variable 'foo' and modify fields programmaticallyfoo.counter += 1# save the instance of the model, persisting changes back to MongoDBfoo.save!puts foo.inspect# =&gt; &lt;Foo _id: 62d84be3ceb023b76a48df90, bar: \"baz\", counter: 2&gt;SummaryWhether you’re using Ruby/Rails to build a script/automation tool, a new web application or even the next Coinbase MongoDB has you covered with both a Driver that simplifies interaction with your data or an ODM that seamlessly integrates your data model with your application code.ConclusionInteracting with your MongoDB data via Ruby - either using the Driver or the ODM - is straightforward, but you can also directly interface with your data from MongoDB Atlas using the built in Data Explorer. Depending on your preferences though, there are options: MongoDB for Visual Studio Code allows you to connect to your MongoDB instance and enables you to interact in a way that fits into your native workflow and development tools. You can navigate and browse your MongoDB databases and collections, and prototype queries and aggregations for use in your applications. MongoDB Compass is an interactive tool for querying, optimizing, and analyzing your MongoDB data. Get key insights, drag and drop to build pipelines, and more. Studio 3T is an extremely easy to use 3rd party GUI for interacting with your MongoDB data. MongoDB Atlas Data API lets you read and write data in Atlas with standard HTTPS requests. To use the Data API, all you need is an HTTPS client and a valid API key. Ruby was recently added as a language export option to both MongoDB Compass and the MongoDB VS Code Extension. Using this integration you can easily convert an aggregation pipeline from either tool into code you can copy/paste into your Ruby application." }, { "title": "My Blog is FINALLY PROFITABLE!", "url": "/blog/2022/08/04/my-blog-is-finally-profitable/", "categories": "Personal", "tags": "blog", "date": "2022-08-04 08:42:24 -0400", "snippet": "I signed up for Google AdSense in January of 2015 in hopes of subsidizing some of the time I spent writing with ad-based revenue. Without doing any research I quickly formed some baseless expectati...", "content": "I signed up for Google AdSense in January of 2015 in hopes of subsidizing some of the time I spent writing with ad-based revenue. Without doing any research I quickly formed some baseless expectations of success and profitability that would see my sparsely populated, personal blog be a vehicle to financial freedom!Well humble reader … I DID IT! Ok, not really - AdSense has a payment threshold of $100, so until you earn at least that much nothing will ever be paid out. Fast forward 7 years and I finally drove enough traffic to be able to cash out for the first time.At this rate I’m only earing about $1.19 a month so I guess I won’t be quitting my day job … but hey, money’s money ;)" }, { "title": "Hello Product Management", "url": "/blog/2022/07/04/hello-product-management/", "categories": "Personal", "tags": "mongodb, career", "date": "2022-07-04 11:44:20 -0400", "snippet": "PastMy MongoDB Career Journey began almost 4 years ago, and I’ve enjoyed my time as a Technical Services Engineer immensely. During my tenure as part of the organization I had the opportunity to wo...", "content": "PastMy MongoDB Career Journey began almost 4 years ago, and I’ve enjoyed my time as a Technical Services Engineer immensely. During my tenure as part of the organization I had the opportunity to work with a number of high profile clients on some extremely challenging scenarios. These gave me a chance to write about some interesting aspects of the product such as FTDC internals, change stream resume performance, the impact of retryable writes on the oplog and replica set priority takeover mechanics.While I advanced from a TSE to a Senior TSE and finally a Lead TSE I had the opportunity to contribute back to the core server and related products by adding tickets to the backlog. These were predominantly identified via reproductions initiated as a result of a customer-facing issue, and gave me a great deal of personal satisfaction to report. For anyone interested in the types of issues we can help identify, among the 100+ product tickets I’ve opened in this time some of the most interesting were: SERVER-36870: Replication fails if server date exceeds January 19th, 2038 SERVER-44617: $regexFind crash when one of the capture group doesn’t match the input but pattern matches SERVER-44891: collStats will fail if resulting BSON size &gt; 16MB SERVER-57851: Optimize usersInfo calls from mongos to CSRS PRIMARY for Authz User Role resolution SERVER-59754: Incorrect logging of queryHash/planCacheKey for operations that share the same $lookup shape SERVER-62310: collMod command not sent to all shards for a sharded collection if no chunks have been receivedIf the type of digital detective work that goes into finding and reporting these types of issues is appealing to you then Technical Services is always on the lookout for new engineers ;) Have a look at the available opportunities in your region and tell them Alex sent you :)PresentAs much as I’ve loved my time in Technical Services, as of July 5th my journey moves in a different direction as I step into a new role as Product Manager, Developer Experience focusing on the Ruby Driver and Ruby Language Ecosystem.First of all, what is a Product Manager? According to Atlassian, a product manager is the person who identifies the customer need and the larger business objectives that a product or feature will fulfill, articulates what success looks like for a product, and rallies a team to turn that vision into a reality.Since this isn’t another engineering role I will be stepping out of my comfort zone, but feel I am extremely well positioned internally at MongoDB to be successful with a role that advocates for Ruby developers! Since joining the Technical Services team in 2018 I quickly began focusing on MongoDB Drivers focused cases, especially the MongoDB Ruby Driver and the Mongoid ODM.I’ve been working as a Ruby developer for more than a decade at this point, both as a Software Engineer building commercial applications and as a Technical Services Engineer helping MongoDB customers address production issues within their solutions. Heck, I’ve even written a book covering plugin development for a Ruby on Rails based project management suite.I fell in love with the language and found it adopted and incorporated a lot of the best practices, ideas and design patterns of other languages. My feelings towards the language and community somewhat echo what Matz (the author of the Ruby language) stated more succinctly in The Ruby Programming Language: I knew many languages before I created Ruby, but I was never fully satisfied with them. They were uglier, tougher, more complex, or more simple than I expected. I wanted to create my own language that satisfied me, as a programmer. I knew a lot about the language’s target audience: myself. To my surprise, many programmers all over the world feel very much like I do. They feel happy when they discover and program in Ruby. Throughout the development of the Ruby language, I’ve focused my energies on making programming faster and easier. All features in Ruby, including object-oriented features, are designed to work as ordinary programmers (e.g., me) expect them to work. Most programmers feel it is elegant, easy to use, and a pleasure to program.… Ruby is designed to make programmers happy._ FutureThis new role really feels like the culmination of a much longer journey that began when I started getting my feet wet with MongoDB in 2012, learned about Ruby drivers for MongoDB and was actively troubleshooting Mongoid issues as early as 2014.My love of Ruby and my love of MongoDB should help give me a leg up in this new role, however the real work now begins! My focus will be to help drive adoption of MongoDB within the Ruby developer community, though how I can move the needle here remains to be seen.I plan on sharing a lot more as this journey continues and I welcome any feedback you may have along the way." }, { "title": "Just Finished - Terranigma", "url": "/blog/2022/06/26/just-finished-terranigma/", "categories": "Gaming, Just Finished", "tags": "jrpg", "date": "2022-06-26 19:42:59 -0400", "snippet": "This has been a long time coming. I took a run at Terranigma in 2015 and failed miserably, but I was such a huge fan of the other Quintet titles for the SNES I just couldn’t leave this unfinished.T...", "content": "This has been a long time coming. I took a run at Terranigma in 2015 and failed miserably, but I was such a huge fan of the other Quintet titles for the SNES I just couldn’t leave this unfinished.The game tells the story of the Earth’s resurrection by the hands of a boy named Ark, and its progress from the evolution of life to the present day.It was published by Enix in Japan before Nintendo localized the game and released English, German, French and Spanish versions in Europe and Australia. The game has never been officially released in North America.Terranigma starts off with the protagonist Ark meeting a friendly demon named Yomi by opening Pandora’s Box, causing the citizens of the world to freeze. To unfreeze people he needs to resurrect the world. To do this he needs to travel through 5 “chapters” that see him resurrecting everything from plants, animals, people and even the wind.Mode 7 is used extensively in the overworld to great effect, which is not surprising for a game made this late in the SNES’ existence. This effect greets you as soon as you exit the first town and head for one of the 5 towers you need to beat in order to restore the continents.Once completed you have to jump into a chasm that spits you out on the “light side”, where you progress across the world (in a very linear fashion) clearing monster infested areas to keep reviving parts of the world. To progress past an “area” of the game you have to fight a screen-filling monster who typically has a fixed attack pattern and isn’t all that hard to beat.This brings us back to why I quit on this game in the first place. In my last playthrough I made it as far as Bloody Mary (or as one writer aptly put it: Bloody Fucking Mary) and was so under-levelled there was nothing but an ass kicking waiting for me every time I tried to take her on.The difficulty of this game doesn’t increase all that much as you progress through the first half, and as long as you buy the best weapons and armour you can find there’s little challenge. Bloody Mary ratcheted this up to 11 by requiring a minimum of level 25 to stand a chance. Playing this game “normally” up to this point would have you at level 18 at best, and grinding is a huge time sink.I was able to beat Bloody Mary (very under-levelled) by using save states and a lot of patience, but if playing on a console the challenge may prove impossible to overcome.As you advance through the game the beautiful graphics and soundtrack greet you at every turn. Eventually you make your way to the point where the world has been resurrected and you’ve dealt with all the “lightside / darkside plot twists” that may have been surprising at first but end up being over played when repeated too often …Being a 16-bit era JRPG the game is full of fetch quests and overly complicated puzzles. When the time comes to go on the Starstone fetch quest for example, one puzzle requires you to buy an extra flower from a girl in one city to give to a random penguin in Antarctica based on an extremely cryptic clue. Sure, if you’re paying attention you might remember this when the time comes … but it’s highly unlikely.Eventually you make your way to the end, fight Dark Gaia’s 2 forms and win. This again is an area that very much requires you to grind up to level 35 to deal with properly. I … didn’t make it that far so again resorted to save states and patience. Honestly some of these fights were tedious and repetitive, but to make them easier you need to grind a lot … which itself is tedious and repetitive.This was par for the course with 90’s JRPGs so I can’t really fault the developers for these tropes, but going back and playing these games now I would rather invest my time enjoying the experience instead of blindly killing enemies over and over.Overall I thoroughly enjoyed this game and found the story to be extremely well told. For anyone that enjoys these old games and grew up in North America, this is one you’ve likely never played and will not want to miss!" }, { "title": "MongoDB Driver Monitoring", "url": "/blog/2022/05/15/mongodb-driver-monitoring/", "categories": "MongoDB", "tags": "mongodb, drivers", "date": "2022-05-15 08:27:09 -0400", "snippet": "One of the great things about MongoDB Drivers is that they are all built around a common set of specifications. Though these specifications exist to facilitate the development of new language drive...", "content": "One of the great things about MongoDB Drivers is that they are all built around a common set of specifications. Though these specifications exist to facilitate the development of new language drivers or to consistently implement new features across drivers, being aware of them can help when it comes to troubleshooting issues.One of the more prominent specifications is the Server Discovery and Monitoring (SDAM), which defines a set of behaviour in the drivers for providing runtime information about server discovery and monitoring events. These events are further codified in the associated SDAM Monitoring Specification.Examples exist within the MongoDB documentation (ex: Node.js 3.6.x, Node.js 4.5.x, Java 4.3.x, C# 2.15.x), however I wanted to collect as many as possible in one place.Troubleshooting driver-level issues can be challenging, and the DRIVERS-1204: Easier debugging with standardized logging initiative exists to improve this however for the time being instrumenting your code is the best form of introspection.Node.jsStarting with version 2.1.10 of the Node.js driver SDAM Monitoring can be done by subscribing to various SDAM events. With version 3.2 and newer of the driver the Unified Topology Design was introduced, which is why the useUnifiedTopology flag is enabled in the sample below.Note that with version 4.0 of the Node.js driver all legacy topologies were removed and only the unified topology remains. For more examples see the Cluster Monitoring documentation.const { MongoClient } = require('mongodb');const uri = 'mongodb+srv://......';const client = new MongoClient(uri, { useUnifiedTopology: true});​// For debugging commandsclient.on('commandStarted', (event) =&gt; { // Will want to log the event somewhere here, ex: console.log('commandStarted', event)});client.on('commandFailed', (event) =&gt; { // Will want to log the event somewhere here.});client.on('commandSucceeded', (event) =&gt; { // Will want to log the event somewhere here.});​client.on('serverDescriptionChanged', (event) =&gt; { // Will want to log the event somewhere here.});​// For debugging SDAM eventsclient.on('serverHeartbeatFailed', (event) =&gt; { // Will want to log the event somewhere here.});​client.on('serverOpening', (event) =&gt; { // Will want to log the event somewhere here.});​client.on('serverClosed', (event) =&gt; { // Will want to log the event somewhere here.});​client.on('topologyOpening', (event) =&gt; { // Will want to log the event somewhere here.});​client.on('topologyClosed', (event) =&gt; { // Will want to log the event somewhere here.});​client.on('topologyDescriptionChanged', (event) =&gt; { // Will want to log the event somewhere here.});​// For debugging CMAP eventsclient.on('connectionCheckOutStarted', (event) =&gt; { // Will want to log the event somewhere here.});​client.on('connectionCheckOutFailed', (event) =&gt; { // Will want to log the event somewhere here.});​client.on('connectionCheckedIn', (event) =&gt; { // Will want to log the event somewhere here.});​client.on('connectionPoolCleared', (event) =&gt; { // Will want to log the event somewhere here.});​client.on('connectionClosed', (event) =&gt; { // Will want to log the event somewhere here.});​client.on('connectionPoolClosed', (event) =&gt; { // Will want to log the event somewhere here.});​await client.connect(uri);​​// Please modify each event listener above with the appropriate logging logic that will record the event name and result (ex: console.log('commandStarted', event)).JavaThe driver documentation covers Monitoring in detail, including examples such as the following:class CommandCounter implements CommandListener { private Map&lt;String, Integer&gt; commands = new HashMap&lt;String, Integer&gt;(); @Override public synchronized void commandSucceeded(final CommandSucceededEvent event) { String commandName = event.getCommandName(); int count = commands.containsKey(commandName) ? commands.get(commandName) : 0; commands.put(commandName, count + 1); System.out.println(commands.toString()); } @Override public void commandFailed(final CommandFailedEvent event) { System.out.println(String.format(\"Failed execution of command '%s' with id %s\", event.getCommandName(), event.getRequestId())); }}class CommandCounter implements CommandListener { private Map&lt;String, Integer&gt; commands = new HashMap&lt;String, Integer&gt;(); @Override public synchronized void commandSucceeded(final CommandSucceededEvent event) { String commandName = event.getCommandName(); int count = commands.containsKey(commandName) ? commands.get(commandName) : 0; commands.put(commandName, count + 1); System.out.println(commands.toString()); } @Override public void commandFailed(final CommandFailedEvent event) { System.out.println(String.format(\"Failed execution of command '%s' with id %s\", event.getCommandName(), event.getRequestId())); }}My colleague Jorge has an example of this at jorge-imperial/MongoTopologyMonitor.GoThe sample program below shows how you can use the CommandMonitor, PoolMonitor and ServerMonitor. The post “MongoDB Cluster Monitoring in Go” offers additional examples you may find useful.// go run poc.go 2&gt;&amp;1 | tee go_test_$(date +%s).logpackage mainimport (\t\"context\"\t\"encoding/json\"\t\"fmt\"\t\"os\"\t\"strings\"\t\"time\"\t\"github.com/google/uuid\"\t\"go.mongodb.org/mongo-driver/bson\"\t\"go.mongodb.org/mongo-driver/bson/primitive\"\t\"go.mongodb.org/mongo-driver/event\"\t\"go.mongodb.org/mongo-driver/mongo\"\t\"go.mongodb.org/mongo-driver/mongo/options\"\t\"go.mongodb.org/mongo-driver/mongo/readpref\")func pp(i interface{}) {\ts, _ := json.Marshal(i)\tfmt.Printf(\"%T: %s\\n\", i, string(s))}func main() {\tfmt.Println(\"starting\") // Your connection string here uri := \"mongodb+srv://...\"\t////////////////////////////// ctx := context.Background()\tcommand_monitor := &amp;event.CommandMonitor{\t\tStarted: func(ctx context.Context, evt *event.CommandStartedEvent) { pp(evt) },\t\tSucceeded: func(ctx context.Context, evt *event.CommandSucceededEvent) { pp(evt) },\t\tFailed: func(ctx context.Context, evt *event.CommandFailedEvent) { pp(evt) },\t}\tpool_monitor := &amp;event.PoolMonitor{\t\tEvent: func(evt *event.PoolEvent) {\t\t\tif strings.Contains(string(evt.Type), \"Failed\") {\t\t\t\tpp(evt)\t\t\t}\t\t},\t}\tserver_monitor := &amp;event.ServerMonitor{\t\tServerDescriptionChanged: func(evt *event.ServerDescriptionChangedEvent) { pp(evt) },\t\tServerOpening: func(evt *event.ServerOpeningEvent) { pp(evt) },\t\tServerClosed: func(evt *event.ServerClosedEvent) { pp(evt) },\t\tTopologyDescriptionChanged: func(evt *event.TopologyDescriptionChangedEvent) { pp(evt) },\t\tTopologyOpening: func(evt *event.TopologyOpeningEvent) { pp(evt) },\t\tTopologyClosed: func(evt *event.TopologyClosedEvent) { pp(evt) },\t\tServerHeartbeatStarted: func(evt *event.ServerHeartbeatStartedEvent) { pp(evt) },\t\tServerHeartbeatSucceeded: func(evt *event.ServerHeartbeatSucceededEvent) { pp(evt) },\t\tServerHeartbeatFailed: func(evt *event.ServerHeartbeatFailedEvent) { pp(evt) },\t}\tclient, err := mongo.NewClient(\t\toptions.Client().\t\t\tApplyURI(uri).\t\t\tSetPoolMonitor(pool_monitor).\t\t\tSetServerMonitor(server_monitor).\t\t\tSetMonitor(command_monitor))\tif err != nil {\t\tfmt.Printf(\"error creating client: %v\\n\", err)\t\tos.Exit(1)\t}\terr = client.Connect(ctx)\tif err != nil {\t\tfmt.Printf(\"error connecting: %v\\n\", err)\t\tos.Exit(1)\t}\terr = client.Ping(ctx, readpref.Primary())\tif err != nil {\t\tfmt.Printf(\"error pinging: %v\\n\", err)\t\tos.Exit(1)\t}\tfmt.Println(\"connected\")\tfor {\t\ttime.Sleep(2 * time.Second)\t\tfmt.Println(\"\")\t\tfmt.Println(time.Now().String())\t\tcollection := client.Database(\"test\").Collection(\"items\")\t\tid := uuid.New().String()\t\t_, err := collection.InsertOne(ctx, bson.D{\t\t\t{Key: \"uuid\", Value: id},\t\t})\t\tif err != nil {\t\t\tfmt.Printf(\"Insert error - %v\\n\", err)\t\t\tcontinue\t\t}\t\tfindResult := collection.FindOne(ctx, bson.D{\t\t\t{Key: \"uuid\", Value: id},\t\t})\t\tif findResult.Err() != nil {\t\t\tfmt.Printf(\"Find error: %v\\n\", err)\t\t\tcontinue\t\t}\t\tresult := struct {\t\t\tID primitive.ObjectID `bson:\"_id\"`\t\t\tUUID string `bson:\"uuid\"`\t\t}{}\t\terr = findResult.Decode(&amp;result)\t\tif err != nil {\t\t\tfmt.Printf(\"Error decoding: %v\\n\", err)\t\t}\t\tfmt.Printf(\"Got the result: %s\\n\", result.UUID)\t}}RubyThe Ruby Driver’s Monitoring documentation outlines how to create event subscribers in great detail. These are summarized in the sample application below.# ruby poc.rb 2&gt;&amp;1 | tee ruby_test_$(date +%s).logrequire 'bundler/inline'require 'securerandom'gemfile do source 'https://rubygems.org' gem 'mongo'endclass SDAMLogSubscriber include Mongo::Loggable def succeeded(event) log_debug(format_message(event.inspect)) end private def logger Mongo::Logger.logger end def format_message(message) format(\"SDAM | %s\".freeze, message) endendMongo::Logger.logger.level = Logger::DEBUGMongo::Monitoring::Global.subscribe(Mongo::Monitoring::CONNECTION_POOL, Mongo::Monitoring::CmapLogSubscriber.new)Mongo::Monitoring::Global.subscribe(Mongo::Monitoring::TOPOLOGY_OPENING, SDAMLogSubscriber.new)Mongo::Monitoring::Global.subscribe(Mongo::Monitoring::SERVER_OPENING, SDAMLogSubscriber.new)Mongo::Monitoring::Global.subscribe(Mongo::Monitoring::SERVER_DESCRIPTION_CHANGED, SDAMLogSubscriber.new)Mongo::Monitoring::Global.subscribe(Mongo::Monitoring::TOPOLOGY_CHANGED, SDAMLogSubscriber.new)Mongo::Monitoring::Global.subscribe(Mongo::Monitoring::SERVER_CLOSED, SDAMLogSubscriber.new)Mongo::Monitoring::Global.subscribe(Mongo::Monitoring::TOPOLOGY_CLOSED, SDAMLogSubscriber.new)# Your connection string hereclient = Mongo::Client.new('mongodb+srv://...')#############################loop do sleep 2 collection = client[:items] id = SecureRandom.uuid doc = { Key: \"uuid\", Value: id } begin collection.insert_one(doc) rescue =&gt; ex puts \"Insert error - #{ex}\\n\" end begin response = collection.find(doc).first puts \"Got the result: #{response}\\n\" rescue =&gt; ex puts \"Find error - #{ex}\\n\" endendC#/.NETThe C# driver allows the use of a MongoClientSettings.SdamLogFilename property to be set which will write most SDAM events to a log file without further configuration.In the example below we use the IEventSubscriber interface instead to build a custom event subscriber that can be used to emit event details to STDOUT.using MongoDB.Bson;using MongoDB.Driver;using MongoDB.Driver.Core.Events;using System;using System.Web.Script.Serialization;namespace ConsoleApp1{ internal class Program { private static void Main(string[] args) { var settings = MongoClientSettings.FromConnectionString(\"mongodb://localhost:27017/test\"); settings.ClusterConfigurator = builder =&gt; { builder.Subscribe(new CustomEventSubscriber()); }; var client = new MongoClient(settings); var database = client.GetDatabase(\"test\"); var collection = database.GetCollection&lt;BsonDocument&gt;(\"foo\"); var filter = Builders&lt;BsonDocument&gt;.Filter.Eq(\"bar\", 1); var output = collection.CountDocuments(filter); Console.WriteLine(output); // 1 Console.ReadKey(); } } public class CustomEventSubscriber : IEventSubscriber { private readonly IEventSubscriber _subscriber; private readonly JavaScriptSerializer _serializer; public CustomEventSubscriber() { _subscriber = new ReflectionEventSubscriber(this); _serializer = new JavaScriptSerializer(); } public bool TryGetEventHandler&lt;TEvent&gt;(out Action&lt;TEvent&gt; handler) { return _subscriber.TryGetEventHandler(out handler); } public void Handle(ClusterAddedServerEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ClusterAddingServerEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ClusterClosedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ClusterClosingEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ClusterDescriptionChangedEvent e) { Console.WriteLine($\"{e.GetType().Name}: Old = {e.OldDescription} / New = {e.NewDescription}\"); } public void Handle(ClusterOpenedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ClusterOpeningEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ClusterRemovedServerEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ClusterRemovingServerEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ClusterSelectedServerEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ClusterSelectingServerEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ClusterSelectingServerFailedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(CommandFailedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionClosedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionClosingEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionCreatedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionFailedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionOpenedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionOpeningEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionOpeningFailedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionPoolAddedConnectionEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionPoolAddingConnectionEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionPoolCheckedInConnectionEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionPoolCheckedOutConnectionEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionPoolCheckingInConnectionEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionPoolCheckingOutConnectionEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionPoolCheckingOutConnectionFailedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionPoolClearedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionPoolClearingEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionPoolClosedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionPoolClosingEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionPoolOpenedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionPoolOpeningEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionPoolRemovedConnectionEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ConnectionPoolRemovingConnectionEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } //public void Handle(ConnectionReceivedMessageEvent e) //{ // Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); //} //public void Handle(ConnectionReceivingMessageEvent e) //{ // Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); //} public void Handle(ConnectionReceivingMessageFailedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } //public void Handle(ConnectionSendingMessagesEvent e) //{ // Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); //} public void Handle(ConnectionSendingMessagesFailedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } //public void Handle(ConnectionSentMessagesEvent e) //{ // Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); //} public void Handle(SdamInformationEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ServerClosedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ServerClosingEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ServerDescriptionChangedEvent e) { Console.WriteLine($\"{e.GetType().Name}: Old = {e.OldDescription} / New = {e.NewDescription}\"); } public void Handle(ServerHeartbeatFailedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {e.ConnectionId}\"); } public void Handle(ServerOpenedEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } public void Handle(ServerOpeningEvent e) { Console.WriteLine($\"{e.GetType().Name}: {_serializer.Serialize(e)}\"); } }}C++This example requires a little more setup as the necessary versions of bot the C Driver and C++ Driver need to be compiled and installed.# Setup environment for C/C++ driversexport WORKDIR=$(pwd)export CDRIVER_VERSION=1.17.4export CPPDRIVER_VERSION=3.6.2export LD_LIBRARY_PATH=/usr/local/libsudo apt-get update &amp;&amp; sudo apt-get install -y build-essential wget cmake git pkg-config libssl-dev libsasl2-devmkdir -p ${WORKDIR} &amp;&amp; cd ${WORKDIR}wget https://github.com/mongodb/mongo-c-driver/releases/download/${CDRIVER_VERSION}/mongo-c-driver-${CDRIVER_VERSION}.tar.gz &amp;&amp; \\ tar xzf mongo-c-driver-${CDRIVER_VERSION}.tar.gzcd ${WORKDIR}/mongo-c-driver-${CDRIVER_VERSION} &amp;&amp; \\ mkdir cmake-build &amp;&amp; \\ cd cmake-build &amp;&amp; \\ cmake -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF .. &amp;&amp; \\ make &amp;&amp; sudo make installcd ${WORKDIR}wget https://github.com/mongodb/mongo-cxx-driver/archive/r${CPPDRIVER_VERSION}.tar.gz &amp;&amp; \\ tar -xzf r${CPPDRIVER_VERSION}.tar.gzcd ${WORKDIR}/mongo-cxx-driver-r${CPPDRIVER_VERSION}/build &amp;&amp; \\ echo $CPPDRIVER_VERSION &gt; VERSION_CURRENT &amp;&amp; \\ cmake -DCMAKE_BUILD_TYPE=Release -DBSONCXX_POLY_USE_BOOST=1 -DENABLE_UNINSTALL=ON \\ -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_PREFIX_PATH=/usr/local .. &amp;&amp; \\ sudo cmake --build . --target installOnce the environment is setup, the following sample application can be used to monitor SDAM events. Note only the ServerDescriptionChanged is monitored, however this list can be expanded as needed (see mongocxx::options::apm Class Reference documentation for more information).// save as test.cpp and compile as follows:// c++ --std=c++11 test.cpp -o test $(pkg-config --cflags --libs libmongocxx)#include &lt;iostream&gt;#include &lt;time.h&gt;#include &lt;bsoncxx/builder/stream/document.hpp&gt;#include &lt;bsoncxx/json.hpp&gt;#include &lt;mongocxx/client.hpp&gt;#include &lt;mongocxx/instance.hpp&gt;#include &lt;mongocxx/pool.hpp&gt;void work(mongocxx::pool&amp; pool) { auto conn = pool.acquire(); auto collection = (*conn)[\"test\"][\"foo\"];/*void work(const mongocxx::client&amp; conn) { bsoncxx::builder::stream::document document{}; auto collection = conn[\"test\"][\"foo\"];*/ bsoncxx::builder::stream::document document{}; document &lt;&lt; \"foo\" &lt;&lt; \"bar\"; document &lt;&lt; \"t\" &lt;&lt; bsoncxx::types::b_date(std::chrono::system_clock::now()); try { //collection.insert_one(document.view()); bsoncxx::builder::stream::document order{}; order &lt;&lt; \"_id\" &lt;&lt; -1; auto opts = mongocxx::options::find{}; opts.sort(order.view()); auto result = collection.find_one({}, opts); std::cout &lt;&lt; \"Last: \" &lt;&lt; bsoncxx::to_json(*result) &lt;&lt; std::endl; } catch (std::exception&amp; e) { std::cout &lt;&lt; \"Error: \" &lt;&lt; e.what() &lt;&lt; std::endl; }}int main(int, char**) { mongocxx::options::apm apm_opts; mongocxx::options::client client_opts; // http://mongocxx.org/api/current/classmongocxx_1_1options_1_1apm.html for other options apm_opts.on_server_changed([&amp;](const mongocxx::events::server_changed_event&amp; event) { std::cout &lt;&lt; \"ServerDescriptionChanged \" &lt;&lt; bsoncxx::to_json(event.new_description().is_master()) &lt;&lt; std::endl; }); client_opts.apm_opts(apm_opts); mongocxx::instance inst{}; mongocxx::uri uri{\"mongodb://...\"}; mongocxx::pool pool{uri, client_opts}; // mongocxx::client conn{uri, client_opts}; int n = 2; // wait 2 seconds between loops int milli_seconds = n * 1000; time_t start, end; start = time(0); std::cout &lt;&lt; \"Starting. New document will be inserted every \" &lt;&lt; n &lt;&lt; \" second(s).\" &lt;&lt; std::endl; while (1) { if (time(0) - start == n) { work(pool); start = start + n; std::cout &lt;&lt; \"Tick: \" &lt;&lt; start &lt;&lt; std::endl; } }}PHPTODO https://gist.github.com/jmikola/dfcad9bc4e512b22dbb04beed4dc0a99 https://www.php.net/manual/en/mongodb.tutorial.apm.phpThe goal will be to collect more examples over time and post them here. If you have anything you’d like to share that I haven’t covered, please feel free to comment below ;)Happy Coding!" }, { "title": "Blue Force (Tsunami Games) - 1993", "url": "/blog/2022/03/31/blue-force/", "categories": "Let's Adventure!", "tags": "adventure, Tsunami Games, TsAGE", "date": "2022-03-31 06:02:55 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Police Quest: In Pursuit...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Police Quest: In Pursuit of the Death Angel (Sierra On-Line) - 1987Blue Force (Tsunami Games) - 1993→ Grim Fandango (LucasArts) - 1998 Article 11 of 96 in this series.Since I just finished playing Police Quest 1 I figured I’ll stick with the “police work simulator” category and pick up Blue Force next.Blue Force was also designed by Police Quest designer Jim Walls so there are some thematic similarities between the titles. You have to use proper radio codes while on your bike when calling things in, and if you don’t call for backup appropriately you’ll likely get yourself killed.The story follows Jake Ryan, a rookie officer who’s parents were killed when he was a child and the murderer never caught. The game sees you investigating a number of incidents that seem to surround a national guard armory break in. These result in evidence surfacing that ties into Jake’s parents murder and the murderer being involved in the gun smuggling ring.A point-and-click interface is used to interact with the game world. Common actions such as Move, Interact, Inspect and Speak are present as icons in a circular menu that is raised when you right click. I’m not sure if Tsunami was the first adventure game company to adopt this style, but it does appear in other company’s games later on (such as Full Throttle from LucasArts).Navigating between locations is done by getting on your motorcycle and selecting a location from the game map. As you move the cursor about and hover over locations a tool tip will occasionally indicate this is somewhere you can travel. Other than the Marina which is easy to identify, figuring out where you need to go can be frustrating and unintuitive. I actually took the screenshot above as I kept forgetting where Jamison &amp; Ryan was and found myself blindly moving the mouse around trying to find it each time …The story progresses through various traffic stops and scripted events that your dispatcher sends you to. Proper police protocol needs to be followed when making an arrest or detaining a suspect, however this is extremely repetitive (talk, talk, talk, cuff, search). Luckily this isn’t a very long game so you only have to do this …. like 8 times.Interacting with other characters overlays their floating heads without a border or frame above the text area, which is actually a lot nicer than Sierra’s approach. The character designs are fairly detailed and the story advances quickly through these interactions.Your dad’s old partner, who’s been in your life since your parents murder is still running a PI firm. As you surface new evidence that ties into your parents murderer you being to work with him more to try and track down the gun smugglers.These investigations eventually lead to a stash of stolen automatic weapons, which you alert the ATF about. As you suspected, one of the main gun runners is the same guy that killed your parents, and the game ends with you finally bringing him to justice.Overall the story is pretty tight and interesting, and the game progresses smoothly. The plot guides you appropriately to the handful of locations on the map you need to explore, but since this is an adventure game there are no shortage of puzzles …. frustrating puzzles.Need to get a perp out of their locked house boat? Stick a rag, diesel fuel and a flare in the air intake to smoke him out. Want to investigate a locked houseboat? Bring a rare coin from your house to the boat rental shop and give it to the man there so he goes to the back room to get a price guide, which gives you an opportunity to steal the keys…Having played adventure games my whole life these types of puzzles aren’t uncommon or unexpected, but it never hurts to have a walkthrough handy just in case ;)The graphics are pretty good for this time period. Character portraits are well done, and your character on screen is generally large enough to appear smoothly animated and expressive. The background music and sound effects are a bit repetitive though, and can get annoying at times.Blue Force came out at the height of Sierra Online’s dominance of the adventure game market, and Sierra’s influence on this game’s design can definitely be seen. Though the game is fairly linear, I enjoyed the story and the overall game play experience.I’m looking forward to playing other Tsunami games as this series progresses.Game Information Game Blue Force Developer Tsunami Games Publisher Tsunami Games Release Date 1993 Systems DOS Game Engine TsAGE My Playthrough Time to Completion 2 hours How Long To Beat? 4 hours Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 16 Story (25) 18 Experience (15) 13 Impact (10) 7   77% Gallery" }, { "title": "Police Quest: In Pursuit of the Death Angel (Sierra On-Line) - 1987", "url": "/blog/2022/03/15/police-quest-1/", "categories": "Let's Adventure!", "tags": "adventure, Sierra Online", "date": "2022-03-15 06:39:40 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Sanitarium (DreamForge I...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Sanitarium (DreamForge Intertainment) - 1998Police Quest: In Pursuit of the Death Angel (Sierra On-Line) - 1987→ Blue Force (Tsunami Games) - 1993 Article 10 of 96 in this series.Police Quest: In Pursuit of the Death Angel is an adventure game (and police simulation) produced by Jim Walls for Sierra On-Line, and originally released in 1987 built on their AGI engine. It was remade in 1992 using 256-color VGA graphics and the SCI engine, which dramatically improved the appearance and audio of the game, and replaced the command line interface with point and click.Part of the goal of this series of reviews is to give me a chance to replay a bunch of games that meant a lot to me as a kid, and Police Quest was one of those. I loved the story, the characters, the text parser, having to rely on the manual for radio codes and booking codes … all of it.It’s been a good 20+ years since I played this last, so I figured I should start with the version I remembered. I think I got about 20 minutes into my play through of the AGI version before I gave up as the driving segments were … painful.I decided to switch over to the SCI version which has numerous quality of life improvements such as a point and click interface, simplified driving interface, ability to inspect buildings while driving so you know where you’re going … and less ways to die on the road. If you don’t stop at a stop sign you just back up and try again without needing to restore from a save.The plot follows officer Sonny Bonds, who is a traffic cop in Lytton, California. You start out by sitting through a briefing, getting in your squad car and patrolling the streets. You investigate a car crash, pull over and arrest a drunk driver, issue a speeding ticket and stop for coffee with a fellow officer.When you arrest someone and bring them in for booking, you have to enter the right booking codes … and there are generally multiple. I remember enjoying this long ago, but now I found it to be a bit tedious. Unfortunately, tedium was a running theme throughout this game.Every time you change your clothes (street clothes to uniform and back) you have to: enter your locker combo, take a towel, walk to the shower, walk back, enter your locker combo, put the towel back. EVERY TIME. And you change your clothes many times.Since you’re a traffic cop, you have to drive around looking for offenses (which you are alerted to after “a while” via radio), but in the meantime you’re just aimlessly driving around. A big part of this game is just driving back and forth between locations which feels like “busy work”.Don’t worry though, you’re only a traffic cop for about half the game as you also have an opportunity to apply for the narcotics unit. Apparently there’s a big drug problem in Lytton, and it turns out one of your fellow officer’s daughters gets caught up in this. I actually found this part of the story to be a lot more impactful replaying this as an adult (with kids of my own now) and give Sierra lot of credit for tackling something like this in a game.There is a new drug kingpin in town going by the name “The Death Angel” (hence the title of the game :P), and as you start to get closer to him after arresting one of his dealers you get a temporary promotion to narcotics. You get to go on a stakeout, arrest another dealer and do more “police stuff” (getting a judge to issue a no bail order for the dealer). A prostitute you meet in a bar turns out to be an old girlfriend of your from high school and she agrees to help you when you go undercover to try and get closer to the Death Angel.You dye your hair, go to the Hotel Delphoria (yup, more driving), have a few drinks at the bar and get invited to a high stakes poker game. After winning enough hands (or just clicking “No, But Win Anyway” when asked to start playing) you end up finding out that one of the players was Jesse Bains … aka the Death Angel.Bains finds out you’re a cop and pulls a gun. Assuming you remember to radio in the hotel room you’re in, backup will arrive and shoot Bains (or he’ll shoot you) and thus ends the first installment of the Police Quest series.I’ve got to be honest - it was not as much fun as I remember it being. The SCI version is exponentially more playable than the original AGI version, and though the story is compelling getting through this game feels like “work”. Sierra really tried hard to make this an accurate police operations and process simulator, but that results in long segments just being boring.I enjoyed the updated graphics such as the interior of the car while driving, but you’re stuck staring at that view for way too much of the game. The music and sound effects are forgettable, but still an improvement over the original. Since I have fond memories of all 4 police quest games (I don’t count Police Quest: SWAT). I’m still looking forward to replaying them, but I hope the rose coloured glasses I seem to have had on all these years for this game doesn’t apply to the whole series …Police Quest 1 was reported to have been used as a training tool for police officers, which can explain a lot of the rigidity. Unfortunately this hurts the overall play experience.Game Information Game Police Quest: In Pursuit of the Death Angel Developer Sierra On-Line Publisher Sierra On-Line Release Date 1987 Systems DOS, Amiga, Atari ST, Apple II, Apple IIGS Game Engine Adventure Game Interpreter (AGI)/Sierra’s Creative Interpreter (SCI) My Playthrough Time to Completion 3.5 hours How Long To Beat? 5 hours Version Played DOS (SCI Remake) via ScummVM Notes Walkthrough, Map ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 14 Story (25) 18 Experience (15) 9 Impact (10) 6   67% Gallery" }, { "title": "Performance Analysis of Resuming a MongoDB Change Stream", "url": "/blog/2022/03/02/performance-analysis-of-resuming-a-mongodb-change-stream/", "categories": "MongoDB", "tags": "mongodb, changestream, performance", "date": "2022-03-02 06:50:39 -0500", "snippet": "Change Streams allow applications to access real-time data changes without the complexity and risk of tailing the oplog. Applications can use change streams to subscribe to all data changes on a si...", "content": "Change Streams allow applications to access real-time data changes without the complexity and risk of tailing the oplog. Applications can use change streams to subscribe to all data changes on a single collection, a database, or an entire deployment, and immediately react to them.For applications that rely on change streams, ensuring continuity on process restart can be accomplished by specifying a resume token to resume the change stream. Depending on how many events have been recorded in the oplog after the resume token, the time taken to resume the stream can take longer than expected.This article will attempt to explain the default behavior of change streams when resumed and how performance can potentially improved. Note that all scripts used in this article are shared in the Reproduction section at the end.Capturing Our First Change EventThe nodejs-capture-first-event.js script uses the MongoDB Node Driver to connect to the cluster we just created and listen for changes. First ensure you have Node.js installed, then using npm install the mongo package and run the script:npm install mongonode capture-first-event.jsOnce the script is watching the collection connect to the cluster and run the setupEnvironment() function to setup the cluster and insert a test document:mongo --quiet --eval \"load('shell-configure-test.js'); setupEnvironment();\"Once this document is inserted, the nodejs-capture-first-event.js we started previously should produce a result similar to the following, then exit:2022-02-15T12:13:26.173Z Change received: { _id: { _data: '82620B98E5000000022B022C0100296E5A1004437FB549CFDD45269DD59B9BF0EB354746645F69640064620B98E564DA118651C642000004' }, operationType: 'insert', clusterTime: new Timestamp({ t: 1644927205, i: 2 }), fullDocument: { _id: new ObjectId(\"620b98e564da118651c64200\"), msg: 'We expect our filter to match this' }, ns: { db: 'test', coll: 'foo' }, documentKey: { _id: new ObjectId(\"620b98e564da118651c64200\") }}Note the _id value of the change event as this will be used to resume the change stream later.Seeding the CollectionThe nodejs-capture-first-event.js script should have terminated after the change event was detected and printed. Next we want to fill the collection with content prior to attempting to resume processing, which can be done using our setup script from a mongo/mongosh shell:mongo --quiet --eval \"load('shell-configure-test.js'); seedCollection();\"The function above will push 3000 “junk” documents (~ 6MB in size) to the collection along with a few additional documents mixed in that should match our initial change stream filter. Once the collection is seeded, we can use the $collStats aggregation stage to get an idea as to how much data we’ve just generated. This should be run from a mongo/mongosh shell connected to the cluster:$ mongosh --quiet --eval \"db.foo.aggregate([ { $collStats: { storageStats: {} }}, { $project: { 'storageStats.wiredTiger': 0, 'storageStats.indexDetails': 0 } }]).pretty();\"[ { ns: 'test.foo', host: 'Alexs-MacBook-Pro.local:27018', localTime: ISODate(\"2022-02-15T21:36:13.752Z\"), storageStats: { size: Long(\"16993324327\"), // 16.99GB count: 2711, avgObjSize: 6268286, // 6.26MB storageSize: Long(\"17022169088\"), freeStorageSize: 17760256, capped: false, nindexes: 1, indexBuilds: [], totalIndexSize: 114688, totalSize: Long(\"17022283776\"), indexSizes: { _id_: 114688 }, scaleFactor: 1 } }]Resuming a Change Stream with a ResumeTokenChange streams can be resumed by using a ResumeToken. To resumeAfter you use the _id value of the last change stream event as this acts as the resumeToken. This can be inspected via the mongosh shell using the resumetoken snippet (see mongodb-js/mongodb-resumetoken-decoder)Enterprise replset [direct: primary] test&gt; decodeResumeToken('82620B98E5000000022B022C0100296E5A1004437FB549CFDD45269DD59B9BF0EB354746645F69640064620B98E564DA118651C642000004'){ timestamp: new Timestamp({ t: 1644927205, i: 2 }), version: 1, tokenType: 128, txnOpIndex: 0, fromInvalidate: false, uuid: new UUID(\"437fb549-cfdd-4526-9dd5-9b9bf0eb3547\"), documentKey: { _id: new ObjectId(\"620b98e564da118651c64200\") }}To use the resume token, the nodejs-resume-changestream.js script can be adjusted to use our token we found earlier.Performance Using Cursor DefaultsWhen the above script is run, the output should be similar to the following:$ node capture-first-event.js2022-03-02T11:38:37.014Z Resuming Change Stream ...2022-03-02T11:38:49.888Z Change received: \"This document will be 1Kb\" (token: 82621F54B3000000012B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54B33284546A99670EFD0004)2022-03-02T11:38:49.888Z Change received: \"100 6MB documents, then another 1Kb document\" (token: 82621F54C4000000062B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54C43284546A99670F620004)2022-03-02T11:38:49.889Z Change received: \"And another 100 6MB documents, then another 1Kb document\" (token: 82621F54D4000000072B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54D43284546A99670FC70004)2022-03-02T11:38:49.889Z Change received: \"... followed immediately by a 1MB document\" (token: 82621F54D5000000012B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54D53284546A99670FC80004)2022-03-02T11:38:49.889Z Change received: \"100 6MB documents preceded this 3MB document\" (token: 82621F54E8000000012B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54E83284546A9967102D0004)2022-03-02T11:38:49.889Z Change received: \"... followed by another 1MB document\" (token: 82621F54E9000000012B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54E93284546A9967102E0004)2022-03-02T11:38:49.890Z Change received: \"500 6MB documents added\" (token: 82621F5531000000072B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F55313284546A996712230004)2022-03-02T11:38:49.890Z Change received: \"200 6MB documents added\" (token: 82621F554D000000052B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F554D3284546A996712EC0004)2022-03-02T11:38:49.890Z Change received: \"Adding 2000 more 6MB documents...\" (token: 82621F554D000000062B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F554D3284546A996712ED0004)2022-03-02T11:38:49.891Z Change received: \"This is the last document we'd expect\" (token: 82621F5724000000012B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F57243284546A99671ABE0004)Note that ~12 seconds elapse between the cursor being opened and the results all being returned apparently at once.Reviewing the logs for this operation show that a single aggregate command was executed that returned about 5MB of data (reslen) in 10 documents (nreturned). 3060 documents were scanned to identify these results and that required 19GB (bytesRead) to be read from disk into cache. {“t”:{“$date”:”2022-03-02T06:38:47.825-05:00”},”s”:”I”, “c”:”COMMAND”, “id”:51803, “ctx”:”conn53”,”msg”:”Slow query”,”attr”:{“type”:”command”,”ns”:”test.foo”,”command”:{\"aggregate\":\"foo\",”pipeline”:[{“$changeStream”:{“fullDocument”:”default”,”resumeAfter”:{“_data”:”82621F5485000000022B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54853284546A99670EFC0004”}}},{“$match”:{“fullDocument.msg”:{“$exists”:true}}},{“$project”:{“fullDocument”:1}}],”cursor”:{},”lsid”:{“id”:{“$uuid”:”14c4f916-957f-4245-8106-b617b17fa603”}},”$clusterTime”:{“clusterTime”:{“$timestamp”:{“t”:1646221107,”i”:1}},”signature”:{“hash”:{“$binary”:{“base64”:”AAAAAAAAAAAAAAAAAAAAAAAAAAA=”,”subType”:”0”}},”keyId”:0}},”$db”:”test”},”planSummary”:”COLLSCAN”,”cursorid”:8835322801609070020,”keysExamined”:0,”docsExamined”:3039,”numYields”:636,\"nreturned\":10,”queryHash”:”7C2ADF3A”,\"reslen\":5248534,”locks”:{“Global”:{“acquireCount”:{“r”:640}},”Mutex”:{“acquireCount”:{“r”:4}}},”readConcern”:{“level”:”majority”},”writeConcern”:{“w”:”majority”,”wtimeout”:0,”provenance”:”implicitDefault”},”storage”:{“data”:{\"bytesRead\":19528768718,”timeReadingMicros”:9979872},”timeWaitingMicros”:{“cache”:4991}},”remote”:”192.168.2.100:61953”,”protocol”:”op_msg”,”durationMillis”:12356}}The entire operation took 12.36 seconds (durationMillis) to complete.Performance Using a Smaller Cursor batchSizeAccording to the previous log entry, all outstanding results following the resume token were returned in a single cursor batch. By default, find() and aggregate() operations have an initial batch size of 101 documents. Subsequent getMore operations issued against the resulting cursor have no default batch size, so they are limited only by the 16 megabyte message size (the BSON Max Size).Let’s try adjusting nodejs-resume-changestream.js with a cursor.batchSize() of 1, as this should return documents as they’re found.var changeStream = collection.watch([ { $match: { \"fullDocument.msg\": { $exists: true } } }, { $project: { fullDocument: 1 } } ], { resumeAfter: resumeToken, batchSize: 1 }); // &lt;-- add `batchSize: 1`2022-03-02T11:47:26.743Z Resuming Change Stream ...2022-03-02T11:47:27.952Z Change received: \"This document will be 1Kb\" (token: 82621F54B3000000012B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54B33284546A99670EFD0004)2022-03-02T11:47:27.958Z Change received: \"100 6MB documents, then another 1Kb document\" (token: 82621F54C4000000062B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54C43284546A99670F620004)2022-03-02T11:47:27.962Z Change received: \"And another 100 6MB documents, then another 1Kb document\" (token: 82621F54D4000000072B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54D43284546A99670FC70004)2022-03-02T11:47:28.097Z Change received: \"... followed immediately by a 1MB document\" (token: 82621F54D5000000012B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54D53284546A99670FC80004)2022-03-02T11:47:28.364Z Change received: \"100 6MB documents preceded this 3MB document\" (token: 82621F54E8000000012B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54E83284546A9967102D0004)2022-03-02T11:47:28.463Z Change received: \"... followed by another 1MB document\" (token: 82621F54E9000000012B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54E93284546A9967102E0004)2022-03-02T11:47:30.474Z Change received: \"500 6MB documents added\" (token: 82621F5531000000072B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F55313284546A996712230004)2022-03-02T11:47:31.234Z Change received: \"200 6MB documents added\" (token: 82621F554D000000052B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F554D3284546A996712EC0004)2022-03-02T11:47:31.239Z Change received: \"Adding 2000 more 6MB documents...\" (token: 82621F554D000000062B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F554D3284546A996712ED0004)2022-03-02T11:47:39.334Z Change received: \"This is the last document we'd expect\" (token: 82621F5724000000012B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F57243284546A99671ABE0004)Unlike the first example that returned all results as they fit into the initial batch size, now a getMore is being issued for each result returned from the cursor. Checking the logs again we can verify this as we expect there to be 10 log entries associated with the change stream’s cursor id (8620417026431980160 in this case):{\"t\":{\"$date\":\"2022-03-02T06:47:26.367-05:00\"},\"s\":\"I\", \"c\":\"COMMAND\", \"id\":51803, \"ctx\":\"conn66\",\"msg\":\"Slow query\",\"attr\":{\"type\":\"command\",\"ns\":\"test.foo\",\"command\":{\"aggregate\":\"foo\",\"pipeline\":[{\"$changeStream\":{\"fullDocument\":\"default\",\"resumeAfter\":{\"_data\":\"82621F5485000000022B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54853284546A99670EFC0004\"}}},{\"$match\":{\"fullDocument.msg\":{\"$exists\":true}}},{\"$project\":{\"fullDocument\":1}}],\"cursor\":{\"batchSize\":1},\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"planSummary\":\"COLLSCAN\",\"cursorid\":8620417026431980160,\"keysExamined\":0,\"docsExamined\":309,\"numYields\":59,\"nreturned\":1,\"queryHash\":\"7C2ADF3A\",\"reslen\":1618,\"locks\":{\"Global\":{\"acquireCount\":{\"r\":61}},\"Mutex\":{\"acquireCount\":{\"r\":2}}},\"readConcern\":{\"level\":\"majority\"},\"writeConcern\":{\"w\":\"majority\",\"wtimeout\":0,\"provenance\":\"implicitDefault\"},\"storage\":{\"data\":{\"bytesRead\":1942084556,\"timeReadingMicros\":951431},\"timeWaitingMicros\":{\"cache\":3195}},\"remote\":\"192.168.2.100:53792\",\"protocol\":\"op_msg\",\"durationMillis\":1181}}{\"t\":{\"$date\":\"2022-03-02T06:47:26.375-05:00\"},\"s\":\"I\", \"c\":\"COMMAND\", \"id\":51803, \"ctx\":\"conn66\",\"msg\":\"Slow query\",\"attr\":{\"type\":\"command\",\"ns\":\"test.foo\",\"command\":{\"getMore\":8620417026431980160,\"collection\":\"foo\",\"batchSize\":1,\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"originatingCommand\":{\"aggregate\":\"foo\",\"pipeline\":[{\"$changeStream\":{\"fullDocument\":\"default\",\"resumeAfter\":{\"_data\":\"82621F5485000000022B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54853284546A99670EFC0004\"}}},{\"$match\":{\"fullDocument.msg\":{\"$exists\":true}}},{\"$project\":{\"fullDocument\":1}}],\"cursor\":{\"batchSize\":1},\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"planSummary\":\"COLLSCAN\",\"cursorid\":8620417026431980160,\"keysExamined\":0,\"docsExamined\":0,\"numYields\":0,\"nreturned\":1,\"queryHash\":\"7C2ADF3A\",\"reslen\":1636,\"locks\":{},\"readConcern\":{\"level\":\"majority\"},\"writeConcern\":{\"w\":\"majority\",\"wtimeout\":0,\"provenance\":\"implicitDefault\"},\"remote\":\"192.168.2.100:53792\",\"protocol\":\"op_msg\",\"durationMillis\":0}}{\"t\":{\"$date\":\"2022-03-02T06:47:26.380-05:00\"},\"s\":\"I\", \"c\":\"COMMAND\", \"id\":51803, \"ctx\":\"conn66\",\"msg\":\"Slow query\",\"attr\":{\"type\":\"command\",\"ns\":\"test.foo\",\"command\":{\"getMore\":8620417026431980160,\"collection\":\"foo\",\"batchSize\":1,\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"originatingCommand\":{\"aggregate\":\"foo\",\"pipeline\":[{\"$changeStream\":{\"fullDocument\":\"default\",\"resumeAfter\":{\"_data\":\"82621F5485000000022B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54853284546A99670EFC0004\"}}},{\"$match\":{\"fullDocument.msg\":{\"$exists\":true}}},{\"$project\":{\"fullDocument\":1}}],\"cursor\":{\"batchSize\":1},\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"planSummary\":\"COLLSCAN\",\"cursorid\":8620417026431980160,\"keysExamined\":0,\"docsExamined\":0,\"numYields\":0,\"nreturned\":1,\"queryHash\":\"7C2ADF3A\",\"reslen\":1648,\"locks\":{},\"readConcern\":{\"level\":\"majority\"},\"writeConcern\":{\"w\":\"majority\",\"wtimeout\":0,\"provenance\":\"implicitDefault\"},\"remote\":\"192.168.2.100:53792\",\"protocol\":\"op_msg\",\"durationMillis\":0}}{\"t\":{\"$date\":\"2022-03-02T06:47:26.385-05:00\"},\"s\":\"I\", \"c\":\"COMMAND\", \"id\":51803, \"ctx\":\"conn66\",\"msg\":\"Slow query\",\"attr\":{\"type\":\"command\",\"ns\":\"test.foo\",\"command\":{\"getMore\":8620417026431980160,\"collection\":\"foo\",\"batchSize\":1,\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"originatingCommand\":{\"aggregate\":\"foo\",\"pipeline\":[{\"$changeStream\":{\"fullDocument\":\"default\",\"resumeAfter\":{\"_data\":\"82621F5485000000022B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54853284546A99670EFC0004\"}}},{\"$match\":{\"fullDocument.msg\":{\"$exists\":true}}},{\"$project\":{\"fullDocument\":1}}],\"cursor\":{\"batchSize\":1},\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"planSummary\":\"COLLSCAN\",\"cursorid\":8620417026431980160,\"keysExamined\":0,\"docsExamined\":0,\"numYields\":0,\"nreturned\":1,\"queryHash\":\"7C2ADF3A\",\"reslen\":1049186,\"locks\":{},\"readConcern\":{\"level\":\"majority\"},\"writeConcern\":{\"w\":\"majority\",\"wtimeout\":0,\"provenance\":\"implicitDefault\"},\"remote\":\"192.168.2.100:53792\",\"protocol\":\"op_msg\",\"durationMillis\":0}}{\"t\":{\"$date\":\"2022-03-02T06:47:26.521-05:00\"},\"s\":\"I\", \"c\":\"COMMAND\", \"id\":51803, \"ctx\":\"conn66\",\"msg\":\"Slow query\",\"attr\":{\"type\":\"command\",\"ns\":\"test.foo\",\"command\":{\"getMore\":8620417026431980160,\"collection\":\"foo\",\"batchSize\":1,\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"originatingCommand\":{\"aggregate\":\"foo\",\"pipeline\":[{\"$changeStream\":{\"fullDocument\":\"default\",\"resumeAfter\":{\"_data\":\"82621F5485000000022B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54853284546A99670EFC0004\"}}},{\"$match\":{\"fullDocument.msg\":{\"$exists\":true}}},{\"$project\":{\"fullDocument\":1}}],\"cursor\":{\"batchSize\":1},\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"planSummary\":\"COLLSCAN\",\"cursorid\":8620417026431980160,\"keysExamined\":0,\"docsExamined\":0,\"numYields\":0,\"nreturned\":1,\"queryHash\":\"7C2ADF3A\",\"reslen\":3146340,\"locks\":{},\"readConcern\":{\"level\":\"majority\"},\"writeConcern\":{\"w\":\"majority\",\"wtimeout\":0,\"provenance\":\"implicitDefault\"},\"remote\":\"192.168.2.100:53792\",\"protocol\":\"op_msg\",\"durationMillis\":2}}{\"t\":{\"$date\":\"2022-03-02T06:47:26.790-05:00\"},\"s\":\"I\", \"c\":\"COMMAND\", \"id\":51803, \"ctx\":\"conn66\",\"msg\":\"Slow query\",\"attr\":{\"type\":\"command\",\"ns\":\"test.foo\",\"command\":{\"getMore\":8620417026431980160,\"collection\":\"foo\",\"batchSize\":1,\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"originatingCommand\":{\"aggregate\":\"foo\",\"pipeline\":[{\"$changeStream\":{\"fullDocument\":\"default\",\"resumeAfter\":{\"_data\":\"82621F5485000000022B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54853284546A99670EFC0004\"}}},{\"$match\":{\"fullDocument.msg\":{\"$exists\":true}}},{\"$project\":{\"fullDocument\":1}}],\"cursor\":{\"batchSize\":1},\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"planSummary\":\"COLLSCAN\",\"cursorid\":8620417026431980160,\"keysExamined\":0,\"docsExamined\":1,\"numYields\":0,\"nreturned\":1,\"queryHash\":\"7C2ADF3A\",\"reslen\":1049180,\"locks\":{\"Global\":{\"acquireCount\":{\"r\":1}},\"Mutex\":{\"acquireCount\":{\"r\":1}}},\"readConcern\":{\"level\":\"majority\"},\"writeConcern\":{\"w\":\"majority\",\"wtimeout\":0,\"provenance\":\"implicitDefault\"},\"storage\":{\"data\":{\"bytesRead\":1048977,\"timeReadingMicros\":1974}},\"remote\":\"192.168.2.100:53792\",\"protocol\":\"op_msg\",\"durationMillis\":3}}{\"t\":{\"$date\":\"2022-03-02T06:47:28.885-05:00\"},\"s\":\"I\", \"c\":\"COMMAND\", \"id\":51803, \"ctx\":\"conn66\",\"msg\":\"Slow query\",\"attr\":{\"type\":\"command\",\"ns\":\"test.foo\",\"command\":{\"getMore\":8620417026431980160,\"collection\":\"foo\",\"batchSize\":1,\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"originatingCommand\":{\"aggregate\":\"foo\",\"pipeline\":[{\"$changeStream\":{\"fullDocument\":\"default\",\"resumeAfter\":{\"_data\":\"82621F5485000000022B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54853284546A99670EFC0004\"}}},{\"$match\":{\"fullDocument.msg\":{\"$exists\":true}}},{\"$project\":{\"fullDocument\":1}}],\"cursor\":{\"batchSize\":1},\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"planSummary\":\"COLLSCAN\",\"cursorid\":8620417026431980160,\"keysExamined\":0,\"docsExamined\":501,\"numYields\":104,\"nreturned\":1,\"queryHash\":\"7C2ADF3A\",\"reslen\":583,\"locks\":{\"Global\":{\"acquireCount\":{\"r\":105}},\"Mutex\":{\"acquireCount\":{\"r\":1}}},\"readConcern\":{\"level\":\"majority\"},\"writeConcern\":{\"w\":\"majority\",\"wtimeout\":0,\"provenance\":\"implicitDefault\"},\"storage\":{\"data\":{\"bytesRead\":3246578426,\"timeReadingMicros\":1613240},\"timeWaitingMicros\":{\"cache\":2390}},\"remote\":\"192.168.2.100:53792\",\"protocol\":\"op_msg\",\"durationMillis\":2000}}{\"t\":{\"$date\":\"2022-03-02T06:47:29.651-05:00\"},\"s\":\"I\", \"c\":\"COMMAND\", \"id\":51803, \"ctx\":\"conn66\",\"msg\":\"Slow query\",\"attr\":{\"type\":\"command\",\"ns\":\"test.foo\",\"command\":{\"getMore\":8620417026431980160,\"collection\":\"foo\",\"batchSize\":1,\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221647,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"originatingCommand\":{\"aggregate\":\"foo\",\"pipeline\":[{\"$changeStream\":{\"fullDocument\":\"default\",\"resumeAfter\":{\"_data\":\"82621F5485000000022B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54853284546A99670EFC0004\"}}},{\"$match\":{\"fullDocument.msg\":{\"$exists\":true}}},{\"$project\":{\"fullDocument\":1}}],\"cursor\":{\"batchSize\":1},\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"planSummary\":\"COLLSCAN\",\"cursorid\":8620417026431980160,\"keysExamined\":0,\"docsExamined\":201,\"numYields\":38,\"nreturned\":1,\"queryHash\":\"7C2ADF3A\",\"reslen\":583,\"locks\":{\"Global\":{\"acquireCount\":{\"r\":39}},\"Mutex\":{\"acquireCount\":{\"r\":1}}},\"readConcern\":{\"level\":\"majority\"},\"writeConcern\":{\"w\":\"majority\",\"wtimeout\":0,\"provenance\":\"implicitDefault\"},\"storage\":{\"data\":{\"bytesRead\":1289823601,\"timeReadingMicros\":625733},\"timeWaitingMicros\":{\"cache\":15}},\"remote\":\"192.168.2.100:53792\",\"protocol\":\"op_msg\",\"durationMillis\":754}}{\"t\":{\"$date\":\"2022-03-02T06:47:29.656-05:00\"},\"s\":\"I\", \"c\":\"COMMAND\", \"id\":51803, \"ctx\":\"conn66\",\"msg\":\"Slow query\",\"attr\":{\"type\":\"command\",\"ns\":\"test.foo\",\"command\":{\"getMore\":8620417026431980160,\"collection\":\"foo\",\"batchSize\":1,\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221647,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"originatingCommand\":{\"aggregate\":\"foo\",\"pipeline\":[{\"$changeStream\":{\"fullDocument\":\"default\",\"resumeAfter\":{\"_data\":\"82621F5485000000022B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54853284546A99670EFC0004\"}}},{\"$match\":{\"fullDocument.msg\":{\"$exists\":true}}},{\"$project\":{\"fullDocument\":1}}],\"cursor\":{\"batchSize\":1},\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"planSummary\":\"COLLSCAN\",\"cursorid\":8620417026431980160,\"keysExamined\":0,\"docsExamined\":1,\"numYields\":0,\"nreturned\":1,\"queryHash\":\"7C2ADF3A\",\"reslen\":593,\"locks\":{\"Global\":{\"acquireCount\":{\"r\":1}},\"Mutex\":{\"acquireCount\":{\"r\":1}}},\"readConcern\":{\"level\":\"majority\"},\"writeConcern\":{\"w\":\"majority\",\"wtimeout\":0,\"provenance\":\"implicitDefault\"},\"storage\":{},\"remote\":\"192.168.2.100:53792\",\"protocol\":\"op_msg\",\"durationMillis\":0}}{\"t\":{\"$date\":\"2022-03-02T06:47:37.751-05:00\"},\"s\":\"I\", \"c\":\"COMMAND\", \"id\":51803, \"ctx\":\"conn66\",\"msg\":\"Slow query\",\"attr\":{\"type\":\"command\",\"ns\":\"test.foo\",\"command\":{\"getMore\":8620417026431980160,\"collection\":\"foo\",\"batchSize\":1,\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221647,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"originatingCommand\":{\"aggregate\":\"foo\",\"pipeline\":[{\"$changeStream\":{\"fullDocument\":\"default\",\"resumeAfter\":{\"_data\":\"82621F5485000000022B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F54853284546A99670EFC0004\"}}},{\"$match\":{\"fullDocument.msg\":{\"$exists\":true}}},{\"$project\":{\"fullDocument\":1}}],\"cursor\":{\"batchSize\":1},\"lsid\":{\"id\":{\"$uuid\":\"4a230956-9cbe-48a9-9093-8c2fae2b659f\"}},\"$clusterTime\":{\"clusterTime\":{\"$timestamp\":{\"t\":1646221637,\"i\":1}},\"signature\":{\"hash\":{\"$binary\":{\"base64\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\"subType\":\"0\"}},\"keyId\":0}},\"$db\":\"test\"},\"planSummary\":\"COLLSCAN\",\"cursorid\":8620417026431980160,\"keysExamined\":0,\"docsExamined\":2024,\"numYields\":411,\"nreturned\":1,\"queryHash\":\"7C2ADF3A\",\"reslen\":597,\"locks\":{\"Global\":{\"acquireCount\":{\"r\":412}},\"Mutex\":{\"acquireCount\":{\"r\":1}}},\"readConcern\":{\"level\":\"majority\"},\"writeConcern\":{\"w\":\"majority\",\"wtimeout\":0,\"provenance\":\"implicitDefault\"},\"storage\":{\"data\":{\"bytesRead\":13017774068,\"timeReadingMicros\":6513189},\"timeWaitingMicros\":{\"cache\":19677}},\"remote\":\"192.168.2.100:53792\",\"protocol\":\"op_msg\",\"durationMillis\":8090}}From start to finish both approaches will take approximately the same amount of time, however from an application responsiveness point of view processing events as they’re found compared to waiting for a batch is likely a better user experience.How Internal Aggregation Batching Logic Affects batchSizeExpanding on this further, let’s say we wanted to resume after the third last entry (“200 6MB documents added”):2022-03-02T11:47:31.234Z Change received: \"200 6MB documents added\" (token: 82621F554D000000052B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F554D3284546A996712EC0004)2022-03-02T11:47:31.239Z Change received: \"Adding 2000 more 6MB documents...\" (token: 82621F554D000000062B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F554D3284546A996712ED0004)2022-03-02T11:47:39.334Z Change received: \"This is the last document we'd expect\" (token: 82621F5724000000012B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F57243284546A99671ABE0004)To do this we’d supply the resumeToken (82621F554D000000052B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F554D3284546A996712EC0004 as seen above) to the code sample and run again. The expectation in this case would be that “Adding 2000 more 6MB documents…“ would almost immediately return, followed after a brief delay by “This is the last document we’d expect”, however when we run the code … that’s not what we see. Instead after 6+ seconds both documents are returned:2022-03-02T12:15:49.134Z Resuming Change Stream ...2022-03-02T12:15:55.831Z Change received: \"Adding 2000 more 6MB documents...\" (token: 82621F554D000000062B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F554D3284546A996712ED0004)2022-03-02T12:15:55.838Z Change received: \"This is the last document we'd expect\" (token: 82621F5724000000012B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F57243284546A99671ABE0004)As an optimization, MongoDB’s query engine internally caches data from a cursor before pipeline processing. This is controlled by the internalDocumentSourceCursorBatchSizeBytes query execution knob which defaults to 4MB (lowered from 16MB in MongoDB 3.4.2 via SERVER-27406).We can verify this tuneable is in fact affecting the behavior of our change stream by lowering the value from 4194304 to 128 (via the mongosh shell):db.adminCommand({ setParameter: 1, internalDocumentSourceCursorBatchSizeBytes: 128});After making this change, resuming our change stream returns “Adding 2000 more 6MB documents…“ almost instantly whereas “This is the last document we’d expect” returns 7 seconds later.2022-03-02T14:11:41.416Z Resuming Change Stream ...2022-03-02T14:11:41.445Z Change received: \"Adding 2000 more 6MB documents...\" (token: 82621F554D000000062B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F554D3284546A996712ED0004)2022-03-02T14:11:48.054Z Change received: \"This is the last document we'd expect\" (token: 82621F5724000000012B022C0100296E5A1004D9EC8991B42F4F71BA61FC5BA26E2DED46645F69640064621F57243284546A99671ABE0004) Though this improves the performance of our isolated test, this batching behavior is in place for a reason (one example outlined in SERVER-27829). Changing internalDocumentSourceCursorBatchSizeBytes in production may adversely affect other workloads and would not be advisable.SummaryIf you’re using MongoDB Change Streams and filtering for events that occur infrequently (compared to other activity within the oplog) resuming the change stream may appear “sluggish” using the defaults. Consider specifying a custom batchSize based on your workload to potentially improve the time to returning the first event.Let me know in the comments below if you found this article helpful :)ReproductionThe scripts used in this article can be found below. I configured a local environment running a MongoDB 5.2.0 3 node replica set using the m version manager as well as mtools.m 5.2.0-entmlaunch init --replicaset --nodes 3 --bind_ip_all --binarypath $(m bin 5.2.0-ent)To use the scripts below save them locally and execute the associated commands from the same directory.shell-configure-test.jsThis script for the mongo/mongosh shell contains the helper functions used in this article to configure the environment and generate the write load.// filename: shell-configure-test.js//function setupEnvironment() { // set the oplog to at least 20GB (20480MB) so our workload doesn't roll out db.adminCommand({ replSetResizeOplog: 1, size: 20480 }); // insert one document and observe the result from the change stream cursor db.getSiblingDB(\"test\").foo.insertOne({ msg: \"We expect our filter to match this\" });}function randomString(length) { var result = ''; var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'; var charactersLength = characters.length; for ( var i = 0; i &lt; length; i++ ) { result += characters.charAt(Math.floor(Math.random() * charactersLength)); } return result;}function writeJunk(count, stringLength) { print(\"Pushing \" + count + \" junk docs of size \" + stringLength); var data = []; // doesn't matter what the string is so just reuse it var string = randomString(stringLength); for (var i = 0; i &lt; count; i++) { data.push({ i: i, s: string }); } db.getSiblingDB(\"test\").foo.insertMany(data);}function seedCollection() { db.foo.insertOne({ msg: \"This document will be 1Kb\", s: randomString(1024) }); writeJunk(100, 1048576 * 6); db.foo.insertOne({ msg: \"100 6MB documents, then another 1Kb document\", s: randomString(1024) }); writeJunk(100, 1048576 * 6); db.foo.insertOne({ msg: \"And another 100 6MB documents, then another 1Kb document\", s: randomString(1024) }); db.foo.insertOne({ msg: \"... followed immediately by a 1MB document\", s: randomString(1024 * 1024) }); writeJunk(100, 1048576 * 6); db.foo.insertOne({ msg: \"100 6MB documents preceded this 3MB document\", s: randomString(1024 * 1024 * 3) }); db.foo.insertOne({ msg: \"... followed by another 1MB document\", s: randomString(1024 * 1024) }); writeJunk(500, 1048576 * 6); db.foo.insertOne({ msg: \"500 6MB documents added\" }); writeJunk(200, 1048576 * 6); db.foo.insertOne({ msg: \"200 6MB documents added\" }); db.foo.insertOne({ msg: \"Adding 2000 more 6MB documents...\" }); writeJunk(2000, 1048576 * 6); db.foo.insertOne({ msg: \"This is the last document we'd expect\" });}nodejs-capture-first-event.jsThis Node.js script should be used to listen for the first change event from which we’ll extract a resume token for later use.// file: nodejs-capture-first-event.js//// Configure the `MongoClient` with connection details appropriate to your environmentconst { MongoClient } = require(\"mongodb\");const client = new MongoClient(\"mongodb://localhost:27017/test?replicaSet=replset\");async function run() { await client.connect(); const database = client.db(\"test\"); const collection = database.collection(\"foo\"); var changeStream = collection.watch([ { $match: { \"fullDocument.msg\": { $exists: true } } }]); changeStream.on(\"change\", next =&gt; { console.log(`${new Date().toISOString()} Change received: `, next); process.exit(0); });}run().catch(console.dir);nodejs-resume-changestream.jsThe resume token found when running nodejs-capture-first-event.js can be plugged into this script to capture matching events following the token.// file: nodejs-resume-changestream.js//// Configure the `MongoClient` with connection details appropriate to your environmentconst { MongoClient } = require(\"mongodb\");const client = new MongoClient(\"mongodb://localhost:27017/test?replicaSet=replset\");async function run() { await client.connect(); const database = client.db(\"test\"); const collection = database.collection(\"foo\"); // replace the resume token with the value from your own tests var resumeToken = { _data: '82620B98E5000000022B022C0100296E5A1004437FB549CFDD45269DD59B9BF0EB354746645F69640064620B98E564DA118651C642000004' } console.log(`${new Date().toISOString()} Resuming Change Stream ...`); var changeStream = collection.watch([ { $match: { \"fullDocument.msg\": { $exists: true } } }, { $project: { fullDocument: 1 } } ], { resumeAfter: resumeToken }); changeStream.on(\"change\", next =&gt; { console.log(`${new Date().toISOString()} Change received: ${next.fullDocument.msg} (token: ${next._id._data})`); });}run().catch(console.dir);" }, { "title": "Cleaning Up ETL Results in MongoDB by Transposing Multiple Arrays", "url": "/blog/2022/02/07/cleaning-up-etl-results-in-mongodb-by-transposing-multiple-arrays/", "categories": "MongoDB", "tags": "mongodb, aggregation, etl", "date": "2022-02-07 09:05:00 -0500", "snippet": "When performing an ETL from a normalized relational dataset there’s a good chance a 1:1 conversion won’t produce the desired results on the first pass. For example, if the goal is to Model One-to-M...", "content": "When performing an ETL from a normalized relational dataset there’s a good chance a 1:1 conversion won’t produce the desired results on the first pass. For example, if the goal is to Model One-to-Many Relationships with Embedded Documents but the dataset contains a number of relationships mapped to individual fields as arrays of scalar values, you’ll likely want to convert these to subdocuments to facilitate access and interaction from your applications.In this example, our data has been imported from a legacy system with the above design, and has produced documents in a punch_cards collection with the following schema:{ \"date\": \"December 1, 2020\", \"category\": \"AM\", \"events\": { \"employee\": [ \"Alex\", \"Max\", \"Will\", \"Sara\" ], \"action\": [ \"Punched In\", \"Punched In\", \"Punched Out\", \"Punched In\" ], \"timestamp\": [ \"2020/12/01 08:01\", \"2020/12/01 07:58\", \"2020/12/01 09:03\", \"2020/12/01 09:59\"] }},{ \"date\": \"December 1, 2020\", \"category\": \"PM\", \"events\": { \"employee\": [ \"Alex\", \"Max\", \"Sara\", \"Will\" ], \"action\": [ \"Punched Out\", \"Punched Out\", \"Punched Out\", \"Punched In\" ], \"timestamp\": [ \"2020/12/01 16:00\", \"2020/12/01 16:30\", \"2020/12/01 20:00\", \"2020/12/01 23:58\"] }} The initial schema is a result of limitations with the initial import strategy. The goals of this article are to showcase how these limitations an be overcome once the initial ETL from source system to MongoDB has been completed.The desired end state is a document with all events mapped to an array of subdocuments:{ \"events\" : [ { \"employee\" : \"Alex\", \"action\" : \"Punched Out\", \"timestamp\" : \"2020/12/01 16:00\" }, { \"employee\" : \"Max\", \"action\" : \"Punched Out\", \"timestamp\" : \"2020/12/01 16:30\" }, { \"employee\" : \"Sara\", \"action\" : \"Punched Out\", \"timestamp\" : \"2020/12/01 20:00\" }, { \"employee\" : \"Will\", \"action\" : \"Punched In\", \"timestamp\" : \"2020/12/01 23:58\" } ]}Using MongoDB’s Aggregation functionality there are multiple ways to produce the desired results, two of which I’d like to share below.The “Easy” WayStarting in MongoDB 3.4 the $zip operator was introduced, which could be used to transpose an array of input arrays so that the first element of the output array would be an array containing, the first element of the first input array, the first element of the second input array, etc. If only $zip is used the resulting documents would appear as an array of arrays:db.punch_cards.aggregate([{ $project: { events: { $zip: { inputs: [ \"$events.employee\", \"$events.action\", \"$events.timestamp\" ]} }}}]);// output{ \"events\" : [ [ \"Alex\", \"Punched Out\", \"2020/12/01 16:00\" ], [ \"Max\", \"Punched Out\", \"2020/12/01 16:30\" ], [ \"Sara\", \"Punched Out\", \"2020/12/01 20:00\" ], [ \"Will\", \"Punched In\", \"2020/12/01 23:58\" ] ]}By providing the output of the $zip as the input to a $map the results can be easily rewritten to match our desired schema:db.punch_cards.aggregate([{ $project: { events: { $map: { input: { $zip: { inputs: [ \"$events.employee\", \"$events.action\", \"$events.timestamp\" ]} }, as: \"zipped\", in: { employee: { $arrayElemAt: [ \"$$zipped\", 0 ] }, action: { $arrayElemAt: [ \"$$zipped\", 1 ] }, timestamp: { $arrayElemAt: [ \"$$zipped\", 2 ] } } } }}}]); These pipeline examples only project the events field. To include additional fields (ex: date, category) these would have to be included in the $project stage explicitly.&lt;/p&gt;The “Hard” WayAssuming you’re running MongoDB 3.2 or earlier (which is highly unlikely) and don’t have access to the $zip operator, a more complex aggregation pipeline can be created that $unwinds each array, then tags each document emitted with a field indicating if all results are from the same array index for each document, then filters out matches and re-$groups them:db.punch_cards.aggregate([{ $unwind: { path: \"$events.employee\", includeArrayIndex: \"idx01\" } },{ $unwind: { path: \"$events.action\", includeArrayIndex: \"idx02\" } },{ $unwind: { path: \"$events.timestamp\", includeArrayIndex: \"idx03\" } },{ $project: { events: 1, keep: { $cond: { if: { $and: [ { $eq: [\"$idx01\", \"$idx02\" ] }, { $eq: [\"$idx02\", \"$idx03\" ] } , { $eq: [\"$idx03\", \"$idx01\" ] } ] }, then: true, else: false } }}},{ $match: { keep: true } },{ $group: { _id: \"$_id\", events: { $push: \"$events\" }}},]);I’ve included two variations of the pipeline to illustrate the different approaches you can take to solve the same problem. Depending on your use case the “hard” way may be more appropriate, however the “easy” way requires far less processing and should be more performant as a result.Updating the DataThe pipeline examples above don’t acctually writing any changes back to disk. This is by design to ensure no copy/paste errors result in unanticipated data loss as a result.Once you are satisfied with the transformations and are ready to write the results, either an $out or $merge stage can be added as the final stage in the pipeline." }, { "title": "Generate MongoDB Index Utilization Report", "url": "/blog/2022/01/24/generate-mongodb-index-utilization-report/", "categories": "MongoDB", "tags": "mongodb, queries, indexing", "date": "2022-01-24 09:49:50 -0500", "snippet": "When MongoDB 3.2 introduced the $indexStats aggregation pipeline stage accesses details were suddenly accessible to users. As a result, scripts could now be written to better understand how frequen...", "content": "When MongoDB 3.2 introduced the $indexStats aggregation pipeline stage accesses details were suddenly accessible to users. As a result, scripts could now be written to better understand how frequently indexes were being accessed by operations.The following script will cycle through all databases and collections (omitting admin, local and config) to produce a delimited report of index utilization:var DELIMITER = '\\t';var IGNORE = [\"admin\", \"local\", \"config\"];print([\"Namespace\", \"Index Name\", \"Usage Count\", \"Last Used\", \"Index Size (bytes)\", \"Index Specification\"].join(DELIMITER));db.getMongo().getDBNames().forEach(function (dbname) { if (IGNORE.indexOf(dbname) &lt; 0) { db.getSiblingDB(dbname).getCollectionNames().forEach(function (cname) { if (!cname.includes(\"system.\")) { var coll = db.getSiblingDB(dbname).getCollection(cname); var stats = coll.stats(); // make sure stats ran successfully (if it's a view it won't) if (stats.ok == 1) { coll.aggregate([{ $indexStats: {} }]).forEach(function (ix) { var ixname = ix.name; var ns = dbname + \".\" + cname; var ixsize = stats.indexSizes[ixname]; var ops = ix.accesses.ops; var since = ix.accesses.since; print([ns, ixname, ops, since, ixsize, JSON.stringify(ix.spec)].join(DELIMITER)); }); } } }); }});For example, I ran the above against a test cluster I have in MongoDB Atlas with a DELIMITER set as a pipe character (|) to facilitate the generation of a Markdown table such as the following: Namespace Index Name Usage Count Last Used Index Size (bytes) Index Specification data.users age_1_address.state_1_name_1 NumberLong(0) Tue Jan 18 2022 14:05:40 GMT-0500 (Eastern Standard Time) 48164864 {“v”:2,”key”:{“age”:1,”address.state”:1,”name”:1},”name”:”age_1_address.state_1_name_1”,”ns”:”data.users”} data.users id NumberLong(0) Tue Jan 18 2022 14:05:40 GMT-0500 (Eastern Standard Time) 34496512 {“v”:2,”key”:{“id”:1},”name”:”_id”,”ns”:”data.users”} data.users address.state_1_name_1_age_1 NumberLong(0) Tue Jan 18 2022 14:05:40 GMT-0500 (Eastern Standard Time) 43565056 {“v”:2,”key”:{“address.state”:1,”name”:1,”age”:1},”name”:”address.state_1_name_1_age_1”,”ns”:”data.users”} data.users age_1 NumberLong(0) Tue Jan 18 2022 14:05:40 GMT-0500 (Eastern Standard Time) 13721600 {“v”:2,”key”:{“age”:1},”name”:”age_1”,”ns”:”data.users”} encryption.__keyVault id NumberLong(0) Tue Jan 18 2022 14:05:40 GMT-0500 (Eastern Standard Time) 36864 {“v”:2,”key”:{“id”:1},”name”:”_id”} medicalRecords.patients id NumberLong(0) Tue Jan 18 2022 14:05:40 GMT-0500 (Eastern Standard Time) 36864 {“v”:2,”key”:{“id”:1},”name”:”_id”} As indexes aren’t free (see “Indexing Strategies”) dropping unused indexes will allow you to reclaim some disk space and potentially improve write throughput. In a replica set the output would be for the current node you’re connected to (likely the PRIMARY). Before dropping indexes ensure you review the output above for all data bearing nodes as some workloads may only target SECONDARY members, which would result in (likely) lower usage statistics on the PRIMARY.Note that the Last Used values are reset when a mongod is restarted. If the Usage Count is 0, the Last Used value will indicate the time the process was started; not when that index was actually last used. The output of the Last Values above will be in your local timezone. For more information see the MDN Docs for Date.Let me know if you find this script useful in the comments below ;)" }, { "title": "What Versions of MongoDB Has This Node Run?", "url": "/blog/2022/01/04/what-versions-of-mongodb-has-this-node-run/", "categories": "MongoDB", "tags": "mongodb", "date": "2022-01-04 15:33:44 -0500", "snippet": "Ever wanted to know how many different versions of MongoDB the current node has run under? Assuming the node’s local database hasn’t been reset (for example via an initial sync), it will contain a ...", "content": "Ever wanted to know how many different versions of MongoDB the current node has run under? Assuming the node’s local database hasn’t been reset (for example via an initial sync), it will contain a startup_log collection that holds this information. On startup, each mongod instance inserts a document into the startup_log capped collection (capped at 10MB) with diagnostic information about the mongod instance itself and host information.This collection can be used to generate a report using this diagnostic information using the following script run from a mongo or mongosh shell connected to your cluster:var lastVersion = null;print(\"Process Last Started\\tMongoDB Version\\tCommand Line Options\");db.getSiblingDB(\"local\").startup_log.find({}).sort({ startTime: -1 }).forEach(function(d) { if (d.buildinfo.version != lastVersion) { lastVersion = d.buildinfo.version; print([d.startTime.toUTCString(), lastVersion, JSON.stringify(d.cmdLine)].join('\\t')); }});The output above will return tab-delimited results, however these could be easily updated to produce a CSV or Markdown table similar to the following: Process Last Started MongoDB Version Command Line Options Fri, 10 Dec 2021 19:18:30 GMT 4.4.10 { “config”: … } Thu, 14 Oct 2021 18:08:53 GMT 4.4.9 { “config”: … } Wed, 08 Sep 2021 18:22:50 GMT 4.4.8 { “config”: … } Sat, 10 Jul 2021 13:33:24 GMT 4.4.6 { “config”: … } Thu, 06 May 2021 18:12:19 GMT 4.4.5 { “config”: … } Sat, 27 Mar 2021 18:10:53 GMT 4.4.4 { “config”: … } Thu, 18 Mar 2021 18:47:19 GMT 4.2.12 { “config”: … } Thu, 21 Jan 2021 20:47:22 GMT 4.2.11 { “config”: … } Sat, 21 Nov 2020 15:41:39 GMT 4.2.10 { “config”: … } Wed, 16 Sep 2020 09:58:36 GMT 4.2.9 { “config”: … } Sun, 16 Aug 2020 10:52:48 GMT 4.2.8 { “config”: … } Sat, 30 May 2020 18:13:48 GMT 4.2.6 { “config”: … } Thu, 28 May 2020 18:23:28 GMT 4.2.7 { “config”: … } Thu, 21 May 2020 18:15:00 GMT 4.2.6 { “config”: … } Thu, 02 Apr 2020 18:27:14 GMT 4.2.5 { “config”: … } Thu, 02 Apr 2020 11:50:29 GMT 4.2.3 { “config”: … } Thu, 02 Apr 2020 11:47:16 GMT 4.0.16 { “config”: … } Wed, 01 Apr 2020 19:26:17 GMT 3.6.17 { “config”: … } Mon, 06 Jan 2020 19:19:03 GMT 3.6.16 { “config”: … } Tue, 26 Nov 2019 19:01:22 GMT 3.6.15 { “config”: … } Fri, 08 Nov 2019 19:30:40 GMT 3.6.14 { “config”: … } Fri, 26 Jul 2019 19:12:13 GMT 3.6.13 { “config”: … } Tue, 04 Jun 2019 19:19:59 GMT 3.6.12 { “config”: … } Thu, 28 Mar 2019 19:21:07 GMT 3.6.11 { “config”: … } I ran this against one of my development MongoDB Atlas clusters to show how version information persists regardless of the order of upgrade or major/minor version used." }, { "title": "Troubleshooting 'MongoDB Cursor xxxxxx not found' Errors", "url": "/blog/2021/12/29/troubleshooting-mongodb-cursor-xxxxxx-not-found-errors/", "categories": "MongoDB", "tags": "mongodb, queries", "date": "2021-12-29 09:26:53 -0500", "snippet": "Read operations that return multiple documents do not immediately return all values matching the query. Because a query can potentially match very large sets of documents, these operations rely upo...", "content": "Read operations that return multiple documents do not immediately return all values matching the query. Because a query can potentially match very large sets of documents, these operations rely upon an object called a cursor. A cursor fetches documents in batches to reduce both memory consumption and network bandwidth usage.One category of issue you may observe occasionally in your application logs is a CursorNotFound entry such as the following (from an application using the MongoDB Java Driver): com.mongodb.MongoCursorNotFoundException: Query failed with error code -5 and error message 'Cursor 4865637895305205821 not found on server prod-shard-00-00.xxxxx.mongodb.net:27017' on server prod-shard-00-00.xxxxx.mongodb.net:27017Depending on whether the version of MongoDB your cluster is using is greater than 4.4.7 the “cursor id xxxxxx not found” can refer to two possible timeouts.(1) cursorTimeoutMillis being exceededThe cursorTimeoutMillis server parameter sets the expiration threshold (in milliseconds) for idle cursors before MongoDB removes them. The default value for cursorTimeoutMillis is 600000, or 10 minutes. Idle cursors are timed out using the ClientCursorMonitor background job, whose thread is identified in the mongod logs as clientcursormon.The ClientCursorMonitor identifies and reaps idle cursors every 4 seconds (the default value of clientCursorMonitorFrequencySecs).When a cursor timeout is identified these can be found in the log with entries similar to the following:{\"t\":{\"$date\":\"2021-12-29T09:22:41.937-05:00\"},\"s\":\"I\",\"c\":\"COMMAND\",\"id\":51803,\"ctx\":\"conn3\",\"msg\":\"Slow query\",\"attr\":{\"type\":\"command\",\"ns\":\"admin.foo\",\"appName\":\"MongoDB Shell\",\"command\":{\"find\":\"foo\",\"filter\":{},\"batchSize\":1,\"lsid\":{\"id\":{\"$uuid\":\"824bd767-4a7d-4240-a8cd-8f4c83c8cf99\"}},\"$db\":\"admin\"},\"planSummary\":\"COLLSCAN\",\"cursorid\":4225966264683133400,\"keysExamined\":0,\"docsExamined\":1,\"numYields\":0,\"nreturned\":1,\"reslen\":123,\"locks\":{\"ReplicationStateTransition\":{\"acquireCount\":{\"w\":1}},\"Global\":{\"acquireCount\":{\"r\":1}},\"Database\":{\"acquireCount\":{\"r\":1}},\"Collection\":{\"acquireCount\":{\"r\":1}},\"Mutex\":{\"acquireCount\":{\"r\":1}}},\"storage\":{},\"protocol\":\"op_msg\",\"durationMillis\":0}}{\"t\":{\"$date\":\"2021-12-29T09:22:44.096-05:00\"},\"s\":\"I\",\"c\":\"QUERY\",\"id\":20529,\"ctx\":\"clientcursormon\",\"msg\":\"Cursor timed out\",\"attr\":{\"cursorId\":4225966264683133400,\"idleSince\":{\"$date\":\"2021-12-29T14:22:41.937Z\"}}}{\"t\":{\"$date\":\"2021-12-29T09:22:48.031-05:00\"},\"s\":\"I\",\"c\":\"COMMAND\",\"id\":51803,\"ctx\":\"conn3\",\"msg\":\"Slow query\",\"attr\":{\"type\":\"command\",\"ns\":\"admin.$cmd\",\"appName\":\"MongoDB Shell\",\"command\":{\"getMore\":4225966264683133400,\"collection\":\"foo\",\"batchSize\":1,\"lsid\":{\"id\":{\"$uuid\":\"824bd767-4a7d-4240-a8cd-8f4c83c8cf99\"}},\"$db\":\"admin\"},\"cursorid\":4225966264683133400,\"numYields\":0,\"ok\":0,\"errMsg\":\"cursor id 4225966264683133185 not found\",\"errName\":\"CursorNotFound\",\"errCode\":43,\"reslen\":129,\"locks\":{},\"protocol\":\"op_msg\",\"durationMillis\":0}}The log messages above have had their log component verbosity increased and were generated using the following script:# bashrm -rf data &amp;&amp; mkdir data$(m bin 4.4.7-ent)/mongod --dbpath data --bind_ip_all// mongo shelldb.runCommand({ setParameter: 1, cursorTimeoutMillis: 1000 });db.runCommand({ setParameter: 1, clientCursorMonitorFrequencySecs: 2 });db.foo.drop();db.foo.insertMany([ {}, {} ]);db.setLogLevel(4, 'command')db.foo.find({}).batchSize(1).forEach(function(d) { printjson(d); sleep(1000 * 6);});db.setLogLevel(-1, 'command')Note that the log contains a …”s”:”I”,”c”:”QUERY”,”id”:20529,”ctx”:”clientcursormon”,”msg”:”Cursor timed out…“ entry, which is at the default log verbosity. If this message is present the cursor timed out as a result of being idle longer than cursorTimeoutMillis and would have returned an error such as:Error: command failed: {\t\"ok\" : 0,\t\"errmsg\" : \"cursor id 4225966264683133185 not found\",\t\"code\" : 43,\t\"codeName\" : \"CursorNotFound\"} with original command request: {\t\"getMore\" : NumberLong(\"4225966264683133185\"),\t\"collection\" : \"foo\",\t\"batchSize\" : 1,\t\"lsid\" : {\t\t\"id\" : UUID(\"824bd767-4a7d-4240-a8cd-8f4c83c8cf99\")\t}}(2) localLogicalSessionTimeoutMinutes being exceededStarting with MongoDB 3.6 server sessions, or logical sessions, are the underlying framework used by client sessions to support Causal Consistency and retryable writes. When using a MongoDB Driver that is 3.6+ compatible implicit sessions are used (per the Drivers Sessions specification). As such, if your application is using a 3.6+ compatible driver, you are using sessions.The default value of localLogicalSessionTimeoutMinutes is 30 minutes and controls the time (in minutes) that a session remains active after its most recent use. Sessions that have not received a new read/write operation from the client or been refreshed with refreshSessions within this threshold are cleared from the cache.Starting with MongoDB 4.4.8 (via SERVER-6036) when a cursor is opened as part of a session, its lifetime will be tied to that session and as a result closing or timing out of a session will kill all associated cursors. This results in cursorTimeoutMillis/clientcursormon not being used to control cursor timeouts for any cursor with a session id.When a cursor times out as a result of the session being reaped the error appears as follows:{\"t\":{\"$date\":\"2021-12-29T08:02:04.942-05:00\"},\"s\":\"I\",\"c\":\"COMMAND\",\"id\":51803,\"ctx\":\"conn1\",\"msg\":\"Slow query\",\"attr\":{\"type\":\"command\",\"ns\":\"admin.foo\",\"appName\":\"MongoDB Shell\",\"command\":{\"find\":\"foo\",\"filter\":{},\"batchSize\":1,\"lsid\":{\"id\":{\"$uuid\":\"824bd767-4a7d-4240-a8cd-8f4c83c8cf99\"}},\"$db\":\"admin\"},\"planSummary\":\"COLLSCAN\",\"cursorid\":63169428846689080,\"keysExamined\":0,\"docsExamined\":1,\"numYields\":0,\"nreturned\":1,\"reslen\":123,\"locks\":{\"ReplicationStateTransition\":{\"acquireCount\":{\"w\":1}},\"Global\":{\"acquireCount\":{\"r\":1}},\"Database\":{\"acquireCount\":{\"r\":1}},\"Collection\":{\"acquireCount\":{\"r\":1}},\"Mutex\":{\"acquireCount\":{\"r\":1}}},\"storage\":{},\"protocol\":\"op_msg\",\"durationMillis\":0}}{\"t\":{\"$date\":\"2021-12-29T08:03:53.030-05:00\"},\"s\":\"I\",\"c\":\"QUERY\",\"id\":20528,\"ctx\":\"LogicalSessionCacheRefresh\",\"msg\":\"Killing cursor as part of killing session(s)\",\"attr\":{\"cursorId\":63169428846689080}}{\"t\":{\"$date\":\"2021-12-29T08:04:04.968-05:00\"},\"s\":\"I\",\"c\":\"COMMAND\",\"id\":51803,\"ctx\":\"conn1\",\"msg\":\"Slow query\",\"attr\":{\"type\":\"command\",\"ns\":\"admin.$cmd\",\"appName\":\"MongoDB Shell\",\"command\":{\"getMore\":63169428846689080,\"collection\":\"foo\",\"batchSize\":1,\"lsid\":{\"id\":{\"$uuid\":\"824bd767-4a7d-4240-a8cd-8f4c83c8cf99\"}},\"$db\":\"admin\"},\"cursorid\":63169428846689080,\"numYields\":0,\"ok\":0,\"errMsg\":\"cursor id 63169428846689082 not found\",\"errName\":\"CursorNotFound\",\"errCode\":43,\"reslen\":127,\"locks\":{},\"protocol\":\"op_msg\",\"durationMillis\":0}}These log entries were generated by adjusting our previous example as seen below:# bashrm -rf data &amp;&amp; mkdir data$(m bin 4.4.11-ent)/mongod --dbpath data --bind_ip_all --setParameter logicalSessionRefreshMillis=1000 --setParameter localLogicalSessionTimeoutMinutes=1db.foo.drop();db.foo.insertMany([ {}, {} ]);db.setLogLevel(4, 'command')db.foo.find({}).batchSize(1).forEach(function(d) { printjson(d); sleep(1000 * 120);});db.setLogLevel(-1, 'command')Now the log entry that controls timing out the cursor is generated by the LogicalSessionCacheRefresh thread. Note that as the end result is the same (idle cursor is timed out) the error returned to the application would appear to be the same as well:uncaught exception: Error: command failed: {\t\"ok\" : 0,\t\"errmsg\" : \"cursor id 63169428846689082 not found\",\t\"code\" : 43,\t\"codeName\" : \"CursorNotFound\"} with original command request: {\t\"getMore\" : NumberLong(\"63169428846689082\"),\t\"collection\" : \"foo\",\t\"batchSize\" : 1,\t\"lsid\" : {\t\t\"id\" : UUID(\"824bd767-4a7d-4240-a8cd-8f4c83c8cf99\")\t}}SummaryRegardless of which MongoDB 3.6+ version is being used an idle cursor can time out with the failure bubbling up to the application with an error message such as “cursor id 63169428846689082 not found”, which is the same as if the cursor were timed out.Note that setting the noCursorTimeout cursor option in a MongoDB 3.6+ cluster can still result in a cursor being closed as Session Idle Timeout Overrides noCursorTimeout.For operations that return a cursor, if the cursor may be idle for longer than localLogicalSessionTimeoutMinutes minutes, issue the operation within an explicit session using Mongo.startSession() and periodically refresh the session using the refreshSessions command. For example:var session = db.getMongo().startSession()var sessionId = session.getSessionId().idvar cursor = session.getDatabase(\"examples\").getCollection(\"data\").find().noCursorTimeout()var refreshTimestamp = new Date() // take note of time at operation startwhile (cursor.hasNext()) { // Check if more than 5 minutes have passed since the last refresh if ( (new Date()-refreshTimestamp)/1000 &gt; 300 ) { print(\"refreshing session\") db.adminCommand({\"refreshSessions\" : [sessionId]}) refreshTimestamp = new Date() } // process cursor normally}Refreshing explicit sessions is one way to work around these timeouts, however this is only one approach. If there is a need to keep cursors idle for long periods of time these should be evaluated on a case by case basis to ensure refactoring isn’t a better solution.All examples in this article use the mongo shell however the logic could be adapted to your preferred language and used with the appropriate MongoDB Driver.Have any questions or comments? Post them below ;)" }, { "title": "MongoDB Driver Specifications", "url": "/blog/2021/12/23/mongodb-driver-specifications/", "categories": "MongoDB", "tags": "mongodb, drivers", "date": "2021-12-23 10:08:19 -0500", "snippet": "To ensure official MongoDB Drivers are developed with consistent functionality and APIs MongoDB maintains a set of public specifications (see GitHub Repository) that driver engineers can reference ...", "content": "To ensure official MongoDB Drivers are developed with consistent functionality and APIs MongoDB maintains a set of public specifications (see GitHub Repository) that driver engineers can reference while implementing functionality. These specifications can (and should) be used by community engineers building a community library or driver that will communicate with a MongoDB cluster.I will be diving deeper into some of these specifications in upcoming posts but to begin I’d like to summarize the existing specifications below.Current SpecificationsAuthenticationMongoDB supports various authentication strategies across various versions. When authentication is turned on in the database, a driver must authenticate before it is allowed to communicate with the server. This spec defines when and how a driver performs authentication with a MongoDB server.Performance BenchmarkingThis document describes a standard benchmarking suite for MongoDB drivers.BSON CorpusThe official BSON specification does not include test data, so this pseudo-specification describes tests for BSON encoding and decoding. It also includes tests for MongoDB's \"Extended JSON\" specification (hereafter abbreviated as extjson).BSON Decimal128 Type HandlingMongoDB 3.4 introduces a new BSON type representing high precision decimal (\"\\x13\"), known as Decimal128. 3.4 compatible drivers must support this type by creating a Value Object for it, possibly with accessor functions for retrieving its value in data types supported by the respective languages.Round-tripping Decimal128 types between driver and server MUST not change its value or representation in any way. Conversion to and from native language types is complicated and there are many pitfalls to represent Decimal128 precisely in all languages.Change StreamsAs of version 3.6 of the MongoDB server a new $changeStream pipeline stage is supported in the aggregation framework. Specifying this stage first in an aggregation pipeline allows users to request that notifications are sent for all changes to a particular collection. This specification defines the means for creating change streams in drivers, as well as behavior during failure scenarios.Client Side EncryptionMongoDB 4.2 introduced support for client side encryption, guaranteeing that sensitive data can only be encrypted and decrypted with access to both MongoDB and a separate key management provider (supporting AWS, Azure, GCP, a local provider, and KMIP). Once enabled, data can be seamlessly encrypted and decrypted with minimal application code changes.CollationAs of MongoDB server version 3.4 (maxWireVersion 5), a collation option is supported by the query system for matching and sorting on language strings in a locale-aware fashion.Command MonitoringThe performance monitoring specification defines a set of behaviour in the drivers for providing runtime information about commands to any 3rd party APM library as well internal driver use, such as logging.Wire CompressionThis specification describes how to implement Wire Protocol Compression between MongoDB drivers and mongod/mongos.Compression is achieved through a new bi-directional wire protocol opcode, referred to as OP_COMPRESSED.Server side compressor support is checked during the initial MongoDB Handshake, and is compatible with all historical versions of MongoDB. If a client detects a compatible compressor it will use the compressor for all valid requests.Connection Monitoring and PoolingDrivers currently support a variety of options that allow users to configure connection pooling behavior. Users are confused by drivers supporting different subsets of these options. Additionally, drivers implement their connection pools differently, making it difficult to design cross-driver pool functionality. By unifying and codifying pooling options and behavior across all drivers, we will increase user comprehension and code base maintainability.Connection StringThe purpose of the Connection String is to provide a machine readable way of configuring a MongoClient, allowing users to configure and change the connection to their MongoDB system without requiring any application code changes.This specification defines how the connection string is constructed and parsed. The aim is not to list all of connection string options and their semantics. Rather it defines the syntax of the connection string, including rules for parsing, naming conventions for options, and standard data types.CRUD APIThe CRUD API defines a set of related methods and structures defining a driver's API. As not all languages/frameworks have the same abilities, parts of the spec may or may not apply. These sections have been called out.GridFSGridFS is a convention drivers use to store and retrieve BSON binary data (type \"\\x05\") that exceeds MongoDB’s BSON-document size limit of 16 MiB. When this data, called a user file, is written to the system, GridFS divides the file into chunks that are stored as distinct documents in a chunks collection. To retrieve a stored file, GridFS locates and returns all of its component chunks. Internally, GridFS creates a files collection document for each stored file. Files collection documents hold information about stored files, and they are stored in a files collection.This spec defines a basic API for GridFS. This spec also outlines advanced GridFS features that drivers can choose to support in their implementations. Additionally, this document attempts to clarify the meaning and purpose of all fields in the GridFS data model, disambiguate GridFS terminology, and document configuration options that were previously unspecified.Initial DNS Seedlist DiscoveryPresently, seeding a driver with an initial list of ReplicaSet or MongoS addresses is somewhat cumbersome, requiring a comma-delimited list of host names to attempt connections to. A standardized answer to this problem exists in the form of SRV records, which allow administrators to configure a single domain to return a list of host names. Supporting this feature would assist our users by decreasing maintenance load, primarily by removing the need to maintain seed lists at an application level.This specification builds on the Connection String specification. It adds a new protocol scheme and modifies how the Host Information is interpreted.Load Balancer SupportThis specification defines driver behaviour when connected to MongoDB services through a load balancer.Max StalenessRead preference gains a new option, \"maxStalenessSeconds\".A client (driver or mongos) MUST estimate the staleness of each secondary, based on lastWriteDate values provided in server hello responses, and select only those secondaries whose staleness is less than or equal to maxStalenessSeconds.Most of the implementation of the maxStalenessSeconds option is specified in the Server Discovery And Monitoring Spec and the Server Selection Spec. This document supplements those specs by collecting information specifically about maxStalenessSeconds.OP_MSGOP_MSG is a bi-directional wire protocol opcode introduced in MongoDB 3.6 with the goal of replacing most existing opcodes, merging their use into one extendable opcode.HandshakeMongoDB 3.4 has the ability to annotate connections with metadata provided by the connecting client. The intent of this metadata is to be able to identify client level information about the connection, such as application name, driver name and version. The provided information will be logged through the mongod/mongos.log and the profile logs; this should enable sysadmins to easily backtrack log entries the offending application. The active connection data will also be queryable through aggregation pipeline, to enable collecting and analyzing driver trends.After connecting to a MongoDB node a hello command (if Versioned API is requested) or a legacy hello command is issued, followed by authentication, if appropriate. This specification augments this handshake and defines certain arguments that clients provide as part of the handshake.OCSP SupportThis specification is about the ability for drivers to to support OCSP—Online Certificate Status Protocol (RFC 6960)—and two of its related extensions: OCSP stapling (RFC 6066) and Must-Staple (RFC 7633).Polling SRV Records for mongos DiscoveryCurrently the Initial DNS Seedlist Discovery functionality provides a static seedlist when a MongoClient is constructed. Periodically polling the DNS SRV records would allow for the mongos proxy list to be updated without having to change client configuration.This specification builds on top of the original Initial DNS Seedlist Discovery specification, and modifies the Server Discovery and Monitoring specification's definition of monitoring a set of mongos servers in a Sharded TopologyType.Read and Write ConcernA driver must support configuring and sending read concern and write concerns to a server. This specification defines the API drivers must implement as well as how that API is translated into messages for communication with the server.Retryable ReadsThis specification is about the ability for drivers to automatically retry any read operation that has not yet received any results—due to a transient network error, a \"not writable primary\" error after a replica set failover, etc.—exactly once.Retryable WritesMongoDB 3.6 will implement support for server sessions, which are shared resources within a cluster identified by a session ID. Drivers compatible with MongoDB 3.6 will also implement support for client sessions, which are always associated with a server session and will allow for certain commands to be executed within the context of a server session.Additionally, MongoDB 3.6 will utilize server sessions to allow some write commands to specify a transaction ID to enforce at-most-once semantics for the write operation(s) and allow for retrying the operation if the driver fails to obtain a write result (e.g. network error or \"not writable primary\" error after a replica set failover). This specification will outline how an API for retryable write operations will be implemented in drivers. The specification will define an option to enable retryable writes for an application and describe how a transaction ID will be provided to write commands executed therein.Server Discovery and MonitoringThis spec defines how a MongoDB client discovers and monitors one or more servers. It covers monitoring a single server, a set of mongoses, or a replica set. How does the client determine what type of servers they are? How does it keep this information up to date? How does the client find an entire replica set from a seed list, and how does it respond to a stepdown, election, reconfiguration, or network error?All drivers must answer these questions the same. Or, where platforms' limitations require differences among drivers, there must be as few answers as possible and each must be clearly explained in this spec. Even in cases where several answers seem equally good, drivers must agree on one way to do it.Server MonitoringThis spec defines how a driver monitors a MongoDB server. In summary, the client monitors each server in the topology. The scope of server monitoring is to provide the topology with updated ServerDescriptions based on hello or legacy hello command responses.Server SelectionMongoDB deployments may offer more than one server that can service an operation. This specification describes how MongoDB drivers and mongos shall select a server for either read or write operations. It includes the definition of a \"read preference\" document, configuration options, and algorithms for selecting a server for different deployment topologies.Driver SessionsVersion 3.6 of the server introduces the concept of logical sessions for clients. A session is an abstract concept that represents a set of sequential operations executed by an application that are related in some way. This specification is limited to how applications start and end sessions. Other specifications define various ways in which sessions are used (e.g. causally consistent reads, retryable writes, or transactions).This specification also discusses how drivers participate in distributing the cluster time throughout a deployment, a process known as \"gossipping the cluster time\". While gossipping the cluster time is somewhat orthogonal to sessions, any driver that implements sessions MUST also implement gossipping the cluster time, so it is included in this specification.Snapshot ReadsVersion 5.0 of the server introduces support for read concern level \"snapshot\" (non-speculative) for read commands outside of transactions, including on secondaries. This spec builds upon the Sessions Specification to define how an application requests \"snapshot\" level read concern and how a driver interacts with the server to implement snapshot reads.SOCKS5 SupportSOCKS5 is a standardized protocol for connecting to network services through a separate proxy server. It can be used for connecting to hosts that would otherwise be unreachable from the local network by connecting to a proxy server, which receives the intended target host’s address from the client and then connects to that address.Convenient API for TransactionsReliably committing a transaction in the face of errors can be a complicated endeavor using the MongoDB 4.0 drivers API. This specification introduces a withTransaction method on the ClientSession object that allows application logic to be executed within a transaction. This method is capable of retrying either the commit operation or entire transaction as needed (and when the error permits) to better ensure that the transaction can complete successfully.TransactionsVersion 4.0 of the server introduces multi-statement transactions. This spec builds upon the Driver Sessions Specification to define how an application uses transactions and how a driver interacts with the server to implement transactions.The API for transactions must be specified to ensure that all drivers and the mongo shell are consistent with each other, and to provide a natural interface for application developers and DBAs who use multi-statement transactions.Unified Test FormatThis project defines a unified schema for YAML and JSON specification tests, which run operations against a MongoDB deployment. By conforming various spec tests to a single schema, drivers can implement a single test runner to execute acceptance tests for multiple specifications, thereby reducing maintenance of existing specs and implementation time for new specifications.URI OptionsHistorically, URI options have been defined in individual specs, and drivers have defined any additional options independently of one another. Because of the frustration due to there not being a single place where all of the URI options are defined, this spec aims to do just that—namely, provide a canonical list of URI options that each driver defines.Versioned APIAs MongoDB moves toward more frequent releases (a.k.a. continuous delivery), we want to enable users to take advantage of our rapidly released features, without exposing applications to incompatible server changes due to automatic server upgrades. A versioned API will help accomplish that goal.Older SpecificationsThere are also some older specifications in the repository that are there for historic context. If you’re writing a new driver this information is still useful though and should be reviewed.Handling of DBRefsDBRefs are a convention for expressing a reference to another document as an embedded document (i.e. BSON type 0x03). Several drivers provide a model class for encoding and/or decoding DBRef documents. This specification will both define the structure of a DBRef and provide guidance for implementing model classes in drivers that choose to do so.Bulk APIDriver support for Bulk write operationsEnumerating CollectionsA driver can contain a feature to enumerate all collections belonging to a database. This specification defines how collections should be enumerated.Enumerating DatabasesA driver can provide functionality to enumerate all databases on a server. This specification defines several methods for enumerating databases.Enumerating IndexesA driver can contain a feature to enumerate all indexes belonging to a collection. This specification defines how indexes should be enumerated.Extended JSONMongoDB Extended JSON is a string format for representing BSON documents. This specification defines the canonical format for representing each BSON type in the Extended JSON format. Thus, a tool that implements Extended JSON will be able to parse the output of any tool that emits Canonical Extended JSON. It also defines a Relaxed Extended JSON format that improves readability at the expense of type information preservation.Find, getMore and killCursors commandsThe Find, GetMore and KillCursors commands in MongoDB 3.2 or later replace the use of the legacy OP_QUERY, OP_GET_MORE and OP_KILL_CURSORS wire protocol messages. This specification lays out how drivers should interact with the new commands when compared to the legacy wire protocol level messages.Index ManagementThe index management spec defines a set of behaviour in the drivers for creating, removing and viewing indexes in a collection. It defines implementation details when required but also provides flexibility in the driver in that one or both of 2 unique APIs can be chosen to be implemented.ObjectID FormatThis specification documents the format and data contents of ObjectID BSON values that the drivers and the server generate when no field values have been specified (e.g. creating an ObjectID BSON value when no _id field is present in a document). It is primarily aimed to provide an alternative to the historical use of the MD5 hashing algorithm for the machine information field of the ObjectID, which is problematic when providing a FIPS compliant implementation. It also documents existing best practices for the timestamp and counter fields.Write CommandsMethod to do writes (insert/update/delete) that declares the write concern up front and support for batch operationsHandling of Native UUID TypesThe Java, C#, and Python drivers natively support platform types for UUID, all of which by default encode them to and decode them from BSON binary subtype 3. However, each encode the bytes in a different order from the others. To improve interoperability, BSON binary subtype 4 was introduced and defined the byte order according to RFC 4122, and a mechanism to configure each driver to encode UUIDs this way was added to each driver. The legacy representation remained as the default for each driver.Server Wire version and Feature ListThe 'WireVersion' captures all \"protocol events\" the write protocol went through. A protocol event is a change in the syntax of messages on the wire or the semantics of existing messages. We may also add \"logical\" entries for releases, although that's not mandatory.We use the wire version to determine if two agents (a driver, a mongos, or a mongod) can interact. Each agent carries two versions, a 'max' and a 'min' one. If the two agents are on the same 'max' number, they strictly speak the same wire protocol and it is safe to allow them to communicate. If two agents' ranges do not intersect, they should not beallowed to communicate.If two agents have at least one version in common they can communicate, but one of the sides has to be ready to compensate for not being on its partner version.What’s NextThe MongoDB JIRA project for specifications (SPEC) is not publicly available, however the DRIVERS project is. As new features are proposed that will impact all drivers, tickets are added to the DRIVERS project which anyone can review.More often than not these DRIVERS tickets influence specification changes and are a good source of information as to what changes may be coming.Interested in any particular specification and want a deeper dive? Let me know in the comments." }, { "title": "Sanitarium (DreamForge Intertainment) - 1998", "url": "/blog/2021/12/22/sanitarium/", "categories": "Let's Adventure!", "tags": "adventure, DreamForge, ASC Games", "date": "2021-12-22 06:08:00 -0500", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Labyrinth: The Computer ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Labyrinth: The Computer Game (Lucasfilm Games) - 1986Sanitarium (DreamForge Intertainment) - 1998→ Police Quest: In Pursuit of the Death Angel (Sierra On-Line) - 1987 Article 9 of 96 in this series.I took a little break from this series to work on other writing projects, but considering ScummVM announced support for this title officially I figured it was time to finally get back in the saddle and run through some adventure games again :)Sanitarium is a psychological horror point-and-click adventure video game that was originally released for Microsoft Windows. It was developed by DreamForge Intertainment and published by ASC Games in 1998. I have a long history with this game so that’s likely going to influence the rating somewhat, but for anyone that hasn’t played this game before the story is what steals the show.After a car accident knocks him unconscious, a man awakens from a coma, his face fully bandaged, to find that he has been admitted to a dilapidated sanitarium and that he cannot remember who he is or where he came from, or how he came to be there, though his fellow inmates seem to know him simply as “Max”. As he delves deeper into the asylum’s corridors in search of answers, Max finds himself transported to various obscure and otherworldly locations: a small town inhabited only by malformed children and overseen by a malevolent alien entity known only as “Mother”, a demented circus surrounded by an endless ocean and terrorized by a squid-like individual, an alien hive overrun by cyborg insects, and an Aztec village devastated by the return of the god Quetzalcoatl. Between each episode, Max returns to the asylum grounds, blending real and unreal, each time closer to regaining his memory and unraveling the truth surrounding the mysterious Dr. Morgan, head of the asylum. He remembers the death of his younger sister Sarah years ago and the real reason behind his institutionalization.Sanitarium is a point and click adventure that is split into 9 chapters. Chapter progression involves walking around, talking to the characters to uncover more of the story and reading various background pieces such as books, notes, diaries and tombstones. Everything you read further uncovers bits of the story that have been obscured due to the main character’s mental state.As you move around you’ll find items that can be used to solve various puzzles. These are done in typical fetch-quest style whereby (typically) a character will provider you with a clue as to the location of an item that you then need to go find and bring back in order to progress or to unlock some piece of the chapter. The inventory items are accessed via a ring menu around the character, and all items (aside from one literal “red herring”) are required to complete the game. Items are not carried over from chapter to chapter so everything you find will need to be used within the chapter you found it.There are multiple puzzles scattered throughout the game. If you pay attention as you play the puzzles aren’t overly difficult as clues to how to solve them are typically found fairly close to each puzzle. Puzzles in the first couple chapters are very straightforward (reattach the cables to a VCR, play tic-tac-toe) however as you approach the end of the game these do get a bit more complex.Interacting with NPCs is done using a keyword menu. As words are selected the characters fill in more of the story and selected words change colours. Certain keywords aren’t available until after you interact with other characters, complete subquests or find certain items. As a result you have to do some backtracking on occasion to ensure you’re able to advance the story.Depending on the chapter you’re in the main character (Max) can take the form of a Cyclops, an Aztec god, or his sister Sarah. When you start a chapter as one of these characters you remain as this character for the duration of the chapter. The only variation is in chapter 8 where you can alternate between each character to help solve certain puzzles.Cinematic cutscenes persist throughout the game to help advance the story. As you slowly uncover who you are, why you were in the asylum to start with and who Dr. Morgan is these videos add additional depth and colour to the story. Once you reach the final chapter you solve a final puzzle to escape from the prison of your mind and awake in a hospital with your family waiting.It’s been a long time since I actually played through this game, and though I may have fond memories of it due to the time spent trying to reverse engineer the game logic I found I still thoroughly enjoyed playing it again. The dialog and voice acting is a little over the top, but the writing is excellent and there’s a fair amount of comedy sprinkled throughout.The darker setting and theme resonates with me and for anyone that enjoys a good, solid story I’d highly recommend giving this game a play.Game Information Game Sanitarium Developer DreamForge Intertainment Publisher ASC Games Release Date April 28, 1998 Systems Windows Game Engine   My Playthrough Time to Completion 7 hours Version Played Windows via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 18 Story (25) 22 Experience (15) 13 Impact (10) 7   86% Gallery" }, { "title": "Just Finished - Sword of Hope", "url": "/blog/2021/12/18/just-finished-sword-of-hope/", "categories": "Gaming, Just Finished", "tags": "gb, rpg", "date": "2021-12-18 12:30:23 -0500", "snippet": "The Sword of Hope was released for the Nintendo Game Boy in 1991 by Kemko/Seika.The story involves a dragon having gained control over the king of Riccar, manipulating him into removing the Sword o...", "content": "The Sword of Hope was released for the Nintendo Game Boy in 1991 by Kemko/Seika.The story involves a dragon having gained control over the king of Riccar, manipulating him into removing the Sword of Hope from a painting and releasing its curse. Summoning the dark power mammon the dragon turned the people of Riccar into trees. When Prince Theo is born, the king tries to murder him, but Theo is saved by the brave knight Pascal who flees with him into a forest where three magicians live who conceal the king’s castle underground to prevent the evil from spreading. After living in the forest for 15 years, Prince Theo is finally strong enough to try and stop the dragon, using the Sword of Hope one of the magicians had retrieved. (Description from Moby Games)Sword of Hope combines adventure and RPG elements. The interface allows the prince to select commands such as LOOK, OPEN, MAGIC, HIT, and USE to interact with the game world, talk to NPCs or solve puzzles. When he encounters an enemy, the game switches to a turn based battle mode in which enemies have to be fought in typical console style RPG battles.The first thing that jumped out at me was the screen transitions (and their sound effects) were pulled from Shadowgate, which would make sense as the port of that title to the NES was also published by Kemko/Seika.Progressing through the game is fairly straightforward: the game world is split into areas that are behind gates that require keys. You find the magician in the area you have access to, who tells you where you need to go to find the key to the next area, which you do by slogging through a bunch of random encounters until you find said key.The game teaches you a lot of spells, which are learned from scrolls or by levelling up. Your MP levels (which deplete as you cast spells) can be restored using herbs you can find along the way or by buying them from the shopkeepers. I found myself grinding a bit early on to get money together to buy extra herbs so I didn’t have to keep using the TELEPORT spell back to the shaman to heal up when I ran low on HP/MP.You can also upgrade your weapon and armour along the way. Shopkeepers sell armour upgrades and as you complete the quests for the magicians they’ll power up your sword. You’ll need the extra stats as you progress as the random encounters occur VERY frequently and a bad grouping of enemies when you’re under-levelled will result in you getting your ass kicked back to the king.Once you get near the endgame you’ll start fighting Druids, who cast strong attack magic or sap your HP/MP. You can’t run from these enemies, so you’ll have to stay and fight, but their stamina is so high you do very little damage … and they have 100HP. This is one of those scenarios where I’m glad I was playing on an emulator as you could fudge the outcome of the battles by saving, waiting, taking and action and if you didn’t like the result reload and try again (the RNG appears to be time based).Eventually you work your way through the castle into the mirror world and find the painting of the dragon. When you do you have to fight the king (tough fight) then immediately fight the dragon (even tougher fight). I was only at level 19 when I made a run for the endgame, and the walkthroughs recommend level 25 or higher … and for good reason. These last 2 enemies are incredibly hard, but if you’re not playing this on a console and have save states you can manipulate luck enough to even the odds in your favour.I loved my Game Boy when I was a kid, and remember playing this title back then. I hated the game because it was too hard and I didn’t have the patience to grind, but now (many decades later) I can appreciate the simple story, linear progression and level of difficulty. If you want to play this game as the developers intended you’ll find yourself grinding A LOT near the end to make surviving the random encounters easier.One of the main drawbacks for me was having to face multiple multi-enemy grouping random encounters per screen as you try to make your way through the mirror world. It just seemed unnecessary and it became tedious and boring. I knew I was near the end so wanted to push through, but I can honestly say I’ll never pick this one up again as I can’t imagine fighting another Druid again …" }, { "title": "Just Finished - Brain Lord", "url": "/blog/2021/10/27/just-finished-brain-lord/", "categories": "Gaming, Just Finished", "tags": "snes, jrpg", "date": "2021-10-27 14:46:38 -0400", "snippet": "Brain Lord is an action RPG from 1994 for the Super Nintendo published by Enix. The story follows Remeer (you), who’s father being the last of the dragon warriors was sent on a quest to find the la...", "content": "Brain Lord is an action RPG from 1994 for the Super Nintendo published by Enix. The story follows Remeer (you), who’s father being the last of the dragon warriors was sent on a quest to find the last of the dragons terrorizing the village. Your father never returned from this quest and the game opens with you starting out on your own journey to find your father.Remeer is joined by his four friends: Kashian (a bounty hunter), Barness (a spiritual guru), Rein (a warrior), and Ferris (a witch). These characters help advance the plot, which is pretty standard JRPG fare (dragons, towers, save the world) and provide hints and clues along the way.Fun fact, Remeer (or its equivalent ‘Lemele’) appears in two more video games developed by Produce! and published by Enix, The 7th Saga and Mystic Ark. Double fun fact, I’ve been trying to beat both of those for years now and may eventually write them up in a “Just Gave Up On” entry …The game is broken down into 2 cities (Arcs, Toronto) and 5 dungeons (The Tower of Light, Ancient Ruins, the Ice Castle, Droog Volcano, and Platinum).Cities contain NPCs that nudge you in the right direction to keep the story progressing, as well as provide shops for equipment and items. Both cities have an inn you can recover at and save your progress.Once you’re out of the city you’re either on your way to a dungeon, or in a dungeon. These areas are filled with monsters that you engage with in an Action-RPG direct combat fashion. You have a number of weapons you’ll collect over the course of the game; the ranged weapons weaker (boomerang, bow) and the melee weapons stronger (swords, axes, morning stars).Weapons, armor and items can be found in treasure chests in the dungeons and are stored in your inventory. You have 3 inventory pages, after which you’ll have to either sell or drop items to make room for more.Aside from moving about the various floors of the dungeons and fighting random enemies, you’ll also have to solve puzzles. These puzzles all seem to come in the form of “press these switches either in a certain order, or all at once with rocks or balls”.When you’re not fighting or pushing rocks, you’re probably crossing chasms by jumping. Jumping puzzles suck in RPGs. I don’t really have anything to add to this other than complaints … and a deep appreciation for having played this game on an emulator with save states …You’re going to fall …. a lot. When you do you’re returned to the start of the room and you lose one life unit. If you were trying to solve a puzzle, leaving the room and returning will reset everything so you can try again, but falling right before you were about to solve a time consuming (usually tedious) puzzle is a pain in the ass.You can collect heart containers to increase your health, but you don’t level up while fighting. You do gain money and occasionally monsters drop orbs. These orbs can be collected by your Jade’s to level them up and make them stronger.These Jades are either bought in town or found in dungeons and provide various skills such as lighting dark rooms, healing you or attacking enemies. You can only equip two at a time, but I found I generally just kept two attack Jades at all times (unless fast forwarding the emulator with a healing Jade).The dungeons are made up of multiple floors with many, many locked doors. You collect keys throughout to unlock these and progress higher (or lower).Navigating the dungeons can be difficult, but you do get an item early on that can be used to show a minimap.Honestly I’d have been pretty lost without this as you forget where you are pretty quickly as you go, especially in the later dungeons. This would have been a great thing to be able to bind to one of the unused controller keys so you don’t have to open the inventory and select it each time, but seeing as this is an earlier RPG I’ll cut it some slack.Once you reach the end there is a boss that needs killing, which generally isn’t too difficult. These bosses are much larger and generally are multi phase battles.You make your way through the dungeons, kill the bosses, kill the Goblin king and you get a very basic ending screen for all your efforts.Overall the game is enjoyable and the puzzles can be interesting at first. Unfortunately there aren’t too many ways to spice up the “push rock, depress button” recipe so after a while this starts to get repetitive.The later dungeons include a lot of back tracking, and the dark room puzzles where you can’t use your light Jade and have to just “trial and error” your path through an invisible maze is frustrating.I did enjoy the journey and found the game to be pretty good for a lesser known SNES JRPG. I guess I shouldn’t be surprised that the precursor to 7th Saga would be frustrating to play :P" }, { "title": "Ensuring a MongoDB Replica Set Member's Priority Takeover Succeeds", "url": "/blog/2021/10/21/ensuring-replica-set-priority-takeover-success/", "categories": "MongoDB", "tags": "mongodb, replication", "date": "2021-10-21 07:11:18 -0400", "snippet": "High availability implies a system has been designed for durability, redundancy, and automatic failover such that the applications supported by the system can operate continuously and without downt...", "content": "High availability implies a system has been designed for durability, redundancy, and automatic failover such that the applications supported by the system can operate continuously and without downtime for a long period of time. MongoDB replica sets support high availability when deployed according to the documented best practices.The priority settings of replica set members affect both the timing and the outcome of elections for primary. Higher-priority members are more likely to call elections, and are more likely to win. The MongoDB documentation outlines a procedure to Force a Member to be Primary by Setting its Priority High, which can be easily demonstrated by changing the replica set’s priorities through a replSetReconfig command.In this article we will demonstrate how to utilize replica set member priority to ensure a given node assumes the primary role under ideal circumstances, as well as under load (when there is consistent replication lag).Initial Setup# setup a PSS replica setmlaunch init --replicaset --nodes 3 --binarypath $(m bin 4.2.17-ent)# using the mongo shell reconfigure the set# with the 3rd node having a priority of 10mongo \"mongodb://localhost:27017/?replicaset=replset\" --quiet \\ --eval \"c = rs.conf(); c.members[2].priority = 10; rs.reconfig(c)\"To setup the replica set the m version manager is used along with mtools. Once the replica set is reconfigured via the mongo shell, checking the logs for the rs3 node that should now be PRIMARY should show the results of the priority takeover:tail -n 1000 data/replset/rs3/mongod.log | grep -E \"(ELECTION|REPL)\"2021-10-06T06:50:38.730-0400 I REPL [replexec-2] New replica set config in use: { _id: \"replset\", version: 2, protocolVersion: 1, writeConcernMajorityJournalDefault: true, members: [ { _id: 0, host: \"localhost:27017\", arbiterOnly: false, buildIndexes: true, hidden: false, priority: 1.0, tags: {}, slaveDelay: 0, votes: 1 }, { _id: 1, host: \"localhost:27018\", arbiterOnly: false, buildIndexes: true, hidden: false, priority: 1.0, tags: {}, slaveDelay: 0, votes: 1 }, { _id: 2, host: \"localhost:27019\", arbiterOnly: false, buildIndexes: true, hidden: false, priority: 10.0, tags: {}, slaveDelay: 0, votes: 1 } ], settings: { chainingAllowed: true, heartbeatIntervalMillis: 2000, heartbeatTimeoutSecs: 10, electionTimeoutMillis: 10000, catchUpTimeoutMillis: -1, catchUpTakeoverDelayMillis: 30000, getLastErrorModes: {}, getLastErrorDefaults: { w: 1, wtimeout: 0 }, replicaSetId: ObjectId('615d7f403cd84ab3e708fdea') } }2021-10-06T06:50:38.730-0400 I REPL [replexec-2] This node is localhost:27019 in the config2021-10-06T06:50:38.737-0400 I ELECTION [replexec-3] Scheduling priority takeover at 2021-10-06T06:50:48.909-04002021-10-06T06:50:48.911-0400 I REPL [replexec-4] Canceling priority takeover callback2021-10-06T06:50:48.911-0400 I ELECTION [replexec-4] Starting an election for a priority takeover2021-10-06T06:50:48.911-0400 I ELECTION [replexec-4] conducting a dry run election to see if we could be elected. current term: 12021-10-06T06:50:48.912-0400 I REPL [replexec-4] Scheduling remote command request for vote request: RemoteCommand 183 -- target:localhost:27017 db:admin cmd:{ replSetRequestVotes: 1, setName: \"replset\", dryRun: true, term: 1, candidateIndex: 2, configVersion: 2, lastCommittedOp: { ts: Timestamp(1633517438, 1), t: 1 } }2021-10-06T06:50:48.912-0400 I REPL [replexec-4] Scheduling remote command request for vote request: RemoteCommand 184 -- target:localhost:27018 db:admin cmd:{ replSetRequestVotes: 1, setName: \"replset\", dryRun: true, term: 1, candidateIndex: 2, configVersion: 2, lastCommittedOp: { ts: Timestamp(1633517438, 1), t: 1 } }2021-10-06T06:50:48.912-0400 I ELECTION [replexec-9] VoteRequester(term 1 dry run) received a yes vote from localhost:27017; response message: { term: 1, voteGranted: true, reason: \"\", ok: 1.0, $clusterTime: { clusterTime: Timestamp(1633517438, 1), signature: { hash: BinData(0, 0000000000000000000000000000000000000000), keyId: 0 } }, operationTime: Timestamp(1633517438, 1) }2021-10-06T06:50:48.912-0400 I ELECTION [replexec-5] dry election run succeeded, running for election in term 22021-10-06T06:50:48.941-0400 I REPL [replexec-5] Scheduling remote command request for vote request: RemoteCommand 185 -- target:localhost:27017 db:admin cmd:{ replSetRequestVotes: 1, setName: \"replset\", dryRun: false, term: 2, candidateIndex: 2, configVersion: 2, lastCommittedOp: { ts: Timestamp(1633517438, 1), t: 1 } }2021-10-06T06:50:48.942-0400 I REPL [replexec-5] Scheduling remote command request for vote request: RemoteCommand 186 -- target:localhost:27018 db:admin cmd:{ replSetRequestVotes: 1, setName: \"replset\", dryRun: false, term: 2, candidateIndex: 2, configVersion: 2, lastCommittedOp: { ts: Timestamp(1633517438, 1), t: 1 } }2021-10-06T06:50:48.957-0400 I ELECTION [replexec-1] VoteRequester(term 2) received a yes vote from localhost:27018; response message: { term: 2, voteGranted: true, reason: \"\", ok: 1.0, $clusterTime: { clusterTime: Timestamp(1633517438, 1), signature: { hash: BinData(0, 0000000000000000000000000000000000000000), keyId: 0 } }, operationTime: Timestamp(1633517438, 1) }2021-10-06T06:50:48.960-0400 I ELECTION [replexec-8] election succeeded, assuming primary role in term 22021-10-06T06:50:48.961-0400 I REPL [replexec-8] transition to PRIMARY from SECONDARYThe above example will work every time on a local cluster with no traffic and no lag. What happens when we start applying some traffic to this cluster using a process that supports Retryable Writes?Retryable WorkloadRetryable writes allow MongoDB drivers to automatically retry certain write operations a single time if they encounter network errors, or if they cannot find a healthy primary in the replica sets or sharded cluster. Based on this guarantee our assumption would be that the write workload should continue uninterrupted:curl -s https://gist.githubusercontent.com/alexbevi/955c6675337107e16d637233f865b1e3/raw/cca0390f6c30898140cc55490930b80c5cad527b/template.json | \\ mgeneratejs -n 5000000 | \\ mongoimport --uri \"mongodb://localhost:27017/test?replicaSet=replset&amp;w=majority&amp;retryWrites=true\" --collection data --numInsertionWorkers 1 --dropThe mongoimport command, along with mgeneratejs are used to generate data and write the results to the test.data namespace. Note the version of mongoimport used is &gt; 100.2.1 as this ensures retryable writes are supported (per TOOLS-2745).Assuming the retryable writes guarantee is accurate, performing another replSetReconfig to shift the highest priority to another node should allow the election to occur without interrupting the mongoimport workload.Using tmux to manage multiple terminals (as seen in the screenshot above), the mongoimport (left panel) continues to import data while the election is triggered and completes (per the logs of the new PRIMARY in the right panel).Retryable Workload with an Oplog DelayIn the above example the mongoimport workload was able to successfully continue with retryable writes enabled. Retryable writes are not a requirement in this scenario however (per the Retryable Writes Specification) having this feature enabled will ensure server errors such as NotWritablePrimary, NotPrimaryNoSecondaryOk, NotPrimaryOrSecondary, PrimarySteppedDown will be retried.Next we want to run the same test but with an artificial lag introduced to the node that is expected to step up as primary due to priority.Simulating an Oplog DelayReplication lag is a delay between an operation on the primary and the application of that operation from the oplog to the secondary (see “Check Replication Lag”). Our test above was able to easily complete a priority takeover and election as the nodes are all on the same host (localhost) and there should be virtually no delay between writes and replicated operations.The following script uses the fsync and fsyncUnlock commands to block a target node from performing writes. By doing this in a timed fashion we can simulate replication lag on a secondary as the node cannot apply writes from the oplog while it is locked.// file: secondaryDelay.js//// the host:port of the node to connect to and lock/unlockconst NODE = \"localhost:27019\";// how long to block operations (in milliseconds)const DELAY = 3500;function delaySecondary(c, t) { c.getDB(\"test\").fsyncLock(); sleep(t); c.getDB(\"test\").fsyncUnlock(); // print secondary replication info to show lag print(db.printSecondaryReplicationInfo());}var c = new Mongo(NODE);while(true) { delaySecondary(c, DELAY); sleep(100);}When the secondaryDelay.js script is run and the replica set reconfiguration is performed, the priority takeover should now fail.To simulate the failure, the following commands were running in tmux windows: mongoimport mongo --quiet secondaryDelay.js mongo \"mongodb://localhost:27017/?replicaset=replset\" --quiet --eval \"c = rs.conf(); c.members[0].priority = 1; c.members[2].priority = 10; rs.reconfig(c)\" tail -n 1000 data/replset/rs3/mongod.log | grep -E \"(ELECTION|REPL)\"2021-10-21T06:53:56.388-0400 I ELECTION [replexec-12] Scheduling priority takeover at 2021-10-21T06:54:07.210-04002021-10-21T06:54:07.210-0400 I REPL [replexec-10] Canceling priority takeover callback2021-10-21T06:54:07.210-0400 I ELECTION [replexec-10] Starting an election for a priority takeover2021-10-21T06:54:07.210-0400 I ELECTION [replexec-10] conducting a dry run election to see if we could be elected. current term: 72021-10-21T06:54:07.210-0400 I REPL [replexec-10] Scheduling remote command request for vote request: RemoteCommand 1129 -- target:localhost:27017 db:admin cmd:{ replSetRequestVotes: 1, setName: \"replset\", dryRun: true, term: 7, candidateIndex: 2, configVersion: 9, lastCommittedOp: { ts: Timestamp(1634813644, 1000), t: 7 } }2021-10-21T06:54:07.211-0400 I REPL [replexec-10] Scheduling remote command request for vote request: RemoteCommand 1130 -- target:localhost:27018 db:admin cmd:{ replSetRequestVotes: 1, setName: \"replset\", dryRun: true, term: 7, candidateIndex: 2, configVersion: 9, lastCommittedOp: { ts: Timestamp(1634813644, 1000), t: 7 } }2021-10-21T06:54:07.211-0400 I ELECTION [replexec-9] VoteRequester(term 7 dry run) received a no vote from localhost:27017 with reason \"candidate's data is staler than mine. candidate's last applied OpTime: { ts: Timestamp(1634813644, 1000), t: 7 }, my last applied OpTime: { ts: Timestamp(1634813645, 1000), t: 7 }\"; response message: { term: 7, voteGranted: false, reason: \"candidate's data is staler than mine. candidate's last applied OpTime: { ts: Timestamp(1634813644, 1000), t: 7 }, my last applied OpTime: { ts: Timest...\", ok: 1.0, $clusterTime: { clusterTime: Timestamp(1634813645, 1000), signature: { hash: BinData(0, 0000000000000000000000000000000000000000), keyId: 0 } }, operationTime: Timestamp(1634813645, 1000) }2021-10-21T06:54:07.211-0400 I ELECTION [replexec-2] VoteRequester(term 7 dry run) received a no vote from localhost:27018 with reason \"candidate's data is staler than mine. candidate's last applied OpTime: { ts: Timestamp(1634813644, 1000), t: 7 }, my last applied OpTime: { ts: Timestamp(1634813645, 1000), t: 7 }\"; response message: { term: 7, voteGranted: false, reason: \"candidate's data is staler than mine. candidate's last applied OpTime: { ts: Timestamp(1634813644, 1000), t: 7 }, my last applied OpTime: { ts: Timest...\", ok: 1.0, $clusterTime: { clusterTime: Timestamp(1634813645, 1000), signature: { hash: BinData(0, 0000000000000000000000000000000000000000), keyId: 0 } }, operationTime: Timestamp(1634813645, 1000) }2021-10-21T06:54:07.211-0400 I ELECTION [replexec-2] not running for primary, we received insufficient votes2021-10-21T06:54:07.211-0400 I ELECTION [replexec-2] Lost dry run electionThe simulation is successful if we can verify the priority takeover could not complete due to “candidate’s data is staler than mine” failures. This implies the node trying to run for election requested votes from other nodes, which voted “no” as the candidate node needs to catch up. Note that if the oplog of the candidate node is more than 2 seconds behind, the priority takeover will not be scheduled and a failure such as the following will be logged:2021-10-21T06:55:18.490-0400 I ELECTION [replexec-13] Not starting an election for a priority takeover, since we are not electable due to: Not standing for election because member is not caught up enough to the most up-to-date member to call for priority takeover - must be within 2 seconds (mask 0x80)Note that this threshold is defined by the priorityTakeoverFreshnessWindowSeconds server parameter which controls how caught up in replication a secondary with higher priority than the current primary must be before it will call for a priority takeover election.Ensuring Priority Takeover when LaggingAssuming a 1-2 second delay is consistent, the priority takeover will continually be rescheduled but the election will always fail.This particular scenario can be overcome using a combination of replSetFreeze and replSetStepDown as follows.// file: freezeAndStepdown.js//function stepDown() { var host = db.hello().primary; var client = new Mongo(host) printjson(client.adminCommand({ replSetStepDown: 30, secondaryCatchUpPeriodSecs: 20 }));}function freezeNode(host) { var client = new Mongo(host) print(\"Freezing \" + host) client.adminCommand({ replSetFreeze: 30 })}freezeNode(\"localhost:27017\");freezeNode(\"localhost:27018\");stepDown();All other replica set members aside from the one we’ve given the highest priority (localhost:27019 in our scenario) are first frozen to prevent them from seeking election for 30 seconds. The primary is then stepped down with a secondaryCatchUpPeriodSecs of 20 seconds set to allow eligible secondaries to catch up to the primary. As all other nodes are frozen and won’t seek election, the only remaining node which was consistently lagging will catch up and stand for election.Our previous reproduction using tmux is updated as follows to produce this result: tail -n 1000 data/replset/rs3/mongod.log | grep -E \"(ELECTION|REPL)\" mongoimport mongo --quiet secondaryDelay.js mongo \"mongodb://localhost:27017/?replicaset=replset\" --quiet --eval \"c = rs.conf(); c.members[0].priority = 1; c.members[2].priority = 10; rs.reconfig(c)\" mongo --quiet freezeAndStepdown.jsThe end result should be the priority takeover attempt resulting in a successful dry run election and subsequent election.2021-10-21T10:30:04.892-0400 I ELECTION [replexec-15] not running for primary, we received insufficient votes2021-10-21T10:30:04.907-0400 I ELECTION [replexec-15] Lost dry run election2021-10-21T10:30:05.772-0400 I ELECTION [replexec-20] Scheduling priority takeover at 2021-10-21T10:30:16.346-04002021-10-21T10:30:09.777-0400 I REPL [replexec-14] Member localhost:27017 is now in state SECONDARY2021-10-21T10:30:16.346-0400 I REPL [replexec-24] Canceling priority takeover callback2021-10-21T10:30:16.346-0400 I ELECTION [replexec-24] Starting an election for a priority takeover2021-10-21T10:30:16.346-0400 I ELECTION [replexec-24] conducting a dry run election to see if we could be elected. current term: 142021-10-21T10:30:16.346-0400 I REPL [replexec-24] Scheduling remote command request for vote request: RemoteCommand 6065 -- target:localhost:27017 db:admin cmd:{ replSetRequestVotes: 1, setName: \"replset\", dryRun: true, term: 14, candidateIndex: 2, configVersion: 16, lastCommittedOp: { ts: Timestamp(1634826609, 1000), t: 14 } }2021-10-21T10:30:16.346-0400 I REPL [replexec-24] Scheduling remote command request for vote request: RemoteCommand 6066 -- target:localhost:27018 db:admin cmd:{ replSetRequestVotes: 1, setName: \"replset\", dryRun: true, term: 14, candidateIndex: 2, configVersion: 16, lastCommittedOp: { ts: Timestamp(1634826609, 1000), t: 14 } }2021-10-21T10:30:16.347-0400 I ELECTION [replexec-23] VoteRequester(term 14 dry run) received a yes vote from localhost:27017; response message: { term: 14, voteGranted: true, reason: \"\", ok: 1.0, $clusterTime: { clusterTime: Timestamp(1634826609, 1000), signature: { hash: BinData(0, 0000000000000000000000000000000000000000), keyId: 0 } }, operationTime: Timestamp(1634826609, 1000) }2021-10-21T10:30:16.347-0400 I ELECTION [replexec-23] dry election run succeeded, running for election in term 152021-10-21T10:30:18.621-0400 I REPL [replexec-22] Scheduling remote command request for vote request: RemoteCommand 6069 -- target:localhost:27017 db:admin cmd:{ replSetRequestVotes: 1, setName: \"replset\", dryRun: false, term: 15, candidateIndex: 2, configVersion: 16, lastCommittedOp: { ts: Timestamp(1634826609, 1000), t: 14 } }2021-10-21T10:30:18.621-0400 I REPL [replexec-22] Scheduling remote command request for vote request: RemoteCommand 6070 -- target:localhost:27018 db:admin cmd:{ replSetRequestVotes: 1, setName: \"replset\", dryRun: false, term: 15, candidateIndex: 2, configVersion: 16, lastCommittedOp: { ts: Timestamp(1634826609, 1000), t: 14 } }2021-10-21T10:30:18.635-0400 I ELECTION [replexec-15] VoteRequester(term 15) received a yes vote from localhost:27017; response message: { term: 15, voteGranted: true, reason: \"\", ok: 1.0, $clusterTime: { clusterTime: Timestamp(1634826609, 1000), signature: { hash: BinData(0, 0000000000000000000000000000000000000000), keyId: 0 } }, operationTime: Timestamp(1634826609, 1000) }2021-10-21T10:30:18.638-0400 I ELECTION [replexec-23] election succeeded, assuming primary role in term 152021-10-21T10:30:18.638-0400 I REPL [replexec-23] transition to PRIMARY from SECONDARYFrom the screenshots we can see that during all election attempts the mongoimport workload continued to operate without issue.Did this article help you? Let me know in the comments below ;)" }, { "title": "MongoDB Stable API", "url": "/blog/2021/10/07/mongodb-versioned-api/", "categories": "MongoDB", "tags": "mongodb", "date": "2021-10-07 06:17:50 -0400", "snippet": " MongoDB’s Versioned API was renamed to the Stable API, so this guide was updated to use the new terminologyThe Stable API For Drivers Specification states “When applications interact with MongoDB...", "content": " MongoDB’s Versioned API was renamed to the Stable API, so this guide was updated to use the new terminologyThe Stable API For Drivers Specification states “When applications interact with MongoDB, both the driver and the server participate in executing operations. Therefore, when determining application compatibility with MongoDB, both the driver and the server behavior must be taken into account.”As MongoDB moves toward more frequent releases (a.k.a. continuous delivery), they want to enable users to take advantage of rapidly released features, without exposing applications to incompatible server changes due to automatic server upgrades. A Stable API will help accomplish that goal (see “Upgrade Fearlessly with the MongoDB Stable API”).The Stable API encompasses the subset of MongoDB commands that applications commonly use to read and write data, create collections and indexes, and so on. We commit to keeping these commands backward-compatible in new MongoDB versions. We can add new features (such as new command parameters, new aggregation operators, new commands, etc.) to the Stable API, but only in backward-compatible ways.Identifying Stable API CommandsFrom a mongo or mongosh shell connected to a 5.0+ cluster the following helper function can be used to determine which commands are included in a specific API version.function printCommandsByAPIVersion(version) { version = version.toString(); var result = db.runCommand({ listCommands: 1 }) var keys = Object.keys(result.commands); var commands = []; for (var i = 0; i &lt; keys.length; i++) { var cmd = result.commands[keys[i]]; if (cmd.apiVersions.indexOf(version) &gt;= 0 ) { commands.push(keys[i]); } } return { version: db.serverBuildInfo().version, apiVersion: version, commands: commands.sort() };}This can be used to print out the commands supported by a specific API Version (only version \"1\" for now):printCommandsByAPIVersion(1);API v1 CommandsNote this is also documented now, however the output of the printCommandsByAPIVersion against a MongoDB 5.0 cluster would output the following:abortTransaction, aggregate, authenticate, collMod, commitTransaction, create, createIndexes, delete, drop, dropDatabase, dropIndexes, endSessions, explain, find, findAndModify, getMore, hello, insert, killCursors, listCollections, listDatabases, listIndexes, ping, refreshSessions, saslContinue, saslStart, updateStable API TestThe following test using the latest master branch of the Ruby Driver can be used to test the behavior of an application with and without strict checking. This example sends a replSetGetStatus command to the server, and if the strict option is set shows the APIStrictError being raised:# test.rbrequire 'bundler/inline'gemfile do source 'https://rubygems.org' gem 'mongo', github: 'mongodb/mongo-ruby-driver', branch: \"master\"endstrict_api = ARGV[0] == \"true\"# connect to a MongoDB 5.0+ replica setclient = Mongo::Client.new([ 'alexs-mbp:27017' ], database: 'mydb', replica_set: 'rs0', server_api: { version: 1, strict: strict_api })begin admin_client = client.use('admin') p admin_client.database.command(replSetGetStatus: 1).documents.firstrescue Mongo::Error::OperationFailure =&gt; ex puts exensure client.closeendThe above script can be tested by passing true/false as the first argument to validate the behavior of the driver in strict mode:$ ruby test.rb{\"set\"=&gt;\"rs0\", \"date\"=&gt;2021-05-14 14:49:33 UTC, \"myState\"=&gt;1, \"term\"=&gt;7, \"syncSourceHost\"=&gt;\"\", \"syncSourceId\"=&gt;-1, \"heartbeatIntervalMillis\"=&gt;2000, \"majorityVoteCount\"=&gt;1, \"writeMajorityCount\"=&gt;1, \"votingMembersCount\"=&gt;1, \"writableVotingMembersCount\"=&gt;1, \"optimes\"=&gt;{\"lastCommittedOpTime\"=&gt;{\"ts\"=&gt;#&lt;BSON::Timestamp:0x00007fb303a1dc78 @seconds=1621003767, @increment=1&gt;, \"t\"=&gt;7}, \"lastCommittedWallTime\"=&gt;2021-05-14 14:49:27 UTC, \"readConcernMajorityOpTime\"=&gt;{\"ts\"=&gt;#&lt;BSON::Timestamp:0x00007fb303a1d9d0 @seconds=1621003767, @increment=1&gt;, \"t\"=&gt;7}, \"appliedOpTime\"=&gt;{\"ts\"=&gt;#&lt;BSON::Timestamp:0x00007fb303a1d868 @seconds=1621003767, @increment=1&gt;, \"t\"=&gt;7}, \"durableOpTime\"=&gt;{\"ts\"=&gt;#&lt;BSON::Timestamp:0x00007fb303a1d700 @seconds=1621003767, @increment=1&gt;, \"t\"=&gt;7}, \"lastAppliedWallTime\"=&gt;2021-05-14 14:49:27 UTC, \"lastDurableWallTime\"=&gt;2021-05-14 14:49:27 UTC}, \"lastStableRecoveryTimestamp\"=&gt;#&lt;BSON::Timestamp:0x00007fb303a1d340 @seconds=1621003737, @increment=1&gt;, \"electionCandidateMetrics\"=&gt;{\"lastElectionReason\"=&gt;\"electionTimeout\", \"lastElectionDate\"=&gt;2021-05-14 14:27:57 UTC, \"electionTerm\"=&gt;7, \"lastCommittedOpTimeAtElection\"=&gt;{\"ts\"=&gt;#&lt;BSON::Timestamp:0x00007fb303a1cfa8 @seconds=0, @increment=0&gt;, \"t\"=&gt;-1}, \"lastSeenOpTimeAtElection\"=&gt;{\"ts\"=&gt;#&lt;BSON::Timestamp:0x00007fb303a1ce40 @seconds=1620999663, @increment=1&gt;, \"t\"=&gt;6}, \"numVotesNeeded\"=&gt;1, \"priorityAtElection\"=&gt;1.0, \"electionTimeoutMillis\"=&gt;10000, \"newTermStartDate\"=&gt;2021-05-14 14:27:57 UTC, \"wMajorityWriteAvailabilityDate\"=&gt;2021-05-14 14:27:57 UTC}, \"members\"=&gt;[{\"_id\"=&gt;0, \"name\"=&gt;\"Alexs-MBP:27017\", \"health\"=&gt;1.0, \"state\"=&gt;1, \"stateStr\"=&gt;\"PRIMARY\", \"uptime\"=&gt;1300, \"optime\"=&gt;{\"ts\"=&gt;#&lt;BSON::Timestamp:0x00007fb303a1c6c0 @seconds=1621003767, @increment=1&gt;, \"t\"=&gt;7}, \"optimeDate\"=&gt;2021-05-14 14:49:27 UTC, \"syncSourceHost\"=&gt;\"\", \"syncSourceId\"=&gt;-1, \"infoMessage\"=&gt;\"\", \"electionTime\"=&gt;#&lt;BSON::Timestamp:0x00007fb303a1c378 @seconds=1621002477, @increment=1&gt;, \"electionDate\"=&gt;2021-05-14 14:27:57 UTC, \"configVersion\"=&gt;1, \"configTerm\"=&gt;7, \"self\"=&gt;true, \"lastHeartbeatMessage\"=&gt;\"\"}], \"ok\"=&gt;1.0, \"$clusterTime\"=&gt;{\"clusterTime\"=&gt;#&lt;BSON::Timestamp:0x00007fb3049dff30 @seconds=1621003767, @increment=1&gt;, \"signature\"=&gt;{\"hash\"=&gt;&lt;BSON::Binary:0x70203426668280 type=generic data=0x0000000000000000...&gt;, \"keyId\"=&gt;0}}, \"operationTime\"=&gt;#&lt;BSON::Timestamp:0x00007fb3049dfd00 @seconds=1621003767, @increment=1&gt;}$ ruby test.rb true[323:APIStrictError]: Provided apiStrict:true, but the command replSetGetStatus is not in API Version 1 (on alexs-mbp:27017)There are presently no plans or schedules to deprecate version 1, which is reinforced by the following excerpt from the internal technical design document: The Versioned API frees us from this bind. We say that today’s semantics are part of the MongoDB API Version 1, and the new semantics are in Version 2. MongoDB servers will support both.Additional References: Reference Documentation Architecture Documentation DRIVERS-996: Versioned MongoDB API for Drivers" }, { "title": "Copy MongoDB Index Definitions", "url": "/blog/2021/09/24/copy-mongodb-index-definitions/", "categories": "MongoDB", "tags": "mongodb, indexes, queries", "date": "2021-09-24 06:24:14 -0400", "snippet": "To support your application’s workload properly, you’ll want to ensure you’re creating indexes to support your queries. When doing this in a development environment, unless the the Driver or ODM in...", "content": "To support your application’s workload properly, you’ll want to ensure you’re creating indexes to support your queries. When doing this in a development environment, unless the the Driver or ODM in use allows you to manage index definitions via annotations in code (and you use that feature) it’s possible your development cluster’s indexes can diverge from that in production.The following script will allow you to quickly generate all index creation commands for your cluster in a way that can be copy/pasted to another cluster.function generateCreateIndexesCommands(options) { var getIndexName = function(keys) { var name = \"\"; var keyz = Object.keys(keys); for (var k = 0; k &lt; keyz.length; k++) { var v = keys[keyz[k]]; if (typeof v == \"function\") continue; if (name.length &gt; 0) name += \"_\"; name += keyz[k] + \"_\"; name += v; } return name.substring(0, 126); }; if (options === undefined) { options = {} } var truncateIndexName = options[\"truncateIndexName\"] || true; var ensureBackground = options[\"ensureBackground\"] || false; db.getMongo().getDBNames().filter(x =&gt; ![\"admin\", \"config\", \"local\"].includes(x)).forEach(function (d) { db.getSiblingDB(d).getCollectionInfos({type : \"collection\"}).forEach(function (c) { var keys = db.getSiblingDB(d).getCollection(c.name).getIndexes(); var idPosition = -1; for (var i = 0; i &lt; keys.length; i++) { if (keys[i].name == \"_id_\") { idPosition = i; } else { keys[i].name = (truncateIndexName) ? getIndexName(keys[i].key) : keys[i].key if (ensureBackground) { // force all indexes to be created in the background keys[i].background = true; } } } // remove the { _id: 1 } default index as it will exist already anyway keys.splice(idPosition, 1); if (keys.length &gt; 0) { print(\"db.getSiblingDB('\" + d + \"').\" + c.name + \".createIndexes(\" + JSON.stringify(keys) + \")\"); } }); })}The generateCreateIndexesCommands function will output all createIndexes commands for the cluster including all options. The function can optionally be configured using the following parameters (in an object): truncateIndexName: Limits an index definitions name field to less than 128 characters. Prior to MongoDB 4.2 (see SERVER-32959) this Index Name Length limitation existed and under certain circumstances, compound index auto naming could result in this limit being exceeded. (default: true) ensureBackground: Prior to MongoDB 4.2 (which introduced the optimized build process) indexes could be built in either the foreground or the background. Foreground index builds were fast and produced more efficient index data structures, but required blocking all read-write access to the parent database of the collection being indexed for the duration of the build. Background index builds were slower and had less efficient results, but allowed read-write access to the database and its collections during the build process.This option ensure index definitions contain a { background: true } option in case you want to copy the commands to a MongoDB 4.0 cluster (or earlier) and ensure index builds occur in the background. (default: false)// run with no optionsgenerateCreateIndexesCommands()// run with optionsgenerateCreateIndexesCommands({ truncateIndexName: true, ensureBackground: true });Running this script will produce output such as the following:db.getSiblingDB('test').foo.createIndexes([{\"v\":2,\"key\":{\"a\":1,\"b\":1},\"name\":\"a_1_b_1\",\"background\":true},{\"v\":2,\"key\":{\"key\":1},\"name\":\"key_1\",\"collation\":{\"locale\":\"en\",\"caseLevel\":false,\"caseFirst\":\"off\",\"strength\":2,\"numericOrdering\":false,\"alternate\":\"non-ignorable\",\"maxVariable\":\"punct\",\"normalization\":false,\"backwards\":false,\"version\":\"57.1\"}}])db.getSiblingDB('test').restaurants.createIndexes([{\"v\":2,\"key\":{\"cuisine\":1,\"name\":1},\"name\":\"cuisine_1_name_1\",\"partialFilterExpression\":{\"rating\":{\"$gt\":5}}}])Did this script help you? Do you have any other options you’d like to see added? Let me know in the comments below … and happy coding ;)" }, { "title": "Labyrinth: The Computer Game (Lucasfilm Games) - 1986", "url": "/blog/2021/08/30/labyrinth/", "categories": "Let's Adventure!", "tags": "adventure, LucasArts, Activision", "date": "2021-08-30 08:12:50 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Transylvania (Penguin So...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Transylvania (Penguin Software) - 1982Labyrinth: The Computer Game (Lucasfilm Games) - 1986→ Sanitarium (DreamForge Intertainment) - 1998 Article 8 of 96 in this series.Labyrinth is a 1986 graphic adventure game based on the fantasy film Labyrinth, which tasks you with navigating a maze while solving puzzles and evading dangers. Your goal is to find and defeat the main antagonist, Jareth, within 13 real-time hours.Though not directly related to the game itself, I just wanted to call out the bygone era of splash screens and crack intros that used to come with pirated software in the 80s and 90s.The disk image I found for this review had a “Cracked” variation, which on booting up in VICE treated you to the following:Piracy is still an issue (as it was then), but there is a certain lost art form in these early crack screens that the “youngsters and their torrents” are missing out on.For some examples, see “The art of the crack” or Jason Scott’s “APPLE II CRACK SCREENS”.Labyrinth was the first adventure game created by Lucasfilm which, unlike other adventure games of the period, did not feature a command-line interface. Instead, the player uses two scrolling “word wheel” menus on the screen to construct basic sentences. This design clearly inspired the interface used in their next, which you’ve likely heard of (Maniac Mansion), and which we’ll cover in a later review.The game opens with you inputting your name, gender and favourite colour. The word wheels are presented on the bottom of the screen and a text interface is shown at the top, and this is your first interaction with the game world … which sucks. I’m not really sure why they decided to do this, but you immediately feel like you’re playing a much older interactive fiction game. Don’t get me wrong, IF games are great but not if you expected a graphical adventure.To be fair, this sequence does get you familiarized with the word wheel interface, and also the comedic writing style which will continue throughout the game. As you muddle through you will pick up some items, interact with a couple characters and learn about your inventory. It takes a bit, but eventually you will find your way into the theatre and the movie finally begins.I didn’t really know what to expect from this game as I had done very little research and also hadn’t see the movie it was based on in over 30 years, but holy cow was the quality of the interface and graphics surprising.Your character can see exits, objects and NPCs on a “minimap” above the word wheel. The background and characters are very well drawn and occasionally animated. For example, the Stone Faces will follow your character back and forth with their eyes depending on where you move.As you move around the labyrinth, you’ll find various items to pick up that need to be used to solve a puzzle or to evade an enemy. Occasionally these puzzles can be intuitive, but I found I had to refer back to the walkthrough for most of my play through. Unlike later LucasArts games, I found Labyrinth to actually be really difficult. This may be due to it being “the first” game they did like this, but also you can miss things and have to backtrack, or make a bigger mistake and actually die and have to load a previous save game.Later LucasArts games removed dead ends and death, but not here. Even with a walkthrough this game was challenging, as there were Goblins that could trap you and send you into a pit you’d have to try to escape from. Whenever this happened, more often than not I had NO idea how to escape, and even reading the solution didn’t always make sense. For example (from the walkthrough): CALL + NERD. When he/she starts babbling at you, move to the back of thecell and keep moving back and forth until the Nerd “drives you up the wall,”enabling you to climb out! (May not always work.)Tell me you would have thought of that yourself …There is intro music when the game starts and sound effects throughout the labyrinth. As you have to avoid the Goblins it’s a nice touch that you can see them approaching on the minimap as well as hear their footsteps as they approach.Not all screens are side scrolling as you can move in 4 directions. On some screens you are solving puzzles that involve moving through doors that warp you to another area of the same screen while you try and figure out the correct sequence of doors (ex: The Wise Man’s Garden or The Goblin Village).The “final battle” in The Upside-Down Room with Jareth is really interesting as it flips the walk surfaces repeatedly. The time limit in this room also drops down to 12 minutes, which creates a sense of urgency as you try and THROW a CRYSTAL BALL at Jareth to win the game.I’m not sure if having watched the movie more recently would have made this game any easier to complete, but I found it to be extremely challenging. Some of the puzzles would have taken many (MANY) more hours of trial and error to complete if I was trying to grind through this without any assistance, however the feedback from the game when you make a mistake keeps you engaged and enjoying the experience.For LucasArts’s first graphical adventure game they nailed the interface, and set the tone for subsequent games like Maniac Mansion, Monkey Island, Sam and Max and others that share the same light sense of humour and verb-selection interface.If you’re a fan of the movie I’d be curious to hear if the game progression is easier as certain puzzles/interactions become more obvious as a result. My guess is “no”, but I’d be curious to hear otherwise ;)Game Information Game Labyrinth: The Computer Game Developer Lucasfilm Games Publisher Activision Release Date 1986 Systems Apple IIe and IIc, Commodore 64/128, MSX2 Game Engine   My Playthrough Time to Completion 3 hour Version Played Commodore 64 via VICE for Windows Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 12 Story (25) 15 Experience (15) 11 Impact (10) 6   63% Gallery" }, { "title": "Transylvania (Penguin Software) - 1982", "url": "/blog/2021/08/24/transylvania/", "categories": "Let's Adventure!", "tags": "adventure, Penguin Software", "date": "2021-08-24 09:20:18 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Shadowgate (ICOM Simulat...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Shadowgate (ICOM Simulations) - 1987Transylvania (Penguin Software) - 1982→ Labyrinth: The Computer Game (Lucasfilm Games) - 1986 Article 7 of 96 in this series.Transylvania is an adventure game from 1982 that follows the player on a quest to rescue Princess Sabrina. Far away a clock strikes 12…The game comes with a time limit in the form of periodic updates indicating an hour has gone by. The game starts at midnight and if you aren’t finished by 5AM, the princess dies and the game is over.To interact with the world a basic VERB NOUN text parser is used, which is common for games of this era. Navigation can be done using shortcuts such as N for GO NORTH or U for GO UP, but overall the interface is pretty intuitive. Generally THE EXACT verb/noun combo is needed, and these games are pretty unforgiving if you get it wrong.As you play through the game you’ll encounter a Werewolf who if you don’t immediately leave the screen will kill you.You will meet the Werewolf A LOT.I’m sure you can kill the Werewolf, and according to the walkthrough and Youtube video I watched it’s possible, but only in some versions of the game. The version I played didn’t allow you to GO NORTH at the house to find the cellar, get the crowbar and pry open the coffin. As a result I couldn’t get a bullet for the pistol to SHOOT WOLF.Oh well, no biggie. Though this game has a fair amount of fetch-quest style puzzles, there’s actually very little you are required to do to complete it.For example, you can basically just go get the cross, kill the vampire, get the ring, get the cloak, meet the aliens, get the black box, get the key from the goblin, get the elixir, go get Sabrina … and that’s it.Your inventory space is limited, and once it fills you can’t pick anything else up without dropping an item. Dropping items leaves a visual representation on the screen, so it’s easy to find where you left things.The puzzles are also intuitive and the clues the game gives you are generally sufficient to progress. I may have missed a clue somewhere but after you get the princess I wouldn’t have thought to go back to the frog and SAIL SHIP to close out the story. Thanks again walkthrough!Overall this game was an enjoyable adventure, though the story was pretty sparse. I doubt I’d ever replay this, but I had fun while it lasted :PGame Information Game Transylvania Developer Penguin Software Publisher Penguin Software Release Date 1982 Systems Apple II, Atari 8-bit, Commodore 64, FM-7, Macintosh, PC-88, PC-98 Game Engine   My Playthrough Time to Completion 1.5 hours Version Played Apple II via AppleWin Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Graphics (10) 4 Sound (10) 0 Plot / Progression (25) 7 Characters / Development (15) 3 Gameplay / Experience (15) 6 Replayability (10) 0 Impact / Impression (10) 2 Bonus / Surprise (5) 0   22% Note that I overhauled my scoring criteria in August of 2024, and the score above is the revised score for this game.See below for the original score based on the original scoring criteria. Atmosphere (20) 6 Story (25) 8 Experience (15) 5 Impact (10) 4   33% Gallery" }, { "title": "Retryable Writes, findAndModify and the impact on the MongoDB Oplog", "url": "/blog/2021/08/23/the-impact-of-retryable-writes-on-the-mongodb-oplog/", "categories": "MongoDB", "tags": "mongodb, replication", "date": "2021-08-23 15:18:09 -0400", "snippet": "When you’re monitoring your cluster using Ops Manager or MongoDB Atlas and the Replication Oplog Window is (X) drastically drops, what can you do?Having a very short operations log (oplog) window i...", "content": "When you’re monitoring your cluster using Ops Manager or MongoDB Atlas and the Replication Oplog Window is (X) drastically drops, what can you do?Having a very short operations log (oplog) window increases the likelihood that a SECONDARY member can fall off the oplog and require a full resync, however if the window remains small the resync may fail as the oplog window must be larger than the time needed to resync.One scenario that can result in the oplog window shrinking is the use of findAndModify operations when retryable writes are enabled, but how do we identify that they are the culprit?OverviewMongoDB introduced Retryable Writes in 3.6 as a way to allow Drivers (that have implemented the Retryable Write specification) a mechanism to retry certain write operations a single time if they encounter network errors, or if they cannot find a healthy primary in the replica sets or sharded cluster.When the findAndModify command was made retryable (via SERVER-30407), the implementation involved writing an additional no-op to the oplog that would contain a pre (or post) image of an update (or delete) operation.Prior to MongoDB 4.4, the oplog size was configured in megabytes. As it is a capped collection, once the configured size was filled the oldest entries were removed as new entries were written.With MongoDB 4.4 an option was added to configure a minimum oplog retention period (in hours), however this is not presently the default behavior when configuring a replica set.In this article we’ll be exploring the impact of retryable findAndModify operations on a local MongoDB 5.0.2 replica set running a Ruby script (see Appendix).Retryable Writes enabledWith the series of MongoDB Drivers that support MongoDB 4.2 Retryable Writes are enabled by default, however setting the retryWrites URI option can still be used to explicitly toggle this feature.When the script is run for the first time it will update the document configured during setup (see Appendix) and increment a value 300 times.Before the script runs the first event time (in the oplog) is 2021-08-23 11:31:38. After the script runs, the first event time is 2021-08-23 11:32:39. As our oplog is configured at 990MB this would imply MORE than 990MB were written as the oldest events appear to start after the script began.As a result, the oplog has fully churned during the course of this script running.The sample document we’re incrementing a value on is 5MB, and if we’re running 300 updates approximately 1.5GB of uncompressed would have been written to the oplog.Retryable Writes disabledFor this test run the application was modified to disable retryWrites from the connection string:# ...client = Mongo::Client.new(\"mongodb://localhost:27017/?retryWrites=false\")# ...As retryable writes are disabled there is no pre/post-image data being written to the oplog. This can be seen in the first event times being the same before and after the script runs (2021-08-23 11:32:39).NOTE: For Atlas clusters where setParameter is an Unsupported Command, disabling retryable writes or refactoring the findAndModify to instead perform a find followed by an update would be the best paths forward.Server Parameters and Retryable WritesAs a result of the impact on the oplog when using findAndModify, SERVER-56372 was created to allow the pre/post-image storage to be moved to a non-oplog collection.This functionality is available in MongoDB 5.0+, and was backported to MongoDB 4.4.7 and MongoDB 4.2.16.To enable this functionality an additional Server Parameter must be enabled at startup using the setParameter command as follows:mongod &lt;.. other options ..&gt; \\ --setParameter storeFindAndModifyImagesInSideCollection=true An additional setParameter of featureFlagRetryableFindAndModify=true was required to test this feature prior to MongodB 4.4.7/4.2.16This parameter would need to be set on each mongod node in the cluster. By doing this the pre/post-images will instead be saved to the config.image_collection namespace. storeFindAndModifyImagesInSideCollection is enabled by default starting in MongoDB 5.1When the script is run now with retryable writes enabled, the impact on the oplog should be as negligible as it was when retryWrites=false was set previously.For those that are curious, the config.image_collection namespace contains documents such as the following:(Due to the size of the data field it’s been projected out)ConclusionIf your applications are using findAndModify heavily and your cluster’s oplog is churning, there are a number of options to consider: Disable retryable writes (retryWrites=false in the connection string) Split the findAndModify operations into find and update operations Configure featureFlagRetryableFindAndModify and storeFindAndModifyImagesInSideCollection (assuming your version of MongoDB is 4.2.15+, 4.4.7+ or 5.0+)Let me know if you found this article useful in the comments below.Happy Coding!AppendixThe test script and steps to configure a local cluster are below if you want to validate the findings in this article yourself.SetupWe’ll be using m and mtools to setup the cluster, along with a Javascript script to automate configuration.# download and install MongoDB 5.0.2 enterprisem 5.0.2-ent# initialize a 3 node replicaset using MongoDB 5.0.2mlaunch init --replicaset --nodes 3 --binarypath $(m bin 5.0.2-ent)# wait about 30 seconds before running the scriptmongo setup.jsThe contents of the setup.js script above are:function generate_random_data(size){ var chars = 'abcdefghijklmnopqrstuvwxyz'.split(''); var len = chars.length; var random_data = []; while (size--) { random_data.push(chars[Math.random()*len | 0]); } return random_data.join('');}function setup() { // setup oplog with the minimum size of 990MB db.adminCommand({ replSetResizeOplog: 1, size: 990 }) db.foo.drop(); // setup 1 document with 5MB of junk data db.foo.insertOne({ _id: 1, pos: 1, data: generate_random_data(5 * 1024 * 1024) })}setup();The test.foo namespace is being setup with a single document that contains 5MB of junk data and a pos field we’ll be incrementing via the script below.Test ScriptWe’ll be using a standalone Ruby script that uses the latest MongoDB Ruby Driver (version 2.15 at time of writing).At a high level, the script does the following: Connect to the cluster Print replication info Using findAndModify increment (via $inc) a value 300 times Print replication info againThis script (see below) can be executed as follows:ruby test.rb# !/usr/bin/env ruby## filename: test.rb#require \"bundler/inline\"gemfile do source \"https://rubygems.org\" gem \"mongo\" gem \"progress_bar\"enddef get_seconds(ts) (ts.seconds &amp;&amp; ts.increment) ? ts.seconds : ts / 4294967296 # low 32 bits are ordinal #s within a secondenddef get_replication_info(client) db = client.use(:local).database olStats = db.command({ collStats: \"oplog.rs\" }).documents.first logSizeMB = olStats[\"maxSize\"] / (1024 * 1024) usedMB = olStats[\"size\"] / (1024 * 1024) coll = db[\"oplog.rs\"] first = coll.find.sort(\"$natural\": 1).first last = coll.find.sort(\"$natural\": -1).first tfirst = get_seconds(first[\"ts\"]) tlast = get_seconds(last[\"ts\"]) timeDiff = tlast - tfirst timeDiffHours = ((timeDiff / 36) / 100).round puts \"configured oplog size: #{logSizeMB}MB\\n\" puts \"log length start to end: #{timeDiff}secs (#{timeDiffHours}hrs)\\n\" puts \"oplog first event time: #{Time.at(tfirst)}\\n\" puts \"oplog last event time: #{Time.at(tlast)}\\n\" puts \"now: #{Time.now}\\n\"enddef update_docs_with_junk(coll) coll.find_one_and_update({ _id: 1 }, { \"$inc\": { pos: 1 } })enddef print_field_value(coll) v = coll.find(_id: 1).first[\"pos\"] puts \"value of pos: #{v}\\n\"endclient = Mongo::Client.new(\"mongodb://localhost:27017/?retryWrites=true\")puts get_replication_info(client)coll = client.use(:test).database[:foo]print_field_value(coll)max = 300pb = ProgressBar.new(max)max.times do pb.increment! update_docs_with_junk(coll)endprint_field_value(coll)puts get_replication_info(client)" }, { "title": "Shadowgate (ICOM Simulations) - 1987", "url": "/blog/2021/08/16/shadowgate/", "categories": "Let's Adventure!", "tags": "adventure, ICOM Simulations, MacVenture, Mindscape, Kemco", "date": "2021-08-16 07:33:48 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Princess Tomato in the S...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Princess Tomato in the Salad Kingdom (Hudson Soft) - 1984Shadowgate (ICOM Simulations) - 1987→ Transylvania (Penguin Software) - 1982 Article 6 of 96 in this series.Shadowgate is a black-and-white 1987 point-and-click adventure video game originally for the Apple Macintosh in the MacVenture series. The game is named for its setting, Castle Shadowgate, residence of the evil Warlock Lord. The player, as the “last of a great line of hero-kings” is charged with the task of saving the world by defeating the Warlock Lord, who is attempting to summon up the demon Behemoth out of Hell.Since part of the fun of this series is trying to get these games to run on the original systems, I setup Mini vMac and found a StuffIt archive of Shadowgate. Since StuffIt is a proprietary format you have to then find a copy of StuffIt Expander that would work on the MacOS version in use (System 7.5.5 in this case), figure out how to get it into the emulated environment, install it, then expand the archive.As much fun as it was getting the MacOS environment up and running, since Shadowgate was also released for the NES I decided to play through that version instead.The NES release of Shadowgate is the only one to have music. I still remember the Entryway music as being my favourite track, and was not disappointed hearing this looping in the background during this play through.The game is split into three “views”. There is a game view that shows the entirety of the current room, and inventory view and an action view. These views are interacted with using a cursor. The action view contains verbs that when selected allow you to either apply an action to the game view or inventory view. For example, you can OPEN a door you see in the game view, or MOVE to a marked exit.Every new room of the castle you investigate offers new puzzles, most having a “wrong choice” that will result in you dying and having to reload a previous save. As a result, “Save Early, Save Often” as it’s not always obvious what a wrong choice may look like. For example, opening the wrong crypt will spill corrosive ooze that won’t kill you unless you try to exit through the wrong door.As you move through the rooms the torches you have slowly fade. If you forget to light new torches the game ends and you die, but additional torches can be found along the way.Game play is very much item collection and combination based. The very first screen of the game shows a door with a little skull above it, which can be OPENed and hides a key. This key is needed to unlock the door in the second room of the game …. and so on. You also learn a handful of spells, most of which are mostly used to solve a single puzzle.The game is very linear but the story progresses intuitively. If you pay attention to the clues the puzzles aren’t overly difficult, but I did have to refer to a walkthrough a couple times mostly out of laziness. I find these types of menu-driven games to be enjoyable as they feel like upgraded versions of the interactive fiction text adventures (like Zork) I started off with as a kid.Assuming you found all the right items, were able to find the ferryman and cross over to the warlocks lair and solve the puzzle to open the door you’ll finally find the warlock you’ve been sent to beat. You have to combine multiple items to create the staff that can be used to shoot the behemoth, causing it to return to the abyss while dragging the warlock down with him.Overall I enjoyed the game. I’ve played through this title many times over the years as you can burn through it in about an hour while still enjoying navigating familiar puzzles. A remake was released by Zojoi in 2014, but I’ve never actually tried this version (though the release trailer look pretty sweet).Though Shadowgate isn’t the first in the MacVentures series, it’s definitely my favourite. If you’ve never tried a menu-driven adventure game and are wondering where to start, look no further ;)Game Information Game Shadowgate Developer ICOM Simulations Publisher Mindscape, Kemco Release Date July 30, 1987 Systems Apple IIGS, Atari ST, Amiga, CD-i, Game Boy Color, Apple Macintosh,Nintendo Entertainment System, Palm OS, DOS,Pocket PC (ARM, MIPS), Mobile Phone Game Engine MacVenture My Playthrough Time to Completion 1 hour Version Played NES via NES.emu for Android Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 18 Story (25) 17 Experience (15) 13 Impact (10) 8   80% Gallery" }, { "title": "Princess Tomato in the Salad Kingdom (Hudson Soft) - 1984", "url": "/blog/2021/08/15/princess-tomato-in-the-salad-kingdom/", "categories": "Let's Adventure!", "tags": "adventure, Hudson Soft", "date": "2021-08-15 19:53:32 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Space Quest: The Sarien ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Space Quest: The Sarien Encounter (Sierra On-Line) - 1986Princess Tomato in the Salad Kingdom (Hudson Soft) - 1984→ Shadowgate (ICOM Simulations) - 1987 Article 5 of 96 in this series.Princess Tomato in the Salad Kingdom (サラダの国のトマト姫, Sarada no Kuni no Tomato Hime) is an adventure game by Hudson Soft originally released in 1984 on a number of Japanese Home Computer systems. It was eventually ported to the Famicom in 1988, then localized and released in North America in 1991 on the NES.Apparently the original was a text parser game. Though I don’t intend to play any non-English titles for this series, I had to sink some time into getting a copy of this running on a home computer emulator just to try it out. After 30 minutes of frustration, I managed to get this going using a Hitachi S1 emulator just to take a screenshot ;)I remember renting this game when I was a kid from a local video store (ask your parents kids!) around the same time I had discovered Shadowgate. The interface was similar but “dumbed down” a bit to make it completely menu driven without the need for a cursor.The world is interacted with using a fixed number of verbs that surround the screen. The final verb PERCY only becomes available when you rescue the thirsty persimmon on the second screen of the game. Percy then becomes your sidekick and can provide tips, insight into certain situation or comic relief.With all characters being vegetables, there are plenty of opportunities for puns to be slipped into the dialog and story. The story is well paced and interesting enough to keep you rolling through the various fetch-quests that make up the game play. Princess Tomato has been kidnapped by Minister Pumpkin and is forcing her to marry him so he can reign over the Salad kingdom. You play as Sir Cucumber who has been tasked with rescuing the princess.The bad guys in this game are humans known as “Farmies”, who have aligned with Minister Pumpkin and are acting as his enforcers. Throughout the later part of the game you’ll run into Farmies and other enemies and have to thrown down in a hard core Rock-Paper-Scissors themed battle.The fights themselves are pretty straightforward and not overly difficult, but there is a certain novelty to it that keeps it interesting.Though only available in the NES version, there is an excellent soundtrack to back the game up. My favourite track is Minister Pumpkin’s Palace, which I’m pretty sure I tried to record to a “best of” casette back in the day when I first got into emulation.I mentioned the fetch quests that make up the majority of the game, but the remaining gameplay consists of maze navigation.In my younger years mazes were more fun and busting out the graph paper to track your progress held a certain appeal, but now I find these to generally just be frustrating. Thankfully, walkthroughs are easy enough to find and can get you through these sections quickly enough if you so choose.Overall I still enjoy playing through this game. I like revisiting the story and I like menu-driven adventure games such as this one and the MacVenture games. I know this game may not appeal to everyone, but if you’re looking for something a little different in an adventure game, give Princess Tomato a try.Game Information Game Princess Tomato in the Salad Kingdom Developer Hudson Soft Publisher Hudson Soft Release Date 1984 Systems NEC PC-8801, NEC PC-6001, FM-7, MSX, NES/Famicom Game Engine   My Playthrough Time to Completion 2 hours 40 minutes Version Played NES via NES.emu for Android Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Graphics (10) 5 Sound (10) 5 Plot / Progression (25) 12 Characters / Development (15) 9 Gameplay / Experience (15) 10 Replayability (10) 2 Impact / Impression (10) 5 Bonus / Surprise (5) 3   51% Note that I overhauled my scoring criteria in August of 2024, and the score above is the revised score for this game.See below for the original score based on the original scoring criteria. Atmosphere (20) 16 Story (25) 20 Experience (15) 12 Impact (10) 8   80% Gallery" }, { "title": "Space Quest: The Sarien Encounter (Sierra On-Line) - 1986", "url": "/blog/2021/08/09/space-quest-the-sarien-encounter/", "categories": "Let's Adventure!", "tags": "adventure, AGI, Sierra On-Line", "date": "2021-08-09 08:29:08 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Ulysses and the Golden F...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Ulysses and the Golden Fleece (On-Line Systems) - 1981Space Quest: The Sarien Encounter (Sierra On-Line) - 1986→ Princess Tomato in the Salad Kingdom (Hudson Soft) - 1984 Article 4 of 96 in this series.Though I’m pretty sure I played King’s Quest first, Space Quest is the game that really stands out to me as being a “great game of that era”. What set this title apart was the use of humour throughout the story, interactions with characters and the environment and the (countless) pitfalls and death traps. Series designers Scott Murphy and Mark Crowe (known as the “Two Guys from Andromeda” in later games) wanted to do something not set in a medieval or fantasy atmosphere, and also with the goal of creating a “fun, silly game”.You play as a bumbling janitor aboard the starship Arcada. Later games would identify the lead character as “Roger Wilco”, but here you enter your name and take on the role of the character instead. While sleeping peacefully in your broom closet you awaken to find the ship has been taken over by aliens who have killed all of your crewmates and taken the Star Generator. You must find your way off the Arcada, work your way through the desert of Kerona and find the Deltaur to destroy the Star Generator.As with prior AGI titles, you interact with the game via a text parser and move about with the arrow keys. The game’s main theme song is extremely memorable (even the original on PC Speaker), and there are background noises and interaction sounds throughout the game.Essentially every single choice you make in this game can result in your untimely demise, so “save early, save often”. I found myself rotating through 5-6 save slots and saving on every screen. The messages you get when you die are really funny though, so I’d encourage you to purposely make mistakes just to see how they describe your death … then reload :PThe story is very straightforward and the puzzles aren’t overly difficult. When you’re in Ulence Flats and need to buy a ship and a droid to get off the planet, you find the slot machine in the bar and can gamble until you get enough money. This part is a bit tedious (and the wrong jackpot WILL kill you), but overall progressing through the game wasn’t too challenging.The journey to Ulence Flats involves a sand skimmer mini game, where you’re just avoiding rocks. If you hit 5-6 rocks you’ll be ejected and die and have to reload and try again, but I found if you drop the speed down to Slow it wasn’t too difficult. Lowering the speed also helps once you’re on board the Deltaur and get a gun and have to shoot first (like Han?) once you lose your helmet.I’d highly recommend playing through this game. If text parser games aren’t your cup of tea, Sierra remade this title using the SCI engine in 1991. This remake is a point-and-click interface and updates the graphics from EGA to VGA and features digital sound and music. Though I said I wouldn’t cover the VGA remakes for this series, I’m guessing I might end up making an exception here …Game Information Game Space Quest: The Sarien Encounter Developer Sierra On-Line Publisher Sierra On-Line Release Date October 1986 Systems DOS, Macintosh, Apple II, Apple IIGS, Amiga, Atari ST Game Engine Adventure Game Interpreter (AGI) My Playthrough Time to Completion 45 minutes Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 17 Story (25) 21 Experience (15) 13 Impact (10) 8   84% Gallery" }, { "title": "Let's Adventure! Reviewed Games Sorted by Score", "url": "/blog/2021/08/08/adventure-games-1980-1999-sorted-by-score/", "categories": "Let's Adventure!", "tags": "series, adventure", "date": "2021-08-08 18:47:28 -0400", "snippet": "This page is a list of the reviewed games from the “Let’s Adventure!” series, sorted by rating. See the “Let’s Adventure!” category page for a list of content by date of publication.{ \"progress\": ...", "content": "This page is a list of the reviewed games from the “Let’s Adventure!” series, sorted by rating. See the “Let’s Adventure!” category page for a list of content by date of publication.{ \"progress\": { \"finished\": 96, \"skipped\": 13, \"total\": 363 }, \"journey_completed\": \"30.03%\"} Note that I overhauled my scoring criteria in August of 2024 91% Maniac Mansion: Day of the Tentacle (LucasArts) - 1993 89% Full Throttle (LucasArts) - 1995 89% Gabriel Knight: Sins of the Fathers (Sierra On-Line) - 1993 87% The Secret of Monkey Island (Lucasfilm Games) - 1990 87% Grim Fandango (LucasArts) - 1998 86% Beneath a Steel Sky (Revolution Software) - 1994 86% Sanitarium (DreamForge Intertainment) - 1998 84% Sam &amp; Max Hit the Road (LucasArts) - 1993 84% Space Quest: The Sarien Encounter (Sierra On-Line) - 1986 84% Flight of the Amazon Queen (Interactive Binary Illusions) - 1995 81% King’s Quest: Quest for the Crown (Sierra On-Line) - 1984 80% Shadowgate (ICOM Simulations) - 1987 79% Innocent Until Caught (Divide By Zero) - 1993 77% Blue Force (Tsunami Games) - 1993 76% Rise of the Dragon (Dynamix) - 1990 73% I Have No Mouth, and I Must Scream (The Dreamers Guild) - 1995 71% Police Quest II: The Vengeance (Sierra On-Line) - 1988 71% Under a Killing Moon (Access Software) - 1994 70% Space Quest III: The Pirates of Pestulon (Sierra On-Line) - 1989 69% Manhunter: New York (Evryware) - 1988 69% Tony Tough and the Night of Roasted Moths (Nayma Software, Prograph Research S.r.l.) - 1999 67% Blade Runner (Westwood Studios) - 1997 67% Police Quest: In Pursuit of the Death Angel (Sierra On-Line) - 1987 66% Universe (Core Design) - 1994 66% Nightshade (Beam Software) - 1992 66% Space Quest II: Vohaul’s Revenge (Sierra On-Line) - 1987 64% Neuromancer (Interplay Productions) - 1988 64% Ringworld: Revenge of the Patriarch (Tsunami Games) - 1992 64% Normality (Gremlin Interactive) - 1996 64% Leisure Suit Larry Goes Looking for Love (in Several Wrong Places) (Sierra On-Line) - 1988 63% DreamWeb (Creative Reality) - 1994 63% Labyrinth: The Computer Game (Lucasfilm Games) - 1986 61% Space Quest V: Roger Wilco – The Next Mutation (Dynamix) - 1993 61% Snatcher (Konami) - 1988 61% Countdown (Access Software) - 1990 59% Discworld (Teeny Weeny Games/Perfect 10 Productions) - 1995 59% Dark Seed (Cyberdreams) - 1992 59% The Adventures of Willy Beamish (Dynamix) - 1991 59% Police Quest III: The Kindred (Sierra On-Line) - 1991 57% Leisure Suit Larry in the Land of the Lounge Lizards (Sierra On-Line) - 1987 57% Mean Streets (Access Software) - 1989 56% Return to Ringworld (Tsunami Games) - 1994 56% The Legend of Kyrandia: Fables and Fiends (Westwood Studios) - 1992 56% Frederik Pohl’s Gateway (Legend Entertainment) - 1992 56% Loom (Lucasfilm Games) - 1990 55% Space Quest 6: The Spinal Frontier (Sierra On-Line) - 1995 53% Ripper (Take-Two Interactive) - 1996 53% Space Quest IV: Roger Wilco and the Time Rippers (Sierra On-Line) - 1991 51% Harvester (DigiFX Interactive) - 1996 51% Beavis and Butt-Head in Virtual Stupidity (Viacom New Media) - 1995 51% Princess Tomato in the Salad Kingdom (Hudson Soft) - 1984 50% Déjà Vu: A Nightmare Comes True (ICOM Simulations) - 1985 49% Duckman: The Graphic Adventures of a Private Dick (The Illusions Gaming Company) - 1997 49% Urban Runner (Coktel Vision) - 1996 48% Return of the Phantom (MicroProse) - 1993 47% Hopkins FBI (MP Entertainment) - 1998 47% Manhunter 2: San Francisco (Evryware) - 1989 46% Lure of the Temptress (Revolution Software) - 1992 46% Tass Times in Tonetown (Interplay Productions, Brainwave Creations) - 1986 44% Torin’s Passage (Sierra On-Line) - 1995 44% Pepper’s Adventures in Time (Sierra On-Line) - 1993 44% Uninvited (ICOM Simulations) - 1986 43% King’s Quest III: To Heir Is Human (Sierra On-Line) - 1986 43% Eternam (Infogrames) - 1992 43% The Scoop (Telarium) - 1986 42% Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals (Sierra On-Line) - 1989 42% Hook (Ocean) - 1992 41% Hugo’s House of Horrors (Gray Design Associates) - 1990 41% King’s Quest II: Romancing the Throne (Sierra On-Line) - 1985 40% The Crimson Crown - Further Adventures in Transylvania (Penguin Software) - 1985 40% Police Quest: Open Season (Sierra On-Line) - 1993 39% Companions of Xanth (Legend Entertainment) - 1993 39% Codename: ICEMAN (Sierra On-Line) - 1989 39% Cruise for a Corpse (Delphine Software International) - 1991 36% EcoQuest: The Search for Cetus (Sierra On-Line) - 1991 36% Hugo II, Whodunit? (Gray Design Associates) - 1991 36% Jurassic Park (Sega of America) - 1993 34% Murder on the Mississippi (Activision) - 1986 34% Altered Destiny (Accolade) - 1990 34% The Black Cauldron (Sierra On-Line) - 1986 31% Rendezvous with Rama (Telarium) - 1984 29% Ace Ventura (7th Level) - 1996 28% The Dark Crystal (On-Line Systems) - 1983 23% Wizard and the Princess (On-Line Systems) - 1980 22% Transylvania (Penguin Software) - 1982 21% Mystery House (On-Line Systems) - 1980 21% Bargon Attack (Coktel Vision) - 1992 20% Dallas Quest (Datasoft) - 1984 19% Lost in Time (Coktel Vision) - 1993 18% Plan 9 from Outer Space (Gremlin Ireland) - 1992 15% Ulysses and the Golden Fleece (On-Line Systems) - 1981 14% Kabul Spy (Sirius Software) - 1982 13% Adventureland (Adventure International) - 1982 13% Emmanuelle (Coktel Vision) - 1989 12% Mission Asteroid (On-Line Systems) - 1980 7% Geisha (Coktel Vision) - 1990" }, { "title": "Ulysses and the Golden Fleece (On-Line Systems) - 1981", "url": "/blog/2021/08/08/ulysses-and-the-golden-fleece/", "categories": "Let's Adventure!", "tags": "adventure, ADL, Sierra On-Line", "date": "2021-08-08 18:46:54 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← King’s Quest: Quest for ...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← King’s Quest: Quest for the Crown (Sierra On-Line) - 1984Ulysses and the Golden Fleece (On-Line Systems) - 1981→ Space Quest: The Sarien Encounter (Sierra On-Line) - 1986 Article 3 of 96 in this series.Ulysses and the Golden Fleece (also known as Hi-Res Adventure #4) is a graphic adventure game released in 1981 for the Apple II. The premise of the game is pretty straightforward: You’re in ancient Greece, the king gives you (Ulysses) the task of finding the Golden Fleece.Though there is no title screen per-say and no music, the graphics for this game are quite a bit more elaborate than some of the earlier Hi-Res Adventure games. I actually started playing the DOS version of this game first, but having to press Scroll Lock every time there was text to scroll became so tedious I had to quit and move onto another system instead.The backgrounds are well drawn, and the scenes draw you in, however as you navigate the game it feels like you’re just running through a maze. Most of the time the descriptions you’re getting for the screen you’re on is just telling you that you’re lost in a forrest, lost in the jungle, or lost at sea. I’m assuming playing through this game without a walkthrough would heavily benefit from some graph paper and a lot of saving/reloading.As with all On-Line System’s (and Sierra) games, the wrong move will result in death and an inevitable reload from a point further back than you’d like. Meticulous saving is the answer here, but I found myself resorting to the walkthrough to just plow through to the end.There are plenty of puzzles, a lot of which are not really intuitive and can be very difficult to solve. Some puzzles are multi-phase in that you give a command, then the text parser will ask you a follow up question you need to respond to for the command to be fulfilled. For example, when trying to get past the sirens in the ocean, you have to TIE SELF to the mast of the ship (so you won’t go crazy from the sirens’ song). When you enter the command, the game responds with “to what”, and the correct response is TO MAST, but before actually doing this, the game asks you if you want to take this action, to which you have to reply YES.The puzzles in general aren’t intuitive, and would require A LOT of trial and error. Getting across the fjord on the Island of Storms by doing a TIE LEATER … TO LEATHER and then THROW LEATHER to make a lasso out of the leather is super confusing … especially when you have a rope!!! Full disclosure, I was using the walkthrough at this point and didn’t try the rope to see if it would work …I’m sure if I took the time to properly explore this game I’d have learned the magic words (SEVENSEAS to get rid of the harpies, or SUPPELTUEL to open a cave door) but my patience for this title had already run out. For anyone that played this game in the early 80’s and was able to complete it on their own, my hat’s off to you. This title is just too full of monotonous maze navigation and overly complicated puzzles to be an enjoyable adventure.That’s my 2 cents on this. The visuals are nice for 1981, but I wouldn’t recommend this title unless you’re trying to complete a bunch of similar titles for your own blog/video series ;)Game Information Game Ulysses and the Golden Fleece Developer On-Line Systems Publisher On-Line Systems Release Date 1981 Systems Apple II, Atari 8-bit, Commodore 64, DOS Game Engine ADL (Adventure Development Language) My Playthrough Time to Completion &lt; 1 hour Version Played Apple II via AppleWin Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Graphics (10) 3 Sound (10) 0 Plot / Progression (25) 6 Characters / Development (15) 3 Gameplay / Experience (15) 3 Replayability (10) 0 Impact / Impression (10) 0 Bonus / Surprise (5) 0   15% Note that I overhauled my scoring criteria in August of 2024, and the score above is the revised score for this game.See below for the original score based on the original scoring criteria. Atmosphere (20) 12 Story (25) 12 Experience (15) 6 Impact (10) 4   46% Gallery" }, { "title": "King’s Quest: Quest for the Crown (Sierra On-Line) - 1984", "url": "/blog/2021/08/06/kings-quest/", "categories": "Let's Adventure!", "tags": "adventure, AGI, Sierra On-Line", "date": "2021-08-06 05:54:31 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Mystery House (On-Line S...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.← Mystery House (On-Line Systems) - 1980King’s Quest: Quest for the Crown (Sierra On-Line) - 1984→ Ulysses and the Golden Fleece (On-Line Systems) - 1981 Article 2 of 96 in this series.For a lot of us 80’s kids, King’s Quest is where it all began. The colours were vibrant, there was intro music and sound effects throughout the game, the story felt immersive, and oh shit, you died, time to reload …. assuming you remembered to save.Unlike Mystery House where you’re sorta just dropped into the world and have to figure out why you’re there and muddle your way through, King’s Quest provides the player with a summary as soon as you speak to the king. Once you do, he tells you he’s dying and has chosen you as his heir, but first you have to prove yourself by going out and finding three things that he wants you to bring back.Moving about the world is done using the arrow keys, and the game engine actually allows you to move in four directions as well as creating a sense of immersion by allowing you to walk behind things. This was a huge leap forward compared to the text parser mechanism previously used to navigate game worlds as instead of typing GO EAST and a new wall of text describing the interaction, you just … move yourself east to the edge of the screen and a new screen renders as a result.Interacting with the world is still done using a text parser, however this time it’s much more sophisticated and can parse multi word phrases and can understand certain word variations, making for a less frustrating experience.Let’s not kid ourselves though, this game can still be extremely frustrating. Basically everything can (and will) kill you if you get too close to it, there are certain screens with random encounters (ogres, wizards, the with) that will end your game and if you fall in the water and forget to type swim … you drown.The puzzles are generally intuitive, and progressing through through the game isn’t overly difficult. For example, when you meet a couple in their cabin and see there’s a fiddle in the corner, you assume you’re going to need this item and can either take it or have to do something for the couple for them to give it to you. If you try to take it, the game says something like “you can’t take their only possession!”, then if you talk to them they say they can’t offer you anything as they have no food.While walking about, you find a random bowl on the ground with the words “FILL” in it. Typing fill once you’ve picked it up will fill the bowl with food magically. I wonder what you’re supposed to do with this … Oh right :PThere are some frustrating puzzles as well, like the quest for the magic beans. Since King’s Quest loosely follows a fairy tale story line and integrates a number of tropes, you’re supposed to know things like “goats don’t like trolls” to be able to cross a bridge. Once you puzzle that out, you get to an old man who will give you the beans if you can guess his name. A clue in the game tells you “it helps to think backwards”, and if you know the Rumpelstiltskin story you know you just need to say his name backwards … but Sierra decided to make this even more complicated by instead making you reverse the letter characters of “Rumpelstiltskin” instead of just typing it in backwards. Oh yeah … I needed a walkthrough for that …You finally find the three treasures, kill a dragon and a giant, DJ a Leprechaun dance party and bring all that shit back to the king and … he dies … but not before crowning you king of Daventry and setting you up for a 7 game franchise (yeah I know it’s 8 … but we don’t speak of Mask of Eternity).Overall this game is still very accessible and playable, even as a text parser game. There was an SCI Remake in 1990 which updated the graphics, but the text parser interface remained (check out the demo trailer for the SCI remake!). For anyone interested in early adventure games, this one should be high on their list and as it can be played in ScummVM you can play it on any system you happen to be reading this on.Game Information Game King’s Quest: Quest for the Crown Developer Sierra On-Line Publisher Sierra On-Line Release Date May 10, 1984 Systems PCjr, Tandy 1000, Amiga, Apple II, Apple IIGS,Atari ST, Macintosh, DOS, Master System Game Engine Adventure Game Interpreter (AGI) My Playthrough Time to Completion 31 minutes Version Played DOS via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Atmosphere (20) 17 Story (25) 20 Experience (15) 12 Impact (10) 8   81% Gallery" }, { "title": "Mystery House (On-Line Systems) - 1980", "url": "/blog/2021/08/03/mystery-house/", "categories": "Let's Adventure!", "tags": "adventure, ADL, Sierra On-Line, Online Systems", "date": "2021-08-03 07:25:36 -0400", "snippet": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.Mystery House (On-Line Sys...", "content": " Series:&nbsp;Let's Adventure! A Journey into Adventure Games (1980-1999)This review is part of the Let's Adventure! series. See all reviewed games sorted by rating here.Mystery House (On-Line Systems) - 1980→ King’s Quest: Quest for the Crown (Sierra On-Line) - 1984 Article 1 of 96 in this series.Mystery House is an adventure game released by On-Line Systems in 1980. It was designed, written and illustrated by Roberta Williams, and programmed by Ken Williams for the Apple II. Mystery House is the first graphical adventure game ever and the first game produced by On-Line Systems, the company which would evolve into Sierra On-Line, and is one of the earliest horror video games.This game holds some fond memories as I do remember playing this with a friend when I was a kid. I didn’t own an Apple II, and didn’t get a 386 until I was about 8 years old so I had to rely on others to play these games. I started out by finding some Apple II disk images and trying to get this running on an emulator, but it turns out the full game can be legally downloaded from the ScummVM Game Downloads page.It took a bit of getting used to the text parser interface as it is very unforgiving when you don’t enter the right commands. This is to be expected considering this is one of the oldest adventure games available, but having been spoiled by 30+ years of playing adventure games made getting back into this mindset challenging. Once you reacquaint yourself with the 2 word parser, go UP and OPEN DOOR you’re greeted by all the people who’ve been invited to this mystery house.There are random notes scattered through the house that indicate there is a murderer amongst the group, as well as a treasure hidden somewhere. Your goal it seems is to survive and escape with said treasure, so into the house you go, collecting items and trying to use them in the correct locations to solve puzzles along the way.As On-Line Systems would eventually become Sierra On-Line, it’s fitting that one of the recurring tropes of their games would begin here. If you don’t act appropriately, you die :P Unlike the LucasArts games that would come later (and prove to be much more forgiving), Sierra games really pushed you to “Save Early, Save Often” as there were myriad ways to die as you progressed through their stories.The story here doesn’t really get set up and you’re plopped in front of the house without much to go on. It becomes apparent as you progress what you’re supposed to do, and there aren’t many scenes to explore or items to collect. Though the images are monochromatic and there is no sound, this WAS a graphical adventure game, unlike the interactive fiction games that would come later (such as Zork).Since this was the first graphical adventure game you can’t really compare it to anything else. Mystery House set the stage for 2 decades of adventure games and the rise of Sierra Online, LucasArts and others who would release some of my personal favourite games of all time. You can breeze through this title pretty quickly and it really has no replayability factor, however if you’re a fan of the genre it’s worth spending some time with the title that started it all.Game Information Game Mystery House Developer Online Systems Publisher Online Systems Release Date 1980 Systems Apple II Game Engine ADL (Adventure Development Language) My Playthrough Time to Completion 40 minutes Version Played Apple II via ScummVM Notes Walkthrough ScoreSee here for a refresher on how we’re scoring these games. Graphics (10) 4 Sound (10) 1 Plot / Progression (25) 6 Characters / Development (15) 2 Gameplay / Experience (15) 4 Replayability (10) 1 Impact / Impression (10) 2 Bonus / Surprise (5) 1   21% Note that I overhauled my scoring criteria in August of 2024, and the score above is the revised score for this game.See below for the original score based on the original scoring criteria. Atmosphere (20) 15 Story (25) 15 Experience (15) 8 Impact (10) 8   66% Gallery" }, { "title": "Let's Adventure! A Journey into Adventure Games (1980-1999)", "url": "/blog/2021/07/28/adventure-games-1980-1999/", "categories": "Let's Adventure!", "tags": "series, adventure", "date": "2021-07-28 13:01:39 -0400", "snippet": "When I was growing up in the 80’s my favourite games to play were adventure games. I’ve always found myself going back to this genre, and as I grew up and moved into software development the ScummV...", "content": "When I was growing up in the 80’s my favourite games to play were adventure games. I’ve always found myself going back to this genre, and as I grew up and moved into software development the ScummVM project held a certain appeal as it combined two passions for me.Though I was never very active in the project, I tried to contribute in various ways over the years, finally seeing some success recently with the Asylum engine being merged.When I stumbled across the CRPG Addict’s blog many years ago I wanted to do something similar, but for adventure games. I’ve decided to take a run at this as (a very long time ago) I used to write for an online magazine (Game Over) under the pseudonym “Lothian”. A quick Google search will unearth some examples if you’re curious …It’s worth calling out the reviewers at The Adventure Gamer, who have been blogging about these games in a similar fashion as the CRPG Addict for nearly as long. Both sites go far more in depth than I plan to and focus on documenting their playthroughs. My goal here is to summarize the experience, though the format may change over time depending on how well received this is (and if I can stay focused or not 😅).Up NextBased on community feedback at [/r/adventuregames](https://www.reddit.com/r/adventuregames) the following games are on the shortlist to be reviewed next:|**Entry**|**Title (Publisher)**|**Year**|**Request Link**||---------|---------------------|--------|----------------||106|Dune (Cryo Interactive)|1992|[link](https://www.reddit.com/r/adventuregames/comments/1aripif/comment/kr05hub/?utm_source=share&amp;utm_medium=web2x&amp;context=3)||304|Callahan’s Crosstime Saloon (Legend Entertainment)|1997|[link](https://www.reddit.com/r/adventuregames/comments/1d395a8/comment/l66675c/?utm_source=share&amp;utm_medium=web3x&amp;utm_name=web3xcss&amp;utm_term=1&amp;utm_content=share_button)||63|The Colonel’s Bequest (Sierra On-Line)|1989|[link](https://www.reddit.com/r/adventuregames/comments/1d395a8/comment/l66675c/?utm_source=share&amp;utm_medium=web3x&amp;utm_name=web3xcss&amp;utm_term=1&amp;utm_content=share_button)||320|Hollywood Monsters (Pendulo Studios)|1997|[link](https://www.reddit.com/r/adventuregames/comments/1d395a8/comment/l6642vy/?utm_source=share&amp;utm_medium=web3x&amp;utm_name=web3xcss&amp;utm_term=1&amp;utm_content=share_button)||284|Titanic: Adventure Out of Time (Cyberflix)|1996|[link](https://www.reddit.com/r/adventuregames/comments/1e0lp2u/comment/lco0fwp/?utm_source=share&amp;utm_medium=web3x&amp;utm_name=web3xcss&amp;utm_term=1&amp;utm_content=share_button)||302|The Last Express (Smoking Car Productions)|1997|[link](https://www.reddit.com/r/adventuregames/comments/1e0lp2u/comment/lco0fwp/?utm_source=share&amp;utm_medium=web3x&amp;utm_name=web3xcss&amp;utm_term=1&amp;utm_content=share_button)||214|The Orion Conspiracy (Divide By Zero) |1995|[link](https://www.reddit.com/r/adventuregames/comments/1hrrq5z/comment/m510hac/?utm_source=share&amp;utm_medium=web3x&amp;utm_name=web3xcss&amp;utm_term=1&amp;utm_content=share_button)|I&#39;ll add entries in the order they&#39;re received, but the table above isn&#39;t a commitment ... just a suggestion 😉.GuidelinesThe Full Game List is 363 titles, however I only plan on playing those that are available in English. Any title that can be played using ScummVM likely will be as this facilitates things like keeping track of play time, taking screenshots, managing save states and more.I don’t plan on playing the games in order either, as this might become a bit tedious. I will be starting with Mystery House however as we might as well kick this journey off at the very beginning and see where it takes us from there.For a number of the older Sierra Online games there are SCI remakes that replaced the text parser with a point-and-click interface. I may review some of these games twice to cover both experiences, however this likely won’t be the norm.ScoringMy criteria won’t be as involved as the CRPG Addict’s GIMLET, however I want to be consistent with how each game is being measured.When writing for Game Over we also had a fixed set of criteria (Graphics, Sound, Gameplay, Fun, Multiplayer, Overall). I want to bring something like this over to this series, however in a way that won’t penalize older entries in the list too much due to “poorer” graphics/sound.The scoring we’ll be using for this series will focus on the following: [15] GraphicsThe overall visual experience of the game can include background art, character models, game interface, cutscenes, inventory design and basically anything that you can see while playing the game. [10] SoundWhat do you hear? Is there ambient music or background noise? If the game is voiced are the actors giving it their all or phoning it in? Are sound effects present and enhancing the experience, or jarring/distracting. [25] Plot / ProgressionWhat’s the quality of the overarching story in this game? Does it grab your attention and hold it or is it sort of “just there” as a forced reason for you to interact with this virtual world? How does the plot progress, and does everything wrap up at the end? When the game is over do you feel satisfied and want to learn more about this world and its inhabitants? [15] Characters / DevelopmentIs the main character interesting and engaging? Are there other characters you interact with and are they fleshed out or just hollow NPCs there to deliver basic instructions? Do the main and supporting characters add depth to the world and gaming experience and how do they grow and evolve as the game progresses? [15] Gameplay / ExperienceThis is a game … so is it fun to play? The goal is to get from some starting point to some ending point, but was this journey worth your time? Sometimes these games can be a joy to play through and sometimes they’re a slog and focus too heavily on “filler” or elements that artificially pad out play time. [5] ReplayabilityOnce the game is complete would you ever find yourself itching to play it again? Was the game fun to play or experience, or offer some variety of gameplay or character selection that could entice you back for repeated playthroughs. [10] Impact / ImpressionFinal thoughts and impressions on this game as a whole. Were you left wanting more, or were you rushing to the end to get it over with. [5] Bonus / SurpriseAnything unexpected or notable that’s worth calling out?Each game will be ranked using the above, with the score represented as a percentage. Note that the first 84 games were originally scored using a different system. If you happen to be curious how this evolved, check out “Overhauling My Scoring Criteria” for more information.Games ListThe games list for this journey is available via this Google Sheet, and has been taken from Wikipedia’s List of Graphic Adventure Games. This only includes entries from 1980 through 1999.As I work through the list I’ll link the reviews below. You can also find the reviews (in order of publication) under the “Let’s Adventure!” category page or sorted by score.{ \"progress\": { \"finished\": 96, \"skipped\": 13, \"total\": 363 }, \"journey_completed\": \"30.03%\"} The list below was generated on July 28, 2021 and may have diverged from what is currently listed on Wikipedia Mystery House (On-Line Systems) - 1980 (21%) Wizard and the Princess (On-Line Systems) - 1980 (23%) Mission Asteroid (On-Line Systems) - 1980 (12%) Cranston Manor (On-Line Systems) - 1981 Ulysses and the Golden Fleece (On-Line Systems) - 1981 (15%) Adventureland (Adventure International) - 1982 (13%) Kabul Spy (Sirius Software) - 1982 (14%) Time Zone (On-Line Systems) - 1982 Transylvania (Penguin Software) - 1982 (22%) The Dark Crystal (On-Line Systems) - 1983 (28%) Star Arthur Legend: Planet Mephius (T&amp;E Soft) - 1983 (Japanese only) Portopia Renzoku Satsujin Jiken (Yuji Horii, Chunsoft) - 1983 (Japanese only) Rendezvous with Rama (Telarium) - 1984 (31%) Below the Root (Dale Disharoon) - 1984 Dallas Quest (Datasoft) - 1984 (20%) Okhotsk ni Kiyu: Hokkaido Rensa Satsujin Jiken (Yuji Horii, Login Software) - 1984 (Japanese only) Princess Tomato in the Salad Kingdom (Hudson Soft) - 1984 (51%) Wingman (TamTam) - 1984 (Japanese only) King’s Quest: Quest for the Crown (Sierra On-Line) - 1984 The Crimson Crown - Further Adventures in Transylvania (Penguin Software) - 1985 Déjà Vu: A Nightmare Comes True (ICOM Simulations) - 1985 Perry Mason: The Case of the Mandarin Murder (Telarium) - 1985 King’s Quest II: Romancing the Throne (Sierra On-Line) - 1985 The Black Cauldron (Sierra On-Line) - 1986 J.B. Harold Murder Club (Riverhillsoft) - 1986 Labyrinth: The Computer Game (Lucasfilm Games) - 1986 Murder on the Mississippi (Activision) - 1986 The Scoop (Telarium) - 1986 Tass Times in Tonetown (Interplay Productions, Brainwave Creations) - 1986 Uninvited (ICOM Simulations) - 1986 Space Quest: The Sarien Encounter (Sierra On-Line) - 1986 King’s Quest III: To Heir Is Human (Sierra On-Line) - 1986 Suishō no Dragon (Square) - 1986 (Japanese only, though a fan translation exists) La Abadía del Crimen (The Abbey of Crime) (Opera Soft) - 1987 (Spanish only) Mortville Manor (Lankhor) - 1987 Police Quest: In Pursuit of the Death Angel (Sierra On-Line) - 1987 Leisure Suit Larry in the Land of the Lounge Lizards (Sierra On-Line) - 1987 Shadowgate (ICOM Simulations) - 1987 The Faery Tale Adventure (MicroIllusions) - 1987 Méwilo (Coktel Vision) - 1987 (German, French only) Maniac Mansion (Lucasfilm Games) - 1987 Space Quest II: Vohaul’s Revenge (Sierra On-Line) - 1987 Déjà Vu II: Lost in Las Vegas (ICOM Simulations) - 1988 Gold Rush! (Sierra On-Line) - 1988 Manhunter: New York (Evryware) - 1988 Neuromancer (Interplay Productions) - 1988 King’s Quest IV: The Perils of Rosella (Sierra On-Line) - 1988 Leisure Suit Larry Goes Looking for Love (in Several Wrong Places) (Sierra On-Line) - 1988 Zak McKracken and the Alien Mindbenders (Lucasfilm Games) - 1988 Police Quest II: The Vengeance (Sierra On-Line) - 1988 Snatcher (Konami) - 1988 B.A.T. (Computer’s Dream) - 1989 Emmanuelle (Coktel Vision) - 1989 Legend of Djel (Coktel Vision) - 1989 Future Wars (Delphine Software International) - 1989 KULT: The Temple of Flying Saucers (Exxos, ERE informatique) - 1989 Manhunter 2: San Francisco (Evryware) - 1989 Mean Streets (Access Software) - 1989 Transylvania III: Vanquish the Night (Polarware) - 1989 Space Quest III: The Pirates of Pestulon (Sierra On-Line) - 1989 Indiana Jones and the Last Crusade (Lucasfilm Games) - 1989 Quest for Glory: So You Want to Be a Hero (Sierra On-Line) - 1989 The Colonel’s Bequest (Sierra On-Line) - 1989 Codename: ICEMAN (Sierra On-Line) - 1989 Leisure Suit Larry III: Passionate Patti in Pursuit of the Pulsating Pectorals (Sierra On-Line) - 1989 Altered Destiny (Accolade) - 1990 Countdown (Access Software) - 1990 Earthrise: A Guild Investigation (Matt Gruson) - 1990 Geisha (Coktel Vision) - 1990 Hugo’s House of Horrors (Gray Design Associates) - 1990 Les Manley in: Search for the King (Accolade) - 1990 Maupiti Island (Lankhor) - 1990 Operation Stealth (Delphine Software International) - 1990 Quest for Glory II: Trial by Fire (Sierra On-Line) - 1990 Rise of the Dragon (Dynamix) - 1990 Conquests of Camelot: The Search for the Grail (Sierra On-Line) - 1990 Loom (Lucasfilm Games) - 1990 Spellcasting 101: Sorcerers Get All The Girls (Legend Entertainment) - 1990 The Secret of Monkey Island (Lucasfilm Games) - 1990 King’s Quest V: Absence Makes the Heart Go Yonder! (Sierra On-Line) - 1990 The Adventures of Willy Beamish (Dynamix) - 1991 Conquests of the Longbow: The Legend of Robin Hood (Sierra On-Line) - 1991 Cruise for a Corpse (Delphine Software International) - 1991 Fascination (Coktel Vision) - 1991 EcoQuest: The Search for Cetus (Sierra On-Line) - 1991 Elvira II: The Jaws of Cerberus (Horrorsoft) - 1991 Gobliiins (Coktel Vision) - 1991 Heart of China (Dynamix) - 1991 Hugo II, Whodunit? (Gray Design Associates) - 1991 Les Manley in: Lost in L.A. (Accolade) - 1991 Martian Memorandum (Access Software) - 1991 Police Quest III: The Kindred (Sierra On-Line) - 1991 Sherlock Holmes: Consulting Detective (ICOM Simulations) - 1991 Spellcasting 201: The Sorcerer’s Appliance (Legend Entertainment) - 1991 Timequest (Legend Entertainment) - 1991 Space Quest IV: Roger Wilco and the Time Rippers (Sierra On-Line) - 1991 Metal Slader Glory (HAL Laboratory) - 1991 (Japanese only, though a fan translation exists) Leisure Suit Larry 5: Passionate Patti Does a Little Undercover Work (Sierra On-Line) - 1991 Monkey Island 2: LeChuck’s Revenge (LucasArts) - 1991 Amazon: Guardians of Eden (Access Software) - 1992 B.A.T. II – The Koshan Conspiracy (Computer’s Dream) - 1992 Bargon Attack (Coktel Vision) - 1992 The Dagger of Amon Ra (Sierra On-Line) - 1992 Dark Seed (Cyberdreams) - 1992 Daughter of Serpents (The Scroll) (Eldritch Games) - 1992 Dune (Cryo Interactive) - 1992 Eternam (Infogrames) - 1992 Gobliins 2: The Prince Buffoon (Coktel Vision) - 1992 Hook (Ocean) - 1992 Hugo III, Jungle of Doom! (Gray Design Associates) - 1992 Inca (Coktel Vision) - 1992 Inspector Gadget: Mission 1 - Global Terror! (Azeroth, Inc.) - 1992 KGB (Cryo Interactive) - 1992 Leather Goddesses of Phobos 2: Gas Pump Girls Meet the Pulsating Inconvenience from Planet X! (Infocom) - 1992 The Legacy: Realm of Terror (Magnetic Scrolls) - 1992 Linus Spacehead’s Cosmic Crusade/Cosmic Spacehead (Codemasters (NES version), Supersonic Software) - 1992 The Lost Files of Sherlock Holmes: The Case of the Serrated Scalpel (Mythos Software, Inc.) - 1992 The Palace of Deceit: The Dragon’s Plight (Game Syndicate Productions (Cliff Bleszinski)) - 1992 Plan 9 from Outer Space (Gremlin Ireland) - 1992 Putt-Putt Joins the Parade (Humongous Entertainment) - 1992 Sherlock Holmes: Consulting Detective Vol. II (ICOM Simulations) - 1992 Ringworld: Revenge of the Patriarch (Tsunami Games) - 1992 Spellcasting 301: Spring Break (Legend Entertainment) - 1992 Star Trek: 25th Anniversary (Interplay) - 1992 Nightshade (Beam Software) - 1992 Frederik Pohl’s Gateway (Legend Entertainment) - 1992 Indiana Jones and the Fate of Atlantis (LucasArts) - 1992 Lure of the Temptress (Revolution Software) - 1992 Quest for Glory III: Wages of War (Sierra On-Line) - 1992 The Legend of Kyrandia: Fables and Fiends (Westwood Studios) - 1992 King’s Quest VI: Heir Today, Gone Tomorrow (Sierra On-Line) - 1992 Curse of Enchantia (Core Design) - 1992 Rex Nebular and the Cosmic Gender Bender (MicroProse) - 1992 The Adventures of Melvin Freebush (Sherwood Forest Games) - 1993 Blue Force (Tsunami Games) - 1993 Dare to Dream (Epic MegaGames) - 1993 Dracula Unleashed (ICOM Simulations) - 1993 EcoQuest 2: Lost Secret of the Rainforest (Sierra On-Line) - 1993 Eric the Unready (Legend Entertainment) - 1993 Fatty Bear’s Birthday Surprise (Humongous Entertainment) - 1993 Freddy Pharkas: Frontier Pharmacist (Sierra On-Line) - 1993 Gobliins Quest 3 (Coktel Vision) - 1993 Inca II: Nations of Immortality (Coktel Vision) - 1993 Innocent Until Caught (Divide By Zero) - 1993 The Legend of Kyrandia: Hand of Fate (Westwood Studios) - 1993 Lost in Time (Coktel Vision) - 1993 Pepper’s Adventures in Time (Sierra On-Line) - 1993 Putt-Putt Goes to the Moon (Humongous Entertainment) - 1993 Return of the Phantom (MicroProse) - 1993 Sherlock Holmes: Consulting Detective Vol. III (ICOM Simulations) - 1993 The Journeyman Project (Presto Studios) - 1993 Space Quest V: Roger Wilco – The Next Mutation (Dynamix) - 1993 Tajemnica Statuetki (Metropolis Software House) - 1993 (Polish only) Veil of Darkness (Event Horizon Software) - 1993 Shadow of the Comet (Infogrames) - 1993 The 7th Guest (Trilobyte) - 1993 Leisure Suit Larry 6: Shape Up or Slip Out! (Sierra On-Line) - 1993 Maniac Mansion: Day of the Tentacle (LucasArts) - 1993 Return to Zork (Infocom) - 1993 Myst (Cyan) - 1993 Simon the Sorcerer (Adventure Soft) - 1993 Companions of Xanth (Legend Entertainment) - 1993 Police Quest: Open Season (Sierra On-Line) - 1993 Sam &amp; Max Hit the Road (LucasArts) - 1993 Star Trek: Judgment Rites (Interplay) - 1993 Gateway II: Homeworld (Legend Entertainment) - 1993 Jack in the Dark (Infogrames) - 1993 Quest for Glory: Shadows of Darkness (Sierra On-Line) - 1993 Gabriel Knight: Sins of the Fathers (Sierra On-Line) - 1993 Jurassic Park (Sega of America) - 1993 Alice: An Interactive Museum (Toshiba-EMI) - 1994 Are You Afraid of the Dark: The Tale of Orpheo’s Curse (Viacom New Media) - 1994 The Bizarre Adventures of Woodruff and the Schnibble (Coktel Vision) - 1994 BloodNet (MicroProse) - 1994 Commander Blood (Cryo Interactive) - 1994 Return to Ringworld (Tsunami Games) - 1994 DreamWeb (Creative Reality) - 1994 Gadget: Invention, Travel, &amp; Adventure (Synergy, Inc.) - 1994 Hell: A Cyberpunk Thriller (Take-Two Interactive Software) - 1994 Igor: Objective Uikokahonia (Pendulo Studios) - 1994 Inherit the Earth: Quest for the Orb (The Dreamers Guild) - 1994 The Journeyman Project Turbo (Presto Studios) - 1994 The Legend of Kyrandia: Malcolm’s Revenge (Westwood Studios) - 1994 Noctropolis (Flashpoint Productions) - 1994 Plague of the Moon (Rebelsoft) - 1994 Superhero League of Hoboken (Legend Entertainment) - 1994 Under a Killing Moon (Access Software) - 1994 Universe (Core Design) - 1994 Dragonsphere (MicroProse) - 1994 Beneath a Steel Sky (Revolution Software) - 1994 Policenauts (Konami) - 1994 Death Gate (Legend Entertainment) - 1994 King’s Quest VII: The Princeless Bride (Sierra On-Line) - 1994 Dragon Lore: The Legend Begins (Cryo Interactive) - 1994 The Beast Within: A Gabriel Knight Mystery (Sierra On-Line) - 1995 The Big Red Adventure (Dynabyte) - 1995 Chewy: Esc from F5 (Blue Byte) - 1995 Chop Suey (game) (Theresa Duncan) - 1995 Cosmology of Kyoto (Softedge) - 1995 The Daedalus Encounter (Mechadeus) - 1995 The Dark Eye (Inscape) - 1995 Discworld (Teeny Weeny Games/Perfect 10 Productions) - 1995 Dust: A Tale of the Wired West (Cyberflix) - 1995 EVE Burst Error (C’s Ware) - 1995 Flight of the Amazon Queen (Interactive Binary Illusions) - 1995 Frankenstein: Through the Eyes of the Monster (Amazing Media) - 1995 Guilty (Divide By Zero) - 1995 Heaven’s Dawn (Art 9 Entertainment Inc.) - 1995 In the 1st Degree (Adair &amp; Armstrong) - 1995 Jewels of the Oracle (Dreamcatcher Interactive) - 1995 The Journeyman Project 2: Buried in Time (Presto Studios) - 1995 Karma Curse of the 12 Caves (Dreamcatcher Interactive) - 1995 Kingdom: The Far Reaches (Virtual Image Productions) - 1995 The Orion Conspiracy (Divide By Zero) - 1995 Panic in the Park (Imagination Pilots) - 1995 Prisoner of Ice (Infogrames) - 1995 Qin: Tomb of the Middle Kingdom (Learning Technologies Interactive) - 1995 SilverLoad (Millennium Interactive) - 1995 Skyborg: Into the Vortex (SkyBox International) - 1995 Teen Agent (Metropolis Software House) - 1995 Touché: The Adventures of the Fifth Musketeer (Clipper Software) - 1995 Wolfsbane (Midnight Games) - 1995 Lost Eden (Cryo Interactive) - 1995 Nocturnal Illusion (Apricot) - 1995 Full Throttle (LucasArts) - 1995 Aliens: A Comic Book Adventure (Cryo Interactive) - 1995 Star Trek: The Next Generation – A Final Unity (Spectrum HoloByte) - 1995 Space Quest 6: The Spinal Frontier (Sierra On-Line) - 1995 Roberta Williams’ Phantasmagoria (Sierra On-Line) - 1995 Beavis and Butt-Head in Virtual Stupidity (Viacom New Media) - 1995 Scooby-Doo Mystery (The Illusions Gaming Company) - 1995 Clock Tower (Human Entertainment) - 1995 (Japanese only, though a fan translation exists) Ripley’s Believe It or Not!: The Riddle of Master Lu (Sanctuary Woods) - 1995 I Have No Mouth, and I Must Scream (The Dreamers Guild) - 1995 Torin’s Passage (Sierra On-Line) - 1995 Mission Critical (Legend Entertainment) - 1995 Shivers (Sierra On-Line) - 1995 Simon the Sorcerer II: The Lion, the Wizard and the Wardrobe (Adventure Soft) - 1995 Total Distortion (Pop Rocket) - 1995 Dark Seed II (Destiny Media Technologies) - 1995 The Dig (LucasArts) - 1995 The 11th Hour (Trilobyte) - 1995 Shannara (Legend Entertainment) - 1995 Chronomaster (DreamForge Intertainment) - 1995 Robot City (Brooklyn Multimedia) - 1995 Alien Incident (Housemarque) - 1996 Amber: Journeys Beyond (Hue Forest Entertainment) - 1996 Blue Ice (Art of Mind Productions) - 1996 Creature Crunch (TechToons Ltd.) - 1996 Urban Runner (Coktel Vision) - 1996 The Dame Was Loaded (Beam Software) - 1996 Discworld II: Missing Presumed…!? (Perfect Entertainment) - 1996 Dragon Lore II: The Heart of the Dragon Man (Cryo Interactive) - 1996 Fable (Simbiosis Interactive) - 1996 The Gene Machine (Divide By Zero) - 1996 Kingdom II: Shadoan (Virtual Image Productions) - 1996 Monty Python &amp; the Quest for the Holy Grail (7th Level) - 1996 Mutation of J.B. (Invention) - 1996 (Slovak and German only) Orion Burger (Sanctuary Woods) - 1996 UFOs (Artech) - 1996 Angel Devoid: Face of the Enemy (Electric Dreams) - 1996 Chronicles of the Sword (Synthetic Dimensions) - 1996 Bad Mojo (Pulse Entertainment) - 1996 Ripper (Take-Two Interactive) - 1996 Spycraft: The Great Game (Activision) - 1996 Zork Nemesis (Zombie LLC) - 1996 Normality (Gremlin Interactive) - 1996 Kingdom O’ Magic (SCi) - 1996 The Pandora Directive (Access Software) - 1996 Azrael’s Tear (Intelligent Games) - 1996 Harvester (DigiFX Interactive) - 1996 The Lost Files of Sherlock Holmes: The Case of the Rose Tattoo (Mythos Software, Inc.) - 1996 Broken Sword: The Shadow of the Templars (Revolution Software) - 1996 Timelapse (GTE Interactive Media) - 1996 Lighthouse: The Dark Being (Sierra On-Line) - 1996 Ace Ventura (7th Level) - 1996 Blazing Dragons (The Illusions Gaming Company) - 1996 Drowned God: Conspiracy of the Ages (Epic Multimedia Group) - 1996 Martian Chronicles, The (Byron Preiss Multimedia Company) - 1995 The Neverhood (The Neverhood, Inc.) - 1996 The Pink Panther: Passport to Peril (Wanderlust Interactive) - 1996 Toonstruck (Burst Studios) - 1996 Rama (Dynamix) - 1996 Titanic: Adventure Out of Time (Cyberflix) - 1996 Leisure Suit Larry: Love for Sail! (Sierra On-Line) - 1996 Phantasmagoria: A Puzzle of Flesh (Sierra On-Line) - 1996 YU-NO: A girl who chants love at the bound of this world (ELF) - 1996 (Japanese only, though a 2019 remake was localized) Ark of Time (Trecision) - 1997 The City of Lost Children (Psygnosis) - 1997 Crusader: Adventure Out of Time (Index+) - 1997 Egypt 1156 B.C. (Cryo Interactive Entertainment) - 1997 Jack Orlando (TopWare Interactive) - 1997 Riana Rouge (Black Dragon Productions) - 1997 Sentient (Psygnosis) - 1997 The Simpsons: Virtual Springfield (Digital Evolution) - 1997 Versailles 1685 (Cryo Interactive) - 1997 Voodoo Kid (Infogrames, Eric Sterling Collins, Hubert Chardot) - 1997 WuKung: A Legendary Adventure (Abudoe Software) - 1997 Realms of the Haunting (Gremlin Interactive) - 1997 Obsidian (Rocket Science Games) - 1997 Atlantis: The Lost Tales (Cryo Interactive) - 1997 The Last Express (Smoking Car Productions) - 1997 Shivers II: Harvest of Souls (Sierra On-Line) - 1997 Callahan’s Crosstime Saloon (Legend Entertainment) - 1997 Safecracker (Daydream Software) - 1997 Duckman: The Graphic Adventures of a Private Dick (The Illusions Gaming Company) - 1997 The Feeble Files (Adventure Soft) - 1997 The Journeyman Project: Pegasus Prime (Presto Studios) - 1997 The Space Bar (Boffo Games) - 1997 Spy Fox in “Dry Cereal” (Humongous Entertainment) - 1997 Temüjin: A Supernatural Adventure (SouthPeak Games) - 1997 Broken Sword II: The Smoking Mirror (Revolution Software) - 1997 The Pink Panther: Hokus Pokus Pink (Wanderlust Interactive) - 1997 Dark Earth (Kalisto Entertainment) - 1997 Armed &amp; Delirious (Makh-Shevet) - 1997 Riven (Cyan) - 1997 The Curse of Monkey Island (LucasArts) - 1997 Zork: Grand Inquisitor (Activision) - 1997 Blade Runner (Westwood Studios) - 1997 Hollywood Monsters (Pendulo Studios) - 1997 (Spanish only, though a fan translation exists) Ankh: The Tales of Mystery (Artex Software) - 1998 Morpheus (Soap Bubble Productions) - 1998 Nightlong: Union City Conspiracy (Team17, Trecision) - 1998 ZeroZone (R&amp;P Electronic Media) - 1998 The Journeyman Project 3: Legacy of Time (Presto Studios) - 1998 Black Dahlia (Take-Two Interactive) - 1998 Tex Murphy: Overseer (Access Software) - 1998 Starship Titanic (The Digital Village) - 1998 Sanitarium (DreamForge Intertainment) - 1998 The X-Files Game (HyperBole Studios) - 1998 Hopkins FBI (MP Entertainment) - 1998 Ring: The Legend of the Nibelungen (Arxel Tribe) - 1998 Grim Fandango (LucasArts) - 1998 Nancy Drew: Secrets Can Kill (Her Interactive) - 1998 John Saul’s Blackstone Chronicles: An Adventure in Terror (Legend Entertainment) - 1998 Juggernaut (Tonkin House) - 1998 King’s Quest: Mask of Eternity (Sierra Studios) - 1998 Dark Side of the Moon: A Sci-Fi Adventure (SouthPeak Games) - 1998 Quest for Glory V: Dragon Fire (Sierra On-Line) - 1998 Discworld Noir (Perfect Entertainment, Teeny Weeny Games (PS)) - 1999 The Forgotten: It Begins (Ransom Interactive) - 1999 Paris 1313 (Dramæra) - 1999 Physicus (HEUREKA-Klett Softwareverlag) - 1999 Scooby-Doo: Mystery of the Fun Park Phantom (Engineering Animation, Inc.) - 1999 Tony Tough and the Night of Roasted Moths (Nayma Software, Prograph Research S.r.l.) - 1999 Zero Critical (Istvan Pely Productions) - 1999 Biosys (JumpStart Solutions Ltd.) - 1999 Beavis and Butt-Head Do U. (The Illusions Gaming Company) - 1999 Amerzone (Microïds) - 1999 Aztec: The Curse in the Heart of the City of Gold (Cryo Interactive) - 1999 Traitors Gate (Daydream Software) - 1999 Dracula: Resurrection (Index+, Canal+ Multimedia and France Telecom Multimedia) - 1999 Faust (Arxel Tribe) - 1999 The Silver Case (Grasshopper Manufacture) - 1999 Spy Fox 2: “Some Assembly Required” (Humongous Entertainment) - 1999 Omikron: The Nomad Soul (Quantic Dream) - 1999 Atlantis II (Cryo Interactive) - 1999 Freddi Fish 4: The Case of the Hogfish Rustlers of Briny Gulch (Humongous Entertainment) - 1999 Nancy Drew: Stay Tuned for Danger (Her Interactive) - 1999 The Longest Journey (Funcom) - 1999 Gabriel Knight 3: Blood of the Sacred, Blood of the Damned (Sierra On-Line) - 1999 Star Trek: Hidden Evil (Presto Studios) - 1999 The Crystal Key (Earthlight Productions) - 1999" }, { "title": "Generating a ScummVM Games List", "url": "/blog/2021/05/31/generating-a-scummvm-games-list/", "categories": "Programming", "tags": "scummvm, ruby", "date": "2021-05-31 06:55:45 -0400", "snippet": " 2021-06-01: Note that you can actually generate the games list directly from the scummvm binary by running scummvm --list-all-games. Oops …A long time ago I reached out to the ScummVM leadership ...", "content": " 2021-06-01: Note that you can actually generate the games list directly from the scummvm binary by running scummvm --list-all-games. Oops …A long time ago I reached out to the ScummVM leadership about a script I’d been working on that could be used to scrape detection entries and generate a definitive games list.As with most of my ScummVM-related development, this fell by the wayside for a number of years, but recently I’ve rekindled my love of scripting (and Ruby) so I wanted to try and get this script at least into a (somewhat) working state.def replace_target(path, target) p = path.split(&#39;/&#39;) p[-1] = target return p.join(&#39;/&#39;).to_senddef cleanup_title(c) title = c.gsub(&#39;{&#39;,&#39;&#39;).gsub(&#39;}&#39;,&#39;&#39;).gsub(&quot;\\t&quot;, &#39; &#39;).split(&#39;, &#39;)[1..-1].join.strip title = title.delete_prefix(&#39;&quot;&#39;).delete_suffix(&#39;&quot;&#39;).delete_suffix(&#39; ,&#39;).delete_suffix(&quot;\\&quot;,&quot;).delete_suffix(&quot;\\&quot;&quot;).delete_suffix(&quot;\\&quot; ;&quot;) titleendtarget = &quot;detection.cpp&quot;fallback = &quot;detection_tables.h&quot;search_term = &quot;static const PlainGameDescriptor &quot;fallback_term = &quot;const PlainGameDescriptor &quot;files = %x[find `pwd` -name &#39;#{target}&#39;].split(&quot;\\n&quot;)result = []files.each do |f| offset = %x[grep -n &quot;#{search_term}&quot; #{f}].split(&#39;:&#39;)[0].to_i if offset == 0 f = replace_target(f, fallback) offset = %x[grep -n &quot;#{search_term}&quot; #{f}].split(&#39;:&#39;)[0].to_i if File.exists?(f) # kyra offset = %x[grep -n &quot;#{fallback_term}&quot; #{f}].split(&#39;:&#39;)[0].to_i if offset == 0 &amp;&amp; File.exists?(f) end if offset &gt; 0 terminator1 = %x[sed -n &#39;#{offset + 1}, $ p&#39; &#39;#{f}&#39; | grep -n &#39;0, 0&#39;].split(&#39;:&#39;)[0].to_i terminator2 = %x[sed -n &#39;#{offset + 1}, $ p&#39; &#39;#{f}&#39; | grep -n &#39;;&#39;].split(&#39;:&#39;)[0].to_i length = (terminator1 &lt; terminator2) ? terminator1 : terminator2 content = %x[sed -n &#39;#{offset + 1}, #{offset + length - 1} p&#39; #{f}] engine = f.split(&#39;/&#39;)[-2] content.strip.split(&quot;,\\n&quot;).each do |c| title = cleanup_title(c) if title.index(&quot;//&quot;).nil? result &lt;&lt; { engine: engine, title: title } unless title == &quot;nullptr&quot; else titles = c.split(&quot;\\n\\t&quot;) titles.each do |t| result &lt;&lt; { engine: engine, title: cleanup_title(t) } end end end endendresult.reject! { |obj| obj[:title].empty? }puts &quot;| Engine | Title (#{result.length}) |&quot;puts &quot;|--------|--------------------------|&quot;result.sort_by { |obj| obj[:title] }.each do |o| puts &quot;|#{o[:engine]}|#{o[:title]}|&quot;endThis script just needs to be downloaded to the ScummVM source directory and run. At the time of writing this script doesn’t deduplicate results and is not guaranteed to be 100% accurate, but it should be close enough to give you an idea how many great games are currently available (though possibly still under development) within ScummVM at the commit point you currently have checked out.The results below are recent as of commit d053c8b494: Engine Title (770) wintermute 1 1/2 Ritter: Auf der Suche nach der hinreissenden Herzelinde toltecs 3 Skulls of the Toltecs agt A Bloody Life ags A Christmas Tale ags A Day In The Future wage A Mess O’ Trouble director A Silly Noisy House agi AGI Demo agi AGI Tetris ags AGS Game Scanner director ALeX-WORLD director AMBER: Journeys Beyond ags ASAP Adventure ags Aaron’s Epic Journey sludge Above The Waves ags Ace Duswell - Where’s The Ace director Activision’s Atari 2600 Action Pack wintermute Actual Destination adrift Adrift IF Game advsys AdvSys Game ags Adventure Game ags Adventure Game Studio Game lilliput Adventures of Robin Hood alan2 Alan2 Game alan3 Alan3 Game director Alice: An Interactive Museum wintermute Alimardan Meets Merlin wintermute Alimardan’s Mischief wintermute Alpha Polaris director AmandaStories access Amazon: Guardians of Eden director Ankh 2: Mystery of Tutankhamen director Ankh 3 director Ankh: Mystery of the Pyramids wage Another Fine Mess ags Anton Ulvfot’s Mid-Town Shootout wintermute Apeiron director Arc of Doom archetype Archetype IF Game wintermute Art of Murder 1: FBI Confidential director ArtRageous! sci Astro Chicken ags BLUECUP - on the run scumm Backyard Baseball scumm Backyard Baseball 2001 scumm Backyard Baseball 2003 scumm Backyard Basketball scumm Backyard Football scumm Backyard Football 2002 scumm Backyard Soccer scumm Backyard Soccer 2004 scumm Backyard Soccer MLS Edition director Bad Day on the Midway wintermute Barrow Hill - The Dark Path wintermute Basis Octavus scumm Bear Stormin’ illusions Beavis and Butt-head Do U bbvs Beavis and Butt-head in Virtual Stupidity sky Beneath a Steel Sky ags Bert the Newsreader wintermute Beyond the Threshold director Beyond the Wall of Stars wintermute Bickadoodle scumm Big Thinkers First Grade scumm Big Thinkers Kindergarten bladerunner Blade Runner bladerunner Blade Runner with restored content dragons Blazing Dragons tsage Blue Force scumm Blue’s 123 Time Activities scumm Blue’s ABC Time Activities scumm Blue’s Art Time Activities scumm Blue’s Birthday Adventure scumm Blue’s Reading Time Activities scumm Blue’s Treasure Hunt ags Bob’s Quest 2: The quest for the AGS Blue cup award wintermute Book of Gron Part One ags Book of Spells 1 ags Book of Spells 2 ags Book of Spells 3 wintermute Boredom of Agustin Cordes sword25 Broken Sword 2.5 sword1 Broken Sword: The Shadow of the Templars”; tucker Bud Tucker in Double Trouble director Busy People of Hamsterland director Byron Preiss Multimedia Catalog agi Caitlyn’s Destiny ags Calsoon wage Camp Cantitoe wintermute Carol Reed 10 - Bosch’s Damnation wintermute Carol Reed 11 - Shades Of Black wintermute Carol Reed 12 - Profound Red wintermute Carol Reed 13 - The Birdwatcher wintermute Carol Reed 14 - The Fall Of April wintermute Carol Reed 15 - Geospots wintermute Carol Reed 16 - Quarantine Diary wintermute Carol Reed 4 - East Side Story wintermute Carol Reed 5 - The Colour of Murder wintermute Carol Reed 6 - Black Circle wintermute Carol Reed 7 - Blue Madonna wintermute Carol Reed 8 - Amber’s Blood wintermute Carol Reed 9 - Cold Case Summer ags Carver Island 2: Mrs. Rodriguez’s Revenge sci Castle of Dr. Brain ags Chamber chewy Chewy: Esc from F5 wintermute Chivalry is Not Dead director Chop Suey sci Christmas Card 1988 sci Christmas Card 1990: The Seasoned Professional sci Christmas Card 1992 director Chu-Teng groovie Clandestiny sci Codename: Iceman wintermute Colors on Canvas ags Compensation sci Conquests of Camelot: King ArthurQuest for the Grail sci Conquests of the Longbow: The Adventures of Robin Hood wintermute Conspiracao Dumont wintermute Corrosion: Cold Winter Waiting magnetic Corruption director Cosmology of Kyoto sci Crazy Nick’s Software Picks: King Graham’s Board Game Challenge sci Crazy Nick’s Software Picks: Leisure Suit Larry’s Casino sci Crazy Nick’s Software Picks: Parlor Games with Laura Bow sci Crazy Nick’s Software Picks: Robin Hood’s Game of Skill and Chance sci Crazy Nick’s Software Picks: Roger Wilco’s Spaced Out Game Pack cruise Cruise for a Corpse ultima Crusader: No Regret ultima Crusader: No Remorse sludge Cubert BadboneP.I. director DEVO Presents: Adventures of the Smart Patrol wintermute DFAF Adventure composer Darby the Dragon wintermute Dark Fall: Lost Souls ags Darts scumm Day of the Tentacle wintermute Dead City ags Deepbright macventure Deja Vu macventure Deja Vu II ags Demon Slayer 1 ags Demon Slayer 2 ags Demon Slayer 3 ags Demon Slayer 4 agos Demon in my Pocket director Derrat Sorcerum wintermute Des Reves Elastiques Avec Mille Insectes Nommes Georges wintermute Devil In The Capital saga Dinotopia ags Dirk Chafberg wintermute Dirty Split tinsel Discworld tinsel Discworld 2: Missing Presumed …!? tinsel Discworld Noir director Don’t Quit Your Day Job agi Donald Duck’s Playground wintermute Dr. Bohus wintermute Dr. Doyle - Mystery Of The Cloche Hat draci Draci Historie mads Dragonsphere wage Drakmyth Castle drascula Drascula: The Vampire Strikes Back dreamweb DreamWeb wintermute Dreamcat wintermute Dreamscape illusions Duckman dm Dungeon Master director Earthtia Saga: Larthur’s Legend director Earthworm Jim ags Earwig Is Angry! director Eastern Mind: The Lost Souls of Tong Nou ags Eclair 1 ags Eclair 2 sci EcoQuest II: Lost Secret of the Rainforest sci EcoQuest: The Search for Cetus”// floppy is SCI1CD SCI1.1 wintermute Eight Squares in The Garden ags El Burro agos Elvira - Mistress of the Dark agos Elvira II - The Jaws of Cerberus wage Enchanted Scepters director Ernie ags Ernie’s Big Adventure ags Ernie’s Big Adventure 2 director Escape from Planet Arizona wintermute Escape from the Mansion wintermute Everyday Grey ags Exile kyra Eye of the Beholder kyra Eye of the Beholder II: The Legend of Darkmoon ags Eyes of the Jade Sphinx wintermute Face Noir saga Faery Tale Adventure II: Halls of the Dead wintermute Fairy Tales About Toshechka and Boshechka agi Fanmade AGI game sci Fanmade SCI Game scumm Fatty Bear’s Birthday Surprise scumm Fatty Bear’s Fun Pack wintermute Finding Hope ags Firewall magnetic Fish! wintermute Five Lethal Demons wintermute Five Magical Amulets queen Flight of the Amazon Queen ags Floyd wintermute Forgotten Sound 1 - Revelation wintermute Forgotten Sound 2 - Destiny wintermute Four wintermute FoxTail wintermute Framed director Frankenstein: Through the Eyes of the Monster sludge Frasse and the Peas of Kejick director Freak Show scumm Freddi Fish 1: The Case of the Missing Kelp Seeds scumm Freddi Fish 2: The Case of the Haunted Schoolhouse scumm Freddi Fish 3: The Case of the Stolen Conch Shell scumm Freddi Fish 4: The Case of the Hogfish Rustlers of Briny Gulch scumm Freddi Fish 5: The Case of the Creature of Coral Cove scumm Freddi Fish and Luther’s Maze Madness scumm Freddi Fish and Luther’s Water Worries scumm Freddi Fish’s One-Stop Fun Shop sci Freddy Pharkas: Frontier Pharmacist ngi Full Pipe scumm Full Throttle sci Fun Seeker’s Guide cine Future Wars sci Gabriel Knight: Sins of the Fathers sci Gabriel Knight: Sins of the Fathers director Gadget: InventionTravel&amp; Adventure ags Gaea Fallen director Gahan Wilson’s The Ultimate Haunted House wintermute Ghost in the Sheet glulx Glulx Game gnap Gnap agi Gold Rush! ags Gorther of the Cave People ags Granny Zombiekiller in: Mittens Murder Mystery ags Greg’s Mountainous Adventure composer Gregory and the Hot Air Balloon grim Grim Fandango director Gundam 0079: The War for Earth hadesch Hades Challenge wintermute Hamlet or the last game without MMORPG featuresshaders and product placement director Hamsterland: The Time Machine wintermute Helga Deep In Trouble ags Hermit adl Hi-Res Adventure #0: Mission Asteroid adl Hi-Res Adventure #1: Mystery House adl Hi-Res Adventure #2: Wizard and the Princess adl Hi-Res Adventure #3: Cranston Manor adl Hi-Res Adventure #4: Ulysses and the Golden Fleece adl Hi-Res Adventure #5: Time Zone adl Hi-Res Adventure #6: The Dark Crystal hopkins Hopkins FBI wintermute Hor sci Hoyle Bridge sci Hoyle Children’s Collection sci Hoyle Classic Card Games sci Hoyle Classic Games sci Hoyle Official Book of Games: Volume 1 sci Hoyle Official Book of Games: Volume 2 sci Hoyle Official Book of Games: Volume 3 sci Hoyle Solitaire hugo Hugo 1: Hugo’s House of Horrors hugo Hugo 2: Whodunit? hugo Hugo 3: Jungle of Doom hugo Hugo IF Game scumm Humongous Interactive Catalog director HyperBlade hdb Hyperspace Delivery Boy! saga I Have No Mouth and I Must Scream wintermute I Must Kill…: Fresh Meat sci ImagiNation Network (INN) Demo icb In Cold Blood scumm Indiana Jones and the Fate of Atlantis scumm Indiana Jones and the Last Crusade scumm Indiana Jones and the Last Crusade &amp; Loom scumm Indiana Jones and the Last Crusade &amp; Zak McKracken wintermute Informer Alavi - Murder of Miss Rojan saga Inherit the Earth: Quest for the Orb sci Inside the Chest”// aka Behind the Developer’s Shield ags Interface Show-off director Iron Helix director Isis wintermute J.U.L.I.A. wintermute J.U.L.I.A.: Among the Stars wintermute J.U.L.I.A.: Untold director JUMP: The David Bowie Interactive CD-ROM ags James Bondage wintermute James Peris: No License Nor Control director Jewels of the Oracle ags Jingle Bells magnetic Jinxter sci Jones in the Fast Lane agos Jumble director Just Me &amp; My Dad wintermute K’NOSSOS director Karma: Curse of the 12 Caves ags Kidnapped agi King’s Quest I: Quest for the Crown sci King’s Quest I: Quest for the Crown”// Note: There was also an AGI version of this agi King’s Quest II: Romancing the Throne agi King’s Quest III: To Heir Is Human agi King’s Quest IV: The Perils of Rosella sci King’s Quest IV: The Perils of Rosella”// Note: There was also an AGI version of this sci King’s Quest V: Absence Makes the Heart Go Yonder sci King’s Quest VI: Heir TodayGone Tomorrow sci King’s Quest VII: The Princeless Bride sci King’s Questions kingdom Kingdom: The Far Reaches wintermute Kulivocko director L-ZONE lab Labyrinth of Time director Labyrinthe kyra Lands of Lore: The Throne of Chaos ags Larry Vales II: Dead Girls are Easy ags Larry Vales III: Time Heals All ‘Burns ags Larry Vales: Traffic Division ags Lassi Quest I ags Lassi and Roger ags Lassi and Roger Meet God sci Laura Bow 2: The Dagger of Amon Ra sci Laura Bow: The Colonel’s Bequest made Leather Goddesses of Phobos 2 sci Leisure Suit Larry 2: Goes Looking for Love (in Several Wrong Places) sci Leisure Suit Larry 3: Passionate Patti in Pursuit of the Pulsating Pectorals sci Leisure Suit Larry 5: Passionate Patti Does a Little Undercover Work sci Leisure Suit Larry 6: Shape Up or Slip Out! sci Leisure Suit Larry 6: Shape Up or Slip Out! sci Leisure Suit Larry 7: Love for Sail! agi Leisure Suit Larry in the Land of the Lounge Lizards sci Leisure Suit Larry in the Land of the Lounge Lizards”// Note: There was also an AGI version of this sludge Lepton’s Quest scumm Let’s Explore the Airport with Buzzy scumm Let’s Explore the Farm with Buzzy scumm Let’s Explore the Jungle with Buzzy sludge Life Flashes By wintermute Life In 3 Minutes sci Lighthouse: The Dark Being wintermute Limbo of the Lost director Lion twine Little Big Adventure ags Little Jonny Evil ags Little Willie wintermute Looky scumm Loom avalanche Lord Avalot d’Argent cryo Lost Eden director Louis Cat Orze: The Mystery of the Queen’s Necklace wintermute Lov Mamuta ags Lupo Inutile lure Lure of the Temptress wintermute Machu Mayu director Macromedia Director All Movies Test Target director Macromedia Director Game director Macromedia Director Test Target director Mad Mac Cartoons ags Mafio ngi Magic Dream composer Magic Tales composer Magic Tales: Baba Yaga and the Magic Geese composer Magic Tales: Imo and the King composer Magic Tales: Liam Finds a Story composer Magic Tales: Sleeping Cub’s Test of Courage composer Magic Tales: The Little Samurai composer Magic Tales: The Princess and the Crab magnetic Magnetic Scrolls Game director Majestic Part I: Alien Encounter sludge Mandy Christmas Adventure agi Manhunter 1: New York agi Manhunter 2: San Francisco scumm Maniac Mansion access Martian Memorandum director Masters of the Elements director MechWarrior 2 director Meet Mediaband ags Men In Brown wintermute Mental Repairs Inc agi Mickey's Space Adventure director Microsoft Bookshelf ‘94 director Microsoft Encarta ‘94 director Microsoft Encarta ‘95 xeen Might and Magic IV: Clouds of Xeen xeen Might and Magic V: Darkside of Xeen xeen Might and Magic: Swords of Xeen xeen Might and Magic: World of Xeen director Mirage wintermute Mirage supernova Mission Supernova 1 agi Mixed-Up Mother Goose sci Mixed-Up Mother Goose sci Mixed-Up Mother Goose sci Mixed-up Fairy Tales ags Mom’s Quest wintermute Monday Starts on Saturday scumm Monkey Island 2: LeChuck’s Revenge ags Monkey Plank scumm Moonbase Commander ags Moose Wars: Desire For More Cows mortevielle Mortville Manor ags Mr. Grey’s Greyt Adventure sci Ms. Astro Chicken director Mummy: Tomb of the Pharaoh director Muppet Treasure Island ags Murder wintermute Murder In Tehran’s Alleys 1933 wintermute Murder In Tehran’s Alleys 2016 mutationofjb Mutation of J.B. director Mylk mohawk Myst myst3 Myst III Exile director Mysterious Egypt magnetic Myth wintermute Myth: A Guff’s Tale nancy Nancy Drew: Message in a Haunted Mansion nancy Nancy Drew: Secret of the Scarlet Hand nancy Nancy Drew: Secrets Can Kill nancy Nancy Drew: Stay Tuned for Danger nancy Nancy Drew: The Final Scene nancy Nancy Drew: Treasure in the Royal Tower sludge Nathan’s Second Chance director Necrobius ags Nicholas Wolfe part I: Framed wintermute Night Train ags Night of the Plumber trecision Nightlong: Union City Conspiracy ngi Nikita Game Interface game director Nile: Passage to Egypt director Nine Worlds hosted by Patrick Stewart parallaction Nippon Safes Inc. agos NoPatience director Noir: A Shadowy Thriller ags Novo Mestro wintermute Oknytt wintermute On the Tracks of Dinosaurs wintermute One wintermute One Helluva Day wintermute Open Quest director Opera Fatal cine Operation Stealth director Operation Teddy Bear director Operation: Eco-Nightmare director Operation: Weather Disaster sludge Out Of Order director P.A.W.S.: Personal Automated Wagging System wintermute Paintaria scumm Pajama Sam 1: No Need to Hide When It’s Dark Outside scumm Pajama Sam 2: Thunder and Lightning Aren’t so Frightening scumm Pajama Sam 3: You Are What You Eat From Your Head to Your Feet scumm Pajama Sam’s Lost &amp; Found scumm Pajama Sam’s One-Stop Fun Shop scumm Pajama Sam’s Sock Works scumm Pajama Sam: Games to Play on Any Day wintermute Palladion wintermute Papa’s Daughters wintermute Papa’s Daughters Go to the Sea director Paradise Rescue scumm Passport to Adventure sci Pepper’s Adventure in Time ags Permanent Daylight ags Perpetrator agos Personal Nightmare sci Phantasmagoria sci Phantasmagoria 2: A Puzzle of Flesh director Phantasmagoria Amusement Planet wintermute Pigeons in the Park director Pitfall: The Mayan Adventure wintermute Pizza Morgana: Episode 1 - Monsters and Manipulations in the Magical Forest ags Pizza Quest plumbers Plumbers Don’t Wear Ties! ags Point Blank wintermute Pole Chudes agi Police Quest I: In Pursuit of the Death Angel sci Police Quest II: The Vengeance sci Police Quest III: The Kindred sci Police Quest IV: Open Season sci Police Quest IV: Open Season”// floppy is SCI2CD SCI2.1 sci Police Quest: In Pursuit of the Death Angel”// Note: There was also an AGI version of this sci Police Quest: SWAT ags Porn Quest private Private Eye wintermute Project Joe wintermute Project Lonely Robot wintermute Project: Doom scumm Putt-Putt &amp; Fatty Bear’s Activity Pack scumm Putt-Putt Enters the Race scumm Putt-Putt Goes to the Moon scumm Putt-Putt Joins the Circus scumm Putt-Putt Joins the Parade scumm Putt-Putt Saves the Zoo scumm Putt-Putt Travels Through Time scumm Putt-Putt and Pep’s Balloon-O-Rama scumm Putt-Putt and Pep’s Dog on a Stick scumm Putt-Putt’s Fun Pack scumm Putt-Putt’s One-Stop Fun Shop wintermute Qajary Cat ags Quest For Colours quest Quest Game ags Quest for Glory 4 1/2 sci Quest for Glory I: So You Want to Be a Hero”// Note: There was also a SCI0 version of this (further up) sci Quest for Glory I: So You Want to Be a Hero”// Note: There was also a SCI11 VGA remake of this (further down) sci Quest for Glory II: Trial by Fire sci Quest for Glory III: Wages of War sci Quest for Glory IV: Shadows of Darkness sci Quest for Glory IV: Shadows of Darkness”// floppy is SCI2CD SCI2.1 sci RAMA ags RIPP ags Racing Manager director Ray Bradbury’s The Martian Chronicles Adventure Game wage Ray’s Maze ags Raymond’s Keys wintermute Rebecca Carlson Mystery 01 - Silent Footsteps ags Red wintermute Red Comrades 0.2: Operation F. petka Red Comrades 1: Save the Galaxy petka Red Comrades 2: For the Great Justice petka Red Comrades Demo director Refixion director Refixion II: Museum or Hospital director Refixion III: The Reindeer Story mads Return of the Phantom tsage Return to Ringworld made Return to Zork wintermute Reversion: The Escape wintermute Reversion: The Meeting wintermute Reversion: The Return mads Rex Nebular and the Cosmic Gender Bender wintermute Rhiannon: Curse of the four Branches ags Richard Longhurst and the Box That At ags Ricky Longhurst and the Box that Ate Time tsage Ringworld: Revenge of the Patriarch ags Rob Blanc I: Better Days of a Defender of the Universe ags Rob Blanc II: Planet of the Pasteurised Pestilence ags Rob Blanc III: The Temporal Terrorists sludge Robin’s Rescue director Robotoid Assembly Toolkit ags Rode Kill: A Day In the Life ags Rode Quest director Rodney’s Funscreen made Rodney’s Funscreen ags Rollinfoy lilliput Rome: Pathway to Power wintermute Rosemary scumm SPY Fox 1: Dry Cereal scumm SPY Fox 2: Some Assembly Required scumm SPY Fox 3: Operation Ozone scumm SPY Fox in Cheese Chase scumm SPY Fox in Hold the Mustard director Sakin II scumm Sam &amp; Max Hit the Road ags Sam The Pirate Monkey asylum Sanitarium director Santa Fe Mysteries: The Elk Moon Murder wintermute Satan and Sons director Science Smart director Scientific American Library: Illusion director Scientific American Library: The Universe director Screaming Metal wintermute Securanote agi Serguei’s Destiny 1 agi Serguei’s Destiny 2 cge2 Sfinx wintermute Shaban macventure Shadowgate wintermute Shadows on the Vatican - Act I: Greed wintermute Shadows on the Vatican - Act II: Wrath director Shanghai: Great Moments sci Shivers sci Shivers II: Harvest of Souls”// Not SCI agi Sierra AGI game sci Sierra SCI Game agos Simon the Sorcerer 1 agos Simon the Sorcerer 2 director SkyBorg: Into the Vortex ags Slacker Quest sci Slater &amp; Charlie Go Camping sludge Sludge Game ags Snail Quest ags Snail Quest 2 ags Snail Quest 3 wintermute Sofia’s Debt ags Sol cge Soltys ags Space wintermute Space Invaders wintermute Space Madness agi Space Quest 0: Replicated sci Space Quest 6: The Spinal Frontier agi Space Quest I: The Sarien Encounter sci Space Quest I: The Sarien Encounter”// Note: There was also an AGI version of this agi Space Quest II: Vohaul’s Revenge sci Space Quest III: The Pirates of Pestulon sci Space Quest IV: Roger Wilco and the Time Rippers”// floppy is SCI1CD SCI1.1 sci Space Quest V: The Next Mutation agi Space Quest X: The Lost Chapter director Spaceship Warlock director Spy Club director Spycraft: The Great Game director Star Trek Encyclopedia 1998 director Star Trek Omnipedia startrek Star Trek: 25th Anniversary director Star Trek: Borg director Star Trek: Deep Space Nine Episode Guide startrek Star Trek: Judgment Rites director Star Trek: Klingon director Star Trek: The Next Generation Episode Guide director Star Trek: The Next Generation Interactive Technical Manual titanic Starship Titanic director Stay Tooned! ags Stickmen wintermute Strange Change wintermute Stroke of Fate: Operation Bunker wintermute Stroke of Fate: Operation Valkyrie wintermute Sunrise: The game director SuperSpy 1 ags Superdisk agos Swampy Adventures tads TADS 2 Game ags TV Quest wintermute Tanya Grotter and the Disappearing Floor wintermute Tanya Grotter and the Magical Double Bass teenagent Teen Agent groovie Tender Loving Care testbed Testbed: The Backend Testing Framework groovie The 11th Hour: The Sequel to The 7th Guest ags The 6 Day Assassin groovie The 7th Guest wintermute The Ancient Mark - Episode 1 director The ApartmentInteractive demo sci The Beast Within: A Gabriel Knight Mystery parallaction The Big Red Adventure agi The Black Cauldron wintermute The Box director The C.H.A.O.S. Continuum sherlock The Case of the Rose Tattoo sherlock The Case of the Serrated Scalpel ags The Crown of Gold jacl The Curse of Eldor” // Competition 96 scumm The Curse of Monkey Island director The Daedalus Encounter director The Dark Eye sci The Dating Pool wintermute The Death of Erin Myers scumm The Dig wintermute The Driller Incident agos The Feeble Files sludge The Game Jam Game About GamesSecrets and Stuff sludge The Game That Takes Place on a Cruise Ship wintermute The Golden Calf griffon The Griffon Legend magnetic The Guild of Thieves director The History of the United States for Young People wintermute The Idiot’s Tale ags The Inexperienced Assassin sludge The Interview ags The Island sci The Island of Dr. Brain director The Journeyman Project director The Journeyman Project 2: Buried in Time buried The Journeyman Project 2: Buried in Time pegasus The Journeyman Project: Pegasus Prime wintermute The Kite wintermute The Last Crown - Midnight Horror lastexpress The Last Express kyra The Legend of Kyrandia kyra The Legend of Kyrandia: Malcolm’s Revenge kyra The Legend of Kyrandia: The Hand of Fate stark The Longest Journey wintermute The Lost Crown - A Ghost-Hunting Adventure tsage The Lost Files of Sherlock Holmes (Logo) director The Magic Death made The Manhole neverhood The Neverhood Chronicles pink The Pink Panther: Hokus Pokus Pink pink The Pink Panther: Passport to Peril prince The Prince and the Coward director The Riddle of the Maze ags The Secret of Carver Island scumm The Secret of Monkey Island sludge The Secret of Tremendous Corporation director The Seven Colors: Legend of PSY-S City wintermute The Shine of a Star director The Simpsons: Cartoon Studio director The Simpsons: Cartoon Studio Player ags The Tower wintermute The Trader of Stories ags The Trials of Odysseus Kent director The Ultimate Einstein director The Ultimate Frank Lloyd Wright: America’s Architect nancy The Vampire Diaries ags The Warp wintermute The Way Of Love: Sub Zero wintermute The White Chamber director The X-Files Unrestricted Access ags Thendor ags Tom Mato’s Grand Wing-Ding tony Tony Tough and the Night of Roasted Moths toon Toonstruck sci Torin’s Passage director Total Distortion touche Touche: The Adventures of the Fifth Musketeer comprehend Transylvania director Tri-3D-Trial agi Troll's Tale ags Tullie’s World 1: The Roving of Candale wage Twisted! director Twisty Night #1 director Twisty Night #2 director Twisty Night #3 ultima Ultima I - The First Age of Darkness ultima Ultima IV - Quest of the Avatar ultima Ultima IV - Quest of the Avatar - Enhanced ultima Ultima VI - The False Prophet ultima Ultima VI - The False Prophet - Enhanced ultima Ultima VIII - Pagan groovie Uncle Henry’s Playhouse sludge Verb Coin cryomni3d Versailles 1685 director Victor Vector &amp; Yondo: The Cyberplasm Formula director Victor Vector &amp; Yondo: The Hypnotic Harp director Victor Vector &amp; Yondo: The Last Dinosaur Egg director Victor Vector &amp; Yondo: The Vampire’s Coffin ags VonLudwig voyeur Voyeur wintermute Vsevolod wage WAGE wintermute War agos Waxworks sludge Welcome Example director Who Killed Brett Penance? director Who Killed Sam Rupert? director Who Killed Taylor French? The Case of the Undressed Reporter wintermute Wilma Tetris agi Winnie the Pooh in the Hundred Acre Wood wintermute Wintermute 3D Characters Technology Demo wintermute Wintermute Engine Technology Demo wintermute Wintermute engine game director Wishbone and the Amazing Odyssey magnetic Wonderland ultima Worlds of Ultima: Martian Dreams ultima Worlds of Ultima: Martian Dreams - Enhanced ultima Worlds of Ultima: The Savage Empire ultima Worlds of Ultima: The Savage Empire - Enhanced director Wrath of the Gods director Xanthus agi Xmas Card director Yellow Brick Road director Yellow Brick Road II director Yellow Brick Road III scumm Zak McKracken &amp; Loom scumm Zak McKracken and the Alien Mindbenders wintermute Zbang! The Game director Zeddas: Horror Tour 2 director Zeddas: Servant of Sheol wintermute Zilm: A Game of Reflex zvision Zork Nemesis: The Forbidden Lands director Zork Nemesis: The Forbidden Lands zvision Zork: Grand Inquisitor director iD4 Mission Disk 1 - Alien Supreme Commander director iD4 Mission Disk 10 - Alien Bomber director iD4 Mission Disk 11 - Area 51 director iD4 Mission Disk 2 - Alien Science Officer director iD4 Mission Disk 3 - Warrior Alien director iD4 Mission Disk 4 - Alien Navigator director iD4 Mission Disk 5 - Captain Steve Hiller director iD4 Mission Disk 6 - Dave’s Computer director iD4 Mission Disk 7 - President Whitmore director iD4 Mission Disk 8 - Alien Attack Fighter director iD4 Mission Disk 9 - FA-18 Fighter Jet magnetic the Pawn This method should work in OSX and Linux.Happy Coding!" }, { "title": "Formatting MongoDB 4.4+ Logs", "url": "/blog/2021/05/26/formatting-mongodb-4-dot-4-plus-logs/", "categories": "MongoDB", "tags": "mongodb", "date": "2021-05-26 08:21:00 -0400", "snippet": "MongoDB has always output log entries as plaintext.Starting in MongoDB 4.4, mongod / mongos instances now output all log messages in structured JSON format. This includes log output sent to the fil...", "content": "MongoDB has always output log entries as plaintext.Starting in MongoDB 4.4, mongod / mongos instances now output all log messages in structured JSON format. This includes log output sent to the file, syslog, and stdout (standard out) log destinations, as well as the output of the getLog command.The documentation includes Log Parsing Examples using the jq command line utility, but what if we want to tail the logs and produce a similar result as to what was present prior to the introduction of structured logging?For the following example I’ve used the m MongoDB Version Manager to install MongoDB 4.4.6:m 4.4.6-entmkdir datamongod --dbpath data --logpath data/mongodb.log --forkTailing the log now (tail -n 30 data/mongodb.log) will show the structured log output that is the default in MongoDB 4.4+, however using jq we can reformat (and colourize!!!) the output using one of the following:# Windowstail -f data\\mongodb.log | jq-win64 --compact-output -r -C \".msg |= sub(\\\"\\\\n\\\";\\\"\\\") | .t.\\\"$date\\\"+\\\" \\\"+.c+\\\" [\\\"+.ctx+\\\"] \\\"+.msg, .attr | select(.!=null)# Linux/OSXtail -f data/mongodb.log | jq --compact-output -r -C '.msg |= sub(\"\\n\";\"\") | .t.\"$date\"+\" \"+.c+\" [\"+.ctx+\"] \"+.msg, .attr | select(.!=null)'This makes visually consuming the logs a lot easier! Some log messages, more commonly seen with increased Logging Verbosity may contain escape sequences (ex: \\n and \\t):To render these escape sequences on screen while also tailing the logs in follow (-f) mode try the following:# Linux/OSXstdbuf -o0 tail -f mongod.log | stdbuf -o0 jq -r -C '.msg |= sub(\"\\n\";\"\") | .t.\"$date\"+\" \"+.c+\" [\"+.ctx+\"] \"+.msg, .attr | select(.!=null)' | sed 's/\\\\n/\\n/g; s/\\\\t/\\t/g'Note the stdbuf and sed commands can be installed on OSX via brew install coreutils gnu-sed.I personally find this a lot easier when monitoring a node’s logs while troubleshooting.Let me know if you find this useful :)" }, { "title": "Sanitarium: The ScummVM Asylum Engine Journey Concludes", "url": "/blog/2021/05/19/scummvm-asylum-engine/", "categories": "ScummVM", "tags": "sanitarium, asylum, scummvm", "date": "2021-05-19 06:32:45 -0400", "snippet": "With PR#2982 - ENGINES: Sanitarium engine being recently merged into ScummVM I wanted to take some time to chronicle the original development efforts which began in 2009.At the time I was looking t...", "content": "With PR#2982 - ENGINES: Sanitarium engine being recently merged into ScummVM I wanted to take some time to chronicle the original development efforts which began in 2009.At the time I was looking to work on a new engine in an attempt to improve my knowledge of C++ as well as to “give something back” to the open source community. Some of the engines I was toying with at the time included one’s for Uplink: Hacker Elite, the Dynamix Game Development System as well as Sanitarium.When I first played Dreamforge’s Sanitarium (the Razor 1911 rip at the time …) I was immediately drawn to the darker story and ambiance. After finishing it I ended up buying the full version and replaying it several times. Though the gameplay was linear I found myself continually drawn into the world and the story.I began working on an engine for Sanitarium, but soon found a post on the ScummVM forums by someone trying to do the same thing. I reached out to Alex Fontoura as he had also been reverse engineering the game’s executable (sntrm.exe) and we decided to merge our efforts.We began collaborating on an IDA Pro project to see how far we could get. Filippos Karapetis, a veteran ScummVM developer, also joined us early on and helped correct quite a few bad C++ habits both Alex and I had at the time :PWith Filippos’ help and an old Gamasutra Postmortem article providing some insight as to the inner workings of the game, we were making rapid progress. To expedite our efforts I started digging for more “insider” information, so using the Moby Games Credits page for Sanitarium I started “cold-calling” (emailing) some team members.One team member I was able to get a hold of was Mike Breitkreutz (via MySpace), who shared what he remembered.Benjamin Haisch (aka. John Doe), another ScummVM team member, had by this point provided a far superior IDA database to work from which we used until Julian Templier joined us in 2010 and essentially finished the IDA RE efforts.Julian implemented the event processing subsystem and the save/load functionality along with cleaning up a lot of the codebase. His blog shares some of the progress from July 2011 which is shortly before he left to focus on other work (such as the Ring engine).Our progress stagnate from 2012 through 2015, at which point I published a progress update in hopes of reigniting interest …. it didn’t work.Fast forward to 2021 and we find out that Alexander Panov has picked up the development and completed the engine! The outstanding work left was the inventory management, encounters and a number of bugfixes, which he was able to get sorted out over the course of a few months.Alexander is now a member of the ScummVM team, and thanks to his efforts this 12 year journey can finally conclude with a working engine merged into ScummVM that will allow countless others to enjoy Sanitarium." }, { "title": "Ruby Call Path Analysis using TracePoint", "url": "/blog/2021/05/07/call-path-analysis-using-tracepoint/", "categories": "Programming", "tags": "ruby, mongodb", "date": "2021-05-07 09:56:11 -0400", "snippet": "During a recent diagnostic analysis exercise I needed to identify if there was additional “work” being done based on a single option being changed. As Ruby offers numerous productivity tools for de...", "content": "During a recent diagnostic analysis exercise I needed to identify if there was additional “work” being done based on a single option being changed. As Ruby offers numerous productivity tools for developers it should come as no surprise that a mechanism to easily produce a full call stack for one to many operations exists.The code below is using the MongoDB Ruby Driver and Mongoid ODM to $sample a single document with a Read Preference passed in from the command line. The collection likely won’t exist however the goal of this analysis was simply to see what differences changing the read preference would expose.For the purposes of my analysis I wanted to produce a diff of two call stacks to try and see “where” there may be a difference in the amount of “work” being performed. To do this the first step was to introduce instrumentation via a TracePoint.# test.rb# ruby test.rb [primary|secondary]require 'bundler/inline'gemfile do source 'https://rubygems.org' gem 'mongoid', '7.0.4' gem 'mongo', '2.11.1'endMongoid.configure do |config| config.clients.default = { uri: \"mongodb+srv://...\" }endclass Sample include Mongoid::Documentenddef with_tracepoint trace = [] tp = TracePoint.new(:call) do |x| trace &lt;&lt; \"#{x.defined_class}##{x.method_id.to_s} @ #{x.path}\" end tp.enable yield return traceensure tp.disable unless tp.nil?end# first argument to symbolread_pref = ARGV[0].nil? ? :primary : ARGV[0].to_sym# run first command to establish a connectionSample.collection.aggregate([{ :'$sample' =&gt; { size: 1 } }], read: { mode: read_pref }).firsttrace = with_tracepoint do Sample.collection.aggregate([{ :'$sample' =&gt; { size: 1 } }], read: { mode: read_pref }).firstendputs traceThe above will trace all Ruby method calls executed within the block and push them into an array. By running the above script twice with different options and feeding the results into a diff tool (such as icdiff) a visual representation of how the call stacks differ can be generated.icdiff -N &lt;(ruby test.rb primary) &lt;(ruby test.rb secondary) | less(Open screenshot in a new tab to get a better look)The with_tracepoint helper method in the script above is only filtering on :calls, however can easily be modified to filter based on your particular needs (see TracePoint Events for the full list).Let me know if this approach helped you troubleshoot a particular issue or identify an interesting defect.Happy Coding!" }, { "title": "Same Blog, New Look!", "url": "/blog/2021/03/28/same-blog-new-look/", "categories": "Writing", "tags": "blog, jekyll, octopress", "date": "2021-03-28 12:28:46 -0400", "snippet": "Ever since I started this blog in 2012, I’ve been using Octopress to generate the pages and push to generated content to GitHub Pages for hosting. Octopress is a set of scripts and helpers built on...", "content": "Ever since I started this blog in 2012, I’ve been using Octopress to generate the pages and push to generated content to GitHub Pages for hosting. Octopress is a set of scripts and helpers built on top of Jekyll and provided a lot of convenience in the form of deployment helpers, themes and scripts.Unfortunately, Octopress fell out of maintenance many years ago (2015?) and has been stagnating ever since. As a number of Octopress users have before me, I decided it was time to migrate the site back to vanilla Jekyll. I also wanted to refresh the look and feel as version I had was beginning to feel … dated:I also wanted to continue managing the deployment client-side (as opposed to using automation via GitHub Actions).In the event this helps anyone, here’s the process I followed.MigrationOLD_BLOG=/path/to/octopress/sourcejekyll new blogcd blogbundle installcp -R $OLD_BLOG/_posts/* _postscp -R $OLD_BLOG/images .jekyll serveOnce copied over there will be some build failures when you try to run jekyll serve, such as: Missing plugins in _plugins directory Missing plugins in GemfileInstead of hunting down an alternate plugin, for most of my build failures the issue was resolved by converting Liquid Tags versions of img, blockquote, and others to the pure Markdown versions instead.Look and FeelI chose to use the Chirpy theme for Jekyll as I like the dark look and navigation layout.Following the installation and configuration steps was straightforward, however the one gotcha I hit was with Jekyll Pagination. Because I had both an index.html and index.md file in the blog root, the paginator wouldn’t work until I deleted index.md.DeploymentSince I use GitHub Pages to host my site I wanted to be able to switch back and forth between old and new layouts while testing. I’m quite happy with the Octopress approach of deploying using rake tasks, so I just copied over parts of the existing Rakefile as follows:require \"rubygems\"require \"bundler/setup\"require \"stringex\"posts_dir = \"_posts\" # directory for blog filesnew_post_ext = \"markdown\" # default new post file extension when using the new_post taskdeploy_dir = \"_site\" # deploy directory (for Github pages deployment)deploy_branch = \"master2\"# usage rake new_post[my-new-post] or rake new_post['my new post'] or rake new_post (defaults to \"new-post\")desc \"Begin a new post in /#{posts_dir}\"task :new_post, :title do |t, args| if args.title title = args.title else title = get_stdin(\"Enter a title for your post: \") end filename = \"#{posts_dir}/#{Time.now.strftime('%Y-%m-%d')}-#{title.to_url}.#{new_post_ext}\" if File.exist?(filename) abort(\"rake aborted!\") if ask(\"#{filename} already exists. Do you want to overwrite?\", ['y', 'n']) == 'n' end puts \"Creating new post: #{filename}\" open(filename, 'w') do |post| post.puts \"---\" post.puts \"layout: post\" post.puts \"title: \\\"#{title.gsub(/&amp;/,'&amp;amp;')}\\\"\" post.puts \"date: #{Time.now.strftime('%Y-%m-%d %H:%M:%S %z')}\" post.puts \"comments: true\" post.puts \"categories: \" post.puts \"tags: \" post.puts \"---\" endenddesc \"deploy public directory to github pages\"multitask :push do puts \"## Deploying branch to Github Pages \" puts \"## Pulling any updates from Github Pages \" cd \"#{deploy_dir}\" do Bundler.with_clean_env { system \"git pull\" } end cd \"#{deploy_dir}\" do system \"git add -A\" message = \"Site updated at #{Time.now.utc}\" puts \"\\n## Committing: #{message}\" system \"git commit -m \\\"#{message}\\\"\" puts \"\\n## Pushing generated #{deploy_dir} website\" Bundler.with_clean_env { system \"git push origin #{deploy_branch}\" } puts \"\\n## Github Pages deploy complete\" endenddesc \"Generate jekyll site\"task :generate do puts \"## Generating Site with Jekyll\" # system \"compass compile --css-dir assets/css\" system \"jekyll build\"enddef get_stdin(message) print message STDIN.gets.chompenddef ask(message, valid_options) if valid_options answer = get_stdin(\"#{message} #{valid_options.to_s.gsub(/\"/, '').gsub(/, /,'/')} \") while !valid_options.include?(answer) else answer = get_stdin(message) end answerendSince the _site directory where Jekyll generates content is in the .gitignore, we can initialize a new Git repo here:cd _sitegit init .git remote add git@github.com:alexbevi/alexbevi.github.com.gitOnce this is set up we can then build the site and publish it to a dedicated branch in our GitHub repository (I used master2 in the above example):rake generaterake pushAfter changing the GitHub Pages source branch in our repository in GitHub, the blog was now using the new layout." }, { "title": "Analysis and Optimization of an N+1 Scenario in Mongoid", "url": "/blog/2021/03/26/analysis-and-optimization-of-an-n-plus-1-scenario-in-mongoid/", "categories": "Ruby", "tags": "mongodb, mongoid, ruby", "date": "2021-03-26 09:16:09 -0400", "snippet": "The N + 1 queries problem is a common issue Rails applications face whereby iterating an array of models and accessing an association results in a sub-optimal pattern of recurring queries.To addres...", "content": "The N + 1 queries problem is a common issue Rails applications face whereby iterating an array of models and accessing an association results in a sub-optimal pattern of recurring queries.To address this Rails offers Eager Loading Associations and there are gems (such as bullet) that can be used to detect the N + 1 pattern in an application.This N + 1 problem can manifest in any ODM or ORM, including when working with MongoDB and Ruby.For the purposes of this example we have a Ruby application that is using the Mongoid ODM with a minimal Document model that contains a single Field definition. The scripts to setup the cluster and seed the data are shared at the end of this article (see Reproduction).Our model only defines a single field, but an external process updates the underlying document in the MongoDB cluster with telemetry entries. As no schema is enforced, this is perfectly valid however the documents may grow too large over time for which we’ve written the following Ruby application to periodically clean up:## mongoid_n_plus_1.rb#require 'benchmark'require 'bundler/inline'gemfile do source 'https://rubygems.org' gem 'mongoid' gem 'mongo'endMongoid.configure do |config| config.clients.default = { uri: \"mongodb://localhost:27017,localhost:27018,localhost:27019/test\" }endclass Test include Mongoid::Document field :name, type: String # return all entries from the document that aren't defined as Mongoid fields def entries attr = self.attributes.dup attr.delete_if { |k, v| self.fields.key?(k) } attr.sort end def compact! # unset each field that doesn't belong to the Mongoid document as an # explicitly defined field self.entries.each do |entry| self.unset entry.first end endendUsing a Ruby REPL we can require the above code and verify it’s connecting to our cluster and interacting with our document:&gt; require_relative 'mongoid_n_plus_1' =&gt; true&gt; t = Test.first=&gt; #&lt;Test _id: 1.0, name: \"Alex\"&gt;&gt; t.entries.length=&gt; 10000&gt; t.entries[0..15]=&gt; [[\"2021-03-25T10:30:21\", 1.0], [\"2021-03-25T10:30:22\", 2.0], [\"2021-03-25T10:30:23\", 3.0], [\"2021-03-25T10:30:24\", 4.0], [\"2021-03-25T10:30:25\", 5.0], [\"2021-03-25T10:30:26\", 6.0], [\"2021-03-25T10:30:27\", 7.0], [\"2021-03-25T10:30:28\", 8.0], [\"2021-03-25T10:30:29\", 9.0], [\"2021-03-25T10:30:30\", 10.0], [\"2021-03-25T10:30:31\", 11.0], [\"2021-03-25T10:30:32\", 12.0], [\"2021-03-25T10:30:33\", 13.0], [\"2021-03-25T10:30:34\", 14.0], [\"2021-03-25T10:30:35\", 15.0], [\"2021-03-25T10:30:36\", 16.0]]Next let’s measure our compact! operations:&gt; puts Benchmark.measure { t.compact! } 17.319826 1.025931 18.345757 ( 55.004495)We’re only modifying a single document, after reviewing the FTDC1 it appears there are about 10K update operations issued, which is taking about a minute to completed.After reviewing the documentation for MongoDB’s $unset update operator it appears we can pass more than one field at a time. If this is the case, we can send a single command with a list of 10K fields as opposed to 10K commands with a single field each.To test this we modify our compact! method as follow: def compact! # each field in the `entries` array is a [k,v] array # map the `k` (field) values into a single array and send them all # as a single unset command self.unset self.entries.map(&amp;:first) endAfter testing this the result confirms our theory and the performance is significantly better:&gt; puts Benchmark.measure { t.compact! } 0.150776 0.002509 0.153285 ( 0.273297)Reviewing the FTDC again shows only a single command was issued:Anytime operations are being sent to the server from within a loop there may be an opportunity to group/batch actions in a more efficient manner. The first step to improving performance is being able to identify an opportunity for improvement, which I hope this article helps you do.Happy Coding!ReproductionFirst, we spin up a local replica set using some open source MongoDB helper utilities (see m and mtools):m 4.2.13mlaunch init --replicaset --nodes 3 --binarypath $(m bin 4.2.13) --host localhost --bind_ip_allmongo \"mongodb://localhost:27017,localhost:27018,localhost:27019/test\" test.jsThe JavaScript file (test.js) above is used to seed the collection with a single document and 10,000 telemetry entries:// test.jsdb.tests.drop();db.tests.insert({ _id: 1, name: \"Alex\" });var d = new Date();var update = {};for (var i = 0; i &lt; 10000; i++) { d.setSeconds(d.getSeconds() + 1); update[d.toISOString().split('.')[0]] = i+1;}db.tests.update({ _id: 1 }, { $set: update })From the mongo or mongosh the result of this script can be verified: mongo \"mongodb://localhost:27017,localhost:27018,localhost:27019/test\" --quiet --eval 'db.tests.find().pretty()'{ \"_id\": 1, \"name\": \"Alex\", \"2021-03-25T10:55:23\": 1, \"2021-03-25T10:55:24\": 2, \"2021-03-25T10:55:25\": 3, \"2021-03-25T10:55:26\": 4, ... \"2021-03-25T13:41:59\": 9997, \"2021-03-25T13:42:00\": 9998, \"2021-03-25T13:42:01\": 9999, \"2021-03-25T13:42:02\": 10000}1: As a MongoDB Technical Services engineer I have access to tools we can use to parse the cluster’s FTDC (see “What is MongoDB FTDC (aka. diagnostic.data)” for more info) and visualize time series performance telemetry, which were used to generate the following charts." }, { "title": "Visualizing a Replica Set's Sync Source Chain", "url": "/blog/2021/03/23/visualizing-a-replica-sets-sync-source-chain/", "categories": "MongoDB", "tags": "mongodb, replication, scripting", "date": "2021-03-23 10:47:41 -0400", "snippet": "A MongoDB replica set is a group of mongod processes that maintain the same data set. The PRIMARY node receives all write operations and The SECONDARY nodes replicate the PRIMARY’s oplog and apply ...", "content": "A MongoDB replica set is a group of mongod processes that maintain the same data set. The PRIMARY node receives all write operations and The SECONDARY nodes replicate the PRIMARY’s oplog and apply the operations to their data sets such that the secondaries’ data sets reflect the primary’s data set.Secondaries capture data from the primary member to maintain an up to date copy of the sets’ data unless chained replication is enabled, which changes the replication source selection to allow a secondary member to replicate from another secondary member instead of from the primary.To determine which node each SECONDARY is syncing from you have to manually review the entries generated by the rs.status() shell helper (or replSetGetStatus command) and parse each node’s syncSourceHost.When evaluating larger clusters this approach can be cumbersome.For example, using a 9 node cluster created using mtools and m will produce the following:# launch a 9 node replica set using MongoDB 4.4.4m 4.4.4-entmlaunch init --replicaset --nodes 9 --binarypath $(m bin 4.4.4-ent)&gt; rs.status(){ \"set\" : \"replset\", ... \"members\" : [ { \"_id\" : 0.0, \"name\" : \"localhost:27017\", ... \"syncSourceHost\" : \"\", .... }, { \"_id\" : 1.0, \"name\" : \"localhost:27018\", ... \"syncSourceHost\" : \"localhost:27017\", ... }, { \"_id\" : 2.0, \"name\" : \"localhost:27019\", ... \"syncSourceHost\" : \"localhost:27017\", ... }, { \"_id\" : 3.0, \"name\" : \"localhost:27020\", ... \"syncSourceHost\" : \"localhost:27017\", ... }, { \"_id\" : 4.0, \"name\" : \"localhost:27021\", ... \"syncSourceHost\" : \"localhost:27017\", ... }, { \"_id\" : 5.0, \"name\" : \"localhost:27022\", ... \"syncSourceHost\" : \"localhost:27017\", ... }, { \"_id\" : 6.0, \"name\" : \"localhost:27023\", ... \"syncSourceHost\" : \"localhost:27017\", ... }, { \"_id\" : 7.0, \"name\" : \"localhost:27024\", ... \"syncSourceHost\" : \"localhost:27017\", ... }, { \"_id\" : 8.0, \"name\" : \"localhost:27025\", ... \"syncSourceHost\" : \"localhost:27017\", ... } ], ...}A much more legible version of the above is:&gt; printSyncSourceTree(rs.status());Replication Sync Source Tree============================-- [0] localhost:27017 (PRIMARY)---- [1] localhost:27018 (SECONDARY)---- [2] localhost:27019 (SECONDARY)---- [3] localhost:27020 (SECONDARY)---- [4] localhost:27021 (SECONDARY)---- [5] localhost:27022 (SECONDARY)---- [6] localhost:27023 (SECONDARY)---- [7] localhost:27024 (SECONDARY)---- [8] localhost:27025 (SECONDARY)The tree above was generated using the printSyncSourceTree() helper function (source code at end of post) from the mongo shell.When all nodes are syncing from the PRIMARY it’s not difficult to visualize the sync source topology, however let’s mix this up by manually configuring a SECONDARY’s sync target.function assignSyncSource(sourceId, syncTargetId) { var members = rs.status().members; var source = members.filter(obj =&gt; { return obj._id === sourceId })[0]; var target = members.filter(obj =&gt; { return obj._id === syncTargetId })[0]; var conn = new Mongo(source.name); var result = conn.adminCommand({ replSetSyncFrom: target.name }); printjson(result)}assignSyncSource(3, 1)assignSyncSource(2, 1)assignSyncSource(5, 3)assignSyncSource(4, 3)printReplicationTree(rs.status())The following output is our new replication sync source tree after fiddling with the sync source assignments:Replication Sync Source Tree============================-- [0] localhost:27017 (PRIMARY)---- [1] localhost:27018 (SECONDARY)------ [2] localhost:27019 (SECONDARY)------ [3] localhost:27020 (SECONDARY)-------- [4] localhost:27021 (SECONDARY)-------- [5] localhost:27022 (SECONDARY)---- [6] localhost:27023 (SECONDARY)---- [7] localhost:27024 (SECONDARY)---- [8] localhost:27025 (SECONDARY)Give this a shot and let me know what you think.function printReplicationTree(rs) { print(&quot;\\nReplication Sync Source Tree\\n============================&quot;); function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i &lt; arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } } var idMapping = rs.members.reduce((acc, el, i) =&gt; { acc[el.name] = i; return acc; }, {}); var root = undefined; rs.members.forEach(function (el) { // Handle the root element if (el.syncSourceHost === &quot;&quot;) { root = el; return; } // Use our mapping to locate the parent element in our data array var parentEl = rs.members[idMapping[el.syncSourceHost]]; // Add our current el to its parent&#39;s `children` array parentEl.children = [].concat(_toConsumableArray(parentEl.children || []), [el]); }); function pp(node) { return &quot;[&quot; + node._id + &quot;] &quot; + node.name + &quot; (&quot; + node.stateStr + &quot;)&quot; } function walk(tree) { var indent = 1; function innerWalk(tree) { tree.forEach(function (node) { if (indent == 1 &amp;&amp; node.stateStr !== &quot;PRIMARY&quot;) return; print(&#39;--&#39; + Array(indent).join(&#39;--&#39;), pp(node)); if (node.children) { indent++; innerWalk(node.children); } if (tree.indexOf(node) === tree.length - 1) { indent--; } }) } innerWalk(tree); } walk(rs.members);}" }, { "title": "MongoDB 5.0 Initial Sync Progress Monitoring Improvements", "url": "/blog/2020/11/20/mongodb-5-dot-0-startup2-progress-monitoring-improvements/", "categories": "MongoDB", "tags": "mongodb, replication, scripting", "date": "2020-11-20 10:31:26 -0500", "snippet": "&lt;SHAMELESS_PLUG&gt;My previous article about initial sync progress monitoring got some attention, and as I’m a Technical Services Engineer at MongoDB, I got to provide direct feedback during the...", "content": "&lt;SHAMELESS_PLUG&gt;My previous article about initial sync progress monitoring got some attention, and as I’m a Technical Services Engineer at MongoDB, I got to provide direct feedback during the design phase of SERVER-47863: Initial Sync Progress Metrics!.You can be a part of this team and this awesome organization too! Head on over to MongoDB’s careers page to see what’s available, or feel free to ping me on LinkedIn if you have any questions.&lt;/SHAMELESS_PLUG&gt;The goal of this post is to showcase a change that is coming in MongoDB 5.0 that will significantly improve the feedback loop regarding initial sync progress monitoring. With SERVER-47863 being completed, the results of the db.adminCommand({ replSetGetStatus: 1, initialSync: 1 }) now include additional metrics that can be used to help determine how long (approximately) an initial sync will be running for.Though this feature is planned to be backported to versions 4.4.3 and 4.2.12, at the time of writing backports had not been completed.If you want to test this yourself, my setup was as follows:1) Build the server using the install-mongod SCons target. My version of the server was mongod-4.9.0-alpha-596-g4437864 as a result.2) Start up a single node replicaset as follows:mkdir data &amp;&amp; build/install/bin/mongod --dbpath data --bind_ip_all --replSet rs0 --logpath data/mongod.log3) Using the mongo shell, initialize the replica set:mongo --eval 'rs.initiate()'4) Seed the test.data namespace using the following mgeneratejs and mongoimport:curl -s https://gist.githubusercontent.com/alexbevi/955c6675337107e16d637233f865b1e3/raw/0c48178e9c570b7594f207559744f07ecf87ac28/template.json | mgeneratejs -n 1000000 | mongoimport --collection data --numInsertionWorkers 45) Start another mongod and add it to the replica setmkdir data2 &amp;&amp; build/install/bin/mongod --port 27018 --dbpath data2 --bind_ip_all --replSet rs0 --logpath data2/mongod.logmongo --eval 'rs.add(\"localhost:27018\")'The above steps will build the mongod and start up 2 nodes in a replica set with one in a STARTUP2 (initial sync) state.By connecting to the secondary node directly and issuing a replSetGetStatus command we can now review the progress of the copy. Note that this will need to be done while the initial sync is in progress; once the node exits the STARTUP2 state and enters a SECONDARY state, the initialSyncStatus details will be unavailable.For example:db.adminCommand({ replSetGetStatus: 1, initialSync: 1 });{\t\"set\" : \"rs0\",\t...\t\"initialSyncStatus\" : {\t\t\"failedInitialSyncAttempts\" : 0,\t\t\"maxFailedInitialSyncAttempts\" : 10,\t\t\"initialSyncStart\" : ISODate(\"2020-11-20T15:47:09.136Z\"),\t\t\"totalInitialSyncElapsedMillis\" : 14925, &lt;-----------\t\t\"initialSyncAttempts\" : [ ],\t\t\"approxTotalDataSize\" : 311911892, &lt;-----------\t\t\"approxTotalBytesCopied\" : 16811036, &lt;-----------\t\t\"remainingInitialSyncEstimatedMillis\" : 0, &lt;-----------\t\t\"appliedOps\" : 0,\t\t\"initialSyncOplogStart\" : Timestamp(1605887228, 1),\t\t\"totalTimeUnreachableMillis\" : NumberLong(0),\t\t\"databases\" : {\t\t\t\"databasesToClone\" : 1, &lt;-----------\t\t\t\"databasesCloned\" : 2,\t\t\t...\t\t\t},\t\t\t\"test\" : {\t\t\t\t\"collections\" : 1,\t\t\t\t\"clonedCollections\" : 0,\t\t\t\t\"start\" : ISODate(\"2020-11-20T15:47:13.968Z\"),\t\t\t\t\"test.data\" : {\t\t\t\t\t\"documentsToCopy\" : 250000,\t\t\t\t\t\"documentsCopied\" : 13481,\t\t\t\t\t\"indexes\" : 1,\t\t\t\t\t\"fetchedBatches\" : 2,\t\t\t\t\t\"bytesToCopy\" : 311911663, &lt;-----------\t\t\t\t\t\"approxBytesCopied\" : 16810807, &lt;-----------\t\t\t\t\t\"start\" : ISODate(\"2020-11-20T15:47:13.968Z\"),\t\t\t\t\t\"receivedBatches\" : 2\t\t\t\t}\t\t\t}\t\t}\t},\t...}The command output has been truncated to focus in on the new fields added to the initialSyncStatus document. The new metrics details are as follows:totalInitialSyncElapsedMillis Current Time - Start TimeremainingInitialSyncEstimatedMillis (totalInitialSyncElapsedMillis / approxTotalBytesCopied) * (approxTotalDataSize - approxTotalBytesCopied) If (approxBytesCopied == 0), this field will not be shownI’ve opened SERVER-53017 to review this particular entry as the value did not appear to be properly updated throughout the initial sync process. As MongoDB 5.0 is not expected to be GA until mid 2021, this will likely be addressed before then.Update 2021-01-26: SERVER-53017 has been fixed.&lt;collection&gt;.bytesToCopy = collStats.size&lt;collection&gt;.approxBytesCopied = collStats.avgObjSize * documentsCopieddatabasesToClone = length of listDatabases responseapproxTotalDataSize = Sum (dbStats.dataSize for all databases)approxTotalBytesCopied = Sum (&lt;collection&gt;.approxBytesCopied for all collections)What can we do with all this useful information you ask? Well I’ve written the following script that can be used to poll a secondary replica set member in STARTUP2 to provide details regarding the progress of the initial sync. This script will also provide estimated throughput and a calculated ETA based on data transfer rates.The output will appear similar to:# start monitoring the initial sync (default refresh interval is 5 seconds)mongo --host $SECONDARY_HOST --port $SECONDARY_PORT --quiet --eval \"load('measureInitialSyncProgress.js'); measureInitialSyncProgress();\"# to use a custom refresh interval, the value is in milliseconds, so for a 1 second refresh# pass 1000 to measureInitialSyncProgress as follows:# mongo --host $SECONDARY_HOST --port $SECONDARY_PORT --quiet --eval \"load('measureInitialSyncProgress.js'); measureInitialSyncProgress(1000);\"Initial Sync running for 00:18:05.2 (remainingInitialSyncEstimatedMillis 0). Cloned 1.1 GB of 1.2 GB (15.9 MB in past 5 second(s)) at a rate of 3.2 MB/second - 00:00:54.2 to go!Initial Sync running for 00:18:10.8 (remainingInitialSyncEstimatedMillis 0). Cloned 1.1 GB of 1.2 GB (No progress in past 5 second(s))Initial Sync running for 00:18:17.9 (remainingInitialSyncEstimatedMillis 0). Cloned 1.1 GB of 1.2 GB (No progress in past 5 second(s))Initial Sync running for 00:18:22.9 (remainingInitialSyncEstimatedMillis 0). Cloned 1.1 GB of 1.2 GB (No progress in past 5 second(s))Initial Sync running for 00:18:27.9 (remainingInitialSyncEstimatedMillis 0). Cloned 1.1 GB of 1.2 GB (No progress in past 5 second(s))Initial Sync running for 00:18:33.1 (remainingInitialSyncEstimatedMillis 0). Cloned 1.1 GB of 1.2 GB (No progress in past 5 second(s))Initial Sync running for 00:18:38.4 (remainingInitialSyncEstimatedMillis 0). Cloned 1.1 GB of 1.2 GB (15.9 MB in past 5 second(s)) at a rate of 3.2 MB/second - 00:00:49.1 to go!Initial Sync running for 00:18:43.5 (remainingInitialSyncEstimatedMillis 0). Cloned 1.1 GB of 1.2 GB (No progress in past 5 second(s))Initial Sync running for 00:18:48.5 (remainingInitialSyncEstimatedMillis 0). Cloned 1.1 GB of 1.2 GB (No progress in past 5 second(s))Initial Sync running for 00:18:53.9 (remainingInitialSyncEstimatedMillis 0). Cloned 1.1 GB of 1.2 GB (No progress in past 5 second(s))Initial Sync running for 00:18:59.5 (remainingInitialSyncEstimatedMillis 0). Cloned 1.1 GB of 1.2 GB (15.9 MB in past 5 second(s)) at a rate of 3.2 MB/second - 00:00:44.2 to go!Initial Sync running for 00:19:05.3 (remainingInitialSyncEstimatedMillis 0). Cloned 1.1 GB of 1.2 GB (15.9 MB in past 5 second(s)) at a rate of 3.2 MB/second - 00:00:39.2 to go!Initial Sync running for 00:19:11.0 (remainingInitialSyncEstimatedMillis 0). Cloned 1.1 GB of 1.2 GB (15.9 MB in past 5 second(s)) at a rate of 3.2 MB/second - 00:00:34.2 to go!Initial Sync running for 00:19:16.6 (remainingInitialSyncEstimatedMillis 0). Cloned 1.2 GB of 1.2 GB (15.9 MB in past 5 second(s)) at a rate of 3.2 MB/second - 00:00:29.2 to go!Initial Sync running for 00:19:22.3 (remainingInitialSyncEstimatedMillis 0). Cloned 1.2 GB of 1.2 GB (No progress in past 5 second(s))Initial Sync running for 00:19:28.4 (remainingInitialSyncEstimatedMillis 0). Cloned 1.2 GB of 1.2 GB (15.9 MB in past 5 second(s)) at a rate of 3.2 MB/second - 00:00:24.2 to go!Initial Sync running for 00:19:34.5 (remainingInitialSyncEstimatedMillis 0). Cloned 1.2 GB of 1.2 GB (15.9 MB in past 5 second(s)) at a rate of 3.2 MB/second - 00:00:19.2 to go!Initial Sync running for 00:19:39.6 (remainingInitialSyncEstimatedMillis 0). Cloned 1.2 GB of 1.2 GB (15.9 MB in past 5 second(s)) at a rate of 3.2 MB/second - 00:00:14.2 to go!Initial Sync running for 00:19:45.3 (remainingInitialSyncEstimatedMillis 0). Cloned 1.2 GB of 1.2 GB (No progress in past 5 second(s))Initial Sync running for 00:19:54.6 (remainingInitialSyncEstimatedMillis 0). Cloned 1.2 GB of 1.2 GB (15.9 MB in past 5 second(s)) at a rate of 3.2 MB/second - 00:00:09.2 to go!Initial Sync running for 00:20:01.9 (remainingInitialSyncEstimatedMillis 0). Cloned 1.2 GB of 1.2 GB (No progress in past 5 second(s))Initial Sync running for 00:20:10.1 (remainingInitialSyncEstimatedMillis 0). Cloned 1.2 GB of 1.2 GB (15.9 MB in past 5 second(s)) at a rate of 3.2 MB/second - 00:00:04.2 to go!Initial Sync running for 00:20:15.7 (remainingInitialSyncEstimatedMillis 0). Cloned 1.2 GB of 1.2 GB (No progress in past 5 second(s))Initial Sync running for 00:20:20.7 (remainingInitialSyncEstimatedMillis 0). Cloned 1.2 GB of 1.2 GB (11.6 MB in past 5 second(s)) at a rate of 2.3 MB/second - 00:00:00.7 to go!Node not currently performing an initial syncOnce SERVER-53017 has been addressed I will update this script so that the remainingInitialSyncEstimatedMillis values can be used consistently.Update 2021-01-26: SERVER-53017 was addressed and the script has been modified to use the remainingInitialSyncEstimatedMillis value directly!/** measureInitialSyncProgress* @author Alex Bevilacqua &lt;alex@alexbevi.com&gt;* @updated 2021-02-23** Can be run against a MongoDB 4.2.12+ mongod that is in STARTUP2 (intitial sync) state to gain some* insight into how the sync is progressing based on the improvements introduced with SERVER-47863.* For versions of MongoDB &lt; 4.2.12, see https://www.alexbevi.com/blog/2020/02/13/mongodb-initial-sync-progress-monitoring** usage:* mongo --quiet --eval &quot;load(&#39;measureInitialSyncProgress.js&#39;); measureInitialSyncProgress();&quot;* // pass a value in milliseconds to measureInitialSyncProgress to override the refresh interval* // default: 5000 (5 seconds)* mongo --quiet --eval &quot;load(&#39;measureInitialSyncProgress.js&#39;); measureInitialSyncProgress(1000);&quot;*/function msToTime(duration) { var milliseconds = parseInt((duration % 1000) / 100), seconds = Math.floor((duration / 1000) % 60), minutes = Math.floor((duration / (1000 * 60)) % 60), hours = Math.floor((duration / (1000 * 60 * 60)) % 24); hours = (hours &lt; 10) ? &quot;0&quot; + hours : hours; minutes = (minutes &lt; 10) ? &quot;0&quot; + minutes : minutes; seconds = (seconds &lt; 10) ? &quot;0&quot; + seconds : seconds; return hours + &quot;:&quot; + minutes + &quot;:&quot; + seconds + &quot;.&quot; + milliseconds;}var getReadableFileSizeString = function (fileSizeInBytes) { var i = -1; var byteUnits = [&#39; kB&#39;, &#39; MB&#39;, &#39; GB&#39;, &#39; TB&#39;, &#39;PB&#39;, &#39;EB&#39;, &#39;ZB&#39;, &#39;YB&#39;]; do { fileSizeInBytes = fileSizeInBytes / 1024; i++; } while (fileSizeInBytes &gt; 1024); return Math.max(fileSizeInBytes, 0.1).toFixed(1) + byteUnits[i];};function measureSyncProgress(previousResults) { var cmd = db.adminCommand({ replSetGetStatus: 1, initialSync: 1 }); if (!cmd.hasOwnProperty(&quot;initialSyncStatus&quot;)) { print(&quot;Node not currently performing an initial sync&quot;); return { exit: true }; } var status = cmd.initialSyncStatus; db.adminCommand({ replSetGetStatus: 1, initialSync: 1 }).initialSyncStatus.approxTotalBytesCopied var now = new Date(); var started = status.initialSyncStart; var approxTotal = status.approxTotalDataSize; var approxCopied = status.approxTotalBytesCopied; var message = &quot;Cloned &quot; + getReadableFileSizeString(approxCopied) + &quot; of &quot; + getReadableFileSizeString(approxTotal) + &quot; in &quot; + msToTime(now - started); if (previousResults !== undefined &amp;&amp; previousResults.hasOwnProperty(&quot;refreshIntervalMS&quot;) !== null &amp;&amp; previousResults.hasOwnProperty(&quot;copied&quot;)) { var refreshInterval = previousResults.refreshIntervalMS / 1000; var intervalProgress = approxCopied - previousResults.copied; if (intervalProgress == 0) { message += &quot; (No progress in past &quot; + refreshInterval + &quot; second(s))&quot;; } else { var rate = intervalProgress / refreshInterval; // We no longer have to calculate remaining ourselves as SERVER-53017 has fixed remainingInitialSyncEstimatedMillis // var remaining = msToTime(((approxTotal - approxCopied) / rate) * 1000); message += &quot; (&quot; + getReadableFileSizeString(intervalProgress) + &quot; in past &quot; + refreshInterval; message += &quot; second(s)) at a rate of &quot; + getReadableFileSizeString(rate) + &quot;/second - &quot;; message += msToTime(status.remainingInitialSyncEstimatedMillis) + &quot; to go!&quot;; } } print(message); return { copied: approxCopied };}function measureInitialSyncProgress(refreshIntervalMS) { var dbver = db.version().split(&#39;-&#39;)[0]; if (dbver &lt; &quot;4.2.12&quot;) { print(&quot;MongoDB 4.2.12 or greater required but found MongoDB &quot; + dbver); print(&quot;For previous versions see https://www.alexbevi.com/blog/2020/02/13/mongodb-initial-sync-progress-monitoring/&quot;); return; } if (refreshIntervalMS === undefined || refreshIntervalMS === null) { refreshIntervalMS = 5000; } var result = measureSyncProgress(result); result[&quot;refreshIntervalMS&quot;] = refreshIntervalMS; while (!result.exit) { sleep(refreshIntervalMS); result = measureSyncProgress(result); result[&quot;refreshIntervalMS&quot;] = refreshIntervalMS; }}" }, { "title": "MongoDB 4.4 Change Streams and Experimental Pre-Image 'Support'", "url": "/blog/2020/07/15/mongodb-4-dot-4-change-streams-and-pre-image-support/", "categories": "MongoDB", "tags": "mongodb, changestreams", "date": "2020-07-15 08:37:08 -0400", "snippet": " As of MongoDB 6.0, Change Streams Support Pre- and Post-Image Retrieval, DDL operations, and more! Warning - Not for Production Use (in MongoDB 4.4) MongoDB’s source code is available (through ...", "content": " As of MongoDB 6.0, Change Streams Support Pre- and Post-Image Retrieval, DDL operations, and more! Warning - Not for Production Use (in MongoDB 4.4) MongoDB’s source code is available (through an SSPL license) and the Core Server project in MongoDB’s JIRA is publicly accessible, which is where I found this information. Until officially announced as stable/official the methods described herein should not be considered as “production ready”. This post is for informational purposes and though at the time of writing it I am a MongoDB Inc. employee this should not be considered an official communication.IntroductionA feature that has long been requested since Change Streams were introduced in MongoDB 3.6 is the ability to support returning the n-1 state (or pre-image) of a document when it is changed.In SERVER-36941: Option to provide “before image” with change streams this request is captured, but at the time of writing this ticket is still in an Open state which would imply no progress has been made.Interestingly enough, there actually has been some progress due to efforts surrounding the support of Realm Sync, namely in the following tickets: SERVER-45806: Record pre-images on updates and deletes when recordPreImage is enabled SERVER-45807: Add change stream stage to fetch pre-image for update/replace/delete eventsPre-Image Support“Support” for this feature is only available in MongoDB 4.4+, so first we must ensure we are running a compatible version.Next, as change streams are only supported in replica sets or sharded clusters our cluster cannot be a standalone instance.Before a pre-image can be returned in a change stream support for the feature must be enabled at the collection level.Create a New Collection with Pre-Image SupportTo enable pre-image support on a new (non-existent) collection, the recordPreImages flag needs to be set when calling the create command or db.createCollection() shell method:db.coll1.drop();// create commanddb.runCommand({ create: \"coll1\", recordPreImages: true });// or// using the createCollection() helperdb.createCollection(\"coll1\", { recordPreImages: true });Updating an Existing Collection with Pre-Image SupportIf the collection already exists, the recordPreImages flag can be set using the collMod command:db.coll1.drop();db.coll1.insert({ _id: 1, created_at: new Date() });// update the collection's metadata using the collMod commanddb.runCommand({ collMod: \"coll1\", recordPreImages: true });Pre-Image Support in Change StreamsFirst it’s important to understand that a change stream is actually an Aggregation Pipeline Stage, even if it doesn’t appear as such in the documentation.This can be easily verified by checking the source code for the Mongo.prototype.watch implementation which coincides with db.collection.watch() shell method.We’ll be using the $changeStream pipeline stage directly to review the impact of pre-image support.First we’ll being by opening a change stream cursor against our modified collection:db.coll1.drop();db.createCollection(\"coll1\", { recordPreImages: true });db.coll1.insert({ _id: 1, created_at: new Date() });var cursor = db.coll1.aggregate([{ $changeStream: { fullDocumentBeforeChange: \"whenAvailable\" } }]);Note the options include a fullDocumentBeforeChange field, which can accept one of three (3) fullDocumentBeforeChange mode values: off: Disables support for the fullDocumentBeforeChange field whenAvailable: Only includes a fullDocumentBeforeChange document if it’s available, but won’t fail if it’s not present required: Require the fullDocumentBeforeChange document, and errors out if it’s not availableSince we have a change stream cursor open, we can update our test document and iterate the cursor to see the change this option produces:db.coll1.update({ _id: 1 }, { $set: { updated_at: new Date() } })cursor.next()/*{\t\"operationType\" : \"update\",\t\"fullDocumentBeforeChange\" : {\t\t\"_id\" : 1,\t\t\"created_at\" : ISODate(\"2020-07-15T17:41:32.043Z\")\t},\t\"ns\" : {\t\t\"db\" : \"test\",\t\t\"coll\" : \"coll1\"\t},\t\"documentKey\" : {\t\t\"_id\" : 1\t},\t\"updateDescription\" : {\t\t\"updatedFields\" : {\t\t\t\"updated_at\" : ISODate(\"2020-07-15T17:41:32.056Z\")\t\t},\t\t\"removedFields\" : [ ]\t}}*/The output contains a fullDocumentBeforeChange field which includes the full document prior to the changes the update operation would apply. As this was the first update to this document and the field was being added for the first time the value here may not be apparent, but running the operation again produces result that contains our previous created_at value along with our updated created_at value in the updateDescription:db.coll1.update({ _id: 1 }, { $set: { updated_at: new Date() } })cursor.next()/*{\t\"operationType\" : \"update\",\t\"fullDocumentBeforeChange\" : {\t\t\"_id\" : 1,\t\t\"created_at\" : ISODate(\"2020-07-15T17:41:32.043Z\"),\t\t\"updated_at\" : ISODate(\"2020-07-15T17:41:32.056Z\")\t},\t\"ns\" : {\t\t\"db\" : \"test\",\t\t\"coll\" : \"coll1\"\t},\t\"documentKey\" : {\t\t\"_id\" : 1\t},\t\"updateDescription\" : {\t\t\"updatedFields\" : {\t\t\t\"updated_at\" : ISODate(\"2020-07-15T17:44:29.494Z\")\t\t},\t\t\"removedFields\" : [ ]\t}}*/If the fullDocumentBeforeChange mode was set to required and the collection wasn’t created with the recordPreImages flag set, the change stream cursor will error out when iterated.db.coll2.drop();db.createCollection(\"coll2\");db.coll2.insert({ _id: 2, created_at: new Date() });var cursor = db.coll2.aggregate([{ $changeStream: { fullDocumentBeforeChange: \"required\" } }]);db.coll2.update({ _id: 2 }, { $set: { updated_at: new Date() } })cursor.next()/*2020-07-16T07:03:37.657-0400 E QUERY [js] Error: command failed: {\t\"ok\" : 0,\t\"errmsg\" : \"Change stream was configured to require a pre-image for all update, delete and replace events, but no pre-image optime was recorded for event: {_id: {_data: \\\"825F103409000000042B022C0100296E5A10044912D5BB665545B48DDAD38FCD774270461E5F6964002B040004\\\", _typeBits: BinData(0, \\\"40\\\")}, operationType: \\\"update\\\", clusterTime: Timestamp(1594897417, 4), ns: {db: \\\"test\\\", coll: \\\"coll2\\\"}, documentKey: {_id: 2}, updateDescription: {updatedFields: {updated_at: 2020-07-16T11:03:37.611Z}, removedFields: []}}\",\t\"code\" : 51770,}*/Pre-Image and { fullDocument: \"updateLookup\" }The change stream cursors we’ve been opening have not been specifying a fullDocument options, which results in the default value of { fullDocument: \"default\" } being used (or prior to SPEC-909 a value of none).When we set { fullDocument: \"updateLookup\" }, the cursor will look up the most current majority-committed version of the updated document and include a fullDocument field with the document lookup in addition to the updateDescription delta.db.coll3.drop();db.createCollection(\"coll3\", { recordPreImages: true });db.coll3.insert({ _id: 3, name: \"Alex\", role: \"TSE\", created_at: new Date() });var cursor = db.coll3.aggregate([{ $changeStream: { fullDocument: \"updateLookup\", fullDocumentBeforeChange: \"whenAvailable\" } }]);db.coll3.update({ _id: 3 }, { $set: { updated_at: new Date() } });cursor.next()/*{ \"_id\" : { \"_data\" : \"825F103644000000042B022C0100296E5A100452A662230D6B4C08B0AF844900F3A335461E5F6964002B060004\", \"_typeBits\" : BinData(0, \"QA==\") }, \"operationType\" : \"update\", \"clusterTime\" : Timestamp(1594897988, 4), \"fullDocument\" : { \"_id\" : 3.0, \"name\" : \"Alex\", \"role\" : \"TSE\", \"created_at\" : ISODate(\"2020-07-16T11:13:08.180+0000\"), \"updated_at\" : ISODate(\"2020-07-16T11:13:08.268+0000\") }, \"fullDocumentBeforeChange\" : { \"_id\" : 3.0, \"name\" : \"Alex\", \"role\" : \"TSE\", \"created_at\" : ISODate(\"2020-07-16T11:13:08.180+0000\") }, \"ns\" : { \"db\" : \"test\", \"coll\" : \"coll3\" }, \"documentKey\" : { \"_id\" : 3.0 }, \"updateDescription\" : { \"updatedFields\" : { \"updated_at\" : ISODate(\"2020-07-16T11:13:08.268+0000\") }, \"removedFields\" : [ ] }}*/By including both fullDocument and fullDocumentBeforeChange options, the cursor now returns three fields that represent the state of the document before the change, after the change as well as a description of the changes in the form of the updateDescription field.How are Pre-Images StoredSince change streams are messages in the oplog, which are themselves BSON documents they must adhere to the BSON Document Size limit of 16 megabytes.Pre-image details aren’t stored directly within the oplog entry that describes the update or delete (op type of u or d).When recordPreImages has been enabled for a collection, prior to an oplog entry for an update or delete, a noop (op: \"n\") is inserted into the oplog with current document state. The subsequent operation (the actual update or delete) will contain a preImageOpTime which contains the optime of the oplog entry containing this noop.db.getSiblingDB(\"local\").getCollection(\"oplog.rs\").find({ ns: \"test.coll3\" });/*{ \"op\": \"n\", \"ns\": \"test.coll3\", \"ui\": UUID(\"d2c8288d-2748-4abf-b5f0-37de24e3128e\"), \"o\": { \"_id\": 3, \"name\": \"Alex\", \"role\": \"TSE\", \"created_at\": ISODate(\"2020-07-17T13:09:52.612Z\") }, \"ts\": Timestamp(1594991392, 4), \"t\": NumberLong(4), \"wall\": ISODate(\"2020-07-17T13:09:52.649Z\"), \"v\": NumberLong(2)}{ \"op\": \"u\", \"ns\": \"test.coll3\", \"ui\": UUID(\"d2c8288d-2748-4abf-b5f0-37de24e3128e\"), \"o\": { \"$v\": 1, \"$set\": { \"updated_at\": ISODate(\"2020-07-17T13:09:52.648Z\") } }, \"o2\": { \"_id\": 3 }, \"preImageOpTime\": { \"ts\": Timestamp(1594991392, 4), \"t\": NumberLong(4) }, \"ts\": Timestamp(1594991392, 5), \"t\": NumberLong(4), \"wall\": ISODate(\"2020-07-17T13:09:52.649Z\"), \"v\": NumberLong(2)}*/What Could Go Wrong?Though enabling pre-images won’t bloat the oplog entry to the point where it may exceed the BSON max size, when the change stream cursor resolves resulting document the size cannot exceed the BSON max size.For example:function randomString(length) { var result = ''; var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'; var charactersLength = characters.length; for ( var i = 0; i &lt; length; i++ ) { result += characters.charAt(Math.floor(Math.random() * charactersLength)); } return result;}// BSON max size less 512 bytesvar size = db.serverBuildInfo().maxBsonObjectSize - 512;db.coll4.drop();db.createCollection(\"coll4\", { recordPreImages: true });db.coll4.insert({ _id: 4, created_at: new Date(), junk: randomString(size) });var cursor = db.coll4.aggregate([{ $changeStream: { fullDocument: \"updateLookup\", fullDocumentBeforeChange: \"off\" } }]);db.coll4.update({ _id: 4 }, { $set: { updated_at: new Date() } });cursor.next()The above example has the fullDocumentBeforeChange disabled, which is the current default behavior of change streams. Though the result would be large (almost 16MB), iterating the change stream cursor would produce a result.Modifying the cursor to now request a fullDocumentBeforeChange (either required or whenAvailable) would now raise an error when the cursor is iterated.// ...db.coll4.drop();db.createCollection(\"coll4\", { recordPreImages: true });db.coll4.insert({ _id: 4, created_at: new Date(), junk: randomString(size) });var cursor = db.coll4.aggregate([{ $changeStream: { fullDocument: \"updateLookup\", fullDocumentBeforeChange: \"required\" } }]);db.coll4.update({ _id: 4 }, { $set: { updated_at: new Date() } });cursor.next();/*2020-07-16T07:40:38.307-0400 E QUERY [js] Error: command failed: {\t\"errmsg\" : \"BSONObj size: 33553900 (0x1FFFDEC) is invalid. Size must be between 0 and 16793600(16MB) First element: _id: { _data: \\\"825F103CB5000000032B022C0100296E5A100484010E04E239427B8CBCA810283D05A5461E5F6964002B080004\\\", _typeBits: BinData(0, 40) }\",\t\"code\" : 10334,\t\"codeName\" : \"BSONObjectTooLarge\",}*/I personally look forward to pre-images being officially supported in MongoDB, however in the meantime be advised that this may not be ideal for production just yet.Happy Coding!" }, { "title": "Optimizing MongoDB Compound Indexes - The \"Equality - Sort - Range\" (ESR) Rule", "url": "/blog/2020/05/16/optimizing-mongodb-compound-indexes-the-equality-sort-range-esr-rule/", "categories": "MongoDB, Queries & Indexing", "tags": "mongodb", "date": "2020-05-16 07:35:11 -0400", "snippet": " UPDATE DOCS-11790 has finally been implemented and as a result the MongoDB public documentation now contains a tutorial for The ESR (Equality, Sort, Range) Rule!Working in Technical Services at ...", "content": " UPDATE DOCS-11790 has finally been implemented and as a result the MongoDB public documentation now contains a tutorial for The ESR (Equality, Sort, Range) Rule!Working in Technical Services at MongoDB I find that time and again customers need assistance understanding why the operations they’ve created indexes for may not be performing optimally. When providing supplementary documentation, the go-to article is “Optimizing MongoDB Compound Indexes” by MongoDB’s A. Jesse Jiryu Davis.I’ve presented this topic now at MongoDB.local Toronto 2019 (in “Tips and Tricks for Effective Indexing”) and at MongoDB World 2019 (in “The Sights (and Smells) of a Bad Query”). My colleague Chris Harris has also covered this topic at MongoDB World 2019 (in “Tips and Tricks++ for Querying and Indexing MongoDB”) and again at the MongoDB.local Houston 2019, for which a video is available.Though we have Jesse’s excellent (and still applicable and valid) article from 2012, I wanted to take this opportunity to collect some thoughts on this topic based on his work and previous presentations.The ESR “Rule”The ordering of index keys in a compound index is critically important, and the ESR “Rule” can be used as a rule of thumb to identify the optimal order in most cases.The reason we are putting “Rule” in quotations is because, though the guidance is applicable in most cases, there are exceptions to be aware of. These exceptions are covered in greater detail in my in “Tips and Tricks for Effective Indexing” presentation.The “Rules”(1) Equality predicates should be placed firstAn equality predicate is any filter condition that is attempting to match a value exactly. For example:find({ x: 123 })find({ x: { $eq: 123 } })aggregate([ { $match:{ \"x.y\": 123 } } ])These filters will be tightly bound when seen in the indexBounds of an Explain Plan:\"indexBounds\" : { \"x\" : [ \"[123.0, 123.0]\" ]}Note that multiple equality predicates do not have to be ordered from most selective to least selective. This guidance has been provided in the past however it is erroneous due to the nature of B-Tree indexes and how in leaf pages, a B-Tree will store combinations of all field’s values. As such, there is exactly the same number of combinations regardless of key order.(2) Sort operation follows Equality predicatesSort fields represent the entire requested sort operation and determine the ordering of results. For example:find().sort({ a: 1 })find().sort({ b: -1, a: 1 })aggregate([ { $sort: { b: 1 } } ])The index bounds for the sort fields will be unbounded (assuming the fields aren’t also filtered on) as it requires the entire key range to be scanned to satisfy the sort requirements:\"indexBounds\" : { \"b\" : [ \"[MaxKey, MinKey]\" ], \"a\" : [ \"[MinKey, MaxKey]\" ]}(3) Range predicates follow Equality and Sort fieldsRange predicates are filters that may scan multiple keys as they are not testing for an exact match. For example:find({ z: { $gte: 5} })find({ z: { $lt: 10 } })find({ z: { $ne: null } })The range predicates will be loosely bounded as a subset of the key range will need to be scanned to satisfy the filter requirements:\"indexBounds\" : { \"z\" : [ \"[5.0, inf.0]\" ]}\"indexBounds\" : { \"z\" : [ \"[-inf.0, 10.0)\" ]}\"indexBounds\" : { \"z\" : [ \"[MinKey, undefined)\", \"(null, MaxKey]\" ]}These three tenets of the “rule” have to do with how a query will traverse an index to identify the keys that match the query’s filter and sort criteria.SetupFor the duration of this section we’ll be working with the following data to help illustrate the various guiding principles:{ name: \"Shakir\", location: \"Ottawa\", region: \"AMER\", joined: 2015 }{ name: \"Chris\", location: \"Austin\", region: \"AMER\", joined: 2016 }{ name: \"III\", location: \"Sydney\", region: \"APAC\", joined: 2016 }{ name: \"Miguel\", location: \"Barcelona\", region: \"EMEA\", joined: 2017 }{ name: \"Alex\", location: \"Toronto\", region: \"AMER\", joined: 2018 }We will also be examining simplified (filtered) Explain Plan’s executionStats from each operation using a variation of the following command:find({ ... }).sort({ ... }).explain(\"executionStats\").executionStats(E) Equality FirstWhen creating queries that ensure selectivity, we learn that “selectivity” is the ability of a query to narrow results using the index. Effective indexes are more selective and allow MongoDB to use the index for a larger portion of the work associated with fulfilling the query.Equality fields should always form the prefix for the index to ensure selectivity.(E → S) Equality before SortPlacing Sort predicates after sequential Equality keys allow for the index to: Provide a non-blocking sort. Minimize the amount of scanning required.To better understand why this is we will begin with the following example:// operationcreateIndex({ name: 1, region: 1 })find({ region: \"AMER\" }).sort({ name: 1 })With the Sort predicate first, the full key range would have to be scanned prior to the more selective equality filter being applied:// execution stats\"nReturned\" : 3.0,\"totalKeysExamined\" : 5.0,\"totalDocsExamined\" : 5.0,\"executionStages\" : { ... \"inputStage\" : { \"stage\" : \"IXSCAN\", ... \"indexBounds\" : { \"name\" : [ \"[MinKey, MaxKey]\" ], \"region\" : [ \"[MinKey, MaxKey]\" ] },With this index, all 5 keys have to be scanned (totalKeysExamined) to identify the 3 matching documents (nReturned).// operationcreateIndex({ region: 1, name: 1 })find({ region: \"AMER\" }).sort({ name: 1 })With the Equality predict first, the tight bounds allow less keys to be scanned to satisfy the filter criteria:// execution stats\"nReturned\" : 3.0,\"totalKeysExamined\" : 3.0,\"totalDocsExamined\" : 3.0,\"executionStages\" : { ... \"inputStage\" : { \"stage\" : \"IXSCAN\", ... \"indexBounds\" : { \"region\" : [ \"[\\\"AMER\\\", \\\"AMER\\\"]\" ], \"name\" : [ \"[MinKey, MaxKey]\" ] },(E → R) Equality before RangeThough Range predicates scan a subset of keys (unlike Sort predicates), they should still be placed after Equality predicates to ensure the key ordering is optimized for selectivity.// operationcreateIndex({ joined: 1, region: 1 })find({ region: \"AMER\", joined: { $gt: 2015 } })Having the Range before the Equality predicate causes more keys to be scanned to identify the matching documents:// execution stats\"nReturned\" : 2.0,\"totalKeysExamined\" : 4.0,\"totalDocsExamined\" : 2.0,\"executionStages\" : { ... \"inputStage\" : { \"stage\" : \"IXSCAN\", ... \"indexBounds\" : { \"joined\" : [ \"(2015.0, inf.0]\" ], \"region\" : [ \"[\\\"AMER\\\", \\\"AMER\\\"]\" ] },In this example, 4 keys had to be scanned to identify the 2 matches. Changing the order of the keys to place the Equality predicate first will reduce the amount of scanning required:// operationcreateIndex({ region: 1, joined: 1 })find({ region: \"AMER\", joined: { $gt: 2015 } })// execution stats\"nReturned\" : 2.0,\"totalKeysExamined\" : 2.0,\"totalDocsExamined\" : 2.0,\"executionStages\" : { ... \"inputStage\" : { \"stage\" : \"IXSCAN\", ... \"indexBounds\" : { \"region\" : [ \"[\\\"AMER\\\", \\\"AMER\\\"]\" ], \"joined\" : [ \"(2015.0, inf.0]\" ] },After placing the Equality predicate before the Range predicate, only the number of keys necessary to satisfy the filter criteria are scanned.(S → R) Sort before RangeHaving a Range predicate before the Sort can result in a Blocking (In Memory) Sort being performed as the index cannot be used to satisfy the sort criteria.// operationcreateIndex({ joined: 1, region: 1 })find({ joined: { $gt: 2015 } }).sort({ region: 1 })// execution stats\"nReturned\" : 4.0,\"totalKeysExamined\" : 4.0,\"totalDocsExamined\" : 4.0,\"executionStages\" : { ... \"inputStage\" : { \"stage\" : \"SORT\", ... \"sortPattern\" : { \"region\" : 1.0 }, \"memUsage\" : 136.0, \"memLimit\" : 33554432.0, \"inputStage\" : { \"stage\" : \"SORT_KEY_GENERATOR\", ... \"inputStage\" : { \"stage\" : \"IXSCAN\", ... \"indexBounds\" : { \"joined\" : [ \"(2015.0, inf.0]\" ], \"region\" : [ \"[MinKey, MaxKey]\" ] },In this example, the filter was able to use the index selectively to identify the 4 keys needed to satisfy the query, however the results are not known to be in order. This results in the identified keys being sorted in memory prior to be returned to the calling stage in the execution plan.By moving the Sort predicate before the Range predicate however, even though more keys may need to be scanned the keys will be returned correctly ordered.// operationcreateIndex({ region: 1, joined: 1 })find({ joined: { $gt: 2015 } }).sort({ region: 1 })// execution stats\"nReturned\" : 4.0,\"totalKeysExamined\" : 5.0,\"totalDocsExamined\" : 5.0,\"executionStages\" : { ... \"inputStage\" : { \"stage\" : \"IXSCAN\", ... \"indexBounds\" : { \"region\" : [ \"[MinKey, MaxKey]\" ], \"joined\" : [ \"[MinKey, MaxKey]\" ] },Though this method requires scanning additional keys the lack of a blocking sort will generally be far more efficient/performant.I hope that the ESR “Rule” helps you optimize your MongoDB indexes and improve your query performance. If you have questions, feel free to hit me up in the comments, or check out the MongoDB Developer Community forums.If you need more timely assistance, consider MongoDB’s Atlas Developer Support or Enterprise Support.Cheers, and happy optimizing!" }, { "title": "Working around MongoDB Stitch's \"max async work queue\" limit", "url": "/blog/2020/03/30/working-around-mongodb-stitchs-max-async-work-queue-limit/", "categories": "MongoDB", "tags": "mongodb, realm", "date": "2020-03-30 05:19:32 -0400", "snippet": "MongoDB Stitch is a great way to build apps quickly with your data that’s already managed by MongoDB Atlas. Though these services empower you to focus on development without having to worry about i...", "content": "MongoDB Stitch is a great way to build apps quickly with your data that’s already managed by MongoDB Atlas. Though these services empower you to focus on development without having to worry about infrastructure, being a managed service there are occasionally limitations imposed by the vendor.This article summarizes why this limit exists, as well as how to adapt your MongoDB Stitch Functions to work around it.The following is an HTTP Service I’ve written that has an incoming webhook. When this webhook is called a MongoDB Stitch Function is run which inserts a number of documents. The number to insert is defined by the maxItems query parameter of the request payload provided to the incoming webhook.NOTE When doing a number of insertOne operations in a loop an insertMany would likely address the issue directly without requiring any additional workarounds. The following code is really best suited to a number of update or delete operations that have unique filters and cannot be logically grouped.// MongoDB Stitch Function code for the Incoming Webhookexports = function (payload, response) { let maxItems = parseInt(payload.query.maxItems); const CLUSTER = 'mongodb-atlas'; const DB = 'test'; const COLLECTION = 'web_worker_queue_failures'; const collection = context.services.get(CLUSTER).db(DB).collection(COLLECTION); let items = []; for(let i = 0; i &lt; maxItems; i++) { items.push({ a: i }); } let results = []; items.forEach((item) =&gt; { collection.insertOne(item).then(res =&gt; { results.push(res); }, error =&gt; { results.push({ error: error }); console.log(error); }); }); return { \"Processed\": items.length };};When the webhook is executed, the number of items processed is returned. In the following example we’ll specify that we want 900 items to be inserted:curl -w \"\\nTotal Time: %{time_total}s\\n\" \\ -H \"Content-Type: application/json\" -d '{}' \\ https://webhooks.mongodb-stitch.com/api/client/v2.0/app/cluster0-app0-abcde/service/WebWorkerFailureTest/incoming_webhook/webhook0?maxItems=900{\"Processed\":{\"$numberInt\":\"900\"}}Total Time: 1.729469sBased on the output returned from the webhook, 900 items were inserted. Next we’ll try with 9000 items:curl -w \"\\nTotal Time: %{time_total}s\\n\" \\ -H \"Content-Type: application/json\" -d '{}' \\ https://webhooks.mongodb-stitch.com/api/client/v2.0/app/cluster0-app0-abcde/service/WebWorkerFailureTest/incoming_webhook/webhook0?maxItems=9000{\"error\":\"exceeded max async work queue size of 1000\",\"error_code\":\"FunctionExecutionError\",\"link\":\"https://stitch.mongodb.com/groups/13c415400000000000000000/apps/13c415400000000000000000/logs?co_id=13c415400000000000000000\"}Total Time: 0.371383sFollowing the \"link\" would redirect you to the Application Log for the application that the webhook belongs to. This can be useful for debugging.The reason this error is thrown has to do with how the MongoDB Stitch platform handles async request execution within functions using an internal work queue. Operations such as insertOne return a Promise. To ensure these promises don’t queue infinitely waiting to be resolved, MongoDB Stitch will limit the number that can be enqueued, and if this limit is exceeded queuing stops and the exception is raised.To work around this limit we will adapt our earlier code to instead throttle our work loop to ensure batches of 1000 or less are processed before more work is attempted.const processWork = async function(items) { const CLUSTER = 'mongodb-atlas'; const DB = 'test'; const COLLECTION = 'web_worker_queue_failures'; const collection = context.services.get(CLUSTER).db(DB).collection(COLLECTION); const BATCH_SIZE = 1000; const totalItems = items.length; for (let i = 0; i &lt; totalItems; i += BATCH_SIZE) { const requests = items.slice(i, i + BATCH_SIZE).map(function(item) { return collection.insertOne(item).catch(e =&gt; console.log(e)); }); await Promise.all(requests).catch(e =&gt; console.log(`Errors in batch ${i}: ${e}`)); }}// MongoDB Stitch Function code for the Incoming Webhookexports = function (payload, response) { let maxItems = parseInt(payload.query.maxItems); let items = []; for(let i = 0; i &lt; maxItems; i++) { items.push({ a: i }); } processWork(items); return { \"Processed\": items.length };};The number of items to process (based on maxItems again) will now be broken up into batches (of BATCH_SIZE size). Following this, Promise.all will execute all the operations in a batch and ensure they are all fulfilled before another batch is processed.This method allows the workload to be artificially throttled to allow maxItems operations to be executed. Let’s try running our webhook again for 9000 items:curl -w \"\\nTotal Time: %{time_total}s\\n\" \\ -H \"Content-Type: application/json\" -d '{}' \\ https://webhooks.mongodb-stitch.com/api/client/v2.0/app/cluster0-app0-abcde/service/WebWorkerFailureTest/incoming_webhook/webhook0?maxItems=9000{\"Processed\":{\"$numberInt\":\"9000\"}}Total Time: 13.935162sNote that although this strategy will work with an array of items (maxItems) of any size, MongoDB Stitch Functions still have runtime limit of 90 seconds (see “Constraints”) which cannot be circumvented. If we try running the function for 90000 items, if the function runs for &gt; 90 seconds execution will be terminated:curl -w \"\\nTotal Time: %{time_total}s\\n\" \\ -H \"Content-Type: application/json\" -d '{}' \\ https://webhooks.mongodb-stitch.com/api/client/v2.0/app/cluster0-app0-abcde/service/WebWorkerFailureTest/incoming_webhook/webhook0?maxItems=90000{\"error\":\"execution time limit exceeded\",\"error_code\":\"ExecutionTimeLimitExceeded\",\"link\":\"https://stitch.mongodb.com/groups/13c415400000000000000000/apps/13c415400000000000000000/logs?co_id=13c415400000000000000000\"}Total Time: 90.311827sHappy Coding!" }, { "title": "Identifying and Reclaiming Disk Space in MongoDB", "url": "/blog/2020/03/15/identifying-and-reclaiming-disk-space-in-mongodb/", "categories": "MongoDB", "tags": "mongodb, wiredtiger, scripting", "date": "2020-03-15 16:23:38 -0400", "snippet": " December 17, 2024: Starting in MongoDB 8.0, you can use the new autoCompact command to perform background compaction. If enabled, the server attempts to keep free space within each collection and...", "content": " December 17, 2024: Starting in MongoDB 8.0, you can use the new autoCompact command to perform background compaction. If enabled, the server attempts to keep free space within each collection and index below the specified freeSpaceTargetMB value.A common question when it comes to MongoDB and the (default) storage engine (WiredTiger) is “Why is it after I removed a bunch of documents my free space didn’t increase”?The WiredTiger storage engine maintains lists of empty records in data files as it deletes documents. This space can be reused by WiredTiger, but will not be returned to the operating system unless under very specific circumstances.The amount of empty space available for reuse by WiredTiger is reflected in the output of db.collection.stats() under the heading wiredTiger.block-manager.file bytes available for reuse.To allow the WiredTiger storage engine to release this empty space to the operating system, you can de-fragment your data file. This can be achieved using the compact command.As the db.collection.stats() command must be run one collection at a time I’ve written the following script to enhance this functionality as follows: scan all namespaces (databases + collections) include index space details support for sharded collections output to CSV/** Print storage details for all collections and indexes.* Supports sharded clusters** @author alex.bevilacqua@mongodb.com* @version 1.3* @updated 2022-11-21** History:* 1.3 - Filter out admin, local and config databases* 1.2 - Properly filter out views* 1.1 - Include Document Count / Average Object Size* 1.0 - Initial Release*/var fmt = function (bytes) { // comment this out to format the results return bytes; var sizes = [&#39;Bytes&#39;, &#39;KB&#39;, &#39;MB&#39;, &#39;GB&#39;, &#39;TB&#39;]; if (bytes == 0) return &#39;0 Byte&#39;; var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024))); return Math.round(bytes / Math.pow(1024, i), 2) + &#39; &#39; + sizes[i];}var getDetail = function (label, stats) { var detail = { name: label, count: stats.count, avgSize: stats.avgObjSize, size: stats.size, storageSize: stats.storageSize, reusableSpace: stats.wiredTiger[&quot;block-manager&quot;][&quot;file bytes available for reuse&quot;], indexSpace: stats.totalIndexSize, indexReusable: 0, }; var indexKeys = Object.keys(stats.indexDetails); for (var i = 0; i &lt; indexKeys.length; i++) { detail.indexReusable += stats.indexDetails[indexKeys[i]][&quot;block-manager&quot;][&quot;file bytes available for reuse&quot;]; } return detail;}var dbSizeReport = function (dbname) { var results = [] db.getSiblingDB(dbname).getCollectionInfos({ type: &quot;collection&quot; }, { nameOnly: true }).forEach(function(c) { var coll = db.getSiblingDB(dbname).getCollection(c.name); var s = coll.stats({ indexDetails: true }); if (s.hasOwnProperty(&quot;sharded&quot;) &amp;&amp; s.sharded) { var shards = Object.keys(s.shards); for (var i = 0; i &lt; shards.length; i++) { var shard = shards[i]; var shardStat = s.shards[shard]; results.push(getDetail(s.ns + &quot; (&quot; + shard + &quot;)&quot;, shardStat)); } } else { results.push(getDetail(s.ns, s)); } }); var totals = [0, 0, 0, 0, 0]; print([&quot;Namespace&quot;, &quot;Total Documents&quot;, &quot;Average Document Size&quot;, &quot;Uncompressed&quot;, &quot;Compressed&quot;, &quot;Reusable from Collections&quot;, &quot;Indexes&quot;, &quot;Reusable from Indexes&quot;].join(&quot;,&quot;)) for (var i = 0; i &lt; results.length; i++) { var row = results[i]; print([row.name, row.count, row.avgSize, fmt(row.size), fmt(row.storageSize), fmt(row.reusableSpace), fmt(row.indexSpace), fmt(row.indexReusable)].join(&quot;,&quot;)) totals[0] += row.size; totals[1] += row.storageSize; totals[2] += row.reusableSpace; totals[3] += row.indexSpace; totals[4] += row.indexReusable; } print([&quot;Total&quot;, &quot;&quot;, &quot;&quot;, fmt(totals[0]), fmt(totals[1]), fmt(totals[2]), fmt(totals[3]), fmt(totals[4])].join(&quot;,&quot;));}var IGNORE = [&quot;admin&quot;, &quot;local&quot;, &quot;config&quot;];db.getMongo().getDBNames().forEach(function (dbname) { if (IGNORE.indexOf(dbname) &lt; 0) { print(&quot;---------------------&quot;) print(dbname); print(&quot;---------------------&quot;) dbSizeReport(dbname); }});Running this script from a mongo shell will produce output similar to the following:---------------------admin---------------------Namespace,Uncompressed,Compressed,Reusable from Collections,Indexes,Reusable from Indexesadmin.system.keys (config),255 Bytes,36 KB,16 KB,36 KB,16 KBadmin.system.version (config),59 Bytes,20 KB,0 Byte,20 KB,0 ByteTotal,314 Bytes,56 KB,16 KB,56 KB,16 KB---------------------config---------------------Namespace,Uncompressed,Compressed,Reusable from Collections,Indexes,Reusable from Indexesconfig.actionlog (config),32 KB,40 KB,16 KB,40 KB,16 KBconfig.changelog (config),346 KB,132 KB,52 KB,96 KB,44 KBconfig.chunks (config),57 KB,52 KB,24 KB,144 KB,64 KBconfig.collections (config),431 Bytes,36 KB,16 KB,36 KB,16 KBconfig.databases (config),108 Bytes,20 KB,0 Byte,20 KB,0 Byteconfig.lockpings (config),3 KB,36 KB,16 KB,72 KB,32 KBconfig.locks (config),771 Bytes,36 KB,16 KB,108 KB,48 KBconfig.migrations (config),0 Byte,24 KB,16 KB,48 KB,32 KBconfig.mongos (config),342 Bytes,36 KB,16 KB,20 KB,0 Byteconfig.settings (config),39 Bytes,20 KB,0 Byte,20 KB,0 Byteconfig.shards (config),297 Bytes,20 KB,0 Byte,44 KB,4 KBconfig.system.sessions (shard01),99 Bytes,36 KB,16 KB,60 KB,20 KBconfig.tags (config),0 Byte,4 KB,0 Byte,24 KB,4 KBconfig.transactions (config),0 Byte,24 KB,16 KB,12 KB,4 KBconfig.version (config),83 Bytes,20 KB,0 Byte,20 KB,0 ByteTotal,441 KB,536 KB,204 KB,764 KB,284 KB---------------------test---------------------Namespace,Uncompressed,Compressed,Reusable from Collections,Indexes,Reusable from Indexestest.test1 (shard01),37 MB,37 MB,27 MB,26 MB,16 MBtest.test1 (shard02),37 MB,8 MB,52 KB,5 MB,2 MBtest.test1 (shard03),38 MB,8 MB,56 KB,5 MB,2 MBtest.ups_test (shard01),0 Byte,24 KB,16 KB,72 KB,48 KBTotal,112 MB,54 MB,27 MB,36 MB,19 MBThis output can then being imported into your favourite spreadsheet for further manipulation.Based on this sample output, the test.test1 collection on shard01 could reclaim approximately 27MB if compacted. Note that the amount of space reclaimed will not necessarily be exactly what is reported here, but is generally a good guideline as to how much space may be reclaimed." }, { "title": "MongoDB Initial Sync Progress Monitoring", "url": "/blog/2020/02/13/mongodb-initial-sync-progress-monitoring/", "categories": "MongoDB", "tags": "mongodb, replication, scripting", "date": "2020-02-13 12:34:49 -0500", "snippet": "Sometimes our replica set members fall off the oplog and the node needs to be resynced. When this happens, an Initial Sync is required, which does the following: Clones all databases except the lo...", "content": "Sometimes our replica set members fall off the oplog and the node needs to be resynced. When this happens, an Initial Sync is required, which does the following: Clones all databases except the local database. To clone, the mongod scans every collection in each source database and inserts all data into its own copies of these collections. Applies all changes to the data set. Using the oplog from the source, the mongod updates its data set to reflect the current state of the replica set.When the initial sync finishes, the member transitions from STARTUP2 to SECONDARY.Some common questions when performing an initial sync of a Replica Set Member are: How do I know if the sync is progressing? How long will this take to complete?Determining if the sync is progressing can be done by either checking the size of the dbPath of the syncing node or by running the db.adminCommand({ replSetGetStatus: 1, initialSync: 1 }) command while connected to the SECONDARY via the mongo shell.Checking the directory size of the SECONDARY that is being initial sync’ed will provide a good approximation as to how much data still remains to be copied. Note that as the WiredTiger storage engine doesn’t “release” space when documents are deleted there is a high probability that the SECONDARY will have a smaller total directory size than the sync source.The second step (after cloning) where the oplog entries are applied will also affect the overall time required to sync from the sync source.The replSetGetStatus command will produce a JSON document similar to the following. This document contains extensive details as to how the database/collection cloning is progressing, as well as any errors that have occurred during the process.{ &quot;set&quot;: &quot;replset&quot;, &quot;date&quot;: ISODate(&quot;2019-12-04T05:12:52.835Z&quot;), &quot;myState&quot;: 5, &quot;term&quot;: NumberLong(3), &quot;syncingTo&quot;: &quot;m2.example.net:27017&quot;, &quot;syncSourceHost&quot;: &quot;m2.example.net:27017&quot;, &quot;syncSourceId&quot;: 1, &quot;heartbeatIntervalMillis&quot;: NumberLong(2000), &quot;majorityVoteCount&quot;: 2, &quot;writeMajorityCount&quot;: 2, &quot;optimes&quot;: { &quot;lastCommittedOpTime&quot;: { &quot;ts&quot;: Timestamp(0, 0), &quot;t&quot;: NumberLong(-1) }, &quot;lastCommittedWallTime&quot;: ISODate(&quot;1970-01-01T00:00:00Z&quot;), &quot;appliedOpTime&quot;: { &quot;ts&quot;: Timestamp(0, 0), &quot;t&quot;: NumberLong(-1) }, &quot;durableOpTime&quot;: { &quot;ts&quot;: Timestamp(0, 0), &quot;t&quot;: NumberLong(-1) }, &quot;lastAppliedWallTime&quot;: ISODate(&quot;1970-01-01T00:00:00Z&quot;), &quot;lastDurableWallTime&quot;: ISODate(&quot;1970-01-01T00:00:00Z&quot;) }, &quot;lastStableRecoveryTimestamp&quot;: Timestamp(0, 0), &quot;lastStableCheckpointTimestamp&quot;: Timestamp(0, 0), &quot;initialSyncStatus&quot;: { &quot;failedInitialSyncAttempts&quot;: 0, &quot;maxFailedInitialSyncAttempts&quot;: 10, &quot;initialSyncStart&quot;: ISODate(&quot;2019-12-04T05:12:35.719Z&quot;), &quot;initialSyncAttempts&quot;: [], &quot;fetchedMissingDocs&quot;: 0, &quot;appliedOps&quot;: 0, &quot;initialSyncOplogStart&quot;: Timestamp(1575436355, 1), &quot;databases&quot;: { &quot;databasesCloned&quot;: 2, &quot;admin&quot;: { &quot;collections&quot;: 4, &quot;clonedCollections&quot;: 4, &quot;start&quot;: ISODate(&quot;2019-12-04T05:12:35.947Z&quot;), &quot;end&quot;: ISODate(&quot;2019-12-04T05:12:36.486Z&quot;), &quot;elapsedMillis&quot;: 539, &quot;admin.system.roles&quot;: { &quot;documentsToCopy&quot;: 12, &quot;documentsCopied&quot;: 12, &quot;indexes&quot;: 2, &quot;fetchedBatches&quot;: 1, &quot;start&quot;: ISODate(&quot;2019-12-04T05:12:35.950Z&quot;), &quot;end&quot;: ISODate(&quot;2019-12-04T05:12:36.101Z&quot;), &quot;elapsedMillis&quot;: 151, &quot;receivedBatches&quot;: 1 }, &quot;admin.system.users&quot;: { &quot;documentsToCopy&quot;: 22, &quot;documentsCopied&quot;: 22, &quot;indexes&quot;: 2, &quot;fetchedBatches&quot;: 1, &quot;start&quot;: ISODate(&quot;2019-12-04T05:12:36.101Z&quot;), &quot;end&quot;: ISODate(&quot;2019-12-04T05:12:36.252Z&quot;), &quot;elapsedMillis&quot;: 151, &quot;receivedBatches&quot;: 1 }, &quot;admin.system.keys&quot;: { &quot;documentsToCopy&quot;: 2, &quot;documentsCopied&quot;: 2, &quot;indexes&quot;: 1, &quot;fetchedBatches&quot;: 1, &quot;start&quot;: ISODate(&quot;2019-12-04T05:12:36.252Z&quot;), &quot;end&quot;: ISODate(&quot;2019-12-04T05:12:36.372Z&quot;), &quot;elapsedMillis&quot;: 120, &quot;receivedBatches&quot;: 1 }, &quot;admin.system.version&quot;: { &quot;documentsToCopy&quot;: 2, &quot;documentsCopied&quot;: 2, &quot;indexes&quot;: 1, &quot;fetchedBatches&quot;: 1, &quot;start&quot;: ISODate(&quot;2019-12-04T05:12:36.372Z&quot;), &quot;end&quot;: ISODate(&quot;2019-12-04T05:12:36.486Z&quot;), &quot;elapsedMillis&quot;: 114, &quot;receivedBatches&quot;: 1 } }, &quot;config&quot;: { &quot;collections&quot;: 2, &quot;clonedCollections&quot;: 2, &quot;start&quot;: ISODate(&quot;2019-12-04T05:12:36.486Z&quot;), &quot;end&quot;: ISODate(&quot;2019-12-04T05:12:36.863Z&quot;), &quot;elapsedMillis&quot;: 377, &quot;config.transactions&quot;: { &quot;documentsToCopy&quot;: 0, &quot;documentsCopied&quot;: 0, &quot;indexes&quot;: 1, &quot;fetchedBatches&quot;: 0, &quot;start&quot;: ISODate(&quot;2019-12-04T05:12:36.487Z&quot;), &quot;end&quot;: ISODate(&quot;2019-12-04T05:12:36.645Z&quot;), &quot;elapsedMillis&quot;: 158, &quot;receivedBatches&quot;: 0 }, &quot;config.system.sessions&quot;: { &quot;documentsToCopy&quot;: 1, &quot;documentsCopied&quot;: 1, &quot;indexes&quot;: 2, &quot;fetchedBatches&quot;: 1, &quot;start&quot;: ISODate(&quot;2019-12-04T05:12:36.645Z&quot;), &quot;end&quot;: ISODate(&quot;2019-12-04T05:12:36.863Z&quot;), &quot;elapsedMillis&quot;: 218, &quot;receivedBatches&quot;: 1 } }, &quot;test&quot;: { &quot;collections&quot;: 1, &quot;clonedCollections&quot;: 0, &quot;start&quot;: ISODate(&quot;2019-12-04T05:12:36.863Z&quot;), &quot;test.hugeindex&quot;: { &quot;documentsToCopy&quot;: 25000, &quot;documentsCopied&quot;: 9187, &quot;indexes&quot;: 2, &quot;fetchedBatches&quot;: 8, &quot;start&quot;: ISODate(&quot;2019-12-04T05:12:36.865Z&quot;), &quot;receivedBatches&quot;: 9 } } } }, &quot;members&quot;: [ { &quot;_id&quot;: 0, &quot;name&quot;: &quot;m1.example.net:27017&quot;, &quot;ip&quot;: &quot;198.51.100.1&quot;, &quot;health&quot;: 1, &quot;state&quot;: 1, &quot;stateStr&quot;: &quot;PRIMARY&quot;, &quot;uptime&quot;: 17, &quot;optime&quot;: { &quot;ts&quot;: Timestamp(1575436355, 1), &quot;t&quot;: NumberLong(3) }, &quot;optimeDurable&quot;: { &quot;ts&quot;: Timestamp(1575436355, 1), &quot;t&quot;: NumberLong(3) }, &quot;optimeDate&quot;: ISODate(&quot;2019-12-04T05:12:35Z&quot;), &quot;optimeDurableDate&quot;: ISODate(&quot;2019-12-04T05:12:35Z&quot;), &quot;lastHeartbeat&quot;: ISODate(&quot;2019-12-04T05:12:52.216Z&quot;), &quot;lastHeartbeatRecv&quot;: ISODate(&quot;2019-12-04T05:12:51.485Z&quot;), &quot;pingMs&quot;: NumberLong(0), &quot;lastHeartbeatMessage&quot;: &quot;&quot;, &quot;syncingTo&quot;: &quot;&quot;, &quot;syncSourceHost&quot;: &quot;&quot;, &quot;syncSourceId&quot;: -1, &quot;infoMessage&quot;: &quot;&quot;, &quot;electionTime&quot;: Timestamp(1575434944, 1), &quot;electionDate&quot;: ISODate(&quot;2019-12-04T04:49:04Z&quot;), &quot;configVersion&quot;: 3 }, { &quot;_id&quot;: 1, &quot;name&quot;: &quot;m2.example.net:27017&quot;, &quot;ip&quot;: &quot;198.51.100.2&quot;, &quot;health&quot;: 1, &quot;state&quot;: 2, &quot;stateStr&quot;: &quot;SECONDARY&quot;, &quot;uptime&quot;: 17, &quot;optime&quot;: { &quot;ts&quot;: Timestamp(1575436355, 1), &quot;t&quot;: NumberLong(3) }, &quot;optimeDurable&quot;: { &quot;ts&quot;: Timestamp(1575436355, 1), &quot;t&quot;: NumberLong(3) }, &quot;optimeDate&quot;: ISODate(&quot;2019-12-04T05:12:35Z&quot;), &quot;optimeDurableDate&quot;: ISODate(&quot;2019-12-04T05:12:35Z&quot;), &quot;lastHeartbeat&quot;: ISODate(&quot;2019-12-04T05:12:52.216Z&quot;), &quot;lastHeartbeatRecv&quot;: ISODate(&quot;2019-12-04T05:12:52.728Z&quot;), &quot;pingMs&quot;: NumberLong(0), &quot;lastHeartbeatMessage&quot;: &quot;&quot;, &quot;syncingTo&quot;: &quot;&quot;, &quot;syncSourceHost&quot;: &quot;&quot;, &quot;syncSourceId&quot;: -1, &quot;infoMessage&quot;: &quot;&quot;, &quot;configVersion&quot;: 3 }, { &quot;_id&quot;: 2, &quot;name&quot;: &quot;m3.example.net:27017&quot;, &quot;ip&quot;: &quot;198.51.100.3&quot;, &quot;health&quot;: 1, &quot;state&quot;: 5, &quot;stateStr&quot;: &quot;STARTUP2&quot;, &quot;uptime&quot;: 71, &quot;optime&quot;: { &quot;ts&quot;: Timestamp(0, 0), &quot;t&quot;: NumberLong(-1) }, &quot;optimeDate&quot;: ISODate(&quot;1970-01-01T00:00:00Z&quot;), &quot;syncingTo&quot;: &quot;m2.example.net:27017&quot;, &quot;syncSourceHost&quot;: &quot;m2.example.net:27017&quot;, &quot;syncSourceId&quot;: 1, &quot;infoMessage&quot;: &quot;&quot;, &quot;configVersion&quot;: 3, &quot;self&quot;: true, &quot;lastHeartbeatMessage&quot;: &quot;&quot; } ], &quot;ok&quot;: 1}Depending on the number of databases and collections being sync’ed, the size of this document can be quite large and difficult to visually parse.To improve this situation I’ve created the following script./** initialSyncProgress* @author Alex Bevilacqua &lt;alex@alexbevi.com&gt;** Can be run against a MongoDB 3.4+ mongod that is in STARTUP2 (intitial sync) state to gain some* insight into how the sync is progressing. This script WILL NOT tell you how long until the sync* is complete, but based on how the script reports progress can be used to estimate this.** usage:* mongo --quiet --eval &quot;load(&#39;initialSyncProgress.js&#39;); initialSyncProgress();&quot;*/var printPercentage = function (position, length, type) { var p = Math.round((position / length) * 100, 2); return position + &quot;/&quot; + length + &quot; &quot; + type + &quot; (&quot; + p + &quot;%)&quot;;}var msToTime = function (duration) { var milliseconds = parseInt((duration % 1000) / 100), seconds = Math.floor((duration / 1000) % 60), minutes = Math.floor((duration / (1000 * 60)) % 60), hours = Math.floor((duration / (1000 * 60 * 60)) % 24); hours = (hours &lt; 10) ? &quot;0&quot; + hours : hours; minutes = (minutes &lt; 10) ? &quot;0&quot; + minutes : minutes; seconds = (seconds &lt; 10) ? &quot;0&quot; + seconds : seconds; return hours + &quot;:&quot; + minutes + &quot;:&quot; + seconds + &quot;.&quot; + milliseconds;}var initialSyncProgress = function () { var status = db.adminCommand({ replSetGetStatus: 1, initialSync: 1 }); var dbs_cloned = status.initialSyncStatus.databases.databasesCloned; delete status.initialSyncStatus.databases.databasesCloned; var dbs = Object.keys(status.initialSyncStatus.databases); var dbs_total = dbs.length; // total time elapsed syncing databases var elapsedMillis = 0; // status message based on the position within the currently // cloning database (collections cloned of collections total) var currentlyCloningStatus = &quot;&quot;; for (var i = 0; i &lt; dbs_total; i++) { var d = status.initialSyncStatus.databases[dbs[i]]; // if the counts aren&#39;t the same either it&#39;s the database that&#39;s in progress or // hasn&#39;t started cloning yet if (d.clonedCollections &lt; d.collections) { currentlyCloningStatus = &quot;Cloning database &quot; + dbs[i]; currentlyCloningStatus += &quot; - cloned &quot; + printPercentage(d.clonedCollections, d.collections, &quot;collections&quot;); var collectionKeys = Object.keys(d); for (var j = 0; j &lt; collectionKeys.length; j++) { var c = d[collectionKeys[j]]; if (c.hasOwnProperty(&quot;documentsToCopy&quot;) &amp;&amp; (c.documentsCopied &lt; c.documentsToCopy)) { currentlyCloningStatus += &quot;\\nCloning collection &quot; + collectionKeys[j] + &quot; &quot; + printPercentage(c.documentsCopied, c.documentsToCopy, &quot;documents&quot;); } } } // only add time if there&#39;s time to record if (d.hasOwnProperty(&quot;elapsedMillis&quot;)) { elapsedMillis += d.elapsedMillis; } } print(&quot;===================&quot;) print(&quot;Initial Sync Status&quot;) print(&quot;===================&quot;) var now = new Date(); var started = status.initialSyncStatus.initialSyncStart; print(&quot;Cloning started at &quot; + started + &quot; (&quot; + msToTime(now - started) + &quot; ago)&quot;); var members = status.members; for (var i = 0; i &lt; members.length; i++) { if (members[i].stateStr == &quot;PRIMARY&quot;) { var optime = members[i].optimeDate var me = new Date(status.initialSyncStatus.initialSyncOplogStart.getTime() * 1000); print(&quot;Currently &quot; + msToTime(optime - me) + &quot; behind the PRIMARY (based on optimes)&quot;); } } if (status.initialSyncStatus.hasOwnProperty(&quot;initialSyncAttempts&quot;) &amp;&amp; status.initialSyncStatus.initialSyncAttempts.length &gt; 0) { var failures = status.initialSyncStatus.initialSyncAttempts.length; print(&quot;Cloning has already failed &quot; + failures + &quot; time(s) ...&quot;); print(&quot;Last Failure: &quot; + status.initialSyncStatus.initialSyncAttempts[failures - 1].status); } print(&quot;Copying databases for &quot; + msToTime(elapsedMillis) + &quot;. Note this updates AFTER a collection has been cloned.&quot;); print(&quot;Cloned &quot; + printPercentage(dbs_cloned, dbs_total, &quot;databases&quot;)); print(currentlyCloningStatus);}By running this against the SECONDARY from the mongo shell, a more concise representation of the initialSyncStatus document is produced:The script will also let you know if there have been any sync failures recorded, as well as what the last failure was.Hopefully you’ll find this useful when the time comes to resync one of your nodes." }, { "title": "What is MongoDB FTDC (aka. diagnostic.data)", "url": "/blog/2020/01/26/what-is-mongodb-ftdc-aka-diagnostic-dot-data/", "categories": "MongoDB", "tags": "mongodb", "date": "2020-01-26 18:14:50 -0500", "snippet": "Full Time Diagnostic Data Capture (FTDC) was introduced in MongoDB 3.2 (via SERVER-19585), to incrementally collect the results of certain diagnostic commands to assist MongoDB support with trouble...", "content": "Full Time Diagnostic Data Capture (FTDC) was introduced in MongoDB 3.2 (via SERVER-19585), to incrementally collect the results of certain diagnostic commands to assist MongoDB support with troubleshooting issues.On log rotation or startup, a mongod or mongos will collect and log: getCmdLineOpts: db.adminCommand({getCmdLineOpts: true}) buildInfo: db.adminCommand({buildInfo: true}) hostInfo: db.adminCommand({hostInfo: true})As configured by diagnosticDataCollectionPeriodMillis and defaulting to every 1 second, FTDC will collect the output of the following commands: serverStatus: db.serverStatus({tcmalloc: true}) replSetGetStatus: rs.status() collStats for the local.oplog.rs collection (mongod only) connPoolStats (mongos only)When FTDC is enabled (per diagnosticDataCollectionEnabled), the metrics.xxxxxxx files will be stored in diagnosticDataCollectionDirectoryPath which by default is the diagnostic.data directory within the systemLog.path.With SERVER-21818 (introduced in MongoDB 3.2.13) and SERVER-31400 (introduced in MongoDB 3.4.16) the diagnostic data capture scope was broadened to not only include internal diagnostic commands but system metrics as well. Depending on the host operating system, the diagnostic data may include one or more of the following statistics: CPU utilization (ex: /proc/stat) Memory utilization (ex: /proc/meminfo) Disk utilization related to performance (ex: /sys/block/*/stat) Network performance statistics (/proc/net/netstat)The metrics.xxxxxxx files in the diagnostic.data directory contain only statistics about the performance of the system and the database. They are stored in a compressed format, and are not human-readable.Just a quick note regarding privacy, regardless of the version, the data in diagnostic.data never contains: Samples of queries, query predicates, or query results Data sampled from any end-user collection or index System or MongoDB user credentials or security certificatesFTDC data contains certain host machine information such as hostnames, operating system information, and the options or settings used to start the mongod or mongos. This information may be considered protected or confidential by some organizations or regulatory bodies, but is not typically considered to be Personally Identifiable Information (PII).If you want to have a closer look at the diagnostic data collection process, you can inspect the FTDC code.FTDC StructureThere are two types of FTDC documents: a BSON metadata document, or a BSON metric chunk.Each document is made up of an _id, a type and either a doc or data field. The type field is used to identify the document type: 0: Metadata Document 1: Metric ChunkThe doc or data fields will contain “samples” in the form of:{ \"start\" : DateTime, /* Time at which all collecting started */ \"name\" : String, /* name is from name() in FTDCCollectorInterface */ { \"start\" : DateTime, /* Time at which name() collection started */ \"data\" : { ... }, /* data comes from collect() in FTDCCollectorInterface */ \"end\" : DateTime, /* Time at which name() collection ended */ }, ... /* more than 1 collector be sampled */ \"end\" : DateTime /* Time at which all collecting ended */}Samples are collected by FTDCCollectorInterface instances.Metadata Document{ \"_id\": DateTime, \"type\": 0, \"doc\": { .. } /* Samples from collectors */}On log rotation or startup, the first FTDC entry will be collected and stored. This is a BSON document that contains information sampled by running getCmdLineOpts, buildInfo and hostInfo.// example{ \"start\": DateTime, \"buildInfo\": { ... }, \"getCmdLineOpts\": { ... }, \"hostInfo\": { ... }, \"end\": DateTime}This sample will be stored in the doc field of the metadata document.Metric Chunk{ \"_id\": DateTime, \"type\": 1 \"data\": BinData(...)}During each collection interval (as configured by diagnosticDataCollectionPeriodMillis), a metric chunk will be created and a sample will be collected, compressed and stored to the data document as Binary Data.This sample can contain the results of internal commands such as serverStatus,replSetGetStatus, collStats for the local.oplog.rs collection or connPoolStats, as well as external system metrics.// example{ \"start\": DateTime, \"serverStatus\": { ... }, \"connPoolStats\": { ... }, \"systemMetrics\": { ... }, \"end\": DateTime}Decoding FTDC metrics.xxxxxxx filesFTDC files, such as the metrics.2019-10-28T19-02-23Z-00000 example file we’ll be working with below are just BSON files. As such, the bsondump utility can be used to inspect the contents:METRICS=metrics.2019-10-28T19-02-23Z-00000bsondump --quiet $METRICS | lessbsondump will default to emitting JSON, so we can interact with this using the jq utility. For example, if we only want to review the Metadata Document this could be done as follows:# bsondump &lt; 4.0bsondump --quiet $METRICS | jq -s '.[] | select( .type == 0)' | less# bsondump &gt;= 4.0bsondump --quiet $METRICS | jq -s '.[] | select( .type | .\"$numberInt\" == \"0\")' | lessWorking with Metric Chunks is a little more complicated as they are actually zlib compressed BSON documents. We’ll use the jq utility to only select the first chunk and the Ruby interpreter to decompress the zlib data. Note that the following command can be altered to navigate to other chunks (not only the first) as needed:# bsondump &lt; 4.0METRICS=metrics.2019-12-20T14-22-56Z-00000bsondump --quiet $METRICS | \\ jq -s '.[] | select( .type == 1)' | \\ jq -s 'first | .data .\"$binary\"' -Mc | \\ ruby -rzlib -rbase64 -e 'd = STDIN.read; print Zlib::Inflate.new.inflate(Base64.decode64(d)[4..-1])' | \\ bsondump --quiet# bsondump &gt;= 4.0METRICS=metrics.2019-12-20T14-22-56Z-00000bsondump --quiet $METRICS | \\ jq -s '.[] | select( .type | .\"$numberInt\" == \"1\")' | \\ jq -s 'first | .data .\"$binary\" .base64' -Mc | \\ ruby -rzlib -rbase64 -e 'd = STDIN.read; print Zlib::Inflate.new.inflate(Base64.decode64(d)[4..-1])' | \\ bsondump --quietYou eagle-eyed Rubyists will notice that we’re clipping the first 4 bytes from the binary data we’re reading from STDIN. This is to drop the header before we try to decompress the stream.If you don’t do this zlib will complain and fail:Traceback (most recent call last): 1: from -e:1:in `&lt;main&gt;'-e:1:in `inflate': incorrect header check (Zlib::DataError)The binary data has now been decompressed, and being BSON data we run it through bsondump again and voila:Hopefully this helps shed some light on what FTDC data is and what it contains. In a future post we’ll look into doing something useful with this treasure trove of telemetry our clusters are generating every 1 second or so." }, { "title": "Troubleshooting and Fixing Invariant Failure !_featureTracker on MongoDB Startup", "url": "/blog/2020/01/23/troubleshooting-and-fixing-invariant-failure-featuretracker/", "categories": "MongoDB", "tags": "troubleshooting", "date": "2020-01-23 05:34:53 -0500", "snippet": "I recently found myself troubleshooting another MongoDB startup issue due to potential corruption within a WiredTiger file. As I have previously covered this topic (see “Recovering a WiredTiger col...", "content": "I recently found myself troubleshooting another MongoDB startup issue due to potential corruption within a WiredTiger file. As I have previously covered this topic (see “Recovering a WiredTiger collection from a corrupt MongoDB installation”), I wanted to share the diagnostic and troubleshooting journey in case it helps anyone who experiences this issue in the future.To ensure I could troubleshoot this issue in isolation, I first collected a backup of the necessary files from the affected installation as follows:tar -czvf metadata.tar.gz --exclude=WiredTigerStat* WiredTiger* _mdb_catalog.wt sizeStorer.wtOnce I had this backup I extracted it to a new location, then using m to select the versions of MongoDB to use tried to startup a standalone instance to see if I could reproduce the issue:mkdir -p /tmp/reprocd /tmp/repro# move archive from earlier to the new directory firsttar xvf metadata.tar.gz# This is the version of MongoDB reported to be crashingm 3.4.18mongod --dbpath .Once the mongod started, we were able to see the failure and the process aborts (clipped log sample below).2020-01-23T03:58:19.828-0500 I CONTROL [initandlisten] db version v3.4.182020-01-23T03:58:19.828-0500 I CONTROL [initandlisten] git version: 4410706bef6463369ea2f42399e9843903b31923...2020-01-23T03:58:20.187-0500 I - [initandlisten] Invariant failure !_featureTracker src/mongo/db/storage/kv/kv_catalog.cpp 3052020-01-23T03:58:20.187-0500 I - [initandlisten]***aborting after invariant() failure2020-01-23T03:58:20.198-0500 F - [initandlisten] Got signal: 6 (Aborted).... mongod(_ZN5mongo15printStackTraceERSo+0x41) [0x55bb45c92111] mongod(+0x153F329) [0x55bb45c91329] mongod(+0x153F80D) [0x55bb45c9180d] libpthread.so.0(+0x12890) [0x7f5b7bee5890] libc.so.6(gsignal+0xC7) [0x7f5b7bb20e97] libc.so.6(abort+0x141) [0x7f5b7bb22801] mongod(_ZN5mongo17invariantOKFailedEPKcRKNS_6StatusES1_j+0x0) [0x55bb44f5b234] mongod(_ZN5mongo9KVCatalog4initEPNS_16OperationContextE+0x568) [0x55bb458db5e8] mongod(_ZN5mongo15KVStorageEngineC1EPNS_8KVEngineERKNS_22KVStorageEngineOptionsE+0x807) [0x55bb458e79f7] mongod(+0x124DFFA) [0x55bb4599fffa] mongod(_ZN5mongo20ServiceContextMongoD29initializeGlobalStorageEngineEv+0x697) [0x55bb45891627] mongod(+0x7F62AC) [0x55bb44f482ac] mongod(main+0x96B) [0x55bb44f66a6b] libc.so.6(__libc_start_main+0xE7) [0x7f5b7bb03b97] mongod(+0x86FFB1) [0x55bb44fc1fb1]----- END BACKTRACE -----Aborted (core dumped)The mongod is failing to startup successfully due to an invariant failure during KVCatalog::init. We are able to determine this as the mongod log above tells us: The MongoDB version in used (3.4.18) The path to the source file where the failure occurred (file: src/mongo/db/storage/kv/kv_catalog.cpp, line: 305)As MongoDB is open source, we can view the source for this release by going to https://github.com/mongodb/mongo/blob/r3.4.18/src/mongo/db/storage/kv/kv_catalog.cpp#L305, which will show us the following:if (FeatureTracker::isFeatureDocument(obj)) { // There should be at most one version document in the catalog. invariant(!_featureTracker); // Initialize the feature tracker and skip over the version document because it doesn't // correspond to a namespace entry. _featureTracker = FeatureTracker::get(opCtx, this, record-&gt;id); continue;}The comment preceding the invariant1 indicates that there’s only one feature document to be present in the catalog, but what’s the catalog?ls -l *catalog*-rw-r--r-- 1 alex 249856 Jan 23 03:58 _mdb_catalog.wtAs there’s only one file that contains the word “catalog” this is good a place as any to start. The _mdb_catalog is a WiredTiger file, so to interact with it directly (outside of MongoDB) we will need to use the WiredTiger command line utility, also know as wt.The documentation link for mongodb-3.4 points us to WiredTiger 2.9.2, so following the build and installation instructions we compile a wt binary with support for the snappy compressor. This is due to MongoDB’s WiredTiger storage engine using snappy as the default block compressor (see “Compression”).cd /tmp/reprogit clone git://github.com/wiredtiger/wiredtiger.gitcd wiredtigergit checkout 2.9.2sh autogen.sh# ensure you have the necessary development headers for the snappy compression# library before compiling./configure --enable-snappy &amp;&amp; makeOnce we’ve successfully build the wt utility with snappy compression we can dump our catalog to see if we can find a duplicate entry for the feature document.cd /tmp/repro# to shorten the amount of typing required, wrap the wt utility invocation in# a function we can call insteadWT() { /tmp/repro/wiredtiger/wt -v -C \"extensions=[\\\"/tmp/repro/wiredtiger/ext/compressors/snappy/.libs/libwiredtiger_snappy.so\\\"]\" $@; }# write the catalog dump out to a fileWT dump _mdb_catalog &gt; dump.datNOTE: If you receive the following error, just re-run the command.[1579773800:589375][9348:0x7fc9a8e17140], txn-recover: Recovery failed: WT_RUN_RECOVERY: recovery must be run to continuewt: WT_RUN_RECOVERY: recovery must be run to continueThis error is due to the presence of content in the journal/ that was created when we last ran the mongod.With the catalog dumped we can now search it for the feature document:grep isFeatureDoc dump.dat -B 1 -n935-\\c2\\e5936:C\\00\\00\\00\\08isFeatureDoc\\00\\01\\0ans\\00\\12nonRepairable\\00\\00\\00\\00\\00\\00\\00\\00\\00\\12repairable\\00\\01\\00\\00\\00\\00\\00\\00\\00\\00937-\\c2\\e6938:C\\00\\00\\00\\08isFeatureDoc\\00\\01\\0ans\\00\\12nonRepairable\\00\\00\\00\\00\\00\\00\\00\\00\\00\\12repairable\\00\\01\\00\\00\\00\\00\\00\\00\\00\\00INTERESTING! I’m not really sure how the catalog was able to get into a state where two feature documents exist, but since we have a dump of the catalog let’s try to remove one of those entries and then load the dump back into the catalog.As the results appear to be identical, we’ll just drop the first one and then try to load it back into the catalog.# remove lines 935-936 and overwrite the filesed -i -e '935,936d' dump.dat# drop the contents of the _mdb_catalog tableWT truncate _mdb_catalog# reload the table from the dump fileWT load -f dump.datIf the table loaded successfully the output of the command should be something like table:_mdb_catalog: 822.With a reloaded catalog, let’s try spinning up the mongod again:2020-01-23T05:24:54.911-0500 I CONTROL [initandlisten] db version v3.4.18...2020-01-23T05:24:56.247-0500 E STORAGE [initandlisten] no cursor for uri: table:SomeCollection/collection/34-13498437758539120652020-01-23T05:24:56.247-0500 F - [initandlisten] Invalid access at address: 0x582020-01-23T05:24:56.259-0500 F - [initandlisten] Got signal: 11 (Segmentation fault).SUCCESS! The mongod is still crashing as the backing files for the database don’t exist, but we should now be able to take our recovered files back to our node that was previously failing.From our recovered directory compress the following files:tar -czvf recovered.tar.gz --exclude=WiredTigerStat* WiredTiger* _mdb_catalog.wt sizeStorer.wtNote that if the mongod fails to start with the recovered files you may have to clear out the journal/ directory.Hopefully this helps someone someday ;)If you enjoyed this post and like solving these types of problems, MongoDB is hiring!1 An invariant is a condition to test, that on failure will log the test condition, source file and line of code. ↩" }, { "title": "Current Date Math in MongoDB Aggregations", "url": "/blog/2020/01/17/current-date-math-in-mongodb-aggregations/", "categories": "MongoDB, Queries & Indexing", "tags": "mongodb", "date": "2020-01-17 06:30:17 -0500", "snippet": "A challenge that I’ve had in the past while working with my data in MongoDB has been how to incorporatedate math into my aggregations.db.foo.insertMany([{ lastUpdated: new Date(new Date().setDate(n...", "content": "A challenge that I’ve had in the past while working with my data in MongoDB has been how to incorporatedate math into my aggregations.db.foo.insertMany([{ lastUpdated: new Date(new Date().setDate(new Date().getDate() - 1)) },{ lastUpdated: new Date(new Date().setDate(new Date().getDate() - 5)) },{ lastUpdated: new Date(new Date().setDate(new Date().getDate() - 9)) }]);db.foo.find();/*{ \"_id\" : ObjectId(\"5e219c6ecc99b35bb2975d9e\"), \"lastUpdated\" : ISODate(\"2020-01-16T11:37:18.522Z\") }{ \"_id\" : ObjectId(\"5e219c6ecc99b35bb2975d9f\"), \"lastUpdated\" : ISODate(\"2020-01-12T11:37:18.522Z\") }{ \"_id\" : ObjectId(\"5e219c6ecc99b35bb2975da0\"), \"lastUpdated\" : ISODate(\"2020-01-08T11:37:18.522Z\") }*/Given the 3 documents we’ve setup above, if I wanted to filter a pipeline to only $matchdocuments that are newer than 1 week old, I would have to resort to using Javascript:// compare lastUpdated to a new Javascript Date object set to// 7 days from the current datedb.foo.aggregate({ $match: { lastUpdated: { $gte: new Date(new Date().setDate(new Date().getDate() - 7)) } }});/*{ \"_id\" : ObjectId(\"5e219c6ecc99b35bb2975d9e\"), \"lastUpdated\" : ISODate(\"2020-01-16T11:37:18.522Z\") }{ \"_id\" : ObjectId(\"5e219c6ecc99b35bb2975d9f\"), \"lastUpdated\" : ISODate(\"2020-01-12T11:37:18.522Z\") }*/Now if your pipeline is running in a non-Javascript environment, the new Date() call within the pipelinewould likely throw an exception.If you’re working with MongoDB 4.2 or newer though, a new $$NOW aggregation variable is available that can be combined with existing pipeline operators to $subtract the number of milliseconds in the number of days to filter from the current date:// compare lastUpdated to the number of milliseconds in// 7 days subtracted from the currentdb.foo.aggregate({ $match: { $expr: { $let: { vars: { start: { $subtract: [\"$$NOW\", (7 * 86400000)] } }, in: { $gte: [\"$lastUpdated\", \"$$start\"] } } } }});/*{ \"_id\" : ObjectId(\"5e219c6ecc99b35bb2975d9e\"), \"lastUpdated\" : ISODate(\"2020-01-16T11:37:18.522Z\") }{ \"_id\" : ObjectId(\"5e219c6ecc99b35bb2975d9f\"), \"lastUpdated\" : ISODate(\"2020-01-12T11:37:18.522Z\") }*/I hope you find this as useful as I did. With each major release of MongoDB new features and functionalityare being introduced that reduce the “hacks” or “workarounds” we’ve had to do in the past.If you’re looking for more MongoDB tips and tricks, head on over to Asya’s Stupid Tricks With MongoDB.Let me know in the comments below if you have any questions, or if you found this useful." }, { "title": "Technical Services Engineering at MongoDB", "url": "/blog/2018/10/01/technical-services-engineering-at-mongodb/", "categories": "Personal", "tags": "mongodb, career", "date": "2018-10-01 15:39:28 -0400", "snippet": "The goal of this post is to provide a first hand account of what it means to be a Technical Services Engineer at MongoDB, as well as what the journey getting to this point has looked like for me.WH...", "content": "The goal of this post is to provide a first hand account of what it means to be a Technical Services Engineer at MongoDB, as well as what the journey getting to this point has looked like for me.WHO AM I?I have been working in Application Development and Software Engineering for nearly two decades. I started off writing desktop applications in QuickBASIC and Turbo Pascal, then eventually in VB6, VB.NET, C++ and C#. When it was time to shift focus to web development I started off with HTML/JS/CSS (as we all do :P), then in Flash/AS3, Flex, Python, Ruby/Rails and Node.js.I have been writing software since I was a kid, starting with some automation tools for my mom’s business. I then moved on to building tools to help me cheat at various games I was playing at the time, and eventually got more into emulator programming and reverse engineering. I guess you could say I’ve always loved solving problems programmatically, and especially enjoyed identifying opportunities for automation and custom tooling.This led me down an informal DevOps track, as I was finding there was a need for optimization in the infrastructure layers that my applications were deployed to. This led me deeper into Linux internals, system administration and network operations.While I was gaining these new skill-sets my primary focus was always on application development and delivery. Before coming to MongoDB I was working as a Development Lead / System Architect, but I found that my focus was always being drawn back to solving performance challenges at the infrastructure level.WHY MONGODB?I started working with MongoDB on a number of “hobby” projects around 2012. At the time I really only had experience with RDBMS’, but due to the unstructured nature of the data I was working with decided to give this new technology a whirl.I fell in love with the database almost immediately, and have since carried it forward to multiple new employers, as well as contract opportunities and consulting engagements.The low barrier to entry from a development bootstrapping perspective made it the ideal backend for proof-of-concept development through to production deployment.As a result of this increased activity with MongoDB, I found my self doing a lot more investigation into performance issues and internals (links are to blog posts of challenges I encountered and resolved).WHY TECHNICAL SERVICES?This was initially very challenging for me, as I had pre-conceived notions as to what “technical services” actually implied. The first thoughts that popped in my head were “technical support”, “client support”, “call center style support”, etc.While researching this position I came across a blog post from about six years ago by a MongoDB employee who blogged about his experience as a Support Engineer (in this two part series).I found his reasons for joining MongoDB (10gen at the time), description of what kinds of challenges the job poses on a daily basis and how there is a constant push for self improvement and continuing education to align with what I was looking for in a new opportunity.WHAT’S A TECHNICAL SERVICES ENGINEER ON PAPERTo answer this question, let’s start off by analyzing the job posting that kicked off this journey for me in the first place.So they’re looking for people that are able to solve problems and communicate clearly. This could be a call center gig after all … oh wait, experts in MongoDB related database servers, drivers, tools, services … hrm, maybe there’s a bit more to this.Architecture, performance, recovery, security, those are a lot more complex than what you would face in a traditional support role. What really sold me though was the contribute to internal projects statement, as this aligned perfectly with my desire for process improvement through custom tooling.By the time I got to this point in the job posting I was already sold. MongoDB is either trying to staff their first tier support with ridiculously over-qualified employees, or Technical Services really isn’t what I would have thought.I proceeded to fill out the application, attach my resume and cover letter and crossed my fingers.WHAT’S A TECHNICAL SERVICES ENGINEER IN PRACTICEAfter working with other TSEs for the past two months and having had an opportunity to handle some of my own cases I think I can shed a bit of light on what this role really entails.HOW IS IT A SUPPORT ROLE?A Technical Services Engineer interacts with MongoDB’s clients via a support queue. This allows incoming “cases” to be prioritized and categorized to allow engineers to quickly identify what form of subject matter expertise may be required (ex: Indexing, Replication, Sharding, Performance, Networking, etc).As a TSE you’re responsible for claiming cases from a queue and providing feedback in a timely fashion that is clear, concise and technically accurate.HOW IS IT AN ENGINEERING ROLE?Here’s the juicy part of this job. Although replying to client requests is the “deliverable” for a TSE, how you go about reproducing their issues requires a very deep understanding of MongoDB internals, software engineering, network engineering, infrastructure architecture and technical troubleshooting.Depending on the type of issue, a reproduction is likely in store. These involve recreating the environment (locally or in the cloud) to either benchmark or replicate the identified client challenge. There is a vast library of tools available to TSEs for these types of tasks, but on some occasions the right tool for the job may not exist.In these cases, you have an opportunity to write your own scripts or tools to parse logs, measure performance, record telemetry or verify a hypothesis. Although MongoDB doesn’t require TSEs to have any programming experience, for those like me that come from product engineering it’s refreshing to know there’s still an opportunity to scratch the development itch.With each case you learn more about the inner working of the database, the tools, the drivers and OS level performance.CONCLUSION?I’m leaving the closing section here as a question, as the TSE role continues to be redefined and refined as new MongoDB products come on board and new challenges present themselves.What will likely remain constant though is the need for new engineers to have the following characteristics: a passion for continuing technical education a willingness to step outside their comfort zone an interest in software engineering an interest in network operationsI encourage you to check out MongoDB’s available jobs if what I’ve described here interests you (I swear HR is not putting me up to this …) as we could use more engineers like you in our ranks :)Feel free to leave a comment below or shoot me an email at alex@alexbevi.com if you have any questions." }, { "title": "Hello MongoDB", "url": "/blog/2018/08/14/hello-mongodb/", "categories": "Personal", "tags": "mongodb, career", "date": "2018-08-14 15:31:04 -0400", "snippet": "As of August 13th, I am no longer a System Architect at DAC Group. I have a public post on LinkedIn that got some good traction, but to summarize it was time to move on.I’ve been a software enginee...", "content": "As of August 13th, I am no longer a System Architect at DAC Group. I have a public post on LinkedIn that got some good traction, but to summarize it was time to move on.I’ve been a software engineer in some capacity or another for nearly 20 years now. The position I’ve taken is as a Technical Services Engineer, which is more of a support role than an active development role.The decision to make this move wasn’t make lightly. I’ve been working hands on with code or overseeing a team of developers on a day to day basis for most of my professional career. As such, I was also involved with software engineering, and this was no different in my role as a System Architect.In that role, I was still committing code on a nearly daily basis. If not, I was performing code review, or working on a design for a new system or solution. I would consider this all to still be “hands on”, though I had found myself mired in DevOps work a lot more than I would have liked (there were not sufficient Linux Sysadmins available to assist with the type of server operations oversight that was required).The role at MongoDB isn’t a traditional “Tech Support” type of role, as it requires a strong knowledge of networking, databases, system design, programming and client services. I’ve been a fan of the MongoDB server for over 8 years now, and have brought it along with me to several new consulting opportunities as well as the full time jobs I’ve help. I believe very strongly in the quality of this product, as well as the peripheral products that they’ve developed.I think the time has come for a new adventure. This is the first step towards a new career journey with a new company, as opposed to an incremental move upwards within the same professional space." }, { "title": "Troubleshooting a MongoDB Performance Issue", "url": "/blog/2018/05/28/troubleshooting-a-mongodb-performance-issue/", "categories": "MongoDB", "tags": "mongodb, performance, troubleshooting", "date": "2018-05-28 09:14:03 -0400", "snippet": "UPDATE (2018-06-28): I actually sent a link to this article to the author of the previous blog post and in her reply she indicates that the improvements to cache management and checkpoint areas wer...", "content": "UPDATE (2018-06-28): I actually sent a link to this article to the author of the previous blog post and in her reply she indicates that the improvements to cache management and checkpoint areas were more likely to have improved my situation. Just wanted to call out how approachable the MongoDB team is even with these one-off type issues :). Thanks Sue!UPDATE (2018-06-21): As we were running MongoDB 3.0.15 while all these issues were going on it’s entirely possible that the optimizations made to the write-ahead log of WiredTiger may have also contributed to this improvement in performance :)The following is an edited excerpt from an email I sent out internally about an intermittent performance issue we’ve been experiencing for several years now. The daily processing challenges we’ve been experiencing revolved around running server-side javascript in order to produce daily reports. As our data ingestion rates rose and our data processing needs climbed, our server performance continued to degrade. This would occur regardless of the size of the VMs we would spin up.PostmortemOur MongoDB cluster is configured with three (3) servers: 1x primary (write-enabled) and 2x secondaries (read-only). These are running on Azure DS14v2 VMs with 8TB of storage (8x 1TB striped via LVM as these were the largest premium SSD-based data disks available at the time).Aside from the servers being scaled up periodically, this configuration has been constant since the inception of the product.The only major upgrade came in the form of a migration from 2.6 to 3.0 in 2015. At the time this was a major shift as it required rewriting a number of the underlying system scripts as well as introducing LRS-based storage to try and squeeze some additional performance out of the disks. Why optimize for IOPS? Because the reporting platform was designed to copy a lot of data back and forth in order to generate reports segmented by dimension (“Group”, “Company”, “Country”, “State”, “City”).This chart (48 hours sampled from 1 week ago) shows Cache Usage spiking and Replication Lag spiking. The cache spikes occur as new writes trigger index activity, which invalidates (dirties) cached memory and causes cache eviction.This slows down the speed at which the secondaries can request data from the primary, which spikes the lag. When the secondaries request more data, it would lock up the primary, which in turn affected the primary server’s ability to ingest new content and write it to disk. The read/write buffers back up and new write requests are throttled.Note — As of MongoDB 4.0, non-blocking secondary reads have been added to address these types of latency issues.This type of cascading failure was almost exclusively seen when a large batch process was being run in the morning directly on the primary mongod instance in the mornings..This chart (48 hours sampled from 2 weeks ago) shows similar behaviour. The vertical lines show points at which we were forced to restart instances or cycle the primary server in order to recover resources.You’ll notice that cache usage hits a certain point on the primary (left) server after which we have to kill the instance. The replication lag on the secondaries is also inconsistent, which would lead us to believe that the consumption rates from the primary are being affected by either network performance or disk performance.In the absence of dedicated DevOps, DBAs or Infrastructure Engineers, the development teams have spent a significant amount of time learning to tune and troubleshoot this installation. Due to lack of specialization though occasionally issues may be misdiagnosed.We completed a significant upgrade on Tuesday that brings our cluster up to mongodb-server 3.4.15 (from 3.0.15). The 3.0 series was first introduced in March 2015, with an end of life of February 2018. As no further security updates are being released, we’ve been coordinating tests with the product development teams for the past 12 months in order to prepare for a major upgrade.This involved the deprecation of client-side javascript calls, as well as rewriting several map/reduce operations as aggregation pipelines to ensure when the transition happened there was no sudden outage.Now that we’ve been running 3.4 in production for a few days I checked the same 48 hour sample and found something interesting …The cache usage has remained steady since we turned the instances on. The replication lag also hasn’t gone much higher than a minute in the past few days (this could creep up to over an hour in the past!).These samples include report generation for all products as well, so they represent the same load. We’ll have to continue to monitor this, but the initial results seem to show that a lot of the pain we’ve been suffering through may have stemmed from outdated software.The way the review report is generated is still extremely inefficient, but if we continue seeing results like this for the foreseeable future then the urgency of redesigning that product drops and can be properly managed.Here are some lessons we learned as a result of this investigation:Measure Everything — Without proper telemetry in place, not only is it difficult to identify negative trends, but it’s almost impossible to showcase the success of any change or action.Understand Your Tech — Whether you’re using hosted, provisioned, on-premise, containerized, PAAS or some other solution as part of the application architecture, make sure you really understand how to use it, and how to support it. When MongoDB was introduced to the project it was done so to fill a specific need. Once that need was filled, resourcing discussions surrounding maintainability and support should likely have been prioritized.Document Everything — As discoveries are made, write them down and share them. Knowledge sharing is even more important when you’re dealing with issues that go beyond the standard requirements of “application development”.Ask For Help — When it becomes necessary to step outside your comfort zone to solve a problem, a fresh perspective can be welcome.Hopefully this journey benefits someone else in a similar situation." }, { "title": "Setting up domain forwarding in hover.com", "url": "/blog/2018/04/25/setting-up-domain-forwarding-in-hover-dot-com/", "categories": "Other, Configuration", "tags": "hover, dns", "date": "2018-04-25 15:27:08 -0400", "snippet": "I’ve known for a long time that when you navigate to my domain directly at alexbevi.com that you would be redirected to a Hover placeholder page.I’ve meant to add a domain redirect for a long time ...", "content": "I’ve known for a long time that when you navigate to my domain directly at alexbevi.com that you would be redirected to a Hover placeholder page.I’ve meant to add a domain redirect for a long time but just never got around to it … until now.If you log into your Hover control console at https://www.hover.com/control_panel/domain/&lt;your domain&gt;, you can just add the forward from the Mangage Forwards section. Click Create a Forward Select from the dropdown list Enter the full url (http://…) you would like requests to your domain to go to Click Save ForwardAfter about 15 minutes this will be active and all requests to your domain will redirect to the url you’ve selected." }, { "title": "Redmine Plugin Extension and Development Still In Demand", "url": "/blog/2017/10/03/redmine-plugin-extension-and-development-still-in-demand/", "categories": "Writing", "tags": "redmine, book", "date": "2017-10-03 20:38:12 -0400", "snippet": "It’s been a while since I last wrote about Redmine Plugin Extension and Development so I thought I’d give a quick update.I have been sharing sales numbers whenever possible as a way of (hopefully) ...", "content": "It’s been a while since I last wrote about Redmine Plugin Extension and Development so I thought I’d give a quick update.I have been sharing sales numbers whenever possible as a way of (hopefully) encouraging other authors to see that there is some money out there, even for obscure niche topics.   Ebook Print Q2/2017 17 12 Q1/2017 16 8 This isn’t a super lucrative endeavour, but considering I published this book three years ago and it’s still in demand, I can’t complain.If I had more time on my hands I might look into writing about something a bit more “in demand”, like Docker or .NET Core (random topics I’m currently interested in :P)." }, { "title": "Turning an old Android Phone into a Plex Media Server + PVR", "url": "/blog/2017/09/22/turning-an-old-android-phone-into-a-plex-media-server/", "categories": "Plex", "tags": "android, linux, plex", "date": "2017-09-22 21:55:53 -0400", "snippet": "This is possibly a solution to a problem no one other than me has, but once in a while I like to challenge myself to see if something ridiculous is possible.This time around I wanted to see if I co...", "content": "This is possibly a solution to a problem no one other than me has, but once in a while I like to challenge myself to see if something ridiculous is possible.This time around I wanted to see if I could take my old Moto X (2014) and use it as a Plex Media Server.I didn’t want to just see if I could install Plex though; I wanted to see if it would be possible to actually run a PMS instance along with Sonarr to download content automatically for shows I’m interested in.This introduced a couple of challenges, as Sonarr would need to be run using Mono (as it’s a .NET project), I’d need a Bittorrent client to actually download the content, and I’d likely need to be running a Jackett service to allow Sonarr to process request through sites like The Pirate Bay.Finally, as the Moto X is an ARM device, all of our software will need to be capable of running on an ARM platform.Note that this process (with some minor changes) can be used to get a Plex + Sonarr + Jackett + Filebot + Transmission setup done on any Linux distribution. I just thought it would be fun to do it using a phone.Setup the PhoneThis was the easiest part, as it simply required rooting the device so we could install SuperSU.With a factory reset instance and root access, the next step was to install BusyBox and Linux Deploy.Once both are installed from the Play Store, run Busy Box and select Install. You should only have to run this once, as it just installs a handful of Unix tools that Linux Deploy will need for the next step.Linux Deploy will require a bit more configuration as you need to tweak it a bit to suit your needs.First, select the repository you’d like. For my phone I went with ubuntu-lxde_arm, as this would setup an Ubuntu 16.04 LXDE distro along with VNC and SSH. Those will come into play when we want to start setting up Sonarr and Plex.Under the properties for the repository (the settings icon in the lower right next to the Stop button) I set the Installation type to Directory. This setting allows use to have access to all available storage on our device. The first time I tried this I used the default of File, which only gave me 2GB of storage to play with. Once the base installation was done, there wasn’t enough space left for me to do much. I tried tweaking the Image Size (MB) setting and starting over but it didn’t make a difference. Your milage may vary, so feel free to try other configurations.Next, from the top-right menu you need to Install the selected repository. This will do the basic installation of the Linux distribution you selected and pre-configure it for SSH and VNC access.Once installed, click on the Start button to boot up the image. After a lot of terminal scrolling, you’ll see something along the lines of &lt;&lt;&lt; start on the last line and the text will stop. This is our signal to start setting up our software.We’ve now got Linux running alongside Android on our phone. Let’s SSH into it and continue. The credentials are available under the repository properties. You can change these prior to installation or just use the defaults that are generated.Setting Up PlexThere isn’t an official ARM distribution of Plex, but thanks to some great work by Jan Friedrich, we can easily patch the Plex NAS distribution for ARM or ARM64.sudo apt-get install -y fakeroot gitgit clone https://github.com/uglymagoo/plexmediaserver-installercd plexmediaserver-installermkdir ../plex-installer; git archive master | tar -x -C ../plex-installer/cd ..; fakeroot dpkg-deb --build plex-installer ./This will create a Debian package that can be installed directly. For me, it produced plexmediaserver-installer_1.9.1.4272-b207937f1-2_armhf.deb, so installation was done using:sudo dpkg -i plexmediaserver-installer_1.9.1.4272-b207937f1-2_armhf.debThen, to start up your Plex Media Server:start_pmsYou can verify it by going to http://phone-ip:32400/web/index.html.I’m not going to set anything up here yet as we first need our media source available, which we’ll be doing next.Setting Up Sonarr and JackettSonarr can be installed from a repository list, so we’ll just set that up on our phone. Sonarr will also require Mono to be installed, which luckily for us is also available from Ubuntu compiled for armhf.sudo apt-get install -y libmono-cil-dev mono-devel libcurl4-openssl-devsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys FDA5DFFCsudo echo \"deb http://apt.sonarr.tv/ master main\" | sudo tee /etc/apt/sources.list.d/sonarr.listsudo apt-get updatesudo apt-get install -y nzbdroneBefore we configure Sonarr, we’ll setup Jackett. Jackett can be used to connect a torrent search site as a Torznab feed to Sonarr.For the purposes of this test I just setup The Pirate Bay, but Jackett supports a number of sites that may better suit your needs ;)To start Jackett, we’ll need to run it using Mono:mono --debug ~/Jackett/JackettConsole.exeJackett will be available at http://phone-ip:9117. Once you’ve configured a search site in Jackett, you can start Sonarr and begin configuration.mono --debug ~/Jackett/JackettConsole.exeSonarr will start up at http://phone-ip:8989. First we’ll setup an Indexer (from Settings -&gt; Indexers). This is where we’ll plug in the details we configured in Jackett. You’ll need exact url from Jackett, as well as the API key. This information is all easy to find from the Jackett interface.Next, setup a TV show from the Series section. Once added we’ll need to configure way to download content automatically when Sonarr detects a new episode. This is done under Settings -&gt; Download Client.Create a new Transmission client, give it a name and leave the default settings.The only issue now though is that we don’t have Transmission setup …Setting Up Transmission and FilebotBoth of these are going to be a bit challenging, as Filebot (which we’ll be using to move and organize our downloads) needs Java, and Transmission requires a display server (can’t be run from SSH).First, let’s install whatever we can from our existing SSH session:sudo echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main\" | sudo tee -a /etc/apt/sources.listsudo echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main\" | sudo tee -a /etc/apt/sources.listsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886sudo apt-get updatesudo apt-get install -y curl oracle-java8-installer transmissioncurl -L -O https://downloads.sourceforge.net/project/filebot/filebot/FileBot_4.7.9/filebot_4.7.9_armhf.debsudo dpkg -i filebot_4.7.9_armhf.debNOTE: if you get an error installing the key via apt-key, try the following:sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886In order to use Filebot, we’ll need a script we can call from Transmission. The script I’m working with is as follows:#!/bin/bashfilebot -non-strict -script fn:amc --output /home/android/Media --log-file /home/android/amc.log --action move --conflict auto --def music=n --def subtitles=n --def artwork=y --def backdrops=n --def clean=y \"seriesFormat= /home/android/Media/TV/{n}/{fn}\" \"ut_dir=$TR_TORRENT_DIR/$TR_TORRENT_NAME\" \"ut_kind=multi\" \"ut_title=$TR_TORRENT_NAME\"This script assumes that (a) your home directory is /home/android, and (b) you will be storing your media for Plex at /home/android/Media/TV. Feel free to modify the values to fit your particular installation.Let’s save this script as transmission-postprocess and make it executable using chmod +x transmission-postprocess.Next, we’ll need to actually VNC into our Linux distro. This is due to Transmission being a GTK application so we’ll need to interact with it in a desktop environment.From the desktop, launch Transmission and go to Edit -&gt; Preferences. We want to do two things now: Setup Remote Access Under Downloading setup the script we created above to be called when a torrent completesPutting It All Togetheropen in new tab to see full sizeGoing back to our Plex Media Server url, we can now setup a library that points to our downloaded media directory.When Sonarr detects a new episode, it will send the torrent link it finds from our TPB indexer to Transmission, and on completion Filebot will analyze the file and move it to the appropriate series/season folder for the show that was downloaded.Enjoy!" }, { "title": "Just Finished - Warcraft Adventures", "url": "/blog/2016/11/29/just-finished-warcraft-adventures/", "categories": "Gaming, Just Finished", "tags": "adventure, pc", "date": "2016-11-29 03:36:22 -0500", "snippet": "Although I’m a huge fan of the point-and-click adventure genre, I’ve been primarily focusing on covering 16-bit RPGs in my spare time. I’ve still got a sizeable backlog to wade through, but when th...", "content": "Although I’m a huge fan of the point-and-click adventure genre, I’ve been primarily focusing on covering 16-bit RPGs in my spare time. I’ve still got a sizeable backlog to wade through, but when the news dropped that Warcraft Adventures: Lord of the Clans had been leaked, I couldn’t resist.Although no one really got a taste of this game until 2010 when MAN-biker posted some content to Youtube, I’d been inquiring with Blizzard as early as 2008. I still have a copy of the email, so I’ve trimmed it down a bit and shared it below.From: alexbevi@gmail.com To: web.support@blizzard.comSent: 12/19/2008 11:58:55 AMSubject: [en]Warcraft -- OtherThis isn&#39;t really a support question, and I have no idea how to route thisproperly, but the question I want to ask is as follows:Over the years, I&#39;m sure there have been numerous attempts by fans to get Blizzard to revive the Warcraft Adventures project. The statement made when it was cancelled was that it didn&#39;t meet the quality requirements that Blizzard was trying to keep for it&#39;s users; and over the years, those decisions have resulted in excellent titles.Regarding Warcraft Adventures though, it&#39;s been 10 years since this project was cancelled. I don&#39;t have any inside information into the level of completion the project was at, but if it was &#39;near&#39; completion, couldn&#39;t this be released to the open-source community to be added to a project such as ScummVM? The benefit here would be positive PR for Blizzard, as well as renewed interest in their catalog of games to a number of new users.I don&#39;t represent the ScummVM team, but I&#39;d be interested to know what you guys think. -Alex===============================================================================From: &lt;petern.support@blizzard.com&gt;To: &lt;alexbevi@gmail.com&gt;Subject: Re: [en]Warcraft -- OtherDate: Mon, 22 Dec 2008 18:49:29 -0800Greetings Alex,Thank you for emailing the Blizzard technical support department in regards to your question. I know the same question has been asked by others in the past and unfortunately there just is not information in regards to the game that I have available to give besides what is already available on the internet. Unfortunately I have no way to request any further information about the game or items such as art resources or code from the game. The best place I can suggest to post such a request is on our suggestions forum at http://forums.battle.net/board.html?forumId=12016&amp;sid=3000. This is by employees that have more information, and more access to information than we do here in technical support, if there is a large enough interest in anything then those ideas are passed along to those that may be able to do more. I cant guarantee anything unfortunately but this is the best location I can suggest to try for such a request.Regards,Peter N.Technical supportBlizzard Entertainmenthttp://www.blizzard.com/supportIf you reply, please include all previous text and files related to this e-mail. Please note the Tech support email system does not support read receipts.My hope was to get access to the source code for the ScummVM team to be able to incorporate as a custom engine.Unfortunately (though not unsurprisingly), Blizzard wouldn’t release the code.Now, once word got out that the complete game had been released (not legally I know …), I had to grab it and give it a shot.Being a game from the late 90’s, I didn’t expect it to just work. My primary machines run Linux, so I first tried to run this through wine, which didn’t end up working reliably.I then built a Windows XP VM using VirtualBox. This managed to runthe game with no issues.StoryAs per the Gamepedia article:Basically, after the Dark Portal was destroyed and the rift between the worlds was destroyed, you had a large group of orcs that were trapped on Azeroth. And over the course of the next few years, the humans, being merciful in their ways, instead of hunting down and eradicating these orcs, granted them land areas where they could live as long as they lived within the confines of societal expectations. Basically, they were put on these reservations or camps. And because they were made to live in a way that was very contrary to their basic nature, a lot of the spirit and fire that defines them as a culture was drained out of them. And so what you found yourself with was an orc society in Azeroth of forced passivity, not forced through violence but forced through situation.Although down on their luck, the orcs in Warcraft Adventures were supposed to experience a rebirth, thanks to the leadership of Thrall.Our storyline followed an orc baby that was taken from a battle scene where his parents were slain and raised by a human lieutenant, Blackmoore, with the intention of raising him with human ideals but being able to use him to control the orcs. Definitely someone who does not fit into the general stereotype of noble humans. He was a self-serving, dark human character who wanted to raise this orc, Thrall, our central character in the game, and use him to control and command the orcs and then raise them as his own private army. Thrall, though he’s raised in captivity by humans to serve their will, still has some fire within him that he can’t deny, so he rebels against his human owners. He escapes the compound where he’s being held, and then over the course of the game, what we do is follow his adventures. As he discovers more about himself and the orcs and what it means to be an orc, so does the player. As you go through the game, you meet some familiar faces from the games, some in retirement, some trying to lead an underground resistance, and you learn of what happened to the Frost Wolf Clan, which was the clan that Thrall’s father Durotan was a part of. You learn that Durotan, Blackhand and Doomhammer were three blood brothers, and that his clan Frost Wolf was sent into the Dwarf Highlands in the mountains. They were exiled there by a plotting Ner’zhul, when he was pulling the strings in the background behind Doom Hammer and Black Hand, because he knew that Durotan was a threat.GameplayWhen I first started playing WCA, it was a nice trip down memory lane. The gameplay mechanics really seemed to borrow heavily from Full Throttle, which was one of my favourite point-and-click adventures in the ’90s.Right-clicking brings up a graphical command menu that lets you talk, look or use.You can interact with the environment based on designated hotspots (which are identified when hovered by showing a label).Thrall will usually try to respond with a funny comment whenever possible, which makes it more compelling to click around and see what he has to say about his surroundings.PuzzlesAs with most adventure games of this era, the puzzles are predominantly fetch-quests and inventory manipulation quests. Again, if you grew up with these games this type of mechanic is old hat, but if you’re new to the genre, this can seem a bit tedious.I found that the puzzles were a bit on the easy side (until the last 10 minutes of the game). This could just be because I’m used to these sorts of games, but until I need to dig around in the dragon’s stomach for the pig’s jetpack, everything was straightforward and I didn’t feel the need to look to Google for the answer.OverallAs a throwback to ’90s point-and-click adventures, I’d say WCA is worth playing. If you enjoyed the genre, this is a no brainer, and if you’ve never played this type of game, this is a pretty easy entry.The version of the game that was leaked is pretty close to being completed. I didn’t notice any issues or major omissions.The quality of the FMVs are pretty low compared to other games from the late ’90s. The pacing of the game isn’t too slow and the story is interesting enough to make you want to see it through to the end.Playing Warcraft Adventures actually made me want to revisit some other adventure games. I get the urge to play through Day of the Tentacle every 4-5 years or so, and I think it’s been almost that long …" }, { "title": "Summer RPG Update 2016", "url": "/blog/2016/09/05/summer-update-2016/", "categories": "Writing", "tags": "jrpg, rpg, snes, gba", "date": "2016-09-05 14:08:29 -0400", "snippet": "I don’t really have much progress to report for the last month, so I thought I’d throw out a few of the games I’ve been working through to see if I can generate any interest in the next article ;)F...", "content": "I don’t really have much progress to report for the last month, so I thought I’d throw out a few of the games I’ve been working through to see if I can generate any interest in the next article ;)First off, I’ve been playing through Golden Sun for the GBA.I really like the psyenergy system and how you use it for puzzle solving. It makes this game a bit more of an ARPG along the same lines as Lufia 2.I’ve made it as far as Kraken, but I’m finding beating him is proving to be more difficult that I’d expected. Probably going to have to back out and grind for a while, which I don’t have a lot of time for …Next, I’m pretty sure I’ve given up on the 7th Saga. I’m still at Telaine with a party at level 17, but I’m pretty sure that to progress, there is grinding in my future.Similar to the situation I’m having above with Golden Sun, i just need to set many hours aside to level up in order to proceed, but with the amount of time I’ve got these days to devote to these games, that may never happen.Finally, I’ve decided to bite the bullet and dive into Super Mario RPG. This, along with Final Fantasy Tactics is one of those games that I’ve heard nothing but good things about for the last 20 years, but have never bothered to investigate myself.I’m currently at level 10 with 3 star pieces recovered and have just rescued Princess Toadstool and had her join the party.I’m really enjoying the story and gameplay, but since this was developed by Square, I’m not surprised that this is right up my alley :PI’m most likely going to be able to finish this game off, and then circle back around to Golden Sun, as I really want to beat that game.Now, assuming I can make some progress on those two games, I’d like to start getting some feedback on where to take this series next.There are a number of games that I’ve finished previously that I didn’t write about. Some of the more notable ones would be: Mother 3 Final Fantasy VIII Final Fantasy IX Chrono TriggerThen there’s the list of games that I really want to tackle, but since they all require a sizable time investment I’m not sure which to hit up: Xenogears Breath of Fire 3 Shin Megami Tensei: Persona 3 - I’d likely play the PSP release Danganronmpa - I started this a while back but never finished it Shin Megami Tensei 2 - There’s a great fan translation of the Super Famicom release Final Fantasy IV: After Years Vagrant StoryIf you’ve got any insight into which I should tackle next, feel free to leave me a comment below ;)" }, { "title": "Just Finished - Dragon Quest I", "url": "/blog/2016/07/27/just-finished-dragon-quest-i/", "categories": "Gaming, Just Finished", "tags": "rpg, jrpg, snes", "date": "2016-07-27 22:26:01 -0400", "snippet": "I actually finished this game around the end of June, but haven’t really had a chance to write about it until now. I’m currently sitting out by the lake at the cottage and figured it was about time...", "content": "I actually finished this game around the end of June, but haven’t really had a chance to write about it until now. I’m currently sitting out by the lake at the cottage and figured it was about time :PThe last time I played through Dragon Quest was likely in the late 80’s. I’m pretty sure I either heard about it, or got a copy of it through Nintendo Power, and like most kids in North America at the time, this would have been my first introduction to what would become known as JRPGs.I decided to go with the SNES re-release of this title for my playthrough as I wanted some updated graphics and music. Although the SNES version was never officially localized for North America, there is an excellent fan translation available.It threw me off a bit when they refer to the legendary hero as Roto (as opposed to Erdrick), but I’m assuming this is a better translation than what we got in the 80’s so that’s probably what the name should have been in the first place.Dragon Quest was essentially the first JRPG. As a result, there are a lot of concepts introduced here that would be adapted and refined by other titles and series over the years. This means that some parts of this game feel a bit rough or unbalanced.I originally played the NES version of this title, and have fond memories of just how brutally hard it was. This game introduced me to what I would come to know as “grinding”, as you couldn’t progress through the game unless your character was sufficiently leveled up in order to tackle the monsters in the areas you were exploring.This meant walking back and forth and fighting random monsters.Enemy encounter rates are high. Very high. I think the SNES version actually optimized this a bit, but the rates are still high. This is useful for grinding, but gets tedious when you want to explore, or really need to get back to a town to heal.The story is pretty simple.You’re the descendant of the legendary hero, and have been tasked with rescuing the princess and defeating the Dragon Lord.To defeat the Dragon Lord, you need to get three pieces of equipment of the legendary hero which are scattered across the world.Beat the dragon. Save the princess. Beat the Dragon Lord. Done.Gameplay is pretty straightforward. You start off in the castle, where the king explains your quest. You can talk to people in the castle, or leave and move on to the nearest town.Here you’ll get a bit more info, or can buy supplies.I think it’s kind of cool that the first time you leave the castle you can see the Dragon Lord’s castle on the world map. This gives you your target right away and you know what you’re working towards.You interact with NPCs and the world via a command menu. One of the nice additions to the SNES version is that you no longer have to use a STAIRS command to go up and down stairs; just walk over them.As you roam around the overworld and dungeouns, you’ll get into random encounters. You interact with these using a command menu as well, where you can select to either attack, use magic, use an item, or run.Dragon Quest is a pretty short game. Being one of the first of this genre it introduced a lot of gameplay elements that would shape the genre, but when you look at it as a standalone title, there’s not all that much there.This isn’t meant to be a knock at the game. I had a great time playing through it, but that playthrough was only a few hours.I used an emulator to do this, so most of my level grinding was done in fast-forward, so it felt even faster to get through this title.If you’re playing the “classics”, I’d definitely recommend this title. Playing these early games gives you more of an appreciation for the later RPGs, as well as giving you a feel for how it all started.Have you had a chance to play this title? How do you think it holds up nowadays, especially with the release of the mobile ports? Have any DQ memories you want to share? Let me know in the comments." }, { "title": "Just Gave Up On - Shadowrun (Genesis)", "url": "/blog/2016/07/26/just-finished-shadowrun-genesis/", "categories": "Gaming, Just Gave Up On", "tags": "rpg, genesis", "date": "2016-07-26 05:25:39 -0400", "snippet": " UPDATE: 2016-09-05 - It was pointed out on the Reddit thread and in the comments below that I might have used a cheat which prevented finishing the game. I didn’t think I’d used one, but I think ...", "content": " UPDATE: 2016-09-05 - It was pointed out on the Reddit thread and in the comments below that I might have used a cheat which prevented finishing the game. I didn’t think I’d used one, but I think while doing research for the article I may have been testing it out 😢 Note that you don’t really need to cheat in this game to get more Nuyen; just grind 😉 Thanks to those who responded. It’s worth noting that if you’re going to play this game, avoid the cheat menu as it will bite you in the ass.As I work my way through the 8-bit and 16-bit games I grew up with, there are (and will continue to be) those that I just can’t get through. Shadowrun for the Sega Genesis turned out to be one of those titles.I’ve made it all the way to the final boss, and though he doesn’t beat me, I empty all my clips (and my runner’s clips) into him and just can’t seem to kill him and trigger the endgame sequence.This is extremely frustrating as I’ve effectively finished this game, but if I can’t beat the last boss I can’t in good conscience call this a “Just Finished” article.Regardless, I’ve gone through enough of this game to be able to write about it, and based on my experience, recommend it to other players looking for some good retro cyberpunk action-RPG gaming.This iteration of Shadowrun doesn’t resemble the Super Nintendo’s version of this title at all.First off, you begin by selecting the type of player you want to run the game as: Samurai, Decker or Street Shaman. Each of these classes will give you different starting abilities and stats.I chose to run as a Decker, as I wanted to get an idea as to how the matrix sequences differed between the games (plus I’m a programmer and felt drawn to this class :P).The story starts off with you at a hotel trying to track down some information about what happened to your brother. You interact with characters in this game through conversation trees (select A, B, C) in order to advance the story or get clues.A good chunk of the game is presented through these conversation views.Once you leave the hotel, you start on your adventure into the world of Shadowrun.Your character can walk around the initial city and go in and out of various buildings in order to trigger additional conversations with NPCs. It’s a good idea to get a lay of the land as you’ll be visiting each of these building repeatedly once you start shadowrunning, so it’s worth taking the time to explore.Some buildings will warn you that they contain ghouls. These buildings are where you can go to do some level grinding, or if you’re on a run that has you clearing out ghouls, earn some money.To level grind, you’ll just be earning karma points which can be applied to the various stats your character has. These stats affect your weapons skills, magic skills, tech/computer skills or your aptitude with various weapon classes.Although I started out as a Decker, I found myself maxing out my weapon skills early on to make the game a lot easier to progress through. It turns out there really isn’t any demand for low level Deckers, so I didn’t really have an opportunity to do any Matrix runs until much later in the game.On the subject of shadowruns, the way you earn money (nuyen) in this game is by taking on various jobs (runs) from Mr. Johnson’s. There are one or more Mr. Johnson’s in each city you visit and they offer you work. Initially the types of work are either “escort to \", \"take package to \" or \"clear out ghouls from abandoned building\".I found that the easiest runs to make money at early on where the ghoul runs. You basically just go into the building, find some ghouls and start running in circles. They’ll just follow you so you can pick them off one at a time.Although this became tedious pretty quickly, you get money and karma and can level up your weapon stats in order to make repeating this easier.The escort runs are easy, and if you took the time to get an idea where each target is, it’s even easier to do. It just takes time and the payout isn’t that great.Eventually you’ll earn enough money to buy some info about where to go next and you have the opportunity to travel to a new city.There are a handful of cities you can visit in this game, and each one offers it’s own set of challenges, as well as opportunities for more advanced runs.You’ll also meet other shadowrunners in bars and clubs throughout the game. These runners will give you more information about shadowrunning, the story, as well as background about the Shadowrun world.These characters can also be hired to assist you on your runs. Each one has two rates; a single run rate or a lifetime rate.I found I didn’t really hire anyone until I hit the endgame as I didn’t really need the help. If you’re playing through the game as a shaman or samurai and don’t bother upgrading your computer skills, it may be easier to hire a good decker than to upgrade your own stats and get a cyberdeck.You’ll meet new Mr. Johnson’s who offer more difficult missions that involve traveling between the various cities in order to do more difficult quests such as infiltrating corporations to either steal secrets or extract employees, or running the matrix.Both of these advanced run types offer their own challenges and require abilities to be leveled up in order to proceed.When infiltrating corporations, you’ll need to be able to have electronics skills in order to be able to break maglocks, and you’ll want your weapon skills upgraded so as to be able to shoot guards without attracting more.The infiltration jobs have you going through multiple floors of these buildings, with each floor having guards to deal with, security cameras to avoid and wall safes to plunder.It helps to have computer skills when doing these runs as you can hack the computers to disable cameras, turn off alarms and open doors.This takes us to decking and matrix running.Unlike the SNES version of this game, the Genesis version actually has a bit more depth to the matrix.You’ll need to have computer skills first, then also have computer software for fighting with subsystems and identifying and avoiding various threats.The fighting itself is pretty repetitive, but the concept is fun.There are various types of components within a matrix system. You have to hack each of these as you move deeper into the system. The end goal is usually to hit a data store and download or delete a file.One way to easily earn money is to hack into a system, download the maximum number of data files then try to sell them to a contact in [city]. Near the end of the game i was able to get upwards of 10K for some files, which made upgrading my equipment a lot easier to do ;)Although I’ve been a huge fan of the SNES version of this game since I was a kid, I think I may have enjoyed the Genesis incarnation more. The music wasn’t nearly as good, but the story was well laid out, there were a lot of options on how to progress and it didn’t feel nearly as linear.The addition of the classes gave you a sense of depth and replay-ability, though chances are you could just max out all stats for any player type and have same experience no matter how you started the game.I also really enjoyed the shadowrunning aspect of this game. In the SNES version you could hire runners to help you get through the game, but you didn’t actually participate in shadowruns for profit.If you haven’t given this game a shot, I would highly recommend it. It turned out to be a lot of fun, and an excellent addition to the limited field of cyberpunk games out there.If you have any recommendations for other games in this genre I should check out, or if you want to share your opinion on this or the SNES title, please feel free to leave me a comment.Gallery" }, { "title": "Extracting Best ROM from GoodTools Generated ROM Sets", "url": "/blog/2016/07/25/extracting-best-rom-from-goodtools-generated-rom-sets/", "categories": "Scripting", "tags": "linux, roms", "date": "2016-07-25 15:17:38 -0400", "snippet": "As a kid of the 80’s, I have fond memories of all the old 8-bit and 16-bit consoles that I grew up with.Although it’s easy enough to find ROMs, I tend to find myself going for the GoodTools generat...", "content": "As a kid of the 80’s, I have fond memories of all the old 8-bit and 16-bit consoles that I grew up with.Although it’s easy enough to find ROMs, I tend to find myself going for the GoodTools generated sets more often than not as they’re considered “complete”.This is kind of ridiculous as I don’t speak Japanese, which constitutes the vast majority of the contents of these sets.Even though most emulators support compressed ROM sets, I’d prefer to just have the English ROMs available on their own in one place.As a programmer, I thought “How can I do this in Linux?”, but more specifically, “how do I do this from the command line directly?”.# extract best rom to directory# best contains !7z e \"*.7z\" -o../../ *[!]*.* -r# purge all non US/Europeanfind . -type f ! -name '*(U)*' ! -name '*(E)*' -delete# purge duplicates where a (U) exists alongiside an (E)for f in *\"(E)\"*; do us=`echo $f | sed -r 's/\\(E\\)+/\\(U\\)/g'`; if [ -e \"$us\" ]; then echo \"FOUND $us - removing $f\"; rm \"$f\"; fi; doneIf you find yourself with compressed ROM sets and you want to just grab the English ones, this might just come in handy ;)" }, { "title": "Redmine Knowledgebase 3.2.0 Released", "url": "/blog/2016/06/22/redmine-knowledgebase-3-dot-2-released/", "categories": "Redmine", "tags": "redmine", "date": "2016-06-22 21:33:34 -0400", "snippet": "I haven’t been very actively involved with this plugin or the Redmine community as a whole lately, but it would seem there is a very active user-base still logging bugs and enhancing this project.Y...", "content": "I haven’t been very actively involved with this plugin or the Redmine community as a whole lately, but it would seem there is a very active user-base still logging bugs and enhancing this project.You can grab a copy of the release on GitHub.I’m pushing out version 3.2.0 of the plugin thanks to the efforts of some very dedicated community members, who I’d like to highlight below:Thanks to Frederico Camara: updating acts_as_rated to work with Redmine 3.2.xThanks to Eduard Kuleshov: getting this plugin supported in Redmine 3.0.xThanks to Axel Kämpfe: getting this plugin supported in Redmine 3.1.x and 3.2.xHUGE thanks to Rob Spearman for basically taking over the project and pushing it forward:New Configuaration options Show articles without tabs Show attachments before article content Show thumbnails for articles in lists Show breadcrumbs for articles in listsNew permissions Article history will only show up if have view permission optional permission for users to manage just their own articles. (#306)Layout Sort Tags on the index page Added authored view so users can find articles by author easilyBug Fixes article view counts not updating (#304) top rated list not valid (#305) ActiveRecord::StaleObjectError (Attempted to destroy a stale object: KbArticle) (#300) Error when generating a PDF of an article with pictures (#308) 500 Internal Server Error - if DELETE category but it’s have subcategory (#293)Note that this is a preliminary release as there is one bug in here that I haven’t squashed.When trying to search, you’re prompted with a failure similar to:Started GET \"/search?utf8=%E2%9C%93&amp;q=stuff\" for 127.0.0.1 at 2016-06-23 01:14:06 +0000Processing by SearchController#index as HTML Parameters: {\"utf8\"=&gt;\"✓\", \"q\"=&gt;\"stuff\"} Current user: admin (id=1)Completed 500 Internal Server Error in 632ms (ActiveRecord: 173.6ms)NoMethodError (undefined method `where' for #&lt;Hash:0x000000096b0d60&gt;): lib/plugins/acts_as_searchable/lib/acts_as_searchable.rb:93:in `search_result_ranks_and_ids' lib/redmine/search.rb:127:in `block in load_result_ids' lib/redmine/search.rb:125:in `each' lib/redmine/search.rb:125:in `load_result_ids' lib/redmine/search.rb:115:in `block in load_result_ids_from_cache' lib/redmine/search.rb:114:in `load_result_ids_from_cache' lib/redmine/search.rb:99:in `result_ids' lib/redmine/search.rb:70:in `result_count' app/controllers/search_controller.rb:65:in `index' lib/redmine/sudo_mode.rb:63:in `sudo_mode'I’m pretty sure this has to do with how we’re setting up acts_as_searchable in the kb_article model. Any suggestions welcome ;)" }, { "title": "What's Up - May/June 2016", "url": "/blog/2016/06/14/whats-up-may-slash-june-2016/", "categories": "Writing", "tags": "anime, games", "date": "2016-06-14 20:38:02 -0400", "snippet": "It’s been a while since I posted the Seiken Densetsu 3 review, so I figured as it might be a while before I get around to posting more content, I’ll just throw up a quick update.GamingI’m currently...", "content": "It’s been a while since I posted the Seiken Densetsu 3 review, so I figured as it might be a while before I get around to posting more content, I’ll just throw up a quick update.GamingI’m currently working my way through three games. After finishing the Shadowrun play-through for SNES, I got some good feedback about the Genesis version. I decided to give that a go, and I’ve currently made it to the last boss, but am having no luck beating him.I’m pretty sure I’m going to have to save up some nuyen and grind it out with some better runners in order to be able to beat Thon. This is a bit of a pain in the ass, and is the reason I ended up abandoning Terranigma previously.I really enjoyed that game, but since I’ve got very limited time decided to move on to the next challenge.By challenge, I meant CHALLENGE. I decided to give The 7th Saga another shot, and have now officially made it MUCH further than I ever have before.This game was alway brutally hard for me when I was a kid, and it still is. You’ve got limited inventory for healing items, everything is expensive and the enemies are generally overpowered.On top of that, it takes forever to level up, and when you do it doesn’t really make all that much of a difference.I’ve made it as far as Telaine and have the Wind, Water and Star runes. Still a ways to go, but I don’t know that I’ll continue …Finally, since I haven’t played through this since the late ’80s, I’m diving back into Dragon Quest. I’m going to be playing through the fan-translated SNES port, which I think is the superior port (I don’t like the mobile remakes of these games …).I think I should have this one done relatively soon as it’s not a very long game, and although it’s a bit grind-heavy, I’ve got 8x fast-forward on my emulator :PAnimeJust a quick update on the series I’ve burned through recently.Log Horizon - Season 1This reminded me or SAO a bit, but with a lot less “Asuna! Kirito! \", and a lot more \"Lens flare from glasses\" and \"Pushing glasses back into place\".Story was enjoyable. Characters were interesting. I’d recommend it.Darker than Black - Season 1+2REALLY enjoyed this. Good action. Interesting plot. Good dialog. I’d recommend it.One Punch Man - Season 1I LOVE this. Saitama is OP AF!!! The story is a bit goofy, but the characters are interesting and the plot keeps you interested. Would totally recommend this.I think that’s all for now." }, { "title": "Just Finished - Seiken Densetsu 3", "url": "/blog/2016/04/19/just-finished-seiken-densetsu-3/", "categories": "Gaming, Just Finished", "tags": "jrpg, snes, rpg", "date": "2016-04-19 14:30:20 -0400", "snippet": "Seiken Densetsu 3 (聖剣伝説3) is the third installment in the Mana series. It’s the sequel to Secret of Mana, which is the entry into the series that most North American gamers would be familiar with. ...", "content": "Seiken Densetsu 3 (聖剣伝説3) is the third installment in the Mana series. It’s the sequel to Secret of Mana, which is the entry into the series that most North American gamers would be familiar with. Once again, I played through this game on my phone using the fantastic Snes9x EX. Please support this dev as he provides a fantastic product. For some reason though, most of the screenshots I took came out stretched. This hasn’t happened before, and I’ve been playing a couple other games that this isn’t happening for either, so I’ll chalk this up to bad luck : NOTE I ran these screenshots through pngcrush (ls *.png | while read line; do pngcrush -ow -brute $line; done) to get the size down a bit ;)I’m leaving these images in here as they were part of my “journey”, though hopefully they don’t deter anyone from playing this game, as the game is fantastic.First off, if you’re a fan of Secret of Mana, the initial “feel” of the game will be familiar, as will the art style and sound.Whereas SoM had you gradually encounter the two other playable characters at set points in the game, SD3 has you selecting your 3 main characters before you even begin.I decided to go with Duran, Carlie and Kevin (something about a werewolf named Kevin made me chuckle :P). Duran’s story starts off with the castle where he lives being invaded by a wizard who almost kills him. The wizard lets Duran live, so naturally Duran has to set off on a quest to find and defeat the wizard.On this journey, he’ll run into the other characters I selected (Kevin and Carlie), and each of their stories will mix into Duran’s. This is actually a really cool element of this game as it gives it a lot of replay value. No matter what combination of characters you pick, their stories will all overlap. Also, you’ll run into all the other characters you didn’t pick, so every character makes an appearance throughout the game.You travel around the game mostly on foot initially, but eventually new methods of travel will open up. As with SoM, you can get to certain areas via Cannon Travel (though there’s a couple of fetch-quests before you can actually take advantage of this). There’s also a ship, a weird turtle thing, and eventually Flammie the dragon.The combat system is reminiscent of SoM as well, though this time around it feels a lot more “button mash-ey”. I found that I just spammed the B button throughout most of this game and didn’t really use any strategy during combat; aside from healing periodically.You get experience by killing enemies, which will allow you to level up your characters. Leveling up lets you increase various stats, that should make your characters perform better in future battles.As you make your way through the game, you’ll start finding these pillars that are guarded by stronger enemies. These are the Mana stones, and apparently contain God-beasts that will be awakened if you shatter the stones.These stones can also be used to change your character’s class. This is another cool aspect of this game, as it give the leveling system a bit more flavour. You can change classes twice in this game; once at level 18, and again at level 38. Each of these classes is aligned with either “Light” or “Dark”, and gives the character new skills/improvements.The game can feel a bit “grindy” due to the need to constantly trudge back and forth between areas, and there are enemies on each screen. These battles are all avoidable, but you’ll want to level up for the boss fights, and eventually the God Beasts.While you’re trekking though, you get to enjoy some really good background music. If you like Secret of Mana, you’ll love Seiken Densetsu 3. You can have a listen over at YouTube to get an idea what’s in store for you ;)The artwork is also top notch. It’s really a shame this game never made it to North America as this is possibly one of the best looking SNES games out there. The background design, character design and monster sprites are all very, very well done. There is a lot of variety to the various regions of the world.Once you’ve shattered all the Mana stones, you unleash the God Beasts. Their position is shown on the world map, and they can be fought in any order, but it’s a good idea to start from the top left of the map and work your way through them sequentially.I learned this the hard way as I only play this game on occasion, and ended up forgetting where I was. This resulted in A LOT of backtracking to find the last couple of beasts.I thoroughly enjoyed playing this game and would highly recommend this to anyone out there that likes JRPGs, action RPGs and 8/16-bit gaming in general. The graphics, music and gameplay are all very well done, and the story lines are interesting, even if there is occasionally some cheesy dialog :PI finished this game over a month ago, so I’m still pretty slow cranking out these reviews …I’m currently working my way through The 7th Saga for SNES since I clearly need more pain and frustration in my life :P When that game is annoying me, I’m also working on Sega Genesis version of Shadowrun.That game was recommended by some of my readers on Reddit so I figured I had to give it a whirl. So far I’m actually really enjoying it, and it is VERY different the the SNES game of the same name.Hopefully I’ll have more for you in the near(er) futureGallery" }, { "title": "Redmine Plugin Extension and Development is Apparently Still Relevant", "url": "/blog/2016/03/23/redmine-plugin-extension-and-development-is-apparently-still-relevant/", "categories": "Writing", "tags": "redmine, book", "date": "2016-03-23 20:59:24 -0400", "snippet": "For the first five quarters that this book was out in the wild, I was posting publication numbers any time I got a royalty statement from Packt Publishing for Redmine Plugin Extension and Developme...", "content": "For the first five quarters that this book was out in the wild, I was posting publication numbers any time I got a royalty statement from Packt Publishing for Redmine Plugin Extension and Development.I haven’t been very active in the Redmine community in the past year or so as I’ve been a bit busy with work, contracts and life, but after seeing the last batch of sales figures, it seems people are still interested in this topic.   Ebook Mini Subscription Packtlib Mini Print Book Mini Subscription (3rd Party Mini) Q4/2015 30 8 18 3 Q3/2015 24 3 15 4 Q2/2015 30 2 18 3 Q1/2015 90 0 25 2 Q4/2014 33 2 31 2 Q3/2014 25 2 24 4 Q2/2014 73 1 33 2 Q1/2014 18 3 18 0 As was made clear with the above info, there is steady demand for this book, so there must be quite a few plugin authors out there looking to get started with the Redmine platform.I’m going to try to get my knowledgebase and dropbox plugins updated in the next couple of months, but if there is anything Redmine-related people might be interested, please leave your comments below ;)" }, { "title": "Just Finished - Shadowrun", "url": "/blog/2016/02/23/just-finished-shadowrun/", "categories": "Gaming, Just Finished", "tags": "rpg, snes", "date": "2016-02-23 20:20:11 -0500", "snippet": "I had this game finished around Christmas, but I find my motivation for writing these articles is starting to languish. I’m hoping to get that spark back with the next couple of titles i’ll be tack...", "content": "I had this game finished around Christmas, but I find my motivation for writing these articles is starting to languish. I’m hoping to get that spark back with the next couple of titles i’ll be tackling, even though Shadowrun was one of my favourite SNES games of all time.You wake up on a slab in the morgue. You don’t know who you are or how you got there. That’s pretty much all you’ve got to go on when you start this game for the first time.The intro shows you being gunned down, then a shapeshifter casts a spell on you and takes off. After getting out of the morgue, you run into “Dog”, who appears to be a shamanistic totem.This was the first 10 minutes of this game, and I remember playing this back in ‘94 and being hooked at this point.Shadowrun is a cyberpunk action-RPG for the Super Nintendo. You control Jake Armitage, a courier who has something important uploaded to his head computer.You move around in an isometric fashion. You can interact with certain people by talking to them, or occasionally giving them a key item from your inventory.When talking to NPCs, some words will appear in bold. These can then be used as keywords in future conversations. These NPC interactions are how the story is progressed, and you’ll spend a fair amount of time in this menu over the course of the game.Once you learn the Hiring keyword, you can also try to hire additional shadowrunners. When they join your team, they will fight along side you … for a while. If you’ve increased your leadership levels, they may stay longer.Leveling up is done by spending karma when you rest on a bed (which also acts as a save point). You can spend your karma to boost various stats, or to level up your spells once you learn magic.Karma is gained by fighting, which is done by moving a set of cross-hairs across the screen, and when placed over an enemy, mashing the A button. You then fire, wait, fire, wait … etc.The combat in this game is pretty simple. Just stand in one place and fire. Once you’re in combat mode, you can move your character, so there’s not really any strategy (other than healing on occasion).The same system is used for spells and items. You select the (spell/item) from the menu, the cursor becomes a hand icon, and you hover over your target and press a button again.Navigating the screen using the D-pad can be a bit cumbersome; especially when fighting, but you get used to it after a while.The game seems to be made up of a series of fetch quests that are used to get you from NPC to NPC in order to uncover more keywords, to then be used with other NPCs to trigger more fetch quests. Oh, and move the story along as well ;)The game is split up into 3 main areas that you can navigate to by train, one area you get to by boat, and the volcano you get to by helicopter. These areas are all opened up as the story moves along and you slowly uncover who was responsible for trying to geek you at the beginning of the game.As you fight your way through the various areas, you’ll find out that you were a courier with sensitive information in your head computer. You have a datajack in your head which is not working, so you can’t access your brain by computer in order to get this information.When you go find a street doc to fix your datajack, it triggers a cortex bomb that then needs to be defused. After this is done, you get some information about what’s in your head and you can start decking (hacking) into computers.The decking segments are actually pretty dumb, but I love them. This is really what has kept me going back to this game time and again over the years, as I just really loved the concept.You’re physically wired into this machine, and have to battle various security countermeasures that have been installed in these systems. The battles are done by guessing when there is a hidden enemy on a grid and pressing the A button. Based on an RNG value and your computer skill level, you’ll either miss or destroy the enemy.That’s it. That’s all there is to it. I still love it though :PDepending on why you were hacking in, you’ll either trigger an elevator or get part of a data file. The data files are plot devices that give you bits of the story, or contain phone numbers you can use from vidphones throughout the game.After you’ve finally fought your way through the various sections of the game, you finally get to face off against Drake. He’s apparently the one behind you almost being whacked. You beat him up, head back to Akimi building, fight your way up a handful of floors (fighting and decking) and finally find the AI you need to destroy.Once done, things explode, and you can close the books on this adventure.The game alludes to there being a potential sequel in the works, but this never materialized. There was another Shadowrun title for Sega Genesis, but this was a completely different game. I might play through this and do a write up one day, but I’ve tried playing it a couple times over the years and could never get into it (if you think I should, or want to share an opinion, there is a comments section below … :P).Overall I still love this game. This is where I was introduced to cyberpunk as a kid, and I even went as far as getting the Shadowrun books (Never Deal with a Dragon) that this game was very loosely based on.The music was also a fantastic complement to the dark atmosphere of the game. 3AM On A Summer Night might actually be one of my favourite tracks from the 16-bit era that wasn’t composed by Nobuo Uematsu ;)If you’re revisiting the SNES and looking for something you may have overlooked during the mid ’90s, pick this up and give it a spin.Next up, Seiken Densetsu 3. This one will probably take me a while to complete, then a longer while to actually do a write up on.Gallery" }, { "title": "Recovering a WiredTiger collection from a corrupt MongoDB installation", "url": "/blog/2016/02/10/recovering-a-wiredtiger-collection-from-a-corrupt-mongodb-installation/", "categories": "MongoDB", "tags": "mongodb, wiredtiger, data-corruption, troubleshooting", "date": "2016-02-10 20:38:38 -0500", "snippet": " April, 1 2019: I’ve received a LOT of feedback on this article since it was published. I would like to point out that although the methods described here may still work, MongoDB introduced a --re...", "content": " April, 1 2019: I’ve received a LOT of feedback on this article since it was published. I would like to point out that although the methods described here may still work, MongoDB introduced a --repair flag in 4.0.3 that simplifies this process significantly. I would recommend reading their “Recover a Standalone after an Unexpected Shutdown” tutorial to see if it applies to your recovery scenario.Recently at work, we experienced a series of events that could have proven to be catastrophic for one of our datasets. We have a daily process that does daily cleanup, but relies on the presence of control data that is ETL’d in from another process.The secondary process failed, and as a result, everything was “cleaned” … aka, we purged an entire dataset.This data happens to be on a 5 node replicaset (primary-secondary-secondary-arbiter-hidden), and the hidden node died over the holidays and I waited too long to recover it, so it was unable to ever catch up to the primary (always stuck in a RECOVERING state).My incredible foresight (… laziness … ) resulted in us having a backup of the data ready to be extracted from the out of sync hidden node. All we had to do was start up mongod … right?2016-01-29T21:06:05.180-0500 I CONTROL ***** SERVER RESTARTED *****2016-01-29T21:06:05.241-0500 I CONTROL [initandlisten] MongoDB starting : pid=1745 port=27021 dbpath=/data 64-bit host=xxx2016-01-29T21:06:05.241-0500 I CONTROL [initandlisten] db version v3.0.82016-01-29T21:06:05.241-0500 I CONTROL [initandlisten] git version: 83d8cc25e00e42856924d84e220fbe4a839e605d2016-01-29T21:06:05.241-0500 I CONTROL [initandlisten] build info: Linux build3.ny.cbi.10gen.cc 2.6.32-431.3.1.el6.x86_64 #1 SMP Fri Jan 3 21:39:27 UTC 2014 x86_64 BOOST_LIB_VERSION=1_492016-01-29T21:06:05.241-0500 I CONTROL [initandlisten] allocator: tcmalloc...2016-01-29T21:06:05.315-0500 W - [initandlisten] Detected unclean shutdown - /data/mongod.lock is not empty.2016-01-29T21:06:05.315-0500 W STORAGE [initandlisten] Recovering data from the last clean checkpoint.2016-01-29T21:06:05.324-0500 I STORAGE [initandlisten] wiredtiger_open config: create,cache_size=13G,session_max=20000,eviction=(threads_max=4),statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=60,log_size=2GB),statistics_log=(wait=0),2016-01-29T21:06:05.725-0500 E STORAGE [initandlisten] WiredTiger (0) [1454119565:724960][1745:0x7f2ac9534bc0], file:WiredTiger.wt, cursor.next: read checksum error for 4096B block at offset 6799360: block header checksum of 1769173605 doesn't match expected checksum of 41760847832016-01-29T21:06:05.725-0500 E STORAGE [initandlisten] WiredTiger (0) [1454119565:725067][1745:0x7f2ac9534bc0], file:WiredTiger.wt, cursor.next: WiredTiger.wt: encountered an illegal file format or internal value2016-01-29T21:06:05.725-0500 E STORAGE [initandlisten] WiredTiger (-31804) [1454119565:725088][1745:0x7f2ac9534bc0], file:WiredTiger.wt, cursor.next: the process must exit and restart: WT_PANIC: WiredTiger library panic2016-01-29T21:06:05.725-0500 I - [initandlisten] Fatal Assertion 28558Aw crap. I could not for the life of me get the node back up and running. Since this was a replica-set member, I thought maybe if I just copied the failing file from the (working) primary it would just work. Apparently that’s not the way MongoDB or WiredTiger works :P. Back to the drawing board.I could see that my data directory contained a bunch of collection-*.wt and index-*.wt files, so I assumed these were the WiredTiger collection and index files. These are binary files so grep-ing didn’t help me identify the collection I needed.I wanted to next see if I could just copy the collection’s backing file directly to a new (working) MongoDB installation, so I started up a new mongod, created a new collection with a document in it, then copied over any collection-*.wt file to see what would happen.Guess what … didn’t work.Identify the WiredTiger collection’s backing fileSince we had access to a working node, plus the collection hadn’t been dropped (just purged), I thought maybe the files on each node would be the same. I logged into the primary via the shell to get some info from my collection.db.getCollection('borkedCollection').stats(){ \"ns\" : \"production.borkedCollection\", \"count\" : 0, \"size\" : 0, \"storageSize\" : 1138688, \"capped\" : false, \"wiredTiger\" : { \"metadata\" : { \"formatVersion\" : 1 }, \"creationString\" : \"allocation_size=4KB,app_metadata=(formatVersion=1),block_allocation=best,block_compressor=snappy,cache_resident=0,checkpoint=(WiredTigerCheckpoint.5149=(addr=\\\"01808080808080c0b081e40ebe4855808080e3113fc0e401417fc0\\\",order=5149,time=1454966060,size=21078016,write_gen=119495)),checkpoint_lsn=(224134,44112768),checksum=on,collator=,columns=,dictionary=0,format=btree,huffman_key=,huffman_value=,id=178668,internal_item_max=0,internal_key_max=0,internal_key_truncate=,internal_page_max=4KB,key_format=q,key_gap=10,leaf_item_max=0,leaf_key_max=0,leaf_page_max=32KB,leaf_value_max=1MB,memory_page_max=10m,os_cache_dirty_max=0,os_cache_max=0,prefix_compression=0,prefix_compression_min=4,split_deepen_min_child=0,split_deepen_per_child=0,split_pct=90,value_format=u,version=(major=1,minor=1)\", \"type\" : \"file\", \"uri\" : \"statistics:table:collection-7895--1435676552983097781\", \"LSM\" : { //... }, \"block-manager\" : { //... }, \"btree\" : { // ... }, // ... }, \"nindexes\" : 4, \"totalIndexSize\" : 1437696, \"indexSizes\" : { \"_id_\" : 212992, // ... }, \"ok\" : 1}That \"uri\" : \"statistics:table:collection-7895--1435676552983097781\" entry looked promising.I started hunting for a way to extract the data from this file without having to “mount” the file in another MongoDB installation, as I assumed this was not possible. I stumbled across a command line utility for WiredTiger that happened to have a ‘salvage’ command.Salvaging the WiredTiger collectionIn order to use the wt utility, you have to build it from source. Being comfortable in Linux, this was not daunting ;)wget http://source.wiredtiger.com/releases/wiredtiger-2.7.0.tar.bz2tar xvf wiredtiger-2.7.0.tar.bz2cd wiredtiger-2.7.0sudo apt-get install libsnappy-dev build-essential./configure --enable-snappymake Adding support for Google’s snappy compressor when building WiredTiger will save you some errors that I initially encountered when trying to salvage the data.Now that I had a wt utility, I wanted to test it out on the collection file. It turns out that you need additional supporting files before you can do this. Once I’d copied over the necessary files, my working directory (called mongo-bak) looked like this:-rw-r--r-- 1 root root 4738772992 Feb 9 14:06 collection-2657--1723320556100349955.wt-rw-r--r-- 1 root root 1155072 Feb 9 14:05 _mdb_catalog.wt-rw-r--r-- 1 root root 26935296 Feb 9 14:05 sizeStorer.wt-rw-r--r-- 1 root root 95 Feb 9 14:05 storage.bson-rw-r--r-- 1 root root 46 Feb 9 14:04 WiredTiger-rw-r--r-- 1 root root 495 Feb 9 14:04 WiredTiger.basecfg-rw-r--r-- 1 root root 21 Feb 9 14:04 WiredTiger.lock-rw-r--r-- 1 root root 916 Feb 9 14:04 WiredTiger.turtle-rw-r--r-- 1 root root 10436608 Feb 9 14:04 WiredTiger.wtNow, from the directory where we compiled WiredTiger, we started salvaging the collection:./wt -v -h ../mongo-bak -C \"extensions=[./ext/compressors/snappy/.libs/libwiredtiger_snappy.so]\" -R salvage collection-2657--1723320556100349955.wtYou know it’s working if you see output along the lines of:WT_SESSION.salvage 639400which I believe is just counting up the number of documents recovered. Once the operation has completed, it will have overwritten the source *.wt collection file with whatever it could salvage.The only issue is that you still can’t load this into MongoDB yet.Importing the WiredTiger collection via dump/load into MongoDBIn order to get the data into MongoDB, first we need to generate a dump file from the WiredTiger collection file. This is done using the wt utility:./wt -v -h ../data -C \"extensions=[./ext/compressors/snappy/.libs/libwiredtiger_snappy.so]\" -R dump -f ../collection.dump collection-2657--1723320556100349955This operation produces no output, so you’ll just have to sit tight and wait a while. You can always watch ls -l in another console if you want to make sure it’s working ;)Once completed, you’ll have a collection.dump file, but this still can’t be loaded directly into MongoDB. You can however, using the wt utility one more time, load the dump back into a WiredTiger collection.First, let’s startup a new mongod instance that we can try this out on.mongod --dbpath tmp-mongo --storageEngine wiredTiger --nojournalNext, let’s connect to this instance via the mongo shell and create a new collection:use Recoverydb.borkedCollection.insert({test: 1})db.borkedCollection.remove({})db.borkedCollection.stats()I’ve created a new db called Recovery, and inserted/removed a document so the collection’s backing file would be generated. You can use the stats() method to get the collection name, but since we’re only using one collection, it’s easy enough to find just using ls.Now we’re going to take the backing file name of the collection we just created and use that to load our WiredTiger dump file:./wt -v -h ../data -C \"extensions=[./ext/compressors/snappy/.libs/libwiredtiger_snappy.so]\" -R load -f ../collection.dump -r collection-2-880383588247732034Note that we drop the .wt extension from the collection file above. Also, the -h flag needs to point to the directory where our mongod has it’s dbPath. Finally, mongod should not be running.This operation also provides a progress indicator showing how much data has been loaded:table:collection-4--4286091263744514813: 1386220Once completed, we can start mongod back up, shell in and have a look:$ mongoMongoDB shell version: 3.2.1connecting to: testMongo-Hacker 0.0.9laptop(mongod-3.2.1) test&gt; show dbsRecovery → 0.087GBlocal → 0.000GBlaptop(mongod-3.2.1) test&gt; use Recoveryswitched to db Recoverylaptop(mongod-3.2.1) Recovery&gt; show collectionsborkedCollection → 0.000MB / 88.801MBlaptop(mongod-3.2.1) Recovery&gt; db.borkedCollection.count()0WTF? The size looks right, but there are no documents???laptop(mongod-3.2.1) Recovery&gt; db.borkedCollection.find({}, {_id: 1}){ \"_id\": ObjectId(\"55e07f3b2e967329c888ac74\")}{ \"_id\": ObjectId(\"55e07f3b2e967329c888ac76\")}...{ \"_id\": ObjectId(\"55e07f402e967329c888ac85\")}Fetched 20 record(s) in 29ms -- More[true]Well that’s promising, but the collection still hasn’t been properly restored yet.Restoring the MongoDB collection to a usable stateThis final part is pretty straightforward, as we’re just going to do a mongodump, followed by a mongorestore. The mongodump will fail if you’re using a version of MongoDB &lt; 3.2, as 3.2 is built against WiredTiger 2.7. I initially tested this using MongoDB 3.0.9 and the dump operation just returned 0 results.$ mongodump2016-02-10T22:04:00.580-0500 writing Recovery.borkedCollection to2016-02-10T22:04:03.579-0500 Recovery.borkedCollection 2682192016-02-10T22:04:06.579-0500 Recovery.borkedCollection 3406552016-02-10T22:04:09.579-0500 Recovery.borkedCollection 4967872016-02-10T22:04:12.579-0500 Recovery.borkedCollection 6708942016-02-10T22:04:15.579-0500 Recovery.borkedCollection 7785392016-02-10T22:04:18.579-0500 Recovery.borkedCollection 8485252016-02-10T22:04:21.579-0500 Recovery.borkedCollection 9912772016-02-10T22:04:24.579-0500 Recovery.borkedCollection 11477182016-02-10T22:04:27.579-0500 Recovery.borkedCollection 11876002016-02-10T22:04:30.579-0500 Recovery.borkedCollection 13536652016-02-10T22:04:33.579-0500 Recovery.borkedCollection 13762552016-02-10T22:04:33.681-0500 Recovery.borkedCollection 13862202016-02-10T22:04:33.682-0500 done dumping Recovery.borkedCollection (1386220 documents)$ mongorestore --drop2016-02-10T22:05:51.959-0500 using default 'dump' directory2016-02-10T22:05:51.960-0500 building a list of dbs and collections to restore from dump dir2016-02-10T22:05:52.307-0500 reading metadata for Recovery.borkedCollection from dump/Recovery/borkedCollection.metadata.json2016-02-10T22:05:52.330-0500 restoring Recovery.borkedCollection from dump/Recovery/borkedCollection.bson2016-02-10T22:05:54.962-0500 [#.......................] Recovery.borkedCollection 32.8 MB/569.8 MB (5.8%)2016-02-10T22:05:57.962-0500 [###.....................] Recovery.borkedCollection 80.5 MB/569.8 MB (14.1%)2016-02-10T22:06:00.962-0500 [#####...................] Recovery.borkedCollection 131.5 MB/569.8 MB (23.1%)2016-02-10T22:06:03.962-0500 [#######.................] Recovery.borkedCollection 178.5 MB/569.8 MB (31.3%)2016-02-10T22:06:06.962-0500 [#########...............] Recovery.borkedCollection 230.1 MB/569.8 MB (40.4%)2016-02-10T22:06:09.962-0500 [###########.............] Recovery.borkedCollection 271.6 MB/569.8 MB (47.7%)2016-02-10T22:06:12.962-0500 [#############...........] Recovery.borkedCollection 320.6 MB/569.8 MB (56.3%)2016-02-10T22:06:15.962-0500 [###############.........] Recovery.borkedCollection 366.3 MB/569.8 MB (64.3%)2016-02-10T22:06:18.962-0500 [#################.......] Recovery.borkedCollection 414.9 MB/569.8 MB (72.8%)2016-02-10T22:06:21.962-0500 [###################.....] Recovery.borkedCollection 464.8 MB/569.8 MB (81.6%)2016-02-10T22:06:24.962-0500 [#####################...] Recovery.borkedCollection 504.0 MB/569.8 MB (88.4%)2016-02-10T22:06:27.962-0500 [#######################.] Recovery.borkedCollection 554.5 MB/569.8 MB (97.3%)2016-02-10T22:06:29.082-0500 [########################] Recovery.borkedCollection 569.8 MB/569.8 MB (100.0%)2016-02-10T22:06:29.082-0500 restoring indexes for collection Recovery.borkedCollection from metadata2016-02-10T22:06:29.104-0500 finished restoring Recovery.borkedCollection (1386220 documents)2016-02-10T22:06:29.104-0500 doneNow that we’ve dumped and reloaded the collection yet again, we can shell back in and validate that our recovery attempt has succeeded:$ mongoMongoDB shell version: 3.2.1connecting to: testMongo-Hacker 0.0.9laptop(mongod-3.2.1) test&gt; show dbsRecovery → 0.099GBlocal → 0.000GBlaptop(mongod-3.2.1) test&gt; use Recoveryswitched to db Recoverylaptop(mongod-3.2.1) Recovery&gt; show collectionsborkedCollection → 569.845MB / 88.594MBlaptop(mongod-3.2.1) Recovery&gt; db.borkedCollection.count()1386220BOOYA! Everything is back and properly accessible.The mongorestore could actually have been done to the primary node in order to recover the data for production purposes. Once that’s done, just recreate the necessary indexes and you’re back in business." }, { "title": "Identifying failing system.js functions in MongoDB", "url": "/blog/2016/02/10/identifying-failing-system-dot-js-functions-in-mongodb/", "categories": "MongoDB", "tags": "mongodb, javascript, scripting, troubleshooting", "date": "2016-02-10 15:17:56 -0500", "snippet": "laptop(mongod-3.2.1) test&gt; db.loadServerScripts()2016-02-10T15:18:42.322-0500 E QUERY [thread1] SyntaxError: unterminated string literal :DB.prototype.loadServerScripts/&lt;@src/mongo/shell/d...", "content": "laptop(mongod-3.2.1) test&gt; db.loadServerScripts()2016-02-10T15:18:42.322-0500 E QUERY [thread1] SyntaxError: unterminated string literal :DB.prototype.loadServerScripts/&lt;@src/mongo/shell/db.js:1158:9DBQuery.prototype.forEach@src/mongo/shell/query.js:477:1DB.prototype.loadServerScripts@src/mongo/shell/db.js:1157:5@(shell):1:12016-02-10T15:18:42.323-0500 E QUERY [thread1] Error: SyntaxError: unterminated string literal :DB.prototype.loadServerScripts/&lt;@src/mongo/shell/db.js:1158:9DBQuery.prototype.forEach@src/mongo/shell/query.js:477:1DB.prototype.loadServerScripts@src/mongo/shell/db.js:1157:5@(shell):1:1 :DB.prototype.loadServerScripts/&lt;@src/mongo/shell/db.js:1158:9DBQuery.prototype.forEach@src/mongo/shell/query.js:477:1DB.prototype.loadServerScripts@src/mongo/shell/db.js:1157:5@(shell):1:15:17:56Occasionally we’ll run into these scenarios where we need to load the system.js functions into the global context, but for whatever reason one (or more) scripts are borked.I created on that essentially looks like the following to illustrate this point.var thisFunctionShouldFail = function() { return \"Fail}When you try to execute a db.loadServerScripts() call, the entire process will fail as there is a malformed script.This is a major pain in the ass when you have large background processes that rely heavily on internal system scripts.In order to address this, we wrote a small script that you can run against any database to validate the internal scripts:var testSystemJs = function() { var coll = db.system.js; coll.find({}, {_id: 1}).forEach(function(doc) { try { var func = coll.findOne({_id: doc._id}); eval(func.value); } catch (ex) { print(\"LOAD_ERROR: \" + doc._id); } });}Now if you run the above, it will give you a bit more context into the failures you may have ;)laptop(mongod-3.2.1) test&gt; testSystemJs()2016-02-10T15:52:13.086-0500 E QUERY [thread1] SyntaxError: unterminated string literal :testSystemJs/&lt;@(shell):1:190DBQuery.prototype.forEach@src/mongo/shell/query.js:477:1testSystemJs@(shell):1:66@(shell):1:1LOAD_ERROR: thisFunctionShouldFail2016-02-10T15:52:13.088-0500 E QUERY [thread1] SyntaxError: unterminated string literal :testSystemJs/&lt;@(shell):1:190DBQuery.prototype.forEach@src/mongo/shell/query.js:477:1testSystemJs@(shell):1:66@(shell):1:1LOAD_ERROR: thisFunctionShouldAlsoFailI’m testing this on a mongo 3.2.1 system, but this method should be applicable to older releases as well." }, { "title": "Just Finished - Final Fantasy V", "url": "/blog/2015/11/07/just-finished-final-fantasy-v/", "categories": "Gaming, Just Finished", "tags": "jrpg, gba, rpg", "date": "2015-11-07 19:15:57 -0500", "snippet": "I’ve been waiting write this review for a very long time. I love the Final Fantasy series, and although I got the original back in ‘90, I didn’t really fall in love with the series until I played I...", "content": "I’ve been waiting write this review for a very long time. I love the Final Fantasy series, and although I got the original back in ‘90, I didn’t really fall in love with the series until I played IV for the SNES. Then I played VI. Then I was REALLY hooked.Since I didn’t grow up in Japan, FF IV and VI were numbered II and III when I first got my hands on them. This means that I didn’t know there was a Final Fantasy V; at least not until much later.The game starts off with the king of Tycoon heading off to check on the wind crystal, only to watch it shatter. The hero Bartz (Butz when I played the fan translation :P) sees a meteorite fall from the sky and heads off to investigate. Bartz and his Chocobo go to check it out, and find an old man who’s suffering from amnesia.The king’s daughter, Lenna, heads out to find her father and runs into Bartz and Galuf. They team up and the adventure begins.Once at the wind shrine, they find that the crystal has shattered and within each shard is the power of a job class.This introduces you to the job ability system. If you’ve ever had a chance to play Final Fantasy III, you’ve see this system in action, but in FFV, it’s done to perfection :)Each character can be assigned to a job class. As they defeat enemies, they gain ability points, which levels up the job class. As the classes level up, you gain abilities associated with that class.These abilities can then be applied to a character regardless of the class they’re assigned to. For example, you can give a white mage black magic abilities (if you’ve leveled up a black mage for that character).This gives you a lot of control over how you build your characters as the game progresses.The storytelling in this game is very well done. Although the plot is pretty standard Final Fantasy fare (crystals, amnesia, evil emperor, main characters dying), the writing was pretty good and the character emotion pop-ups added a nice touch as well.I enjoyed the elements of comedy they tried to incorporate into some of the scenarios and characters. After playing this game, Gilgamesh is probably my new favourite non-player character in the series. This might also have to do with Clash on the Big Bridgebeing my favourite song from this game ;)The battle system is the same as in FFIV (Active Time Battle system). You can fight, use items, or up to 2 abilities you’ve learned from gaining AP and leveling up your classes.I didn’t find the battles overly difficult during this play-through, but I’ve been focusing a lot on grinding in the last few games I’ve covered, so this could just be a result of me over leveling.So as you progress through the game, you discover that the ultimate evil, Exdeath, was banished to your world by the four warriors of dawn. Now you and your party need to become the new warriors of dawn to fight him again.You have to get the ultimate weapons for each character class, you can go on some side quests to get some powerful summons and eventually go after Exdeath.There is one fight in Exdeath’s tower that I just couldn’t win, and that was Shinryu. I didn’t bother to upgrade my equipment after a while as I just hoarded my money to use Gil Toss against everybody. As a result, Shinryu just decimated me every time I tried … so I just gave up. I found that magic and summons in this game proved to be effective until the very end. This is different than my experience with FF II, where you bust your ass to get Ultima, then it does like 900 damage to enemies (even after being leveled up a few times : ). I thought the story was really compelling, and I found the whole alternate worlds overlapping “thing” to be a nice twist, though it felt a bit like what happened in FF III. Actually, just like FF III, you even have to race a chocobo around the world to get an item …I teared up (just a bit) when Galuf’s flame was extinguished by Exdeath. I was a bit worried that since this game follows FF IV it was possible they would do the whole “everyone who died is magically back to fight again for no reason” that happened with Yang, Cid, Edward, Tellah … etc. Fortunately (?), this wasn’t the case and it’s actually a very emotional point in the story.I would strongly recommend any fan of JRPGs spend some time on this title. If I were ranking my favourite FFs now, Final Fantasy V would probably show up in the top 5 :)As for where I’m going from here, I’m currently about 6-8 hours into Pokémon Emerald. I’m sort of enjoying it, though it feels like a watered down version of Earthbound (just my initial impression).I’m also about 4-5 hours into Tales of Destiny, but I’m not really enjoying this title and likely won’t go back to it.Feel free to leave me some feedback on whether or not I should continue the above, or if you’ve got a recommendation for the next title I tackle.Cheers!" }, { "title": "October Anime Update", "url": "/blog/2015/10/20/october-anime-update/", "categories": "Anime", "tags": "", "date": "2015-10-20 21:20:16 -0400", "snippet": "I finally got around to adding an Anime section to this blog where I can track my Plex library.Since this is the first post, I figure I’ll just list of what I’ve worked my way through in the past s...", "content": "I finally got around to adding an Anime section to this blog where I can track my Plex library.Since this is the first post, I figure I’ll just list of what I’ve worked my way through in the past six months or so and what’s currently on deck.FinishedThese are the series that I’ve recently completed. Fullmetal Alchemist: Brotherhood Darker than Black (Season 1) Sword Art Online (Season 1) Attack on Titan Deadman WonderlandOn DeckWhat I’m either currently watching, or planning on hitting up soon. Serial Experiments Lain Legend of Korra (I liked Avatar, so figured … why not :P) Death Note Big OFutureBased on what I’m currently interested in, I’ll probably dip my toes in periodically to see if I should pay closer attention to these series soon. Elfen Lied Ergo Proxy Technolyze Log Horizon Accel World" }, { "title": "Just Finished - Lufia 2", "url": "/blog/2015/09/23/just-finished-lufia-2/", "categories": "Gaming, Just Finished", "tags": "snes, jrpg, rpg", "date": "2015-09-23 20:04:59 -0400", "snippet": "This review has been a long time coming; a VERY long time coming. I heard about Lufia 2: Rise of the Sinistrals when I was still in high school, and have been meaning to play it ever since.Back the...", "content": "This review has been a long time coming; a VERY long time coming. I heard about Lufia 2: Rise of the Sinistrals when I was still in high school, and have been meaning to play it ever since.Back then, I was just starting to get into JRPGs (though I probably just thought they were RPGs at the time) and was completely infatuated with anything that Square or Enix could crank out (except for Earthbound, which is still one of my all-time faves).In the decade(s) since my teens, I’ve picked up Lufia 2 a good dozen times, but have never really given it a fair shake. This time around though, since I’m doing this “Just Finished” series, I thought I’d finally sit down and do a full playthrough.For anyone that has not played this game: PLAY IT! Lufia 2 is now in the top 10 of my favourite 16-bit JRPGs of all time. Hopefully after reading my synopsis here, anyone that was on the fence will also take the plunge (you’ll thank me later!).OverviewLufia 2 (aka. Estpolis Denki II, aka. エストポリス伝記II) is a hybrid of traditional JRPG and Action RPG. You control one to four characters at a time throughout the adventure, with enemy encounters being handled via fade-away to a turn-based combat system.It turns out you (Maxim) are destined to fight the Sinistrals, so you embark on a journey to save the world. Cliché? Yup :PDon’t get me wrong, I love a good “destined to save the world” story, but after playing a handful of JRPGs in succession, I was getting a bit numb to the same story over and over again.I decided to give this a fair chance though, and went along with it. I had never played the original Lufia for more than 5-10 minutes, but I do remember the intro segment where you have the four heroes already in the Fortress of Doom getting ready to fight the Sinistrals.I’m going to skip around a bit here because I just want to cover one thing, which is the end of the game … first. The final battle with Daos for Maxim, Artea, Guy and Selan is the EXACT scene from the first game. This made me REALLY want to go back and play the first game, as I now had a connection with the characters.Also, I thought I was a really cool transition as it tied the two games together seamlessly.CombatEnemy encounters on the overworld are random. As you’re walking around, suddenly the screen will zoom in and boom, it’s go time! For anyone familiar with JRPGs, this is pretty common.Unlike traditional RPGs, Lufia 2 doesn’t have “random” encounters in dungeons. All enemies are visible as you explore the dungeons, and though most will chase you, a lot of these battles can be avoided if you so choose.Once a battle is initiated, as opposed to a text-based menu of Fight | Magic | Item | Run as you might see in some games, you’re presented with an icon cross (reminiscent of Breath of Fire).Aside from the standard Attack, Item and Magic options, there is also and Abilities option for each party member. This additional entry gives each character access to various offensive or defensive abilities that are linked to their weapons and armour. This adds another dimension to battles as you have to keep track of what skills are linked to your equipment (don’t just hit ‘optimize’ each time) as weaker items may provide added benefits against certain enemies.PuzzlesWhat I really enjoyed about this game from the moment I entered the first dungeon was the puzzles. Littered throughout each dungeon are puzzles that you need to solve in order to open a door and proceed.Generally, these puzzles aren’t all that complex, but they break up the dungeons a bit so it doesn’t feel monotonous as you basically do the same things over and over in order to progress the story.As you move further through the game, you also collect various key items, that can be used in order to help solve the various puzzles (bombs, arrows, hook shot, etc.)These add another dimension to the puzzles that keeps them interesting. I honestly didn’t find most puzzles to be very challenging, but I will admit to having to use a walkthrough for at least 2 of them … (thankfully there are excellent guides on rpgclassics for just these instances where you need a tiny bit of help)PartyYour party is made up of Maxim, and at various points Tia, Guy, Selan, Dekar and Arty.Tia is from your home village and follows you on the initial leg of the quest. You think she’s going to end up being Maxim’s love interest, but that changes once Selan enters the story ;)Maxim and Selan fall in love, get married, and have a baby. This all happens around the mid-point of the game, acting as a bit of an intermission. Once they have the kid, they decide to go back out and fight so that the world is safe for their baby (and everyone else … I guess).Guy joins as he’s a good fighter and wants to help defeat the Sinistrals. Dekar’s reasons are basically the same.Capsule MonstersYour party can also include capsule monsters. These are optional encounters throughout the game that if you seek out result in an additional character being able to join you in battle.Each monster has an elemental affiliation, and can level up with you as you fight enemies. If the capsule monster dies in battle though, they respawn for the next fight, so there’s no need to worry about their health (you can’t heal them). They do tend to run from a lot of battles automatically though, which can be annoying.Capsule monsters can also be made stronger by leveling them up through feeding them weapons, armour and items.This got a bit annoying as I had to hear a lot of “Yuk”s from the monsters while trying to find the right items to feed them.MusicI just quickly wanted to touch on the music in this game. For a JRPG not composed by Nobuo, the soundtrack is pretty solid.If you’ve got a minute, check out a couple of songs below to get a taste of what’s in store for you ;) Final Battle Peace of Mind The Lost World Battle Theme 3In case you’re wondering, composition credit goes to Yasunori Shiono.Ancient CaveThis is a completely optional dungeon, but if you’re going to play Lufia 2, you HAVE to try and clear it ;)The ancient cave is 99 randomly generated floors, and you start the cave at level 1 (no matter where you actually are in the game). As you level up and descend further into the cave, you find various treasures and spells that you can only use within the cave.If you warp out, you lose all experience and items you’ve found; aside from items in blue chests (which are few).Once you make it to the last level of the cave, you fight the Master Jelly. This is a brutal fight, as you only have 3 turns in order to beat him, and if you don’t, he just runs and that’s the end of it (you have to warp out).Note that I basically cheated to beat him. If you can kill your entire party before he runs, you’ll actually win the fight.I did this, but I didn’t find all the Iris Treasures in the cave so it didn’t really matter.SummaryAs great as you probably think I think this game is by now, it is not without its faults.First off, this game is extremely linear. The plot progresses as follows: Go to tower to find Climb tower and fight enemy Go back to town to learn where next town is Go to shrine to advance to next townSure you get a boat at a certain point and it “opens” up the map, but you still basically go from town to town and tower to tower without much variety.Also, it may be that I’m just a bit more experienced in the genre and know how to level grind, but I found this game to be very, very easy. By the final dungeon, every battle was essentially the same (the final boss included): fight, fight, valor, fight.All in all though, I really enjoyed this game. Although the story seemed like it was going to be pretty basic at the outset turned out the be really compelling.There was actually quite a bit of character development. I think this is why at the end when you realize you’re basically setting up the intro of Lufia I, you really want to go back and play that game to see if the story continues to be as strong.I’ll probably give this game another run through in a few years, as it really was enjoyable. I tend to do this with RPGs i enjoy as I forget specifics of the story over the years and enjoy rediscovering them. Final Fantasy IV and VI have had this treatment now probably a good 4-5 times each ;)" }, { "title": "Fifth Royalty Statement: This time for profit!", "url": "/blog/2015/08/04/fifth-royalty-statement/", "categories": "Writing", "tags": "redmine, book", "date": "2015-08-04 20:49:59 -0400", "snippet": "I’ve been meaning to write this post for a long time, as I officially got the royalty statement at the end of June, but I’ve been a bit busy with life, contracts and the occasional 16-bit era JRPG ...", "content": "I’ve been meaning to write this post for a long time, as I officially got the royalty statement at the end of June, but I’ve been a bit busy with life, contracts and the occasional 16-bit era JRPG …As of this quarter, Redmine Plugin Extension and Development is officially earning me money!Technically, the last statement was in the black, however since the terms laid out by Packt Publishing only pays out royalties greater than £75, those earnings were rolled into this quarter.I’ve updated the table below with the numbers from the current quarter, but I’d really like to thank everyone who’s bought a copy of this book for supporting the Redmine project, and the vibrant plugin development community as well.   Ebook Mini Subscription Packtlib Mini Print Book Mini Subscription (3rd Party Mini) Q1/2014 18 3 18 0 Q2/2014 73 1 33 2 Q3/2014 25 2 24 4 Q4/2014 33 2 31 2 Q1/2015 90 0 25 2 If you’re just venturing onto this blog after having bought the book, please feel free to leave a comment on any of the posts, or just shoot me a message :)" }, { "title": "Just Finished - Final Fantasy II", "url": "/blog/2015/07/22/just-finished-final-fantasy-ii/", "categories": "Gaming, Just Finished", "tags": "gba, jrpg, rpg", "date": "2015-07-22 13:21:52 -0400", "snippet": "I’m excited to finally be able to review this game, as it’s the direct sequel to the game that got me into RPGs way back in 1990-91.When I say Final Fantasy II, I literally mean the second game in ...", "content": "I’m excited to finally be able to review this game, as it’s the direct sequel to the game that got me into RPGs way back in 1990-91.When I say Final Fantasy II, I literally mean the second game in the franchise; not the SNES translation of Final Fantasy IV ;)I actually played a bit of this game in the late 90’s using the Demiforce translation patch (back in the good ol’ NESticle days :D), but didn’t make it very far.For the actual play-through, I decided to go with the Dawn of Souls version for GBA, as this includes updated graphics, an “official” translation and an updated soundtrack.Note that since I’m reviewing a remake, I’m not sure if some of the gameplay elements below were available in the original. If you happen to have actually completed the original NES version and spot an error, please let me know ;)StoryThe story is pretty standard JRPG fare. The Emperor of Palamecia is trying to take over the world. He summons some monsters that destroy the home town of Firion, Maria, Guy and Leon. The first three are rescued by a rebel faction and taken to another town (where they join the rebellion).Leon goes missing. The party wants to find him. Off they go.You’ll meet various characters along the way that will join your party and fight with you. (SPOILERS! they usually die by sacrificing themselves so you can continue the quest …)As you go along, you find out more about the Emperors plan, fight with the Dark Knight who turns out the be Leon, have him join up with you and eventually make your way down to the castle of hell (aka Pandaemonium) to fight the Emperor.What's CoolFFII introduces a couple of interesting gameplay elements that were not reused in any future entries in the series.First, key character conversations allowed you to Learn keywords, which you could then Ask other key characters about. This mechanic helps advance the story as you have to ask various characters about plot points you learn as you go, and they then point you in the direction of your next objective.FFII has multiple modes of travel on the overworld. As with the original, there are ships and an airship, but FFII introduces the chocobo.There is also a bunch of “cut-scenes” added to this incarnation (which would not have been available in the original NES version). These are nice as they aren’t excessive or long, but help advance the plot.Instead of leveling up your characters by fighting and gaining EXP, FFII opted for a system where the more you use a skill, the better you get at it.For example, the more Firion attacks with a sword, the higher his sword level would go. The more Maria uses the Cure spell, the higher her magic level … and Cure spell level would go.This also applied to taking damage. The more damage a player took, the higher their strength and HP levels would go.I thought this was a very interesting mechanic, and I’m not really sure why this didn’t make it into any future games.What's Not CoolFor some reason, this installation in the series decided to introduce an Inn system that charged based on how much healing you required. This proved to be a bit annoying until you realize it’s a LOT cheaper to just use cure spells to get everyone’s HP back up, THEN rest at the inn ;)Another annoyance is that throughout the game, in any dungeon you visit, there are doors that lead to empty rooms. LOTS of doors that lead to empty rooms. What’s annoying is that these rooms have higher encounter rates, so the first step you take to head back towards the exit generally results in a battle.The battles aren’t necessarily difficult, it’s just a pain in the ass to have to wade through all these useless rooms.On battles in general, once again I’m happy to be playing this game using an emulator, as the 8x fast-forward was my best friend.The encounter rates in this game seem to be pretty high in most areas, and the fights are kind of sluggish. I found that for most non-boss fights, I’d just hit fast-forward and hold down the A button (thankfully, you don’t have to mash A in this game; just holding it down works :D).SummaryOverall, I really enjoyed the game. The story (I feel) was much better than that of the original, or even FF III (not FF VI, which is still my favourite installment in the series!)I really liked the leveling system, and found that since I didn’t run from many fights, I didn’t have to game the system by just attacking my own party members to boost their HP/defense/stamina stats.I’m glad I jumped back into the Final Fantasy series for a bit; especially with a game I actually haven’t beaten before. Whenever I sit down with FF, it’s usually either IV, VI or VII.I’m thinking the next Final Fantasy I tackle will likely be V, as I haven’t previously finished this (though I’ve gotten close). Not sure when that’ll happen, because I’m currently balls-deep in Lufia II ;)Note that since I’ve finished the Dawn of Souls version of FFII, I have access to the Soul of Rebirth additional dungeon.I’m hoping to actually play this and add to this review, or just publish a minor post to cover what was added therein." }, { "title": "Just Finished - Breath of Fire 2", "url": "/blog/2015/06/29/just-finished-breath-of-fire-2/", "categories": "Gaming, Just Finished", "tags": "snes, jrpg, rpg", "date": "2015-06-29 13:17:02 -0400", "snippet": "Following on the heels of my playthrough of the original Breath of Fire, I’ve just finished Breath of Fire II.Originally released for the Super Nintendo Entertainment System in 1994, BoF2 is the di...", "content": "Following on the heels of my playthrough of the original Breath of Fire, I’ve just finished Breath of Fire II.Originally released for the Super Nintendo Entertainment System in 1994, BoF2 is the direct sequel to the original. Although the protagonist is named the same (Ryu) as in the original, I don’t think he’s supposed to be the same person (the story takes place hundreds of years after the original).You start off as a kid in a small town with your buddy Bow. You go visit the outskirts of town where there is a dragon sleeping and blocking a gate. You’re attacked by a demon named Barubary, who knocks the two out then disappears.The story picks up 10 years later with the two trying to make it as rangers and taking odd jobs. You take a job trying to find someone’s lost pet, and from there, the game begins.You save the pet (pig) in an old house where a hermit lives. This house introduces an interesting dynamic to the game as this becomes the location known as TownShip. As you make your may through the game, various people join your town or can be hired to improve it.You can recruit builders, weapon/item shop keepers and magicians that teach you new skills and abilities. Also as your party grows, they can be stashed here in a big house and you can go talk to them at any point to get clues as to what needs to be done next.The battle system is the same as the original, and most JRPGs of the era; enemies to the left, characters to the right. A menu system controls your actions, which should all be well known by now (Attack, Defend, Magic, Item, Run).As you progress, you will learn that Ryu is a member of the Dragon Clan (as was the case in the original BoF as well), and can learn to summon various dragons.In BoF2, you don’t need to venture too far off track in order to get the dragons. You actually get the majority of them in groups of three, which is convenient.You meet a whole cast of characters that can join your party along the way, and each one has a special overworld ability that helps you progress the story.For example, Sten can reach across some cliffs to grab a pole and drag the party across, Katt can smash rocks to open up pathways, Rand can roll into a ball and get you across vast stretches of the overworld without being attacked.This last one is convenient as the random enemy encounter rate is pretty high in this game. I’m really thankful I was playing this on an emulator that supported fast-forwarding, as the majority of the battles I just auto-fought at 800x speed ;)There are also multiple ways to get around the world. You can walk, ride on a whale, ride on a giant bird, or fly TownShip around. This last one, I didn’t actually get to do as I killed the old guy hooked up to the machine on one of the quests :(.While playing, depending on the decisions you make, you can affect the type of ending you’ll get. Like some other RPGs (ex. Chrono Trigger), there are multiple endings you can get.I didn’t get the best ending, but I didn’t get the worst ending either (I chose to go into the gate and fight the end boss).BoF2 has a lot more “cut scenes” than the original did. I’m not sure if this was the case on the SNES version, but as I was playing the GBA remake, this stood out for me.The cut-scenes are just still images, but they do provide a nice break from the gameplay and tend to actually contribute to the story at hand (as opposed to just being randomly inserted).The underlying story of the game is about a religious cult (St. Eva) that is sending souls to the ultimate evil. Once you infiltrate the cult and discover this plot, you can go to the underworld to fight Detheven, but first you have to beat the demon from the beginning of the game: Barubary.You can choose to fight Barubary alone, or as a group. I believe the choice you make here influences the ending you get, but I’m not positive …I went it alone, and found it to be a very long, difficult fight. You basically have to attack once, heal once, repeat.When I’d knocked off about 3000 points of damage, I finally summoned a dragon to finish him off. This was the recommended strategy as the first few times I fought I used my dragon right away and had my ass kicked shortly thereafter. This walkthrough really helped ;)The final battle with Detheven didn’t prove to be all that difficult, and once you defeat him and the credits roll, Ryu chooses to take the form of a dragon and sacrifice himself to seal off the doorway to the underworld.I quite enjoyed this game, though I did find the battle system to be excruciatingly slow. Without fast-forward on, I doubt I would have finished this game. Also, after a battle completes there is a delay before you can move your characters again, which also made the game feel sluggish.Overall though, I would recommend this to any JRPG fan as the story is solid, the gameplay is fun, and if you like, you can take a break from the action and go fishing for treasure.For my next playthrough, I’m working on Final Fantasy II: Dawn of Souls. Shouldn’t be too much longer now, as I’m already at the Jade Passage, which I believe is the final section of the game.Did you like Breath of Fire II? Which is your favourite of the series? What should I play next? Is my writing getting any better? Let me know in the comments below if you have any feedback.Cheers!Gallery" }, { "title": "Submit Content to Reddit because people WILL see it", "url": "/blog/2015/06/12/submit-content-to-reddit-because-people-will-see-it/", "categories": "Writing", "tags": "reddit", "date": "2015-06-12 09:15:44 -0400", "snippet": "I just wanted to share a quick story as someone who occasionally publishes stuff (both in print and on the internets).I’ve never really given Reddit a fair chance. Every time I would go there, it s...", "content": "I just wanted to share a quick story as someone who occasionally publishes stuff (both in print and on the internets).I’ve never really given Reddit a fair chance. Every time I would go there, it seemed like the front page just had random links to news stories, or links to pictures.I didn’t really bother to dive in and actually look for content, or bother to checkout the subreddits to see what sorts of communities I might be more inclined to interact with.Yesterday, I took a couple of my articles from this blog and submitted them (here, here and here) to see what sort of feedback/engagement I might see.Generally, I see anywhere from 5-25 users a day pass through here. That all changed very, VERY quickly once I submitted my content.Within 12 hours of posting, I’d managed to get up to ~ 900 unique users, and by the end of the day, it was over 1000! (over 9000 would have been sweeter :P)I had some really great conversations around my content, and got some useful feedback as well.I’ve posted content to Twitter, LinkedIn, Facebook and elsewhere, but never really got any good engagement. After this experience though, I know the first place I’ll be dropping my new articles, and am even slightly more motivated to get them completed as I know what I can expect from the community :)Please let me know if there are other communities you’ve found that generate good conversations around your content." }, { "title": "Just Finished - Breath of Fire", "url": "/blog/2015/06/10/just-finished-breath-of-fire/", "categories": "Gaming, Just Finished", "tags": "snes, rpg", "date": "2015-06-10 08:34:06 -0400", "snippet": "My original plan for my next playthrough was going to be Daganronpa, but after making it to chapter 5, I got caught up in an phone upgrade bricking (at least Wind ended up replacing my phone) fiasc...", "content": "My original plan for my next playthrough was going to be Daganronpa, but after making it to chapter 5, I got caught up in an phone upgrade bricking (at least Wind ended up replacing my phone) fiasco and lost all my progress.I didn’t really feel like starting all over again, so I started Lufia II and the original [Breath of Fire](http://en.wikipedia.org/wiki/Breath_of_Fire_(video_game).I ended up sticking with Breath of Fire, though I want to get through both Lufia and Lufia II eventually ;)I wasn’t really planning on writing about this game, but decided at the last minute, so all my screenshots are from the very end ;)I played the Game Boy Advance remake on my phone using GBA.emu. Although I’m perfectly capable of compiling from source and side-loading the APK, I bought the version on the Play store as the developer deserves the support.The story starts off the main character, Ryu’s hometown. He is one of the last members of the Light Dragon Clan, and the Dark Dragon Clan has just come to eradicate them.When they set the town ablaze, Ryu’s sister Sara turns everyone to stone and ventures out alone to stop the invasion. She is captured, and the game begins with you setting out to fight the Dark Dragons and get her back.As you make your way through the game, you meet up with additional character that add a new twist to how you solve puzzles. For example, Bo can hunt animals that appear randomly on the overworld map, Karn can open locked doors, Ox can smash certain walls, Gobi can swim under water and Nina eventually morphs into a bird.I thought this angle was pretty cool, as it makes the game more of an Action-RPG (ala Zelda or Secret of Mana) than a traditional Final Fantasy style JRPG.Each character has a unique skill that is required to progress the story at some point, so you feel more attached to them than supporting characters from certain other series.The combat system is a traditional turn-based, menu-driven, pick your attacks and wait for the enemy implementation. If you’ve played any other JRPG from this era, you’ll feel right at home.The main quest progresses in a pretty linear fashion. You’re trying to find a bunch of Goddess keys that were used to lock up Tyr long ago, but the Dark dragons are trying to find them as well to let Tyr out to wreak havoc on the world.You get these keys, fight members of the Dark Dragons, meet characters, unlock more of the map and eventually have to fight Tyr once and for all.There are side-quests as well that you have to do if you want to learn dragon techniques for Ryu, or fusion techniques for Karn.If you go to the trouble of getting all the Dragon equipment and finding the final dragon form, Agni, you basically have a Win Stick(tm) for the rest of the game (I highly recommend this :P).SummaryThis game wasn’t overly difficult, and really didn’t take that long to complete.The learning curve wasn’t very steep, but this could just be due to having played a lot of other games from the JRPG, Action RPG genres previously.Since the majority of games that I play nowadays are from Square Enix, it was nice to run through something from another publisher.I really enjoyed this game, and am currently working my way through the sequel, Breath of Fire II.Assuming I don’t brick my phone again, hopefully I’ll have a review for that next :D." }, { "title": "Fourth Royalty Statement", "url": "/blog/2015/05/14/fourth-royalty-statement/", "categories": "Writing", "tags": "redmine, book", "date": "2015-05-14 11:34:45 -0400", "snippet": "It’s been over a year since this book was published, and I didn’t think it would see the type of success it has.Based on this last statement, I’m officially eligible to start collecting royalties o...", "content": "It’s been over a year since this book was published, and I didn’t think it would see the type of success it has.Based on this last statement, I’m officially eligible to start collecting royalties off this book.This will have to wait until next quarter as Packt only pays out if the total proceeds exceed £75; which the USD$78 I earned last quarter doesn’t ;)Redmine is a very popular open source project management platform, but in order to extend it users need to be familiar with not only the Ruby language, but the Ruby on Rails framework as well.This can be quite the barrier to entry for new developers, as they need to have a fair amount of knowledge coming in.Based on the sales figures I have access to, as well as feedback and inquiries I’ve received over the last year, it’s safe to say that the Redmine community is thriving :)I’ve updated the sales chart with my last royalty statement:   Ebook Mini Subscription Packtlib Mini Print Book Mini Subscription (3rd Party Mini) Q1/2014 18 3 18 0 Q2/2014 73 1 33 2 Q3/2014 25 2 24 4 Q4/2014 33 2 31 2 If you’re one of the people that bought the book, please leave a comment and let me know what you thought.I’m in the process of updating the knowledgebase plugin that served as the focal point of the book to be compatible with Redmine 3.0 and beyond. If you have any ideas for new features, or feel I should get cracking on the bug fixes, log an issue :)" }, { "title": "Asylum Engine Update", "url": "/blog/2015/04/08/asylum-engine-update/", "categories": "ScummVM", "tags": "scummvm, sanitarium, asylum", "date": "2015-04-08 09:31:14 -0400", "snippet": "It’s been a number of years since I had a chance to look at this project, but recently I updated the codebase to the latest version (sync with upstream ScummVM) and found that the videos no longer ...", "content": "It’s been a number of years since I had a chance to look at this project, but recently I updated the codebase to the latest version (sync with upstream ScummVM) and found that the videos no longer worked.It turned out to be a pretty simple fix (see commit), but it rekindled my interest in the project.I added some additional debug output and cleaned up the script debug loop so that there wasn’t as much spamming of commands that were waiting for another event.Also, thanks to @xesf, we can now actually proceed up and down stairs via fixes he made to the script processor.TODObetter pathfindingThe path-finding in the original engine is a lot smarter and more forgiving than our implementation.inventory managementWe can currently pick up an item and remove the graphic from the screen, but there’s no way to retrieve/use items once collected.clean up graphical glitchesThere are still a number of clipping issues, as well as incorrect behaviour when Max is standing still (wrong animation might play).fix encountersEncounters load, but you can’t interact with keywords yet.save/loadThere was quite a bit of work done on this, but we still need to verify that everything is being restored properly on load." }, { "title": "Block Retry using Powershell", "url": "/blog/2015/02/06/block-retry-using-powershell/", "categories": "Scripting", "tags": "powershell", "date": "2015-02-06 09:54:28 -0500", "snippet": "I’ve been doing a lot of Powershell scripting lately, and one of the features I’ve really been pining for is the ability to apply some form of retry logic to either a function or a block.Take the f...", "content": "I’ve been doing a lot of Powershell scripting lately, and one of the features I’ve really been pining for is the ability to apply some form of retry logic to either a function or a block.Take the following sample:function RandomlyFail{ $rnd = Get-Random -minimum 1 -maximum 3 if ($rnd -eq 2) { throw \"OH NOES!!!\" } $Host.UI.WriteLine(\"W00t!!!\")}Depending on what the random number we get is, we’ll get one of two scenarios:# SuccessRandomlyFailW00t!!!# FailureRandomlyFailOH NOES!!!At line:62 char:9+ throw \"OH NOES!!!\"+ ~~~~~~~~~~~~~~~~~~ + CategoryInfo : OperationStopped: (OH NOES!!!:String) [], RuntimeException + FullyQualifiedErrorId : OH NOES!!!Now, if this happened to be part of a larger script and we didn’t have everything wrapped in a try..catch block, execution could potentially stop there.Since Powershell supports closures, we can write a function that accepts a script block as a parameter.&lt;#This function can be used to pass a ScriptBlock (closure) to be executed and returned.The operation retried a few times on failure, and if the maximum threshold is surpassed, the operation fails completely.Params: Command - The ScriptBlock to be executed RetryDelay - Number (in seconds) to wait between retries (default: 5) MaxRetries - Number of times to retry before accepting failure (default: 5) VerboseOutput - More info about internal processing (default: false)Examples:Execute-With-Retry { $connection.Open() }$result = Execute-With-Retry -RetryDelay 1 -MaxRetries 2 { $command.ExecuteReader() }#&gt;function Execute-With-Retry { [CmdletBinding()] param( [Parameter(ValueFromPipeline,Mandatory)] $Command, $RetryDelay = 5, $MaxRetries = 5, $VerboseOutput = $false ) $currentRetry = 0 $success = $false $cmd = $Command.ToString() do { try { $result = &amp; $Command $success = $true if ($VerboseOutput -eq $true) { $Host.UI.WriteDebugLine(&quot;Successfully executed [$cmd]&quot;) } return $result } catch [System.Exception] { $currentRetry = $currentRetry + 1 if ($VerboseOutput -eq $true) { $Host.UI.WriteErrorLine(&quot;Failed to execute [$cmd]: &quot; + $_.Exception.Message) } if ($currentRetry -gt $MaxRetries) { throw &quot;Could not execute [$cmd]. The error: &quot; + $_.Exception.ToString() } else { if ($VerboseOutput -eq $true) { $Host.UI.WriteDebugLine(&quot;Waiting $RetryDelay second(s) before attempt #$currentRetry of [$cmd]&quot;) } Start-Sleep -s $RetryDelay } } } while (!$success);}Now, if we retrofit our sample above:Execute-With-Retry -RetryDelay 1 -VerboseOutput $true { RandomlyFail }Failed to execute [ RandomlyFail ]: OH NOES!!!DEBUG: Waiting 1 second(s) before attempt #1 of [ RandomlyFail ]Failed to execute [ RandomlyFail ]: OH NOES!!!DEBUG: Waiting 1 second(s) before attempt #2 of [ RandomlyFail ]Failed to execute [ RandomlyFail ]: OH NOES!!!DEBUG: Waiting 1 second(s) before attempt #3 of [ RandomlyFail ]Failed to execute [ RandomlyFail ]: OH NOES!!!DEBUG: Waiting 1 second(s) before attempt #4 of [ RandomlyFail ]W00t!!!DEBUG: Successfully executed [ RandomlyFail ]The inspiration for this comes from an excellent article by Pawel Pabich." }, { "title": "Just Gave Up On - Terranigma", "url": "/blog/2015/01/16/just-finished-terranigma/", "categories": "Gaming, Just Gave Up On", "tags": "snes, rpg", "date": "2015-01-16 09:26:52 -0500", "snippet": "As someone in their thirties with a family, my personal gaming time is somewhat limited. As a result, I need to be a bit more selective with what I choose to sink any free time into; and grinding i...", "content": "As someone in their thirties with a family, my personal gaming time is somewhat limited. As a result, I need to be a bit more selective with what I choose to sink any free time into; and grinding is not where I want that time to go. I’ll get back to this shortly ;)I want to start off by saying I really enjoyed Terranigma. It’s a fun 3rd person action-rpg (similar to Link to the Past or Secret of Mana) that concludes the Quintet trilogy started by Soul Blazer and Illusion of Gaia.I was a big fan of Soul Blazer (less of Illusion of Gaia) so I was really looking forward to Terranigma. The gameplay is similar (real-time battle) and the themes are similar (restoring the world).You start off by opening a funky box, which releases Yomi. I don’t really know what he is, but the box he’s in acts as your inventory system, as well as various settings and status pages. This is kind of innovative as it makes interacting with your items, weapons, armour and stats a bit more interesting.First, you need to save your town, which gets frozen; except for the one guy who conveniently can explain how to unfreeze everyone.You go off to five different towers in order to “free” some of the villagers (kind of like you do in the dungeons of Soul Blazer …) who can then help you proceed through the remaining towers.You save the town, say goodbye to your lifelong friend and jump into an abyss that transports you to the Lightside. There you continue resurrecting the world by going through towns and dungeons and killing baddies. Pretty simple … right?WRONG!I got stuck twice since I tried doing this without a walkthrough. The first place was Louran, since I forgot to pick up the scarf you needed in order to prove to the dog you knew his owner. I was stuck here for a very, very long time …Second is Sylvan Castle in Spain. This is where I’ve officially given up. I made it through the castle with no issues, but once you get to the boss, she just decimates you.Some walkthroughs say your should be at level 21, some say 25. I’m at level 18. Grinding in this game takes a very long time, and I think I’m just going to cut my losses here and move on.If this were a turned-based RPG, I could blindly button mash my way up a few levels. Oh well.From what I played though, Terranigma was a lot of fun. I may come back to this game, but for the moment I’ve decided to move along to the next challenge … Danganronpa. So far … loving it :D :D :D" }, { "title": "Third Royalty Statement", "url": "/blog/2014/12/22/third-royalty-statement/", "categories": "Writing", "tags": "redmine, book", "date": "2014-12-22 08:11:36 -0500", "snippet": "I’d love to say Christmas came early this year, but it looks like sales of Redmine Plugin Extension and Development didn’t quite hit the numbers needed to actually result in a royalty cheque. Ah we...", "content": "I’d love to say Christmas came early this year, but it looks like sales of Redmine Plugin Extension and Development didn’t quite hit the numbers needed to actually result in a royalty cheque. Ah well, there’s always Q1 of 2015 :DI’ve added the latest numbers to those from my previous post in order to show the running total of units sold this year.   Ebook Mini Subscription Packtlib Mini Print Book Mini Subscription (3rd Party Mini) Q1/2014 18 3 18 0 Q2/2014 73 1 33 2 Q3/2014 25 2 24 4 The main reason I’ve been sharing these numbers (without sharing that actual “numbers”) is to show prospective authors what types of returns they can potentially expect.The book I wrote falls into the “minibook” category, so the returns are lower than a full-on “book” (I think &lt; 100 pages is a minibook), but at this rate, 2015 might result in a non-negative royalty statement that I can share :)Happy Holidays Everyone!!!" }, { "title": "Git Push to GitHub and Bitbucket", "url": "/blog/2014/12/19/git-push-to-github-and-bitbucket/", "categories": "Scripting", "tags": "git, github, bitbucket", "date": "2014-12-19 13:05:35 -0500", "snippet": "I just want to start off by saying how much I LOVE Git. I’ve been working with it for a number of years now (coming from Subversion and sharing code on Google Code and SourceForge) and have fully e...", "content": "I just want to start off by saying how much I LOVE Git. I’ve been working with it for a number of years now (coming from Subversion and sharing code on Google Code and SourceForge) and have fully embraced GitHub as the “victor” (IMHO) for both online source control and collaborative development.The one “downside” to GitHub though is that you don’t have the ability to manage a private repository for free. They do offer reasonable hosting plans, but I generally use private repos for client work or other professional backups.Bitbucket on the other hand offers unlimited private repositories. They limit the collaborative features you have access to, but if you’re strictly mirroring or backing up, that’s not an issue.In order to configure your repository to push to both, all you need to do is:1) create a new repository on Bitbucket2a) edit the .git/config of your local repository2b) add a second url entry under the same remote as you’re already pushing to3) now to initialze the Bitbucket remote execute git push origin -u --all.This will attempt to push all branches to the remote named origin. Since the version on GitHub is already up to date, the Bitbucket version will be initialized and all changes will be pushed.Now, whenever you issue a git push command, both remote repositories will receive the changesets!" }, { "title": "Vote ScummVM for SourceForge POTM", "url": "/blog/2014/11/17/vote-scummvm-for-sourceforge-potm/", "categories": "ScummVM", "tags": "scummvm", "date": "2014-11-17 08:50:15 -0500", "snippet": "Although I haven’t used my SourceForge account in a number of years, when I started working with ScummVM, that’s where the code and issue tracker were, so that’s where the development community was...", "content": "Although I haven’t used my SourceForge account in a number of years, when I started working with ScummVM, that’s where the code and issue tracker were, so that’s where the development community was as well.They’ve since moved to GitHub, but SourceForge has included them in the running for Project of the Month, January 2015.If you’ve still got an account, or just feel like creating one to show them some love, head on over to the voting page for POTM and reply with VOTE: scummvm.They’ve got my vote ;)" }, { "title": "Just Finished - Robotrek", "url": "/blog/2014/10/17/just-finished-robotrek/", "categories": "Gaming, Just Finished", "tags": "rpg, snes", "date": "2014-10-17 09:00:00 -0400", "snippet": "I was planning on writing this review a while ago, but it turns out I nuked my phone and lost my progress so I had to start all over again. I originally started this on 2014-09-26, but I kind of lo...", "content": "I was planning on writing this review a while ago, but it turns out I nuked my phone and lost my progress so I had to start all over again. I originally started this on 2014-09-26, but I kind of lost my motivation … and I started playing Terranigma, which is pretty awesome so far.In my ongoing series of articles about old games that I never got around to playing, today I’m going to tackle Robotrek.Robotrek is a silly RPG that revolves around “getting to the bottom” of a situation involving a group calling themselves the “hackers” who are disrupting the peace of your home town of Rococo.The story follows your character, who wants to be an inventor, and right off the bat learns how to make robots. As you progress through the game, you’ll eventually be able to build three robots, which can be swapped in an out during battle.These robots can be upgraded with better weapons and armour by reading books you find throughout the game.You’ll also learn how to make items and some useful tools that will help you solve various puzzles.Since you’re an inventor in this game, one of your main tasks is to combine items you find in order to potentially make new items. Although this is useful a couple times, I found I didn’t really need to use it beyond the first part of the game where you make the drill.You can sometimes combine scraps with each other to produce weapons, or combine scraps with weapons to produce upgraded weapons, but only trial and error yield results. I couldn’t find any information in the game that helped lead you towards proper combinations (and I wanted to avoid walkthroughs).Battles in this game are pretty straightforward. You equip weapons to your robots, then use them in battle either directly, or you can program sequences that allow you to run multiple attacks in succession. This approach can kill enemies faster, but will require you to charge up for longer, and therefore be vulnerable for longer as well.The fights are extremely repetitive, and it doesn’t help that there only appears to be a single battle theme that loops constantly. I played most of the game with the volume off due to this :POnce you get to the volcano and find the Sword 4 in a chest, the random battles become exceedingly easy (for at least the next 3/4 of the game). This weapon is just ridiculously overpowered at this point and you’ll find yourself just spamming it in order to quickly proceed through the story.Boss battles tend to be very dependent on what level you’re at when you enter the fight. Most battles I had to redo at least once as I found I was far too low of a level to have a chance.I found this to be the most true when I got to De Rose. This was the boss I reached during my last playthrough, and after grinding for a good 2 hours, I found I just couldn’t beat her, gave up and moved on to another game.This time around, I actually checked a walkthrough, which recommended I be at about level 50 before entering the fight. I was at level 37. I was going to have to grind … and grinding in this game is TEDIOUS. I ended up grinding to about level 44 before beating her, but this took a good 4-5 hours.The story progresses: the Hackers leader (a crab) is defeated, Dr. Einst’s plot is foiled, a new Hackers leader emerges (Blackmore), the story jumps back and forwards in time, a spaceship emerges so you can visit another planet and you end up having to save the world.The final battle is against Gateau (the “food”-naming convention for characters and places is used throughout the game), who had something to do with using the Tetron to build a weapon or something (I can’t remember the exact story; play the game for a better description :P).He takes two forms, but isn’t overly difficult to defeat at this point.Overall, this game was pretty easy. The story progressed in a very linear fashion, and most puzzles were pretty straightforward to solve.It was fun though, and though I probably won’t replay this game again in the future, I’m glad that I went through it at least once.My screenshots are below, though it seems that the emulator I was using (Snes9x EX on my Moto G) overwrote some of my earlier images. Oh well. Enjoy :PGallery" }, { "title": "Gallery Tag for Octopress", "url": "/blog/2014/10/07/gallery-tag-for-octopress/", "categories": "Ruby", "tags": "octopress, jekyll", "date": "2014-10-07 08:31:08 -0400", "snippet": "While working on my post about finishing Robotrek, I found that I had taken a lot more screenshots than would fit nicely with the amount of copy I intended to write.I hope to be done the just finis...", "content": "While working on my post about finishing Robotrek, I found that I had taken a lot more screenshots than would fit nicely with the amount of copy I intended to write.I hope to be done the just finished … article soon-ish …Since I didn’t really want to discard any, I figured I’d just throw the execss screenshots into a carousel or gallery.I found an excellent example, but it didn’t quite produce the results I was looking for.I ended up forking the gist in order to implement a Gallery tag for Jekyll/Octopress that could work with the Galleria jQuery plugin.Now I can build a gallery from my extra screenshots by simply adding{% galleria %}/images/robotrek/Robotrek_(USA).000.png/images/robotrek/Robotrek_(USA).001.png/images/robotrek/Robotrek_(USA).002.png/images/robotrek/Robotrek_(USA).003.png/images/robotrek/Robotrek_(USA).004.png/images/robotrek/Robotrek_(USA).005.png/images/robotrek/Robotrek_(USA).006.png/images/robotrek/Robotrek_(USA).007.png/images/robotrek/Robotrek_(USA).008.png/images/robotrek/Robotrek_(USA).009.png/images/robotrek/Robotrek_(USA).010.png{% endgalleria %}to my post, which will produce the following gallery:I’ve included the gist below. If you want to download and install this yourself, just download the gist to /path/to/octopress/plugins.# Title: Galleria Tag for Jekyll# Authors: Alex Bevilacqua# Description: incorporate the Galleria gallery jquery plugin ## Adaption of &quot;Photos tag for Jekyll&quot; by Devin Weaver, and the derived # &quot;Gallery Tag for Jekyll&quot; by Kevin Brown.## Installation:## {% galleria_includes %}## This macro should be added to your `source/_includes/custom/head.html`# in order to load the libraries needed by Galleria## Example:## {% galleria %}# photo1.jpg# /path/to/photos/photo2.jpg:title# {% endgalleria %}#module Jekyll PLUGIN_GALLERIA_VERSION = &quot;1.4.2&quot; PLUGIN_JQUERY_VERSION = &quot;2.1.1&quot; class PhotosUtil def initialize(context) @context = context end def path_for(filename) filename = filename.strip prefix = (@context.environments.first[&#39;site&#39;][&#39;photos_prefix&#39;] unless filename =~ /^(?:\\/|http)/i) || &quot;&quot; &quot;#{prefix}#{filename}&quot; end end class GalleriaScriptIncludePatch &lt; Liquid::Tag def render(context) return &lt;&lt;-eof&lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/jquery/#{PLUGIN_JQUERY_VERSION}/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/galleria/#{PLUGIN_GALLERIA_VERSION}/galleria.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/galleria/#{PLUGIN_GALLERIA_VERSION}/themes/classic/galleria.classic.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;link href=&quot;//cdnjs.cloudflare.com/ajax/libs/galleria/#{PLUGIN_GALLERIA_VERSION}/themes/classic/galleria.classic.min.css&quot; media=&quot;screen, projection&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;&lt;style&gt; /* This rule is read by Galleria to define the gallery height: */ #galleria{height:320px}&lt;/style&gt; eof end end class GalleriaTag &lt; Liquid::Block def initialize(tag_name, markup, tokens) # No initializing needed super end def render(context) # Convert the entire content array into one large string lines = super # split the text by newlines lines = lines.split(&quot;\\n&quot;) p = PhotosUtil.new(context) gallery = &quot;&lt;div id=\\&quot;galleria\\&quot;&gt;&quot; lines.each_with_index do |line, i| next if line.empty? filename, title = line.split(&quot;:&quot;) title = (title.nil?) ? &quot;&quot; : title.strip gallery &lt;&lt; &quot;&lt;img src=\\&quot;#{p.path_for(filename)}\\&quot; data-title=\\&quot;#{title}\\&quot; /&gt;&quot; end gallery &lt;&lt; &quot;&lt;/div&gt;&quot; gallery &lt;&lt; &quot;&lt;script&gt;&quot; gallery &lt;&lt; &quot; Galleria.configure(&#39;transition&#39;, &#39;fade&#39;);&quot; gallery &lt;&lt; &quot; Galleria.run(&#39;#galleria&#39;);&quot; gallery &lt;&lt; &quot;&lt;/script&gt;&quot; gallery end endendLiquid::Template.register_tag(&#39;galleria&#39;, Jekyll::GalleriaTag)Liquid::Template.register_tag(&#39;galleria_includes&#39;, Jekyll::GalleriaScriptIncludePatch)" }, { "title": "Second Royalty Statement", "url": "/blog/2014/09/22/second-royalty-statement/", "categories": "Writing", "tags": "redmine, book", "date": "2014-09-22 11:45:14 -0400", "snippet": "Although I haven’t really had much to write about lately, I just got another royalty update from Packt Publishing about Redmine Plugin Extension and Development so I wanted to share the latest sale...", "content": "Although I haven’t really had much to write about lately, I just got another royalty update from Packt Publishing about Redmine Plugin Extension and Development so I wanted to share the latest sales figures … sort of :PIn the table below, I’ve added the latest numbers to those from my previous post in order to show the running total of units sold this year.   Ebook Mini Subscription Packtlib Mini Print Book Mini Subscription (3rd Party Mini) Q1/2014 18 3 18 0 Q2/2014 73 1 33 2 Once again, I’ve decided to remove the actual sales numbers from the statement, but I left in TOTAL ROYALTIES TO BE PAID IN PERIOD section. I did this to show the progress from time of publication to now in terms of how much of the advance has been consumed by ACTUAL sales.At this rate, it’s possible I’ll see some additional money out of this title by the time 2014 is through .. which would be very exciting.I’m sure there are others out there who have been approached by technical publications and asked to write about some topic or other. I’m sure the numbers I’m posting here will convince you it’s not worth quitting your job and writing full time, but it looks like it could become profitable over time.If you’ve had anything published and are seeing a decent return on your “investment”, please share in the comments ;)" }, { "title": "Just Finished - Fire Emblem: The Sacred Stones", "url": "/blog/2014/08/06/just-finished-fire-emblem-the-sacred-stones/", "categories": "Gaming, Just Finished", "tags": "rpg, gba", "date": "2014-08-06 17:58:55 -0400", "snippet": "I’ve played a lot of RPGs over the years (JRPGs mostly) but have somehow managed to hear little to nothing about the Fire Emblem series.My focus was mostly on the Final Fantasy series, as well as o...", "content": "I’ve played a lot of RPGs over the years (JRPGs mostly) but have somehow managed to hear little to nothing about the Fire Emblem series.My focus was mostly on the Final Fantasy series, as well as other Square-Enix properties so it’s possible this is why :PThis post isn’t really meant to be a review; it’s more just my thoughts on the game right after I finished it as (a) I didn’t take any notes, and (b) I started this playthrough over a year ago.I’m using this as an opportunity to get back into writing a bit more frequently, so I apologize in advance if the subject matter isn’t covered very well, or if the writing is all over the place.I managed to complete the game in about 19 hours, so at least I managed to finish over an hour a month (which by gaming standards is terrible, but I’m married with kids and have a job so back off! :P).I played through on my Nexus 7 using GBA.emu (which I would highly recommend buying to support the author), as I don’t have an actual GBA (and prefer emulated games for convenience).The game is turn-based tactical combat. You can buy equipment for your team members at various shops, and there is a “world map” that ties the various locations together. This makes is seem as though you’re playing a board game.The story is pretty straightforward: a dark force was sealed with a bunch of magic stones which were then distributed for safe keeping. Now someone wants to get these stones and re-awaken the dark force.The goals of each map are either to defeat an enemy or capture a location. Along the way there are various NPC characters that you can either fight or try to persuade to join you.Fight outcome is determined purely mathematically (stats, resources, weapon selection, character skill level, enemy skill level, terrain) and is presented as 2 avatars on the map with health guages underneath that deplete based on the result of the last “turn” of combat.For some special battles, the characters are shown as their avatar representations and the fights are animated. These fights are generally plot advancement battles.Once of the main differentiating factors between Fire Emblem and other RPG series is “permanent death”. Once a character dies on the battle field, there is no way to revive them. This can make the game extremely difficult as you can potentially advance to a point where you cannot continue as you don’t have enough players to clear a map without dying.I found myself abusing save states as I didn’t want my characters to die, and I didn’t want to restart campaigns once I’d progressed beyond a certain point (usually about 10 minutes …).Overall I quite enjoyed the game. The story isn’t terrible and there are enough characters to keep the campaigns interesting if you want or, if you’re like me you stick with a core group of characters that end up being ridiculously over-leveled by the end.Once you finish the game, the final credits roll an epilogue unfolds that gives some final info about the characters that survived throughout the game. The characters that died in battle are also listed, and it summarizes where they died as well, which I thought was a nice touch.I will likely take a stab at another entry in this series and take a bit more time (in game, not another year :P) to explore as I missed A LOT.Once I finished the game I realized there was an entire Extras section where you can manage teams and practice battles (for points I think). Also I had a rogue with a members card and didn’t notice any of the “?” shops until after beating the last area.I also didn’t spend much time in the optional dungeons, though I did use upgrade my characters to new classes whenever possible :) The next time I tackle a Fire Emblem title though I think I’ll try to (a) explore more, (b) do more optional/side quests, (c) NOT restart campaigns once they’re underway.I’m currently also midway through a playthrough of Robotrek which I’ve been working on-again-off-again for about a year as well, so i may try to finish that off for the next Just Finished™ post.If anyone has suggestions for an RPG, leave a comment (currently I’m sticking with NES to PSP as the platform range)." }, { "title": "Pipe Command Output to Logentries", "url": "/blog/2014/07/16/pipe-command-output-to-logentries/", "categories": "Linux", "tags": "linux, logentries", "date": "2014-07-16 12:06:55 -0400", "snippet": "I’ve been using Logentries for a couple of months now to manage variou project logs and have found it to be extremely convenient.If you want to retrofit a crontab or any other process to use the Lo...", "content": "I’ve been using Logentries for a couple of months now to manage variou project logs and have found it to be extremely convenient.If you want to retrofit a crontab or any other process to use the Logentries Token-TCP type log, just do the following:COMMAND | while read -r line; do echo \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee $line\" &gt; /dev/tcp/data.logentries.com/80; doneWhere aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee is your log token, and COMMAND is whatever your like.For example:lsblk | while read -r line; do echo \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee $line\" &gt; /dev/tcp/data.logentries.com/80; doneHopefully this helps someone other than myself :)" }, { "title": "Adding LinkedIn Share Support to Octopress", "url": "/blog/2014/07/15/adding-linkedin-share-support-to-octopress/", "categories": "Ruby", "tags": "octopress", "date": "2014-07-15 15:55:14 -0400", "snippet": "I was looking for a plugin or an include to easily add LinkedIn support to the share options for my posts.A quick Google search came up dry, so I figured I’d just roll my own.In order to accomplish...", "content": "I was looking for a plugin or an include to easily add LinkedIn support to the share options for my posts.A quick Google search came up dry, so I figured I’d just roll my own.In order to accomplish this, all that is required is to edit source/_includes/post/sharing.html:diff --git a/source/_includes/post/sharing.html b/source/_includes/post/sharing.htmlindex e32500d..0bdd01e 100644--- a/source/_includes/post/sharing.html+++ b/source/_includes/post/sharing.html@@ -5,6 +5,12 @@ {% if site.google_plus_one %} &lt;div class=\"g-plusone\" data-size=\"{{ site.google_plus_one_size }}\"&gt;&lt;/div&gt; {% endif %}+ {% if site.linkedin_share %}+ &lt;script src=\"//platform.linkedin.com/in.js\" type=\"text/javascript\"&gt;+ lang: en_US+ &lt;/script&gt;+ &lt;script type=\"IN/Share\" data-url=\"{{ site.url }}{{ page.url }}\" data-counter=\"right\"&gt;&lt;/script&gt;+ {% endif %} {% if site.facebook_like %} &lt;div class=\"fb-like\" data-send=\"true\" data-width=\"450\" data-show-faces=\"false\"&gt;&lt;/div&gt; {% endif %}The change above adds a snippit of Javascript that passes the current site.url and page.url in a similar fashion as is done for Twitter.The Javascript source was generated using LinkedIn’s Share Plugin Generator, so if the format of the one I’ve chosen isn’t to your liking, you can generate another.Just in case you want to easily toggle this functionality, I’ve also set it up to check for a configuration value in your site’s _config.yml:diff --git a/_config.yml b/_config.ymlindex f8f825c..2dce55b 100644--- a/_config.yml+++ b/_config.yml@@ -104,4 +104,7 @@ google_analytics_tracking_id: xxx # Facebook Like facebook_like: true+# LinkedIn Share+linkedin_share: trueNow, the next time your site is regenerated, a LinkedIn share button will be available.This same method could be used to add pretty much any other social sharing sites you may want, as most should provide some form of widget generator." }, { "title": "First Royalty Statement", "url": "/blog/2014/07/15/8748os-first-royalty-statement/", "categories": "Writing", "tags": "redmine, book", "date": "2014-07-15 14:38:35 -0400", "snippet": "Just a quick update on Redmine Plugin Extension and Development. I received my first royalty statement today, which basically just indicates that not enough books have sold to exceed the advance I ...", "content": "Just a quick update on Redmine Plugin Extension and Development. I received my first royalty statement today, which basically just indicates that not enough books have sold to exceed the advance I received initially.(I probably didn’t need to redact anything from the image, but it seemed appropriate.)The deal I had with Packt was that they’d front me $600 against future sales, of which my cut is (I believe) ~ 16% of the list price.Still a ways to go (sales-wise) before I would consider this a “profitable” venture, but it’s nice to see that there is at least some initial interest.I was approached by Packt a little while back to author another book, but based on the amount of time I invested in this one as well as the sales figures I’m sharing here, I don’t think it would be a good choice :PShould I consider writing another book? Any thoughts out there from my fellow denizens of the interwebs?" }, { "title": "Subversion + Ruby on Heroku via Buildpacks", "url": "/blog/2014/07/07/subversion-plus-ruby-on-heroku-via-buildpacks/", "categories": "Heroku", "tags": "redmine, heroku, subversion", "date": "2014-07-07 09:28:38 -0400", "snippet": "Back in 2012, I wrote a post about Redmine and Subversion on Heroku that involved some funky hacks in order to build a working svn binary that could be uploaded as part of your Git payload.This can...", "content": "Back in 2012, I wrote a post about Redmine and Subversion on Heroku that involved some funky hacks in order to build a working svn binary that could be uploaded as part of your Git payload.This can be done a lot more cleanly by taking advantage of Heroku Buildpacks.All of the instructions I provided in my previous post can now be distilled into a single buildpack install command.If we want to leverage an existing solution, we just add the Subversion Buildpack to our app.The main “gotcha” here is that we can only have ONE buildpack defined at a time, which is problematic because our app’s environment (Ruby, PHP, Node .. etc) is managed as a buildpack (see https://devcenter.heroku.com/articles/buildpacks for more details).In order to get around this limitation though, we can leverage another buildpack, known as the heroku-buildpack-multi buildpack which allows us to define multiple buildpacks.For our purposes, we’re going to add Subversion and Ruby to our app:$ cd /path/to/app$ heroku config:add BUILDPACK_URL=https://github.com/ddollar/heroku-buildpack-multi.git$ cat .buildpackshttps://github.com/cucumber-ltd/heroku-buildpack-subversion.githttps://github.com/heroku/heroku-buildpack-ruby.git$ git commit .buildpacks -m \"Add Buildpacks\"$ git push heroku masterThis has helped me with my Redmine deployment on Heroku. Did it help you at all? Did I get something wrong. Let me know ;)" }, { "title": "Troubleshooting a Mongoid Connection Issue", "url": "/blog/2014/06/23/troubleshooting-a-mongoid-connection-issue/", "categories": "MongoDB", "tags": "mongodb, mongoid, rails, ruby", "date": "2014-06-23 10:27:58 -0400", "snippet": "I’ve been struggling with an issue for a while now regarding Mongoid connections just freezing when the host is not on localhost. I’ve tried posting this on stack overflow and GitHub, but haven’t r...", "content": "I’ve been struggling with an issue for a while now regarding Mongoid connections just freezing when the host is not on localhost. I’ve tried posting this on stack overflow and GitHub, but haven’t really gotten anywhere.I’m now trying to dive into the issue using GDB directly, which I’m starting off following the NewRelic blog post about debugging hung Ruby processes.First, once the process is frozen, I connect using:sudo gdb -p &lt;pid&gt;and then tried to get some info from the C-level backtraces via:(gdb) t a a btThis resulted in a lot of information that didn’t really help me (at least not immediately):Thread 8 (Thread 0x7f032a5e1700 (LWP 9001)):#0 0x00007f0329c0ffbd in poll () at ../sysdeps/unix/syscall-template.S:81#1 0x00007f032a0d1d60 in timer_thread_sleep (gvl=0x1ed8f28) at thread_pthread.c:1381#2 thread_timer (p=0x1ed8f28) at thread_pthread.c:1456#3 0x00007f032990c182 in start_thread (arg=0x7f032a5e1700) at pthread_create.c:312#4 0x00007f0329c1d30d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111Thread 7 (Thread 0x7f032a4c0700 (LWP 9002)):#0 sem_wait () at ../nptl/sysdeps/unix/sysv/linux/x86_64/sem_wait.S:85#1 0x00007f032495b75d in v8::internal::LinuxSemaphore::Wait() () from gems/ruby-2.1.1/extensions/x86_64-linux/2.1.0/therubyracer-0.12.1/v8/init.so#2 0x00007f032486104c in v8::internal::RuntimeProfiler::WaitForSomeIsolateToEnterJS() () from gems/ruby-2.1.1/extensions/x86_64-linux/2.1.0/therubyracer-0.12.1/v8/init.so#3 0x00007f032495b968 in v8::internal::SignalSender::Run() () from gems/ruby-2.1.1/extensions/x86_64-linux/2.1.0/therubyracer-0.12.1/v8/init.so#4 0x00007f032495b86e in v8::internal::ThreadEntry(void*) () from gems/ruby-2.1.1/extensions/x86_64-linux/2.1.0/therubyracer-0.12.1/v8/init.so#5 0x00007f032990c182 in start_thread (arg=0x7f032a4c0700) at pthread_create.c:312#6 0x00007f0329c1d30d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111Thread 6 (Thread 0x7f0321988700 (LWP 9008)):#0 0x00007f0329c14c33 in select () at ../sysdeps/unix/syscall-template.S:81#1 0x00007f032a0d8cdb in rb_fd_select (n=&lt;optimized out&gt;, readfds=&lt;optimized out&gt;, writefds=&lt;optimized out&gt;, exceptfds=&lt;optimized out&gt;, timeout=&lt;optimized out&gt;) at thread.c:3321#2 0x00007f032a0d9139 in native_fd_select (th=&lt;optimized out&gt;, timeout=0x7f0321987550, exceptfds=0x0, writefds=0x0, readfds=0x7f0321987810, n=12) at thread_pthread.c:1007#3 do_select (timeout=0x7f0321987550, except=0x0, write=0x0, read=0x7f0321987810, n=12) at thread.c:3436#4 rb_thread_fd_select (max=max@entry=12, read=read@entry=0x7f0321987810, write=write@entry=0x0, except=except@entry=0x0, timeout=timeout@entry=0x7f03219877e0) at thread.c:3582#5 0x00007f0329f96150 in select_internal (fds=0x7f0321987810, tp=0x7f03219877e0, except=&lt;optimized out&gt;, write=&lt;optimized out&gt;, read=&lt;optimized out&gt;) at io.c:8232#6 select_call (arg=arg@entry=139651425269744) at io.c:8302#7 0x00007f0329f67d97 in rb_ensure (b_proc=b_proc@entry=0x7f0329f95e30 &lt;select_call&gt;, data1=data1@entry=139651425269744, e_proc=e_proc@entry=0x7f0329f926a0 &lt;select_end&gt;, data2=data2@entry=139651425269744) at eval.c:850#8 0x00007f0329f92810 in rb_f_select (argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;, obj=&lt;optimized out&gt;) at io.c:8651#9 0x00007f032a0b3024 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f0321a88f20, th=0x96c91c0) at vm_insnhelper.c:1470#10 vm_call_cfunc (th=0x96c91c0, reg_cfp=0x7f0321a88f20, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1560#11 0x00007f032a0b7a44 in vm_exec_core (th=th@entry=0x96c91c0, initial=initial@entry=0) at insns.def:1028#12 0x00007f032a0bb5ec in vm_exec (th=0x96c91c0) at vm.c:1304#13 0x00007f032a0be89f in vm_invoke_proc (th=th@entry=0x96c91c0, proc=0x96c9690, self=133280920, defined_class=117512440, argc=0, argv=0x7f1b228, blockptr=blockptr@entry=0x0) at vm.c:788#14 0x00007f032a0be8da in rb_vm_invoke_proc (th=th@entry=0x96c91c0, proc=&lt;optimized out&gt;, argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;, blockptr=blockptr@entry=0x0) at vm.c:807#15 0x00007f032a0d475d in thread_start_func_2 (th=th@entry=0x96c91c0, stack_start=&lt;optimized out&gt;) at thread.c:535#16 0x00007f032a0d4a9b in thread_start_func_1 (th_ptr=0x96c91c0) at thread_pthread.c:803#17 0x00007f032990c182 in start_thread (arg=0x7f0321988700) at pthread_create.c:312#18 0x00007f0329c1d30d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111Thread 5 (Thread 0x7f0321786700 (LWP 9009)):#0 pthread_cond_timedwait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S:238#1 0x00007f032a0d27ff in native_cond_timedwait (ts=&lt;optimized out&gt;, mutex=&lt;optimized out&gt;, cond=&lt;optimized out&gt;) at thread_pthread.c:352#2 native_sleep (th=0x96c9870, timeout_tv=0x7f03217857c0) at thread_pthread.c:1061#3 0x00007f032a0d55fa in sleep_timeval (th=0x96c9870, tv=..., spurious_check=spurious_check@entry=1) at thread.c:1046#4 0x00007f032a0d57ba in rb_thread_wait_for (time=...) at thread.c:1115#5 0x00007f0329ff27d0 in rb_f_sleep (argc=1, argv=0x7f0321787038) at process.c:4193#6 0x00007f032a0b3024 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f0321886f70, th=0x96c9870) at vm_insnhelper.c:1470#7 vm_call_cfunc (th=0x96c9870, reg_cfp=0x7f0321886f70, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1560#8 0x00007f032a0b7a44 in vm_exec_core (th=th@entry=0x96c9870, initial=initial@entry=0) at insns.def:1028#9 0x00007f032a0bb5ec in vm_exec (th=0x96c9870) at vm.c:1304#10 0x00007f032a0be89f in vm_invoke_proc (th=th@entry=0x96c9870, proc=0x96c9d90, self=133279880, defined_class=117256360, argc=0, argv=0x7f1afd0, blockptr=blockptr@entry=0x0) at vm.c:788#11 0x00007f032a0be8da in rb_vm_invoke_proc (th=th@entry=0x96c9870, proc=&lt;optimized out&gt;, argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;, blockptr=blockptr@entry=0x0) at vm.c:807#12 0x00007f032a0d475d in thread_start_func_2 (th=th@entry=0x96c9870, stack_start=&lt;optimized out&gt;) at thread.c:535#13 0x00007f032a0d4a9b in thread_start_func_1 (th_ptr=0x96c9870) at thread_pthread.c:803#14 0x00007f032990c182 in start_thread (arg=0x7f0321786700) at pthread_create.c:312#15 0x00007f0329c1d30d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111Thread 4 (Thread 0x7f0321584700 (LWP 9010)):#0 0x00007f0329c14c33 in select () at ../sysdeps/unix/syscall-template.S:81#1 0x00007f032a0d8cdb in rb_fd_select (n=&lt;optimized out&gt;, readfds=&lt;optimized out&gt;, writefds=&lt;optimized out&gt;, exceptfds=&lt;optimized out&gt;, timeout=&lt;optimized out&gt;) at thread.c:3321#2 0x00007f032a0d9139 in native_fd_select (th=&lt;optimized out&gt;, timeout=0x0, exceptfds=0x0, writefds=0x0, readfds=0x7f0321583810, n=11) at thread_pthread.c:1007#3 do_select (timeout=0x0, except=0x0, write=0x0, read=0x7f0321583810, n=11) at thread.c:3436#4 rb_thread_fd_select (max=max@entry=11, read=read@entry=0x7f0321583810, write=write@entry=0x0, except=except@entry=0x0, timeout=timeout@entry=0x0) at thread.c:3582#5 0x00007f0329f96150 in select_internal (fds=0x7f0321583810, tp=0x0, except=&lt;optimized out&gt;, write=&lt;optimized out&gt;, read=&lt;optimized out&gt;) at io.c:8232#6 select_call (arg=arg@entry=139651421059056) at io.c:8302#7 0x00007f0329f67d97 in rb_ensure (b_proc=b_proc@entry=0x7f0329f95e30 &lt;select_call&gt;, data1=data1@entry=139651421059056, e_proc=e_proc@entry=0x7f0329f926a0 &lt;select_end&gt;, data2=data2@entry=139651421059056) at eval.c:850#8 0x00007f0329f92810 in rb_f_select (argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;, obj=&lt;optimized out&gt;) at io.c:8651#9 0x00007f032a0b3024 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f0321684f20, th=0x96c9f10) at vm_insnhelper.c:1470#10 vm_call_cfunc (th=0x96c9f10, reg_cfp=0x7f0321684f20, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1560#11 0x00007f032a0b7a44 in vm_exec_core (th=th@entry=0x96c9f10, initial=initial@entry=0) at insns.def:1028#12 0x00007f032a0bb5ec in vm_exec (th=0x96c9f10) at vm.c:1304#13 0x00007f032a0be89f in vm_invoke_proc (th=th@entry=0x96c9f10, proc=0x96ec480, self=133126360, defined_class=118126960, argc=0, argv=0x7f1adf0, blockptr=blockptr@entry=0x0) at vm.c:788#14 0x00007f032a0be8da in rb_vm_invoke_proc (th=th@entry=0x96c9f10, proc=&lt;optimized out&gt;, argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;, blockptr=blockptr@entry=0x0) at vm.c:807#15 0x00007f032a0d475d in thread_start_func_2 (th=th@entry=0x96c9f10, stack_start=&lt;optimized out&gt;) at thread.c:535#16 0x00007f032a0d4a9b in thread_start_func_1 (th_ptr=0x96c9f10) at thread_pthread.c:803#17 0x00007f032990c182 in start_thread (arg=0x7f0321584700) at pthread_create.c:312#18 0x00007f0329c1d30d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111Thread 3 (Thread 0x7f0321180700 (LWP 9472)):#0 0x00007f0329c1007f in __GI_ppoll (fds=fds@entry=0x7f032117bb90, nfds=nfds@entry=1, timeout=&lt;optimized out&gt;, timeout@entry=0x0, sigmask=sigmask@entry=0x0) at ../sysdeps/unix/sysv/linux/ppoll.c:56#1 0x00007f032a0d9b28 in rb_wait_for_single_fd (fd=fd@entry=15, events=events@entry=1, tv=tv@entry=0x0) at thread.c:3656#2 0x00007f032a0da044 in rb_thread_wait_fd_rw (read=1, fd=fd@entry=15) at thread.c:3495#3 rb_thread_wait_fd (fd=fd@entry=15) at thread.c:3506#4 0x00007f0329f9693f in rb_io_wait_readable (f=15) at io.c:1092#5 0x00007f0329f97cee in io_bufread (ptr=0x7f03042c3440 \"\", len=36, fptr=0x7f0310054420) at io.c:2035#6 0x00007f0329f97e24 in bufread_call (arg=arg@entry=139651416833616) at io.c:2071#7 0x00007f0329f67d97 in rb_ensure (b_proc=b_proc@entry=0x7f0329f97e10 &lt;bufread_call&gt;, data1=data1@entry=139651416833616, e_proc=e_proc@entry=0x7f032a04f900 &lt;rb_str_unlocktmp&gt;, data2=&lt;optimized out&gt;) at eval.c:850#8 0x00007f032a05e8db in rb_str_locktmp_ensure (str=&lt;optimized out&gt;, func=func@entry=0x7f0329f97e10 &lt;bufread_call&gt;, arg=arg@entry=139651416833616) at string.c:2004#9 0x00007f0329f9ad06 in io_fread (fptr=0x7f0310054420, size=36, offset=0, str=139650673747040) at io.c:2085#10 io_read (argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;, io=35833440) at io.c:2816#11 0x00007f032a0bfae1 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f032127e770, th=0x7f030c0455c0) at vm_insnhelper.c:1470#12 vm_call_cfunc (ci=&lt;optimized out&gt;, reg_cfp=0x7f032127e770, th=0x7f030c0455c0) at vm_insnhelper.c:1560---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---#13 vm_call_method (th=0x7f030c0455c0, cfp=0x7f032127e770, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1754#14 0x00007f032a0b7b9c in vm_exec_core (th=th@entry=0x7f030c0455c0, initial=initial@entry=0) at insns.def:1050#15 0x00007f032a0bb5ec in vm_exec (th=th@entry=0x7f030c0455c0) at vm.c:1304#16 0x00007f032a0c2cff in invoke_block_from_c (defined_class=79426520, cref=0x0, blockptr=0x0, argv=0x7f032117c2e8, argc=1, self=72558880, block=&lt;optimized out&gt;, th=0x7f030c0455c0) at vm.c:732#17 vm_yield (argv=&lt;optimized out&gt;, argc=&lt;optimized out&gt;, th=&lt;optimized out&gt;) at vm.c:763#18 rb_yield_0 (argv=0x7f032117c2e8, argc=1) at vm_eval.c:938#19 rb_yield (val=&lt;optimized out&gt;) at vm_eval.c:948#20 0x00007f0329f1d4bd in rb_ary_collect (ary=139650673749800) at array.c:2684#21 0x00007f032a0b3024 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f032127ea90, th=0x7f030c0455c0) at vm_insnhelper.c:1470#22 vm_call_cfunc (th=0x7f030c0455c0, reg_cfp=0x7f032127ea90, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1560#23 0x00007f032a0b8385 in vm_exec_core (th=th@entry=0x7f030c0455c0, initial=initial@entry=0) at insns.def:999#24 0x00007f032a0bb5ec in vm_exec (th=th@entry=0x7f030c0455c0) at vm.c:1304#25 0x00007f032a0c2cff in invoke_block_from_c (defined_class=80043920, cref=0x0, blockptr=0x0, argv=0x7f032117c6c8, argc=1, self=139650673695240, block=&lt;optimized out&gt;, th=0x7f030c0455c0) at vm.c:732#26 vm_yield (argv=&lt;optimized out&gt;, argc=&lt;optimized out&gt;, th=&lt;optimized out&gt;) at vm.c:763#27 rb_yield_0 (argv=0x7f032117c6c8, argc=1) at vm_eval.c:938#28 rb_yield (val=&lt;optimized out&gt;) at vm_eval.c:948#29 0x00007f0329f15fa2 in rb_ary_each (array=139650673713080) at array.c:1792#30 0x00007f032a0b3024 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f032127f170, th=0x7f030c0455c0) at vm_insnhelper.c:1470#31 vm_call_cfunc (th=0x7f030c0455c0, reg_cfp=0x7f032127f170, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1560#32 0x00007f032a0b8385 in vm_exec_core (th=th@entry=0x7f030c0455c0, initial=initial@entry=0) at insns.def:999#33 0x00007f032a0bb5ec in vm_exec (th=0x7f030c0455c0) at vm.c:1304#34 0x00007f032a0be89f in vm_invoke_proc (th=0x7f030c0455c0, proc=proc@entry=0x7f0304886b90, self=139650673713320, defined_class=78042600, argc=argc@entry=0, argv=argv@entry=0x7f0321182020, blockptr=0x0) at vm.c:788#35 0x00007f032a0be8da in rb_vm_invoke_proc (th=&lt;optimized out&gt;, proc=proc@entry=0x7f0304886b90, argc=argc@entry=0, argv=argv@entry=0x7f0321182020, blockptr=&lt;optimized out&gt;) at vm.c:807#36 0x00007f0329f6e550 in proc_call (argc=0, argv=0x7f0321182020, procval=139650673713160) at proc.c:734#37 0x00007f032a0b3024 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f032127f300, th=0x7f030c0455c0) at vm_insnhelper.c:1470#38 vm_call_cfunc (th=0x7f030c0455c0, reg_cfp=0x7f032127f300, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1560#39 0x00007f032a0b7a44 in vm_exec_core (th=th@entry=0x7f030c0455c0, initial=initial@entry=0) at insns.def:1028#40 0x00007f032a0bb5ec in vm_exec (th=0x7f030c0455c0) at vm.c:1304#41 0x00007f032a0be89f in vm_invoke_proc (th=th@entry=0x7f030c0455c0, proc=0x9676cb0, self=139650673658200, defined_class=79743600, argc=1, argv=argv@entry=0x7f032117d0a0, blockptr=0x0) at vm.c:788#42 0x00007f032a0bea45 in vm_call_bmethod_body (argv=0x7f032117d0a0, ci=0x7f032117d280, th=0x7f030c0455c0) at vm_insnhelper.c:1592#43 vm_call_bmethod (th=th@entry=0x7f030c0455c0, cfp=cfp@entry=0x7f032127f7b0, ci=ci@entry=0x7f032117d280) at vm_insnhelper.c:1607#44 0x00007f032a0bfc1e in vm_call_method (th=th@entry=0x7f030c0455c0, cfp=cfp@entry=0x7f032127f7b0, ci=ci@entry=0x7f032117d280) at vm_insnhelper.c:1774#45 0x00007f032a0bf691 in vm_call_opt_send (th=0x7f030c0455c0, reg_cfp=0x7f032127f7b0, ci=0x7f032117d280) at vm_insnhelper.c:1657#46 0x00007f032a0b7a44 in vm_exec_core (th=th@entry=0x7f030c0455c0, initial=initial@entry=0) at insns.def:1028#47 0x00007f032a0bb5ec in vm_exec (th=0x7f030c0455c0) at vm.c:1304#48 0x00007f032a0bec82 in vm_yield_with_cref (cref=&lt;optimized out&gt;, argv=&lt;optimized out&gt;, argc=&lt;optimized out&gt;, th=0x7f030c0455c0) at vm.c:755#49 yield_under (under=&lt;optimized out&gt;, self=&lt;optimized out&gt;, values=139650673660760) at vm_eval.c:1531#50 0x00007f032a0bfae1 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f032127f9e0, th=0x7f030c0455c0) at vm_insnhelper.c:1470#51 vm_call_cfunc (ci=&lt;optimized out&gt;, reg_cfp=0x7f032127f9e0, th=0x7f030c0455c0) at vm_insnhelper.c:1560#52 vm_call_method (th=0x7f030c0455c0, cfp=0x7f032127f9e0, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1754#53 0x00007f032a0b8385 in vm_exec_core (th=th@entry=0x7f030c0455c0, initial=initial@entry=0) at insns.def:999#54 0x00007f032a0bb5ec in vm_exec (th=0x7f030c0455c0) at vm.c:1304#55 0x00007f032a0be89f in vm_invoke_proc (th=0x7f030c0455c0, proc=proc@entry=0x7f030010a480, self=83224000, defined_class=87087200, argc=argc@entry=2, argv=argv@entry=0x7f0321181c90, blockptr=0x0) at vm.c:788#56 0x00007f032a0be8da in rb_vm_invoke_proc (th=&lt;optimized out&gt;, proc=proc@entry=0x7f030010a480, argc=argc@entry=2, argv=argv@entry=0x7f0321181c90, blockptr=&lt;optimized out&gt;) at vm.c:807#57 0x00007f0329f6e550 in proc_call (argc=2, argv=0x7f0321181c90, procval=139651130810120) at proc.c:734#58 0x00007f032a0b3024 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f032127fa80, th=0x7f030c0455c0) at vm_insnhelper.c:1470#59 vm_call_cfunc (th=0x7f030c0455c0, reg_cfp=0x7f032127fa80, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1560#60 0x00007f032a0b7a44 in vm_exec_core (th=th@entry=0x7f030c0455c0, initial=initial@entry=0) at insns.def:1028#61 0x00007f032a0bb5ec in vm_exec (th=0x7f030c0455c0) at vm.c:1304#62 0x00007f032a0be89f in vm_invoke_proc (th=0x7f030c0455c0, proc=proc@entry=0x7f030010a560, self=87087800, defined_class=87087760, argc=argc@entry=1, argv=argv@entry=0x7f0321181c38, blockptr=0x0) at vm.c:788#63 0x00007f032a0be8da in rb_vm_invoke_proc (th=&lt;optimized out&gt;, proc=proc@entry=0x7f030010a560, argc=argc@entry=1, argv=argv@entry=0x7f0321181c38, blockptr=&lt;optimized out&gt;) at vm.c:807#64 0x00007f0329f6e550 in proc_call (argc=1, argv=0x7f0321181c38, procval=139651130809960) at proc.c:734#65 0x00007f032a0bfae1 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f032127fb20, th=0x7f030c0455c0) at vm_insnhelper.c:1470#66 vm_call_cfunc (ci=&lt;optimized out&gt;, reg_cfp=0x7f032127fb20, th=0x7f030c0455c0) at vm_insnhelper.c:1560#67 vm_call_method (th=0x7f030c0455c0, cfp=0x7f032127fb20, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1754#68 0x00007f032a0b7a44 in vm_exec_core (th=th@entry=0x7f030c0455c0, initial=initial@entry=0) at insns.def:1028#69 0x00007f032a0bb5ec in vm_exec (th=0x7f030c0455c0) at vm.c:1304#70 0x00007f032a0be89f in vm_invoke_proc (th=0x7f030c0455c0, proc=proc@entry=0x7f030010a720, self=87087800, defined_class=87087760, argc=argc@entry=1, argv=argv@entry=0x7f0321181be0, blockptr=0x0) at vm.c:788#71 0x00007f032a0be8da in rb_vm_invoke_proc (th=&lt;optimized out&gt;, proc=proc@entry=0x7f030010a720, argc=argc@entry=1, argv=argv@entry=0x7f0321181be0, blockptr=&lt;optimized out&gt;) at vm.c:807#72 0x00007f0329f6e550 in proc_call (argc=1, argv=0x7f0321181be0, procval=139651130809560) at proc.c:734#73 0x00007f032a0b3024 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f032127fbc0, th=0x7f030c0455c0) at vm_insnhelper.c:1470#74 vm_call_cfunc (th=0x7f030c0455c0, reg_cfp=0x7f032127fbc0, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1560#75 0x00007f032a0b7a44 in vm_exec_core (th=th@entry=0x7f030c0455c0, initial=initial@entry=0) at insns.def:1028#76 0x00007f032a0bb5ec in vm_exec (th=0x7f030c0455c0) at vm.c:1304---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---#77 0x00007f032a0be89f in vm_invoke_proc (th=0x7f030c0455c0, proc=proc@entry=0x7f0304529c40, self=156831200, defined_class=50567600, argc=argc@entry=1, argv=argv@entry=0x7f0321181990, blockptr=0x0) at vm.c:788#78 0x00007f032a0be8da in rb_vm_invoke_proc (th=&lt;optimized out&gt;, proc=proc@entry=0x7f0304529c40, argc=argc@entry=1, argv=argv@entry=0x7f0321181990, blockptr=&lt;optimized out&gt;) at vm.c:807#79 0x00007f0329f6e550 in proc_call (argc=1, argv=0x7f0321181990, procval=139650673670240) at proc.c:734#80 0x00007f032a0b3024 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f0321280070, th=0x7f030c0455c0) at vm_insnhelper.c:1470#81 vm_call_cfunc (th=0x7f030c0455c0, reg_cfp=0x7f0321280070, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1560#82 0x00007f032a0b7a44 in vm_exec_core (th=th@entry=0x7f030c0455c0, initial=initial@entry=0) at insns.def:1028#83 0x00007f032a0bb5ec in vm_exec (th=th@entry=0x7f030c0455c0) at vm.c:1304#84 0x00007f032a0c2cff in invoke_block_from_c (defined_class=76547880, cref=0x0, blockptr=0x0, argv=0x7f032117ee08, argc=1, self=34415960, block=&lt;optimized out&gt;, th=0x7f030c0455c0) at vm.c:732#85 vm_yield (argv=&lt;optimized out&gt;, argc=&lt;optimized out&gt;, th=&lt;optimized out&gt;) at vm.c:763#86 rb_yield_0 (argv=0x7f032117ee08, argc=1) at vm_eval.c:938#87 rb_yield (val=&lt;optimized out&gt;) at vm_eval.c:948#88 0x00007f0329f15fa2 in rb_ary_each (array=139650673629520) at array.c:1792#89 0x00007f032a0b3024 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f03212801b0, th=0x7f030c0455c0) at vm_insnhelper.c:1470#90 vm_call_cfunc (th=0x7f030c0455c0, reg_cfp=0x7f03212801b0, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1560#91 0x00007f032a0b8385 in vm_exec_core (th=th@entry=0x7f030c0455c0, initial=initial@entry=0) at insns.def:999#92 0x00007f032a0bb5ec in vm_exec (th=th@entry=0x7f030c0455c0) at vm.c:1304#93 0x00007f032a0c2924 in invoke_block_from_c (defined_class=80036240, cref=0x0, blockptr=0x0, argv=0x7f032117f1c8, argc=1, self=120753520, block=&lt;optimized out&gt;, th=0x7f030c0455c0) at vm.c:732#94 vm_yield (argv=0x7f032117f1c8, argc=1, th=0x7f030c0455c0) at vm.c:763#95 rb_yield_0 (argv=0x7f032117f1c8, argc=1) at vm_eval.c:938#96 catch_i (tag=&lt;optimized out&gt;, data=data@entry=0) at vm_eval.c:1772#97 0x00007f032a0b4b4a in rb_catch_protect (t=&lt;optimized out&gt;, func=func@entry=0x7f032a0c26c0 &lt;catch_i&gt;, data=data@entry=0, stateptr=stateptr@entry=0x7f032117f340) at vm_eval.c:1858#98 0x00007f032a0b4bbc in rb_catch_obj (t=&lt;optimized out&gt;, func=func@entry=0x7f032a0c26c0 &lt;catch_i&gt;, data=data@entry=0) at vm_eval.c:1837#99 0x00007f032a0b4c6e in rb_f_catch (argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;) at vm_eval.c:1823#100 0x00007f032a0b3024 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f03212802f0, th=0x7f030c0455c0) at vm_insnhelper.c:1470#101 vm_call_cfunc (th=0x7f030c0455c0, reg_cfp=0x7f03212802f0, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1560#102 0x00007f032a0b8385 in vm_exec_core (th=th@entry=0x7f030c0455c0, initial=initial@entry=0) at insns.def:999#103 0x00007f032a0bb5ec in vm_exec (th=0x7f030c0455c0) at vm.c:1304#104 0x00007f032a0be89f in vm_invoke_proc (th=0x7f030c0455c0, proc=proc@entry=0x96c8680, self=133126360, defined_class=118126960, argc=argc@entry=2, argv=argv@entry=0x7f0321181070, blockptr=0x0) at vm.c:788#105 0x00007f032a0be8da in rb_vm_invoke_proc (th=&lt;optimized out&gt;, proc=proc@entry=0x96c8680, argc=argc@entry=2, argv=argv@entry=0x7f0321181070, blockptr=&lt;optimized out&gt;) at vm.c:807#106 0x00007f0329f6e550 in proc_call (argc=2, argv=0x7f0321181070, procval=133281320) at proc.c:734#107 0x00007f032a0b3024 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f0321280f70, th=0x7f030c0455c0) at vm_insnhelper.c:1470---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---#108 vm_call_cfunc (th=0x7f030c0455c0, reg_cfp=0x7f0321280f70, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1560#109 0x00007f032a0b8385 in vm_exec_core (th=th@entry=0x7f030c0455c0, initial=initial@entry=0) at insns.def:999#110 0x00007f032a0bb5ec in vm_exec (th=0x7f030c0455c0) at vm.c:1304#111 0x00007f032a0be89f in vm_invoke_proc (th=th@entry=0x7f030c0455c0, proc=0x7f030c044ca0, self=133281640, defined_class=117256680, argc=0, argv=0x7f02f4c943a0, blockptr=blockptr@entry=0x0) at vm.c:788#112 0x00007f032a0be8da in rb_vm_invoke_proc (th=th@entry=0x7f030c0455c0, proc=&lt;optimized out&gt;, argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;, blockptr=blockptr@entry=0x0) at vm.c:807#113 0x00007f032a0d475d in thread_start_func_2 (th=th@entry=0x7f030c0455c0, stack_start=&lt;optimized out&gt;) at thread.c:535#114 0x00007f032a0d4a9b in thread_start_func_1 (th_ptr=0x7f030c0455c0) at thread_pthread.c:803#115 0x00007f032990c182 in start_thread (arg=0x7f0321180700) at pthread_create.c:312#116 0x00007f0329c1d30d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111Thread 2 (Thread 0x7f0320f7e700 (LWP 9563)):#0 pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185#1 0x00007f032a0d6ce3 in native_cond_wait (mutex=0x8ef42b0, cond=0x8ef42d8) at thread_pthread.c:334#2 lock_func (timeout_ms=0, mutex=0x8ef42b0, th=0x7f030c0485d0) at thread.c:4324#3 rb_mutex_lock (self=120765160) at thread.c:4398#4 0x00007f032a0b3024 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f032107ebb0, th=0x7f030c0485d0) at vm_insnhelper.c:1470#5 vm_call_cfunc (th=0x7f030c0485d0, reg_cfp=0x7f032107ebb0, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1560#6 0x00007f032a0b7a44 in vm_exec_core (th=th@entry=0x7f030c0485d0, initial=initial@entry=0) at insns.def:1028#7 0x00007f032a0bb5ec in vm_exec (th=0x7f030c0485d0) at vm.c:1304#8 0x00007f032a0be89f in vm_invoke_proc (th=0x7f030c0485d0, proc=proc@entry=0x96c8680, self=133126360, defined_class=118126960, argc=argc@entry=2, argv=argv@entry=0x7f0320f7f070, blockptr=0x0) at vm.c:788#9 0x00007f032a0be8da in rb_vm_invoke_proc (th=&lt;optimized out&gt;, proc=proc@entry=0x96c8680, argc=argc@entry=2, argv=argv@entry=0x7f0320f7f070, blockptr=&lt;optimized out&gt;) at vm.c:807#10 0x00007f0329f6e550 in proc_call (argc=2, argv=0x7f0320f7f070, procval=133281320) at proc.c:734#11 0x00007f032a0b3024 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f032107ef70, th=0x7f030c0485d0) at vm_insnhelper.c:1470#12 vm_call_cfunc (th=0x7f030c0485d0, reg_cfp=0x7f032107ef70, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1560#13 0x00007f032a0b8385 in vm_exec_core (th=th@entry=0x7f030c0485d0, initial=initial@entry=0) at insns.def:999#14 0x00007f032a0bb5ec in vm_exec (th=0x7f030c0485d0) at vm.c:1304#15 0x00007f032a0be89f in vm_invoke_proc (th=th@entry=0x7f030c0485d0, proc=0x7f030c047b40, self=133281640, defined_class=117256680, argc=0, argv=0x7f02f4cd2290, blockptr=blockptr@entry=0x0) at vm.c:788#16 0x00007f032a0be8da in rb_vm_invoke_proc (th=th@entry=0x7f030c0485d0, proc=&lt;optimized out&gt;, argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;, blockptr=blockptr@entry=0x0) at vm.c:807#17 0x00007f032a0d475d in thread_start_func_2 (th=th@entry=0x7f030c0485d0, stack_start=&lt;optimized out&gt;) at thread.c:535#18 0x00007f032a0d4a9b in thread_start_func_1 (th_ptr=0x7f030c0485d0) at thread_pthread.c:803#19 0x00007f032990c182 in start_thread (arg=0x7f0320f7e700) at pthread_create.c:312#20 0x00007f0329c1d30d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111Thread 1 (Thread 0x7f032a5c2740 (LWP 8999)):#0 pthread_cond_wait@@GLIBC_2.3.2 () at ../nptl/sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185#1 0x00007f032a0d2390 in native_cond_wait (mutex=0x1ed96d0, cond=&lt;optimized out&gt;) at thread_pthread.c:334#2 native_sleep (th=th@entry=0x1ed95b0, timeout_tv=0x0) at thread_pthread.c:1059#3 0x00007f032a0d618a in sleep_forever (deadlockable=1, spurious_check=0, th=0x1ed95b0) at thread.c:996#4 thread_join_sleep (arg=arg@entry=140734195440096) at thread.c:787#5 0x00007f0329f67d97 in rb_ensure (b_proc=b_proc@entry=0x7f032a0d6090 &lt;thread_join_sleep&gt;, data1=data1@entry=140734195440096, e_proc=e_proc@entry=0x7f032a0cfa10 &lt;remove_from_join_list&gt;, data2=data2@entry=140734195440096) at eval.c:850#6 0x00007f032a0d0cd0 in thread_join (delay=&lt;optimized out&gt;, target_th=0x96c9f10) at thread.c:829#7 thread_join_m (argc=&lt;optimized out&gt;, argv=0x7f032a4c1168, self=&lt;optimized out&gt;) at thread.c:909#8 0x00007f032a0bfae1 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f032a5c0ca0, th=0x1ed95b0) at vm_insnhelper.c:1470#9 vm_call_cfunc (ci=&lt;optimized out&gt;, reg_cfp=0x7f032a5c0ca0, th=0x1ed95b0) at vm_insnhelper.c:1560#10 vm_call_method (th=0x1ed95b0, cfp=0x7f032a5c0ca0, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1754#11 0x00007f032a0b7a44 in vm_exec_core (th=th@entry=0x1ed95b0, initial=initial@entry=0) at insns.def:1028#12 0x00007f032a0bb5ec in vm_exec (th=th@entry=0x1ed95b0) at vm.c:1304#13 0x00007f032a0c2cff in invoke_block_from_c (defined_class=51649880, cref=0x0, blockptr=0x0, argv=0x7fff3bba1e08, argc=1, self=51647880, block=&lt;optimized out&gt;, th=0x1ed95b0) at vm.c:732#14 vm_yield (argv=&lt;optimized out&gt;, argc=&lt;optimized out&gt;, th=&lt;optimized out&gt;) at vm.c:763#15 rb_yield_0 (argv=0x7fff3bba1e08, argc=1) at vm_eval.c:938#16 rb_yield (val=val@entry=52428600) at vm_eval.c:948#17 0x00007f0329fcb079 in rb_obj_tap (obj=52428600) at object.c:675#18 0x00007f032a0bfae1 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f032a5c0e30, th=0x1ed95b0) at vm_insnhelper.c:1470#19 vm_call_cfunc (ci=&lt;optimized out&gt;, reg_cfp=0x7f032a5c0e30, th=0x1ed95b0) at vm_insnhelper.c:1560#20 vm_call_method (th=0x1ed95b0, cfp=0x7f032a5c0e30, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1754#21 0x00007f032a0b8385 in vm_exec_core (th=th@entry=0x1ed95b0, initial=initial@entry=0) at insns.def:999#22 0x00007f032a0bb5ec in vm_exec (th=0x1ed95b0) at vm.c:1304#23 0x00007f032a0c43c9 in rb_iseq_eval (iseqval=&lt;optimized out&gt;) at vm.c:1549#24 0x00007f0329f6a630 in rb_load_internal0 (th=0x1ed95b0, fname=52100160, wrap=wrap@entry=0) at load.c:615#25 0x00007f0329f6bdde in rb_load_internal (wrap=0, fname=&lt;optimized out&gt;) at load.c:644#26 rb_require_safe (fname=52099680, safe=0) at load.c:996#27 0x00007f032a0bfae1 in vm_call_cfunc_with_frame (ci=&lt;optimized out&gt;, reg_cfp=0x7f032a5c0f70, th=0x1ed95b0) at vm_insnhelper.c:1470#28 vm_call_cfunc (ci=&lt;optimized out&gt;, reg_cfp=0x7f032a5c0f70, th=0x1ed95b0) at vm_insnhelper.c:1560#29 vm_call_method (th=0x1ed95b0, cfp=0x7f032a5c0f70, ci=&lt;optimized out&gt;) at vm_insnhelper.c:1754#30 0x00007f032a0b7a44 in vm_exec_core (th=th@entry=0x1ed95b0, initial=initial@entry=0) at insns.def:1028#31 0x00007f032a0bb5ec in vm_exec (th=th@entry=0x1ed95b0) at vm.c:1304#32 0x00007f032a0c4636 in rb_iseq_eval_main (iseqval=iseqval@entry=52095080) at vm.c:1562#33 0x00007f0329f6510a in ruby_exec_internal (n=0x31ae868) at eval.c:253#34 0x00007f0329f670ad in ruby_exec_node (n=n@entry=0x31ae868) at eval.c:318#35 0x00007f0329f694dc in ruby_run_node (n=0x31ae868) at eval.c:310#36 0x000000000040088b in main (argc=3, argv=0x7fff3bba2b88) at main.c:36I then thought I might get a bit more info if I dumped the current Ruby backtrace:(gdb) call (void) close(1)(gdb) call (void) close(2)(gdb) shell tty/dev/pts/15 &lt;--- this will likely be different on your machine(gdb) call (int) open(\"/dev/pts/15\", 2, 0)$1 = 1(gdb) call (int) open(\"/dev/pts/15\", 2, 0)$2 = 2(gdb) call (void)rb_backtrace()This now shows me what’s going on inside my Ruby process: gems/ruby-2.1.1/gems/puma-2.8.2/lib/puma/thread_pool.rb:92:in `block in spawn_thread' gems/ruby-2.1.1/gems/puma-2.8.2/lib/puma/thread_pool.rb:92:in `call' gems/ruby-2.1.1/gems/puma-2.8.2/lib/puma/server.rb:254:in `block in run' gems/ruby-2.1.1/gems/puma-2.8.2/lib/puma/server.rb:361:in `process_client' gems/ruby-2.1.1/gems/puma-2.8.2/lib/puma/server.rb:490:in `handle_request' gems/ruby-2.1.1/gems/rack-1.5.2/lib/rack/content_length.rb:14:in `call' gems/ruby-2.1.1/gems/railties-4.1.1/lib/rails/application.rb:144:in `call' gems/ruby-2.1.1/gems/railties-4.1.1/lib/rails/engine.rb:514:in `call' gems/ruby-2.1.1/gems/airbrake-4.0.0/lib/airbrake/user_informer.rb:12:in `call' gems/ruby-2.1.1/gems/airbrake-4.0.0/lib/airbrake/user_informer.rb:16:in `_call' gems/ruby-2.1.1/gems/rack-1.5.2/lib/rack/sendfile.rb:112:in `call' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/middleware/static.rb:64:in `call' gems/ruby-2.1.1/gems/rack-1.5.2/lib/rack/lock.rb:17:in `call' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/cache/strategy/local_cache_middleware.rb:26:in `call' gems/ruby-2.1.1/gems/rack-1.5.2/lib/rack/runtime.rb:17:in `call' gems/ruby-2.1.1/gems/rack-1.5.2/lib/rack/methodoverride.rb:21:in `call' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/middleware/request_id.rb:21:in `call' gems/ruby-2.1.1/gems/quiet_assets-1.0.2/lib/quiet_assets.rb:18:in `call_with_quiet_assets' gems/ruby-2.1.1/gems/railties-4.1.1/lib/rails/rack/logger.rb:20:in `call' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/tagged_logging.rb:68:in `tagged' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/tagged_logging.rb:26:in `tagged' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/tagged_logging.rb:68:in `block in tagged' gems/ruby-2.1.1/gems/railties-4.1.1/lib/rails/rack/logger.rb:20:in `block in call' gems/ruby-2.1.1/gems/railties-4.1.1/lib/rails/rack/logger.rb:38:in `call_app' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/middleware/show_exceptions.rb:30:in `call' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call' gems/ruby-2.1.1/gems/airbrake-4.0.0/lib/airbrake/rails/middleware.rb:13:in `call' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/middleware/remote_ip.rb:76:in `call' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/middleware/reloader.rb:73:in `call' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/middleware/callbacks.rb:27:in `call' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/callbacks.rb:82:in `run_callbacks' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/middleware/callbacks.rb:29:in `block in call' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/middleware/cookies.rb:560:in `call' gems/ruby-2.1.1/gems/rack-1.5.2/lib/rack/session/abstract/id.rb:220:in `call' gems/ruby-2.1.1/gems/rack-1.5.2/lib/rack/session/abstract/id.rb:225:in `context' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/middleware/flash.rb:254:in `call' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/middleware/params_parser.rb:27:in `call' gems/ruby-2.1.1/gems/rack-1.5.2/lib/rack/head.rb:11:in `call' gems/ruby-2.1.1/gems/rack-1.5.2/lib/rack/conditionalget.rb:25:in `call' gems/ruby-2.1.1/gems/rack-1.5.2/lib/rack/etag.rb:23:in `call' gems/ruby-2.1.1/gems/warden-1.2.3/lib/warden/manager.rb:34:in `call' gems/ruby-2.1.1/gems/warden-1.2.3/lib/warden/manager.rb:34:in `catch' gems/ruby-2.1.1/gems/warden-1.2.3/lib/warden/manager.rb:35:in `block in call' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/routing/route_set.rb:676:in `call' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/journey/router.rb:59:in `call' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/journey/router.rb:59:in `each' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/journey/router.rb:71:in `block in call' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/routing/route_set.rb:48:in `call' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/routing/route_set.rb:80:in `dispatch' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_dispatch/routing/route_set.rb:80:in `call' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_controller/metal.rb:231:in `block in action' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_controller/metal/rack_delegation.rb:13:in `dispatch' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_controller/metal.rb:195:in `dispatch' gems/ruby-2.1.1/gems/actionview-4.1.1/lib/action_view/rendering.rb:30:in `process' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/abstract_controller/base.rb:136:in `process' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_controller/metal/params_wrapper.rb:250:in `process_action' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_controller/metal/instrumentation.rb:30:in `process_action' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/notifications.rb:159:in `instrument' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/notifications/instrumenter.rb:20:in `instrument' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/notifications.rb:159:in `block in instrument' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_controller/metal/instrumentation.rb:31:in `block in process_action' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/action_controller/metal/rescue.rb:29:in `process_action' gems/ruby-2.1.1/gems/actionpack-4.1.1/lib/abstract_controller/callbacks.rb:19:in `process_action' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/callbacks.rb:86:in `run_callbacks' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/callbacks.rb:86:in `call' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/callbacks.rb:166:in `block in halting' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/callbacks.rb:166:in `call' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/callbacks.rb:160:in `block in halting' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/callbacks.rb:160:in `call' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/callbacks.rb:440:in `block in make_lambda' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/callbacks.rb:440:in `instance_exec' gems/ruby-2.1.1/gems/mongoid_userstamp-0.3.2/lib/mongoid/userstamp/railtie.rb:15:in `block (2 levels) in &lt;class:Railtie&gt;' gems/ruby-2.1.1/gems/devise-3.2.4/lib/devise/controllers/helpers.rb:58:in `current_user' gems/ruby-2.1.1/gems/warden-1.2.3/lib/warden/proxy.rb:104:in `authenticate' gems/ruby-2.1.1/gems/warden-1.2.3/lib/warden/proxy.rb:318:in `_perform_authentication' gems/ruby-2.1.1/gems/warden-1.2.3/lib/warden/proxy.rb:212:in `user' gems/ruby-2.1.1/gems/warden-1.2.3/lib/warden/session_serializer.rb:34:in `fetch' gems/ruby-2.1.1/gems/devise-3.2.4/lib/devise.rb:462:in `block (2 levels) in configure_warden!' gems/ruby-2.1.1/gems/devise-3.2.4/lib/devise/models/authenticatable.rb:208:in `serialize_from_session' gems/ruby-2.1.1/gems/orm_adapter-0.5.0/lib/orm_adapter/adapters/mongoid.rb:22:in `get' gems/ruby-2.1.1/bundler/gems/mongoid-49bc68fd3011/lib/mongoid/contextual.rb:20:in `first' gems/ruby-2.1.1/bundler/gems/mongoid-49bc68fd3011/lib/mongoid/contextual/mongo.rb:197:in `first' gems/ruby-2.1.1/bundler/gems/mongoid-49bc68fd3011/lib/mongoid/contextual/mongo.rb:447:in `try_cache' gems/ruby-2.1.1/bundler/gems/mongoid-49bc68fd3011/lib/mongoid/contextual/mongo.rb:198:in `block in first' gems/ruby-2.1.1/bundler/gems/mongoid-49bc68fd3011/lib/mongoid/contextual/mongo.rb:535:in `with_sorting' gems/ruby-2.1.1/bundler/gems/mongoid-49bc68fd3011/lib/mongoid/contextual/mongo.rb:199:in `block (2 levels) in first' gems/ruby-2.1.1/bundler/gems/mongoid-49bc68fd3011/lib/mongoid/query_cache.rb:186:in `first_with_cache' gems/ruby-2.1.1/bundler/gems/mongoid-49bc68fd3011/lib/mongoid/query_cache.rb:135:in `with_cache' gems/ruby-2.1.1/bundler/gems/mongoid-49bc68fd3011/lib/mongoid/query_cache.rb:187:in `block in first_with_cache' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/query.rb:127:in `first' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/read_preference/primary.rb:54:in `with_node' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/read_preference/selectable.rb:65:in `with_retry' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/read_preference/selectable.rb:65:in `call' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/read_preference/primary.rb:55:in `block in with_node' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/cluster.rb:240:in `with_primary' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/cluster.rb:151:in `nodes' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/cluster.rb:194:in `refresh' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/cluster.rb:194:in `each' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/cluster.rb:182:in `block in refresh' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/node.rb:432:in `refresh' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/node.rb:90:in `command' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/node.rb:648:in `read' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/operation/read.rb:48:in `execute' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/node.rb:391:in `process' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/node.rb:587:in `flush' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/node.rb:616:in `logging' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/instrumentable.rb:31:in `instrument' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/notifications.rb:159:in `instrument' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/notifications/instrumenter.rb:20:in `instrument' gems/ruby-2.1.1/gems/activesupport-4.1.1/lib/active_support/notifications.rb:159:in `block in instrument' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/node.rb:617:in `block in logging' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/node.rb:589:in `block in flush' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/node.rb:187:in `ensure_connected' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/node.rb:184:in `rescue in ensure_connected' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/failover/retry.rb:29:in `execute' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/node.rb:114:in `connection' gems/ruby-2.1.1/gems/connection_pool-2.0.0/lib/connection_pool.rb:58:in `with' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/node.rb:115:in `block in connection' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/failover/retry.rb:30:in `block in execute' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/node.rb:590:in `block (2 levels) in flush' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/connection.rb:172:in `write' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/connection.rb:220:in `with_connection' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/connection.rb:52:in `connect' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/connection/socket/connectable.rb:144:in `connect' rubies/ruby-2.1.1/lib/ruby/2.1.0/timeout.rb:106:in `timeout' rubies/ruby-2.1.1/lib/ruby/2.1.0/timeout.rb:35:in `catch' rubies/ruby-2.1.1/lib/ruby/2.1.0/timeout.rb:35:in `catch' rubies/ruby-2.1.1/lib/ruby/2.1.0/timeout.rb:35:in `block in catch' rubies/ruby-2.1.1/lib/ruby/2.1.0/timeout.rb:91:in `block in timeout' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/connection/socket/connectable.rb:145:in `block in connect' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/connection/socket/connectable.rb:145:in `new' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/connection/socket/tcp.rb:20:in `initialize' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/connection/socket/connectable.rb:119:in `handle_socket_errors' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/connection/socket/tcp.rb:20:in `block in initialize' gems/ruby-2.1.1/bundler/gems/moped-074ba070aa98/lib/moped/connection/socket/tcp.rb:20:in `initialize'Looks like the whole think started with a moped socket connection (which makes sense).Investigating further …" }, { "title": "Accessing a running process' STDOUT", "url": "/blog/2014/06/02/accessing-stdout-of-a-running-process/", "categories": "Linux", "tags": "linux, ruby, rake", "date": "2014-06-02 09:16:54 -0400", "snippet": "I’m currently doing a lot of scripting at work. Although the primary environment is Windows, I have to manage some Linux processes as well.One example is a series of PowerShell scripts I’ve written...", "content": "I’m currently doing a lot of scripting at work. Although the primary environment is Windows, I have to manage some Linux processes as well.One example is a series of PowerShell scripts I’ve written which abstract away various ETL tasks that we need in order to get legacy data extracted, updated and inserted into other databases.One of the longer running processes I have is a Ruby Rake task that processes an uploaded CSV file. This can potentially take a long time, and although I could modify the script to feed progress data back, I’d like to demonstrate how to follow-up from another terminal session.Any Rake task I write that can potentially take a while, I tend to jazz up a bit with progress details. For this current example, I am using the progress_bar gem, which writes an ASCII progress bar to the terminal along with some other useful progress information.If I were to execute the task directly, I could watch the progress directly. Since we’re running this script remotely though, this information isn’t directly accessible.In order to gain access to the progress info for this task, we’ll need to access the process’ STDOUT from an alternate session.The first step is to find the PID of the process we would like:ps aux | grep ruby&gt;&gt; 1001 16544 67.7 29.4 1319420 506456 ? Rl 13:00 3:02 ruby rake phoenix:sync_locations_from_csvNow that we have the PID, we can pass this to strace in order to gain a bit more insight into the current process.sudo strace -p 16544 -s 80 -e write 2&gt;&amp;1 | grep \"write(2, \\\"\\[\"We’re redirecting the output of strace in order to further filter the results using grep. Depending on what process you’re looking to monitor you may need to adjust your grep conditions.You can also exclude the redirect and grep entirely, but this may result in too much information to be useful ;)" }, { "title": "Redmine Plugin Extension and Development: Published!!!", "url": "/blog/2014/03/19/redmine-plugin-extension-and-development-published/", "categories": "Writing", "tags": "redmine, book", "date": "2014-03-19 06:08:02 -0400", "snippet": "Well, it’s official. The journey I began over six months ago has finally come to an end, and Redmine Plugin Extension and Development has officially been published :)I plan on doing a “post-mortem”...", "content": "Well, it’s official. The journey I began over six months ago has finally come to an end, and Redmine Plugin Extension and Development has officially been published :)I plan on doing a “post-mortem” on the process at some point, but for now I’m planning on taking a little time off from writing." }, { "title": "Production Timeline", "url": "/blog/2014/03/03/8748os-production-timeline/", "categories": "Writing", "tags": "redmine, book", "date": "2014-03-03 08:22:30 -0500", "snippet": "Well, it’s been a long (longer than anticipated) journey, but Redmine Plugin Extension and Development (code number 8748OS) is in the final stages of production.Since I wanted to share a bit more d...", "content": "Well, it’s been a long (longer than anticipated) journey, but Redmine Plugin Extension and Development (code number 8748OS) is in the final stages of production.Since I wanted to share a bit more detail about what went into the production of this book, I’m attaching a (slightly edited) copy of the production timeline I received from my Technical Editor.Technical Editing / Copy EditingWe would be editing chapters for language and content-related clarity. There might be instances when we’ll require your assistance while we make any content-related changes. Even if there are no queries, we would be sending our first edited chapter (Per TE) to you to ensure that you are happy with the quality of editing. When chapter are sent across to you, the expected turnaround time will be 24 hours per chapter. Start of Editing: 21st February 2014 End of Editing: 6th March 2014After the chapters are edited, they are indexed and then laid out. The laid out chapters are then sent across to the Proof Reader, who are experts in English language. The Proof read chapters are then finalized and made into what we term as “Pre-Finals”. This is the stage where-in you will get to see the final chapters as you would see them in the book.Schedule for Pre-finals2 to 4 Pre-Finals will be sent across to you in a batch. The expected turnaround time will be 24 hours for a batch of two chapters.At this stage, you’ll be expected to just go through the chapters and provide feedback, if any. Any major content changes should be avoided. We plan to start sending these within 7-10 days from today and would continue to do so, until the day the book is clubbed and finalized.Upload DateThis is the day when the clubbed book will be finalized and then sent to our printers. We call it the upload day, since the files are transferred to our printers and we cannot make any changes here after. Current Upload Date: 17th March 2014Publishing DateThe book gets published and will be available for purchase in five to eight working days from the day of upload.So all going well, it looks like the book will officially be available by the end of March 2014. For those who were anticipating the original January 2014 release date, I sincerely apologize for the delay. I felt the delay resulted in a more cohesive final product, and hope that it meets (and even exceeds) your expectations!" }, { "title": "Final Rewrites Over 50% Done", "url": "/blog/2014/02/18/final-rewrites-over-50-percent-done/", "categories": "Writing", "tags": "redmine, book", "date": "2014-02-18 22:08:21 -0500", "snippet": "This is just a quick post to update everyone that chapters 1, 2 and 3 of Redmine Plugin Extension and Development have been submitted to Packt with final revisions. Chapter 8 as well as the Appendi...", "content": "This is just a quick post to update everyone that chapters 1, 2 and 3 of Redmine Plugin Extension and Development have been submitted to Packt with final revisions. Chapter 8 as well as the Appendix were accepted after the initial round of rewrites, so that means 4 MORE CHAPTERS TO GO!!!Clearly I didn’t meet the target I hinted at in my last post, but it was Family Day here so I took the family away for the long weekend to go skating on the Rideau Canal in Ottawa :)" }, { "title": "First Round of Rewrites Completed!", "url": "/blog/2014/02/09/first-round-of-rewrites-completed/", "categories": "Writing", "tags": "redmine, book", "date": "2014-02-09 21:48:29 -0500", "snippet": "This is just a quick update that I’ve finally finished the first round of rewrites for the upcoming Redmine Plugin Extension and Development book.The issue I was struggling with was little more tha...", "content": "This is just a quick update that I’ve finally finished the first round of rewrites for the upcoming Redmine Plugin Extension and Development book.The issue I was struggling with was little more than a complete lack of motivation. Since I work full time and do contract development on the side (plus have a wife and kids), yet another distraction can be difficult to find time for; especially if it’s not a primary source of income.Packt Publishing has been very patient with me though so I’m going to try to find the time in the coming week to get through the second round of revisions and rewrites and hopefully get this puppy to market ;)" }, { "title": "My First Book: Almost Ready for Production", "url": "/blog/2014/01/27/my-first-book-is-almost-ready-for-production/", "categories": "Writing", "tags": "redmine, book", "date": "2014-01-27 15:37:10 -0500", "snippet": "For the last 4 months I’ve been working with Packt Publishing on a book about Redmine plugin extension and development.Although it likely won’t be ready until February 2014, the book is now availab...", "content": "For the last 4 months I’ve been working with Packt Publishing on a book about Redmine plugin extension and development.Although it likely won’t be ready until February 2014, the book is now available for pre-order on Packt’s site.Since the book is almost through the first stage of rewrites, I though it might be a good idea to start documenting the process.What I’m going to write about initially are my first impressions on writing a book, as well as a few notes (which may sound like complaints) about what I did “wrong” and could improve upon in the future.Originally, I wasn’t sure that I would be a good choice as an author as I didn’t have the community recognition that some other plugin developers had, and I hadn’t been “on the scene” for more than a few years.After much consideration, I decided to dive in and start writing.The first step was to provide the publisher with a rough outline that also included the page count. Initially, I just threw together a handful of topics that I wanted to cover, then (very generically) estimated how many pages I would need to completely cover those topics.Once approved, and I actually started writing, I very quickly realized that meeting my page estimates was almost impossible; some chapters would be way too short, and others WAY too long.I also had to provide a rough outline as to how long I thought it would take me to write each chapter. This step, in retrospect, I wish I had taken more time to properly prepare.Writing a technically-oriented book involves a lot more research than you may think (no matter how well you think you know the source material). As such, the further I got into the book, the more time I found myself researching, writing code, testing code, then writing about the code I’d built.This process took a good 3x longer than I anticipated, and as such, my deadlines tended to slip by. As a result, the tentative release date for the final book of January 2014 is not very likely.I’m hoping that this blog post will also serve as a motivator to get my ass in gear and finish the final revisions." }, { "title": "Developer Braindump: Warcraft", "url": "/blog/2013/03/26/developer-braindump-warcraft/", "categories": "Game Development", "tags": "rts", "date": "2013-03-26 12:50:00 -0400", "snippet": "In an effort to centralize some articles about how some classic games were devloped, I’ve collected the various parts of Patrick Wyatt’s blog series about the initial development of Warcraft.Please...", "content": "In an effort to centralize some articles about how some classic games were devloped, I’ve collected the various parts of Patrick Wyatt’s blog series about the initial development of Warcraft.Please note that this version of the series is just meant to capture the content, and not all formatting changes have been captured.Please see the original posts for the full experience ;)Back before the dawn of time, which is to say when PC games were written for the DOS operating system, I got to work on a game called Warcraft.I get to lead a project!While I had developed several PC games, a couple of Mac games, and seven console titles for the Super Nintendo and Sega Genesis, I was either in a junior role on those projects, or the projects were game “ports” rather than original development work. A game “port” is the process of moving a game from one platform, like the Amiga, and converting the code, design, artwork and other game assets to make them work on another, like the Nintendo.My role encompassed two jobs: leading the development team as Producer — a game industry term for project manager, designer, evangelist, and cat herder — and writing the majority of the game code as Lead Programmer. This was perhaps less daunting then, when a game project might employ ten or twenty developers, than it is now, with development teams tipping the scales at two-hundred or more developers.The source of WarcraftThe developers at the startup company I worked for — then named Silicon &amp; Synapse but later renamed Blizzard in a nod towards our tempestuous development methodology — played a great many games during our free time. And from that game-playing came the spark to create Warcraft.We were inspired to create Warcraft after playing (and replaying and replaying) a game called Dune 2, by Westwood Studios. Dune 2 was arguably the first modern real-time strategy (RTS) game; with a scrolling world map, real-time unit construction and movement, and individual unit combat. It isn’t that much different in design than a modern RTS like Starcraft 2, excepting perhaps a certain scale and graphics quality.Its predecessor, Dune 1 — a very worthy game itself — shared some of the same elements, but its semi-real-time unit combat was wrapped inside an adventure game. Dune 2 stripped its predecessors’ idea of the player representing a character inside the game-world and focused exclusively on the modern RTS mechanics: harvesting resources, building a base, harvesting more resources, building an army, and finally, finding and conquering the enemy.Along with the other folks at Blizzard I exhaustively played Dune 2 during lunch breaks and after work, playing each of the three competing races to determine their strengths and weaknesses; and afterward comparing play-styles, strategies and tactics with others in the office.While the game was great fun, it suffered from several obvious defects that called out (nay, screamed) to be fixed. Most notably, the only way that my friends and I could play the game was against the computer. It was obvious that this gaming style would be ideal as a multiplayer game. Unlike turn-based games, where each player must wait for all opponents to issue unit movement orders, a real-time game would enable all players to give orders simultaneously, placing a premium on rapid, decisive tactical movements over long, drawn-out strategic planning.And with that singular goal in mind, development of the game began without any serious effort to plan the game design, evaluate the technical requirements, build the schedule, or budget for the required staff. Not even on a napkin. Back at Blizzard we called this the “business plan du jour”, which was or standard operating methodology.Initial developmentAs the sole developer on the project, and lacking an art team during the initial phase, I screen-captured the artwork of Dune 2 to use until such time as my forward progress warranted an artist or two. The artists were tied up working on any number of other pressing deadlines and didn’t need distractions at this point — we were always pressed for time.My early programming efforts developing the game engine included creating a tile-based scrolling map renderer, a sprite renderer to draw game units and other bitmaps, a sprite-sequencing engine to animate game units, an event-dispatcher to post mouse and keyboard events, a game-dispatcher to control unit-behavior, and a great deal of user-interface code to control application behavior. With this subset of the project completed in the first few weeks it became possible to “play” a solo game, though I didn’t implement unit-construction until sometime later; early play required using typed commands to spawn units on screen.Each day I’d build upon the previous efforts in organic fashion. Without schedule milestones or an external driver for the project, I was in the enviable position of choosing which features to build next, which made me incredibly motivated. I already enjoyed game development, and getting to do this green-field programming was like a drug. Even now, some 22 years after getting into the game industry, I still love the creative aspects of programming.The first unique feature: multi-unit selectionOne feature of which I was particularly proud was unit-selection. Unlike Dune 2, which only allowed the user to select a single unit at a time, and which necessitated frenzied mouse-clicking to initiate joint-unit tactical combat, it was obvious that enabling players to select more than one unit would speed task-force deployment and dramatically improve game combat.Before I started in the game industry I had worked extensively with several low-end “Computer Assisted Design” (CAD) programs like MacDraw and MacDraft to design wine-cellars for my dad’s wine cellar business, so it seemed natural to use the “click &amp; drag” rectangle-selection metaphor to round up a group of units to command.I believe that Warcraft was the first game to use this user-interface metaphor. When I first implemented the feature it was possible to select and control large numbers of units at a time; there was no upper limit on the number of units that could be selected.While selecting and controlling one hundred units at a time demonstrated terrible weaknesses in the simple path-finding algorithm I had implemented, after I got the basic algorithms working I nevertheless spent hours selecting units and dispatching game units to destinations around the map instead of writing more code; it was the coolest feature I had ever created in my programming career up to that time!Later in the development process, and after many design arguments between team-members, we decided to allow players to select only four units at a time based on the idea that users would be required to pay attention to their tactical deployments rather than simply gathering a mob and sending them into the fray all at once. We later increased this number to nine in Warcraft II. Command and Conquer, the spiritual successor to Dune 2, didn’t have any upper bound on the number of units that could be selected. It’s worth another article to talk about the design ramifications, for sure.Apart from the ability to control multiple units at one time, at this phase Warcraft resembled nothing so much as a stripped-down version of Dune 2, so much so that I defensively joked that, while Warcraft was certainly inspired by Dune 2, the game was radically different — our radar minimap was in the upper-left corner of the screen, whereas theirs was in the lower-right corner.The formation of the fellowshipBy early 1994, I had made enough progress to warrant additional help on the project. I was joined by Ron Millar, Sam Didier, Stu Rose, Bob Fitch, Jesse McReynolds, Mike Morhaime, Mickey Nielsen, and others. Many of these folks started work on the game after our company was acquired by Davidson &amp; Associates in February 1994.Ron Millar, who, with his long blond hair and strong build, was obviously the progeny of Viking warriors. He was originally hired on as an artist based on his skill in creating artwork for Gameboy titles at Virgin Games, but his amazing creativity and design sensibilities led to his taking on a design role in many Blizzard projects, and he stepped into a similar role for Warcraft.Sam Didier, a strong, stocky and stalwart character who resembled nothing so much as a bear scaled down to human proportions, and whose heroic characters and epic drawings are now the definitive art style for Blizzard games, had honed his computer drawing skills on sixteen-bit console titles, but his penchant for drawing fantasy artwork during meetings and at any other spare moment demonstrated his capability to lead the art direction for this new title.Stu Rose — whose background as an illustrator led to his design of the Blizzard logo still used today — initially contributed to the background tile-map artwork, but he would later take on a critical role in the ultimate design of Warcraft. Stu is quite memorable as a voice actor in the role of Human Peon Peasant, where his rendition of a downtrodden brute-laborer was comedic genius.Bob Fitch had started work as a programmer and project lead on another title at the same time I started development of Warcraft. Allen Adham, the president of Blizzard, had assigned Bob the task of building a word game called “Games People Play” that would include crossword, scramble, boggle, and other similar diversions. Bob’s notable lack of enthusiasm for the project resulted in his making little progress on the title for many months; with Warcraft showing well Bob was released to assist me, and his enthusiasm for the game helped move the project forward more rapidly.Jesse, a Caltech graduate, started work on building a network driver for the IPX network protocol so the game could be played on a Local Area Network (LAN). Mike Morhaime, one of the two co-founders of Blizzard, later took on the significantly more difficult task of writing a “mixed-mode” modem driver. While Warcraft was a DOS “Protected Mode” game, the modem driver could be called from both Protected Mode and Real Mode due to quirks in the DOS operating system and the 80386 chip-architecture it ran on, so he could regularly be found in his office staring at screens full of diagnostic numbers as he worked through the complicated timing issues related to re-entrant code. At the end of the day, the modem code was rock-solid, quite an achievement given the primitive toolset we had at the time.Warcraft artAllen Adham hoped to obtain a license to the Warhammer universe to try to increase sales by brand recognition. Warhammer was a huge inspiration for the art-style of Warcraft, but a combination of factors, including a lack of traction on business terms and a fervent desire on the part of virtually everyone else on the development team (myself included) to control our own universe nixed any potential for a deal. We had already had terrible experiences working with DC Comics on “Death and Return of Superman” and “Justice League Task Force”, and wanted no similar issues for our new game.It’s surprising now to think what might have happened had Blizzard not controlled the intellectual property rights for the Warcraft universe — it’s highly unlikely Blizzard would be such a dominant player in the game industry today.Years after the launch of Warcraft my dad, upon returning from a trip to Asia, gave me a present of a set of Warhammer miniatures in the form of a skeleton charioteer and horses with the comment: “I found these cool toys on my trip and they reminded me a lot of your game; you might want to have your legal department contact them because I think they’re ripping you off.” Hmmm!Blockers to game developmentOne interesting facet of the early development process was that, while I was building a game that would be playable using modems or a local area network, the company had no office LAN. Because we developed console titles, which would easily fit on a floppy disk, it wasn’t something that was necessary, though it would certainly have simplified making backups.So when I started collaborating with other artists and programmers, we used the “sneaker network”, carrying floppy disks back and forth between offices to integrate source code revisions and artwork.Bob Fitch was the second programmer on the project, and he and I would regularly copy files and code-changes back and forth. Periodically we’d make integration mistakes and a bug we fixed would re-appear. We’d track it down and discover that — during file-copying while integrating changes — we had accidentally overwritten the bug fix, and we’d have to remember how we had fixed it previously.This happened more than a few times because of the rapidity with which we developed code and our lack of any processes to handle code-integration other than “remembering” which files we had worked on. I was somewhat luckier in this regard in that my computer was the “master” system upon which we performed all the integrations, so my changes were less likely to get lost. These days we use source-control to avoid such stupidities, but back then we didn’t even know what it was!With more programmers, designers and artists working on the title progress increased substantially, but we also discovered a big blocker to our progress. The game was initially developed in DOS “Real Mode”, which meant that only 640K of memory was available, less about 120K for the operating system. Can you believe how crap computers were back then!?!As the art team started creating game units, backgrounds and user-interface artwork, we rapidly burned through all of the memory and started looking for alternatives. A first attempt at a solution was to use EMS “paged memory” mapping and store art resources “above” the 640K memory barrier.Stories programmers tell about EMS memory are like those that old folks tell about walking uphill to school, barefoot, in the snow, both ways, except that EMS stories are even more horrible, and actually true.In any event the EMS solution quite fortunately didn’t work; it turned out there was a better solution. A company called Watcom released a C compiler which included a DOS-mode “extender” that allowed programs to be written in “Protected Mode” with access to linear 32-bit memory, something every programmer takes for granted today when they write 32-bit (or even 64-bit applications). While it required a couple of days to update the source code, the DOS-mode extender worked perfectly, and we were back in business, now with access to substantially more memory.Initial proposalBlizzard was working on at least four other games when I started on the Warcraft project, and as the company numbered only 20 everyone was mega-busy keeping those projects on track. It wasn’t uncommon for artists, programmers and designers to be working on two or sometimes three projects at a time, and of course our sole musician/sound-engineer, Glenn Stafford, worked on everything.But we regularly found time to meet in large groups to brainstorm and discuss company strategy, so much that we called our efforts the “business plan du jour“.I already discussed our motivation to create a Real Time Strategy (RTS) game modeled after Dune II in a previous article, but one other key idea propelled us forward.The other impetus for the game started with a proposal that Allen Adham — president and company co-founder — made during one of our brainstorming sessions. He wanted to build a series of war games that would be released in near identical white boxes under the banner “Warcraft”, with subheadings announcing the historical context for each game: The Roman Empire, The Vietnam War, and so forth.The goal with the identical boxes was to control a large section of shelf-space that would be easy for players to spot in a crowded retail environment, similar to the Gold Box series of Dungeons &amp; Dragons games from SSI, which enjoyed great success during the late 1980′s. New players would be drawn to the section of games by its dominating shelf-presence, and veteran players who enjoyed one game they would know where to find the next. I know; retail: so archaic compared to app stores and Amazon, right?!?Ron Millar and Sam Didier, two of the early artists to work at the company, weren’t excited about the idea of working on historical simulations, they enjoyed fantasy games like Warhammer and Dungeons &amp; Dragons. One glance at Sam’s artwork is enough to demonstrate his passion for the fantasy milieu. So at a later meeting they proposed the idea that the first game should be set in a high-fantasy world of Orcs and humans, where they’d have more opportunity to create innovative game artwork instead of being required to conform to the tenets of historical accuracy. The idea took hold, with the first game in the series becoming Warcraft: Orcs and Humans.Initial game designMany people believe that a game designer is solely responsible for all idea conception and actually “creates the game design”, and this may be true for some development teams. Designers do need to be highly creative and bring to life many of the elements of the game personally.But equally important is for designers to be receptive to the ideas of others: without some involvement in the game’s design the rest of the team has less motivation to do their best work. And beyond that, it’s never possible to know where the next great design idea is going to come from. It’s critical for designers to listen so that the best ideas of others aren’t stifled.Our informal design process during the early period of Warcraft’s development worked effectively in that regard. Many brainstorming sessions occurred during hallway meetings, lunches, smoke-breaks, and after late evenings of game playing. Everyone in the company contributed their thoughts. With little formal process and no single design document, the game design evolved with each passing month.Ron, who had started his career in the game industry as an artist, was at that time our go-to guy for design on Blizzard games. Though he was finishing up the development of Blackthorne, a side-scrolling shooter for Super Nintendo, he devoted time to generating ideas for the game.Stu Rose was another artist who became one of Blizzard’s early staffers. From a personality standpoint he was the polar opposite of Ron in most respects, and his efforts as part of the design group occasioned conflicts of opinion with Ron, though during the times they did agree they were an unassailable force.These two ended up as the book-ends for the entire design process, each working independently to develop the world’s culture and plot overview, define the game’s units, specify the play mechanics, envision how magic spells worked, develop the game’s missions, choose place-names, and finalize other minutiae that are nevertheless important to make games comes to life.At this late date it’s not possible to document who developed exactly which idea without canvassing the entire team and sorting out arguments over events that happened so long ago. Even back then we had difficulties determining how game-design credit should be shared, and ultimately decided the fairest, most egalitarian solution was to credit everyone, and thus the Warcraft: Orcs vs. Humans box credits include “Game design by Blizzard Entertainment”. Incidentally the Moby Games credits for Warcraft 1 are completely borked because they mix the much later Macintosh and 1998 releases of the game with the original 1994 DOS release, so many folks are mis-credited.While my recollection of the exact timing of events is dim, I’ve recently seen an early design document dated 1994 and labeled “Chaos Studios”, which means it was generated in early 1994 before the company had been renamed Blizzard. By February 1994 we had a set of (still very rough) design documents that had been through several iterations and contained the key concepts for the game.Admittedly, it would probably have been better to have a design in place before I started programming in September 1993, but with the amount of “substrate” that I needed to build before the actual fun-n-game parts could be developed, the lack of a design wasn’t a show-stopper at that stage, particularly since we already pulled many of the game’s elements from Dune 2.What got choppedWhile it’s still (barely) possible to play Warcraft 1 today, it’s not much fun compared to later RTS games. The difficulty of getting the game running on modern computers leads one to high expectations that are then crushed when viewing a game with a screen resolution of only 320×200 pixels — one twentieth of the resolution of a modern high res monitor — and with user interface and play balance that are markedly inferior to our later efforts.But by playing Warcraft 1 it is possible to see the ideas that survived through the design winnowing process into the game’s final release. In many ways Warcraft 1 isn’t so much different from later games in the series.Today gamers are familiar with classic Warcraft units like Barracks, Town Halls, Lumber Mills and Gold Mines, all of which survived into future releases of Warcraft games. Those iconic units persist because their names and functions are easily comprehensible to those of us who live in the real world instead of Azeroth.But many of the ideas that our early design documents contained didn’t come to fruition. Some of this was related to the brutal timeline — the game had to launch for Christmas, 1994 and we barely made it. Ideas died because better alternatives existed, or didn’t have strong advocates, or were too time-consuming to implement, or would have required too much memory, or weren’t fun.I thought folks might like to know about ideas that ended up on the cutting room floor, like the Mason’s Hall [required for stone buildings], Dwarven Inn [greater production of stone], Elven Fletcher [upgrades for archers], Tax House and Ale House.These buildings all served secondary functions, some of which could be combined elsewhere. We instead added their functionality to existing buildings instead of creating buildings solely dedicated to one function, as for example the Dwarven Inn and Elven Fletcher buildings.The Mason’s Hall was dropped because we considered using stone as a third resource (in addition to gold and lumber) an unnecessary complexity. We revisited the idea again for Warcraft 2, and dropped it again after actually implementing (programming) the idea.The Ale Stand was designed to increase the rate at which soldiers and gold would be produced. I’m not sure how we can rectify that design idea with the amount of work that actually gets done after a night of heavy drinking in our world, but I imagine there are special rules of magic at work in Azeroth. Or maybe that’s why we cut the Ale Stand.And NPC races like lizard men, hobgoblins and Halflings were also on the drawing board but were ultimately rejected, almost certainly due to the effort of drawing and animating the figures in DPaint.Game development is about trade-offs — great games don’t have to do everything, they have to do a limited number of things well.FormationsA design idea much discussed but never implemented was “formations”, where units would stick together on the battlefield. Formations are difficult to implement so the feature was chopped from the spec.Some of the complexities that prevented implementation: units in formation all move at the same speed so slow units don’t get left behind — this created programming complexity. Formations need the ability to rotate — or “wheel” in military parlance — so that a formation heading north comprised of infantry carrying pikes with archers following behind can turn as a group to face an enemy detachment approaching from the east, with the archers still lined up behind the protective wall of infantry — this created user interface complexity. Given enough time we could have completed the feature, but we needed the development time for more basic features.As a stand-in, I did implement “numbered group selection”. A user would select a group of units and press the Ctrl (control) key plus a number key (1-4). Those unit-groupings would be remembered so it would be possible to later re-select those units by pressing the number key (1-4) by itself. But those units would move independently even though selected as a group.A player-character on the battlefieldAnother idea much discussed but never implemented was that of having a unit that represented the player on the game map: an avatar that would progress from mission to mission during the game.For a game-avatar to represent the player, it should morph from a weak unit into a mighty hero over the course of several missions to create a sense of progression. To do this properly would require that the character would only become more powerful if utilized. An underutilized avatar would remain weak, while an avatar constantly at work on the front lines would become stronger.Carrying a unit over from one mission to the next adds to the difficulty of play-balancing missions. A great player will graduate a strong avatar from each mission, and that avatar’s strength will make succeeding missions seem easy, while a less-skilled player’s avatar could be so weak as to make winning later missions impossible. These two problems would lead players to drop out of the game — in the first instance for lack of challenge, and in the second due to frustration, as few players want to go backwards and redo previous missions in order to survive a mission later in the game.A competitor’s product named War Wind released several years after Warcraft allowed units to be carried over from mission to mission; the game’s designers allowed up to four units to be transferred, but finessed the play-balance problem by ensuring that these units weren’t powerful enough to affect gameplay, somewhat the antithesis of what a heroic player-avatar is supposed to represent.Heroes — in Warcraft 1?!?We also considered including hero-units in Warcraft 1; they had names like the Illusion Thief, Barbarian, Huntress, and Juggernaut, each with specialized skills. Ultimately we trimmed the list of game units substantially; probably due to design and art-animation time constraints.As someone with limited involvement in Warcraft III, it was interesting to see the idea of heroes finally implemented in the series, though the design genesis of heroes in Warcraft III comes from a different source — that is, not from ideas re-hashed from Warcraft 1 design documents.Briefly, Warcraft III started out as a game called Heroes of Warcraft, which departed from the type of traditional RTS we had already launched five times before (W1, W2:ToD, W2:BtDP, SC, SC:BW) and was instead a squad-based tactical combat game set in the Warcraft universe. This game morphed into a more traditional RTS — but retained the element of heroes — after a change of team-leads halfway through the development.Warcraft’s bright color paletteIf you consider the artwork of the Warcraft series, you’ll see that the colors are shockingly loud in comparison to, say, Diablo, where only in a dim room is it truly possible to see the beauty of the art. The bright, cartoony art-style was different from the style of many other PC war games of the era, which hewed to more realistic color palette.Part of that difference can be explained by the past experiences of our artists, who had worked on several Super Nintendo and Sega Genesis console titles, where games required more dynamic colors since televisions of that era were so much worse at displaying colors than PC monitors. Console games on TVs, which had lower pixel resolution and color bleed, needed high-contrast artwork to show well.Another reason was at the behest of Allen, who charged all the artists with drawing artwork in bright conditions. He’d regularly stalk the halls of Blizzard turning on lights and opening window-blinds.His view was that most folks play games in bright rooms, so our artists should be authoring our games to play well in that environment. He argued that it’s easy to draw artwork that reads well when viewed in a dark room with no outside light can distract from the monitor. But when computer art is competing with bright lights it’s much more difficult to see. And fluorescent bulbs are the worst form of light available — the cold, flickering glow of their tubes tires the eyes and washes out colors.So the lights were always on in the art rooms to force artists to compensate for terrible lighting by creating art that accounted for those conditions. These working conditions chafed on some (all?) of the art team, but ultimately led to artwork that stood out compared to products of the day.Now you know why Warcraft artwork looks like it has been candy-coated!After six months of development that started in September 1993, Warcraft: Orcs vs. Humans, the first product in what would eventually become the Warcraft series, was finally turning into a game instead of an extended tech-demo.For several months I was the only full-time employee on the project, which limited the rate of development. I was fortunate to be assisted by other staff members, including Ron Millar, Stu Rose, and others, who did design work on the project. And several artists contributed prototype artwork when they found time in between milestones on other projects.The team was thinly staffed because the development of Warcraft was self-funded by the company from revenues received for developing titles for game publishers like Interplay and SunSoft, and the company coffers were not deep.At that time we were developing four 16-bit console titles: The Lost Vikings 2 (the sequel to our critically-acclaimed but low-selling, side-scrolling “run-and-jump” puzzle game), Blackthorne (a side-scrolling “run-and-jump” game where the lead character gets busy with a shotgun), Justice League Task Force (a Street Fighter clone set in the DC Comics universe), and Death and Return of Superman (a side-scrolling beat-em-up based on the DC universe comic series of the same name).With the money received for developing these games and other odd jobs the company was able to pay initial development costs.Game development economicsFor most of the history of the game industry, independent game development studios — which is to say studios that weren’t owned by a retail game publishing company — usually funded their projects by signing contracts with those publishing companies. Publishers would “advance” money for the development of the project. In addition to advances for development, publishers were responsible for publicity, marketing, manufacturing, retail distribution, customer support and so forth.Back in the early 90′s there were many more retail game-publishers than exist today, but the increasing cost of game development and especially of game publishing led to massive industry consolidation due to bankruptcies and acquisitions, so when you think of a retail game publisher today you’ll probably think of Activision-Blizzard, EA or Ubisoft instead of the myriad mid-sized companies that existed twenty years ago.As in all industries, the terms of contracts are drawn up to be heavily in the favor of the people with the money. This is the other golden rule: “he who has the money makes the rules”. While in theory these agreements are structured so that the game developer is rewarded when a game sells well, as in the record and movie industries publishers capture the vast majority of profits, with developers receiving enough money to survive to sign another agreement — if they’re lucky.When I mentioned “advances” paid by the publisher, the more correct term is “advances against royalties”, where the developer if effectively receiving a forgivable loan to be repaid from royalties for game sales. It sounds great: develop a game, get paid for each copy sold. But the mechanics work out such that the vast majority of game titles never earn enough money to recoup (pay for) the advances. Since development studios often had to give up the rights to their title and sequels, these agreements are often thinly disguised work-for-hire agreements.To aim for better deal terms, a common strategy employed by development studios was to self-fund an initial game prototype, then use the prototype to “pitch” a development deal to publishers. The longer a developer was able to self-fund game creation the better the eventual contract terms.Perhaps the best example of this strategy is Valve Software, where Gabe Newell used the wealth he earned at Microsoft to fund the development of Half Life and thereby gain a measure of control over the launch schedule for the game — releasing the game only when it was a high-quality product instead of rushing it out the door to meet quarterly revenue goals as Sierra Entertainment (the game’s publisher) desired. More importantly, Gabe’s financial wherewithal enabled Valve to obtain ownership of the online distribution rights for Half Life just as digital downloads were becoming a viable strategy for selling games, and led to that studio’s later — vast — successes.The downside to self-funding a prototype is the risk that the developer takes in the event that the game project is not signed by a publisher — oftentimes resulting in the death of the studio.The company I worked for — at that time named Silicon and Synapse — was self-funding Warcraft, along with another project called Games People Play, which would include crossword puzzles, boggle and similar games found on the shelves at airport bookstores to entertain stranded travelers.By developing two games that targeted radically different audiences the company owners hoped to create multiple sources of revenue that would be more economically stable compared to betting all the company’s prospects on the core entertainment market (that is, “hard core” gamers like you ‘n me).Of course spreading bets across diverse game genres also has risks, inasmuch as a company brand can be diluted by creating products that don’t meet the desires its audiences. One of the great strengths of the Blizzard brand today is that users will buy its games sight-unseen because they believe in the company’s vision and reputation. That reputation would have been more difficult to establish had the company released both lower-budget casual titles and high-budget AAA+ games, as did Sierra Entertainment, which is now out of business after repeated struggles to find an audience.In any event, creating Games People Play turned out to be a misstep because developing a casual entertainment product was so demoralizing for the lead programmer that the project never matured and was later canceled. Or perhaps it wasn’t a mistake, because the combination of Warcraft and Games People Play convinced Davidson &amp; Associates, at that time the second largest educational software company in the world, to purchase Silicon &amp; Synapse.Our new overlordsDavidson &amp; Associates, started by Jan Davidson and later joined by her husband Bob, was a diversified educational software company whose growth was predicated on the success of a title named Math Blaster, in which a player answers math problems to blow up incoming asteroids before they destroy the player’s ship. It was a clever conjunction of education and entertainment, and the company reaped massive rewards from its release.Aside: As an educational title Math Blaster may have had some value when used properly, but I had occasion to see it used in folly. My high school journalism class would write articles for our school newspaper in a computer room shared with the remedial education class; my fellow journalism students and I watched in horror as remedial twelfth graders played Math Blaster using calculators. As asteroids containing expressions like “3 + 5″ and “2 * 3″ approached those students would rapidly punch the equations into calculators then enter the results to destroy those asteroids. Arguably they were learning something, considering they outsmarted their teachers, but I’m not sure it was the best use of their time given their rapidly approaching entry into the work-force.With good stewardship and aggressive leadership Davidson &amp; Associates expanded into game manufacturing (creating &amp; packing the retail box), game distribution (shipping boxes to retailers and intermediate distributors), and direct-to-school learning-materials distribution. They saw an opportunity to expand into the entertainment business, but their early efforts at creating entertainment titles internally convinced them that it would make better sense to purchase an experienced game development studio rather than continuing to develop their own games with a staff more knowledgeable about early learning than swords &amp; sorcery.And so at a stroke the cash-flow problems that prevented the growth of the Warcraft development team were solved by the company’s acquisition; with the deep pockets of Davidson backing the effort it was now possible for Silicon &amp; Synapse (renamed Blizzard in the aftermath of the sale) to focus on its own titles instead of pursuing marginally-profitable deals with other game publishers. And they were very marginal — even creating two top-rated games in 1993, which led to the company being named “Nintendo Developer of the Year”, the company didn’t receive any royalties.With a stack of cash from the acquisition to hire new employees and enable existing staff to jump on board the project, the development of Warcraft accelerated dramatically.The design “process”The approach to designing and building games at Blizzard during its early years could best be described as “organic”. It was a chaotic process that occurred during formal design meetings but more frequently during impromptu hallway gatherings or over meals.Some features came from design documents, whereas others were added by individual programmers at whim. Some game art was planned, scheduled and executed methodically, whereas other work was created late at night because an artist had a great idea or simply wanted to try something different. Other elements were similarly ad-libbed; the story and lore for Warcraft came together only in the last several months prior to launch.While the process was unpredictable, the results were spectacular. Because the team was comprised of computer game fanatics, our games evolved over the course of their development to become something that gamers would want to play and play and play. And Warcraft, our first original game for the IBM PC, exemplified the best (and sometimes the worst) of that process, ultimately resulting in a game that — at least for its day — was exemplary.How the Warcraft unit-creation system came aboutAs biologists know the process of evolution has false starts where entire branches of the evolutionary tree are wiped out, and so it was with our development efforts. Because we didn’t have spec to measure against, we instead experimented and culled the things that didn’t work. I’d like to say that this was a measured, conscious process in each case, but many times it arose from accidents, arguments, and personality conflicts.One event I remember in particular was related to the creation of game units. During the early phase of development, units were conjured into existence using “cheat” commands typed into the console because there was no other user-interface mechanism to build them. As we considered how best to create units, various ideas were proposed.Ron Millar, an artist who did much of the ideation and design for early Blizzard games proposed that players would build farm-houses, and — as in the game Populous — those farms would periodically spawn basic worker units, known as (Human) peasants and (Orc) peons. The player would be able to use those units directly for gold-mining, lumber-harvesting and building-construction, but they wouldn’t be much good as fighters.Those “peons” not otherwise occupied could be directed by the player to attend military training in barracks, where they’d disappear from the map for a while and eventually emerge as skilled combatants. Other training areas would be used for the creation of more advanced military units like catapult teams and wizards.The idea was not fully “fleshed out”, which was one of the common flaws of our design process: the end result of the design process lacked the formality to document how an idea should be implemented. So the idea was kicked around and argued back and forth through the informal design team (that is, most of the company) before we started coding (programming) the implementation.Before we started working on the code Ron left to attend a trade show (probably Winter CES — the Consumer Electronics Show), along with Allen Adham, the company’s president. And during their absence an event occurred which set the direction for the entire Warcraft series, an event that I call the “Warcraft design coup”.Stu Rose, another early artist/designer to join the company (employee #6, I believe), came late one afternoon to my office to make a case for a different approach. Stu felt that the unit creation mechanism Ron proposed had too many as-yet-unsolved implementation complexities, and moreover that it was antithetical to the type of control we should be giving players in a Real-Time Strategy (RTS) game.In this new RTS genre the demands on players were much greater than in other genres and players’ attention could not be focused in one place for long because of the many competing demands: plan the build/upgrade tree, drive economic activity, create units, place buildings, scout the map, oversee combat and micromanage individual unit skills. In an RTS the most limited resource is player attention so adding to the cognitive burden with an indirect unit creation mechanism would add to the attention deficit and increase the game’s difficulty.To build “grunts”, the basic fighting unit, it would be necessary to corral idle peasants or those working on lower priority tasks to give them training, unnecessarily (in Stu’s view) adding to the game’s difficulty.I was a ready audience for his proposal as I had similar (though less well thought out) concerns and didn’t feel that unit creation was an area where we needed to make bold changes. Dune II, the game from which the design of Warcraft was derived, had a far simpler mechanism for unit creation: just click a button on the user-interface panel of a factory building and the unit would pop out a short time later. It wasn’t novel — the idea was copied from even earlier games — but it just worked.Stu argued that we should take this approach, and in lieu of more debate just get it done now, so over the next couple of days and late nights I banged out the game and user-interface code necessary to implement unit creation, and the design decision became fait accompli. By the time Ron and Allen returned the game was marginally playable in single-player mode, excepting that the enemy-computer AI was still months away from being developed.Warcraft was now an actual game that was simple to play and — more importantly — fun. We never looked back.The first multiplayer game of WarcraftIn June 1994, after ten months of development, the game engine was nearly ready for multiplayer. It was with a growing sense of excitement that I integrated the code changes that would make it possible to play the first-ever multiplayer game of Warcraft. While I had been busy building the core game logic (event loop, unit-dispatcher, path-finding, tactical unit-AI, status bar, in-game user-interface, high-level network code) to play, other programmers had been working on related components required to create a multiplayer game.Jesse McReynolds, a graduate of Caltech, had finished coding a low-level network library to send IPX packets over a local-area network. The code was written based on knowledge gleaned from the source code of Quake Doom, which had been recently was later open-sourced by John Carmack at id software. While the IPX interface layer was only several hundred lines of C code, it was the portion of the code that interfaced with the network-card driver to ensure that messages created on one game client would be sent to the other player.And Bob Fitch, who was earning his master’s degree from Cal State Fullerton, developed the initial “glue screens” that enabled players to create and join multiplayer games. My office was next to Bob’s, which was mighty convenient since it was necessary for us to collaborate closely to integrate his game join-or-create logic to my game-event loop.After incorporating the changes I compiled the game client and copied it to a network drive while Bob raced back to his office to join the game. In what was a minor miracle, the code we’d written actually worked and we were able to start playing the very first multiplayer game of Warcraft.As we started the game I felt a greater sense of excitement than I’d ever known playing any other game. Part of the thrill was in knowing that I had helped to write the code, but even more so were two factors that created a sense of terror: playing against a human opponent instead of a mere computer AI, and more especially, not knowing what he was up to because of the fog of war.The fog of warOne of the ideas drawn from earlier games was that of hiding enemy units from sight of the opposing player. A black graphic overlay hid areas of the game map unless a friendly unit explored the area, which is designed to mimic the imperfect information known by a general about enemy operations and troop movements during real battles.Empire, a multiplayer turn-based strategy game written almost seventeen years before by the brilliant Walter Bright (creator the “D” programming language), used fog of war for that same purpose. Once an area of the map was “discovered” (uncovered) it would remain visible forever afterwards, so an important consideration when playing was to explore enough of the map early in the game so as to receive advance warning of enemy troop movements before their incursions could cause damage to critical infrastructure or economic capability.The psychological terror created by not knowing what the enemy is doing has been the demise of many generals throughout history, and adding this element to the RTS genre is a great way to add to the excitement (and fear) level. Thank Walter and the folks at Westwood who created Dune II for their savvy!Computer AIAs many gamers know, computer-controlled “Artificial Intelligence” (AI) players in strategy games are often weak. It’s common for human players to discover exploits that the computer AI is not programmed to defend against that can be used destroy the AI with little difficulty, so computer AI players usually rely upon a numeric troop advantage, positional advantage, or “asymmetric rules” in order to give players a good challenge.In most Warcraft missions the enemy computer players are given entire cities and armies to start with when battling human players. Moreover, Warcraft contains several asymmetric rules which make it easier for the AI player to compete, though these rules would perhaps be called outright cheating by most players.One rule we created to help the computer AI was to reduce the amount of gold removed from gold mines to prevent them from being mined-out. When a human player’s workers emerge from a gold mine those workers remove 100 units of ore from the mine and deliver it back to the player’s town hall on each trip, and eventually the gold mine is exhausted by these mining efforts. However, when an AI-controlled worker makes the same trip, the worker only remove 8 units of ore from the mine, while still delivering 100 units into the AI treasury.This asymmetric rule actually makes the game more fun in two respects: it prevents humans from “turtling”, which is to say building an unassailable defense and using their superior strategic skills to overcome the computer AI. Turtling is a doomed strategy against computer AIs because the human player’s gold-mines will run dry long before those of the computer.Secondarily, when the human player eventually does destroy the computer encampment there will still be gold left for the player to harvest, which makes the game run faster and is more fun than grinding out a victory with limited resources.Most players are aware of a more serious violation of the spirit of fair competition: the computer AI cheats because it can see through the fog of war; the AI knows exactly what the player is doing from moment to moment. In practice this wasn’t a huge advantage for the computer and merely served to prevent it from appearing completely stupid.Interestingly, with the long popularity of StarCraft (over 14 years since launch and still played), a group of AI programmers has risen to the challenge of building non-cheating AIs. Aided by a library called BWAPI, these programmers write code that can inject commands directly into the StarCraft engine to play the game. Programmers enter their AIs in competitions with each other to determine the victor. While these BWAPI AI players are good, the best of them are handily beaten by skilled human opponents.Playing against a humanAs a person who had played many (many many) strategy games before developing Warcraft, I was well aware of the limitations of computer AIs of that era. While I had battled against many computer AIs, sometimes losing, many times winning, I was never scared by AI intelligence, even when battling the terrible Russian offensive in the game Eastern Front by Chris Crawford, which I played on a friend’s Atari 800 until eventually the audio cassette tape (!) that contained the game was so old it could no longer be read.These games were fun, exciting, and most certainly challenging, but not scary. But something changed when I played the first multiplayer game of Warcraft.The knowledge that I was competing against an able human player — not just in terms of skill and strategy, but also in terms of speed of command — but was prevented from seeing his actions by the fog of war was both electrifying and terrifying. In my entire career I have never felt as excited about a single game as I was during that first experience playing Warcraft, where it was impossible to know whether I was winning or losing.As a massive adrenaline rush spiked in my bloodstream, I did my best to efficiently harvest gold and lumber, build farms and barracks, develop an offensive capability, explore the map, and — most importantly — crush Bob’s armies before he could do the same to mine.This was no test-game to verify the functionality of the engine; I know he felt the same desire to claim bragging rights over who won the first-ever multiplayer game of Warcraft. Moreover, when we had played Doom together at Blizzard, I had won some renown because, after a particularly fierce game Bob had become so angry at me for killing him so frequently with a rocket launcher that he had vowed never to play me again. I knew he’d be looking for payback.As our armies met in battle, we redoubled our efforts to build more units and threw them into the fray. Once I discovered his encampment and attacked, I felt more hopeful. Bob’s strategy seemed disorganized and it appeared I would be able to crush his forces, but I wanted to leave nothing to chance so I continued at a frenzied pace, attacking his units and buildings wherever I could find them.And then … crash:Bad news bears – DOS4GW lets us know Warcraft crashedAs any programmer knows, the likelihood of new code working properly the first time is close to zero, and so it should be no surprise that the game crashed. The game’s graphics scrolled off the top of the monitor and were replaced with the blocky text of the DOS4GW “crash screen” so familiar to gamers in the era before Windows gaming. Now we have the far more sophisticated Windows Error Reporting dialog which enables the player to submit the crash report, though occasionally players see the dreaded “blue screen of death” which is remarkably similar to those of old.After the crash I leaped up from my chair and ran into Bob’s office, yelling “That was awesooooommmme!” immediately followed by “… and I was kicking your ass!” So I was surprised to hear Bob’s immediate rebuttal: to the contrary, he had been destroying me.It took a few minutes for our jangled nerves to return to normal but in short order we determined that not only did we have a crash bug but also a game-state synchronization problem, which I termed a “sync bug”: the two computers were showing entirely different battles that, while they started identically, diverged into two entirely different universes.Someone who hasn’t worked on programming network code might assume that the two Warcraft game clients would send the entire game state back and forth each turn as the game is played. That is, each turn the computers would send the positions and actions for every game unit. In a slow-paced game with only a few board positions, like Chess or Checkers, this would certainly be possible but in a game like Warcraft, with up to 600 units in action at once, it was impossible to send that volume of information over the network.We anticipated that many gamers would play Warcraft with 2400 baud modems, which could only transmit a few hundred characters per second. Younger gamers who never used a modem should take the time to read up on the technology, which was little removed from smoke signals, and only slightly more advanced than banging rocks together. Remember, this was before Amazon, Google and Netflix — we’re talking the dark ages, man.Having previously “ported” Battle Chess from DOS to Windows, I was familiar with how multiplayer games could communicate using modems. I knew that because of the limited bandwidth available via a modem it would have been impossible to send the entire game state over the network, so my solution was to send only each player’s commands and have both players execute those commands simultaneously.I knew that this solution would work because computers are great at doing exactly what they’re told. Unfortunately it turned out that many times we humans who program them are not so good at telling computers exactly the right thing to do, and that is a major source of bugs. When two computers are supposed to be doing the same thing, but disagree because of a bug, well, that’s a problem.A sync bug arises when the two computers simulating the game each choose different answers to the same question, and from there diverge further and further over time. As in time-travel movies like Back to the Future, small changes made by the time-traveler while in the past lead to entirely different futures; so it was that games of Warcraft would similarly diverge. On my computer my Elvish archer would see your Orcish peon and attack, whereas on your computer the peon would fail to notice the attack and wander off to harvest lumber. With no mechanism to discover or rectify these types of disagreements, our two games would soon be entirely different.So it was that the first game of Warcraft was a draw, but at the same time it was a giant win for the game team — it was hella fun! Other team members in the office played multiplayer soon afterwards and discovered it was like Blue Sky, the pure crystal meth manufactured by Walter White in Breaking Bad. Once people got a taste for multiplayer Warcraft, nothing else was as good. Even with regular game crashes, we knew we were on to something big.All we needed to do was get the game done.Tragically, we soon made an even worse discovery: not only did we have numerous sync bugs, but there were also many different causes for those sync bugs. If all the sync bugs were for similar reasons we could have endeavored to fix the singular root cause. Instead it turned out there were numerous different types of problems, each of which caused a different type of sync bug, and each which therefore necessitated its own fix.Why do sync bugs happenWhen developing Warcraft I had designed a solution to minimize the amount of data that needed to be transmitted over the network by only sending the commands that each player initiated, like “select unit 5″, “move to 650, 1224″, and “attack unit 53″. Many programmers have independently designed this same system; it’s an obvious solution to the problem of trying to synchronize two computers without sending the entire game state between them every single game turn.Aside: These days there are probably several patents retroactively trying to claim credit for this approach. Over time I’ve come to believe that software should not be patentable; most any idea in software is something that a moderately experienced programmer could invent, and the definition of patents requires that patents be non-obvious. Nuff said.I hadn’t yet implemented a mechanism to verify synchronization between the two computers, so any bug in the game code that caused those computers to make different choices would cause the game to “bifurcate” – that is, split it into two loosely-coupled universes that would continue to communicate but diverge with increasing rapidity over time.Creating systems designed to detect de-synchronization issues was clearly the next task on my long list of things to do to ship the game!In for the long haulYou know the ending to this story: Warcraft eventually shipped only five months later. It seemed an eternity because we worked so many hours each day, encountered so many obstacles, overcame so many challenges, and created something we cared for so passionately. I’ll continue to explore those remaining months in future blog articles, but so much was packed into that time that it’s impossible to squeeze those recollections into this already too long post!" }, { "title": "Fetching Changesets in Redmine from Heroku using Subversion", "url": "/blog/2012/11/21/fetching-changesets-in-redmine-from-heroku-using-svn/", "categories": "Redmine", "tags": "redmine, heroku, subversion, vagrant", "date": "2012-11-21 08:44:00 -0500", "snippet": "[NOTE: The method described below should still work, but it’s much easier to just use a Heroku buildpack (see this post for details)]I manage my open source and contract development projects using ...", "content": "[NOTE: The method described below should still work, but it’s much easier to just use a Heroku buildpack (see this post for details)]I manage my open source and contract development projects using Redmine.Since I’m “frugal”, I tend to try to push the free hosting envelope as far as possible. As a result, I have my Redmine deployment on Heroku, my files and attachments on Dropbox and my source on GitHub.I also like to link to changesets in my projects, which is easy enough to do when you host the source and the Redmine server on the same machine.Not so easy with Heroku+GitHub …. until now!By the end of this tutorial, we will have: Setup a build system using Vagrant that matches the Heroku hosting environment Compiled a statically linked Subversion client Added the svn client to our Redmine repository and pushed it to Heroku Configured a project in Redmine to fetch changesets from GitHub using SubversionOverviewIn 2012, GitHub announced SVN support, which primarily opened the service up to developers who hadn’t given up the centralized development model.As an added bonus, it gave us an alternative view into the commit logs for our projects without the need for a local copy.In order to proceed, I’m making the following assumptions: You are hosting an instance of Redmine on Heroku You are comfortable using Git You’ve used a Debian-based Linux distribution in the past You’ve used the GNU Build System before You have Ruby and RubyGems configured (if not, RVM is a good place to start) You are not crazy enough to try doing this from Windows or OSX ;) You have a sense of humour and realize the winky above indicates this guide was written for Linux, but could easily be adapted for any OSConfiguring the Build EnvironmentHeroku (as of November, 2012 at least) deploys applications to an Ubuntu 10.04 x86_64 environment, and we’re going to be statically linking for that environment, so we need to setup a build system that reflects this requirement.The most efficient way of doing this is to use Vagrant to initialize a bare-bones Ubuntu Lucid system.Since Rubygems should already be installed, it can be used to quickly setup Vagrant:gem install vagrantNow, let’s fetch a pre-build lucid system (thanks Vagrant!) and initialize it in the current directory:vagrant box add lucid64 http://files.vagrantup.com/lucid64.boxvagrant initThis will create a Vagrantfile in the current director, which contains configuration information for our build system. In order to tell Vagrant to use the lucid64 instace we’ve downloaded, the Vagrantfile needs to be edited and the config.vm.box section updated.# -*- mode: ruby -*-# vi: set ft=ruby :Vagrant::Config.run do |config| # ... # Every Vagrant virtual environment requires a box to build off of. config.vm.box = \"lucid64\" # ...Now that everything is ready to go, let’s start the instance.vagrant upOnce vagrant has started the virtual machine, we can access it via ssh using:vagrant sshBuilding SubversionFor the purposes of this tutorial, I’m going to be using the 1.6 branch of Subversion, which still had the subversion-deps packaged separately. NOTE With the 1.7 branch, there is a script that automates the process, and I’ll likely update this tutorial at some point to use this.First, we need to get the source:wget http://subversion.tigris.org/downloads/subversion-deps-1.6.19.tar.bz2wget http://subversion.tigris.org/downloads/subversion-1.6.19.tar.bz2tar xvf subversion-deps-1.6.19.tar.bz2tar xvf subversion-1.6.19.tar.bz2cd subversion-1.6.19Second, we’ll install any additional components required to compile successfully:sudo apt-get install build-essential libxml2-devFinally, we’ll configure the build to exclude as much as possible and to produce a static binary:./configure --with-ssl \\ --without-gssapi \\ --without-swig \\ --without-neon \\ --enable-all-staticmakeOnce the build completes, the only file we’re interested in is the svn client, so we’ll copy that to the /vagrant directory of our build machine, but first we’ll strip it.strip subversion/svn/svncp subversion/svn/svn /vagrant NOTE stripping the binary reduces the overall size from ~ 12 MB to ~ 4 MB, which is important since we have limited space on Heroku.\tvagrant@lucid64:~/subversion-1.6.19$ ls -l subversion/svn/svn\t-rwxr-xr-x 1 vagrant vagrant 12060462 2012-11-21 14:37 subversion/svn/svn* vagrant@lucid64:~/subversion-1.6.19$ strip subversion/svn/svnvagrant@lucid64:~/subversion-1.6.19$ ls -l subversion/svn/svn-rwxr-xr-x 1 vagrant vagrant 4257472 2012-11-21 14:56 subversion/svn/svn* The /vagrant directory is shared between the host and the guest machine by default, so this gives us access to the Subversion client if we open a new console and access the project folder we started Vagrant in.Since we’re now done, we can end the ssh session and stop the virtual machineexitvagrant haltAdding Subversion to RedmineGo to the root of your local Redmine repository, and create a bin folder. Now copy the svn binary to this folder, add the result to your repository and push to Heroku.mkdir bincp /path/to/static/svn bingit commit -a -m \"Adding a Statically Linked Subversion to Redmine\"git push heroku masterIf all went well, when you access the Repositories tab under Administration -&gt; Settings, Subversion should be listed and the version we just uploaded displayed.Accessing Changesets from GitHubThe final step is to configure an existing project to access a project on GitHub.First, add a new repository and point it to the GitHub url you would normally use to access the project on the web. NOTE Leave the Login and Password fields blank unless this is a private repositoryOnce configured, clicking on the Repository tab should fetch the changesets and show the source tree NOTE This can potentially time out on a larger project and require clicking on the Repository tab multiple times until all changesets have been fetched and parsed. NOTE Viewing changeset diffs doesn’t workI’ve used my personal installation as an example at http://alexbevi-pm.herokuapp.com/projects/redmine-dropbox-attachments.This method isn’t on-par with a self-hosted solution, but it’s good enough if you don’t have a VPS in your budget ;)REFERENCES http://rickvanderzwet.blogspot.ca/2007/11/building-static-subversion.html http://bindle.me/blog/index.php/405/running-binaries-on-heroku" }, { "title": "Developer Braindump: Tony Tough and the Night of the Roasted Moths", "url": "/blog/2012/11/02/developer-braindump-tony-tough-and-the-night-of-the-roasted-moths/", "categories": "Game Development", "tags": "scummvm, adventure", "date": "2012-11-02 08:28:00 -0400", "snippet": "The ScummVM project recently added support for Tony Tough and the Night of the Roasted Moths.The original developer, Giovanni Bajo appeared on the scummvm-devel mailing list and offered some insigh...", "content": "The ScummVM project recently added support for Tony Tough and the Night of the Roasted Moths.The original developer, Giovanni Bajo appeared on the scummvm-devel mailing list and offered some insight into the development of the original engine.The following is extracted from the original post: I went though the pull review code and of course lots of memories sprang to mind, so I’m happy to post a few things. The game originated in 1996, I was 17 back at the time. Luca Giusti and I wrote the first version of the game engine, and it was based on DOS and 8-bit (palette) graphics, with the venerable Mode X for achieving smooth scrolling and higher resolution (320x240), and compiled sprites (!!!). IIRC Luca wrote the game engine and I wrote the MPAL preprocessor (yuk!), compiler, linker and interpreter. We were a distributed team of 5-6 people working across Italy, and we were using Fidonet and BBS files areas to share files. I live in Florence and one of the artist (Sergio) was in Naples; I still remember that we used a direct modem connection on the phone line (so basically he dialed my home phone number with his modem, to setup a 14.4 kbit connection) and then send me the first 4 room background arts through it; they were an early 8-bit version, but I was in love with them :) I also remember our lead artist (Valerio) sent me the first version of the park map (hand drawn wireframe) by fax; the original thermal paper is now a picture hanging on my home wall :) At some point, in 1997, it became clear that we need to gather together to get to a decent point, so we organized a one-week crunch session in a alpine hut in northern italy; we worked 18-20hrs a day for a week, ate lots of pasta, and completed an early version of the first 4 rooms. I remember the game engine was using dirty-rectangles at that time to optimize drawing. In 1998 we got a deal with a local publisher (Prograph/Protonic), and part of the team got paid to finish the game. That included myself, but Luca declined (for personal reasons); that meant that I was able to work on the game full-time, while Luca only in his spare time. The publisher insisted on reworking the game with 16-bit graphics, and porting it from DOS to Windows; it wasn’t trivial to port the existing code (Mode X stuff!), plus Luca couldn’t handle it in his spare time, so I had to take over the game engine. I wasn’t familiar with it at all (Luca had written it up until then), and thus decided to rewrite it from scratch. One of the few things that I brought over was the pathfinding code, and in fact I think it’s quite obvious from its look that it’s been written by a different hand. The game engine is quite easy, as you have seen. I think it’s been the first real world C++ object-oriented program I have ever written, so it’s obviously very stretched towards using inheritance everywhere (new toy!). I still remember the joy of finally understanding polymorphism, and that’s when the RMTask base class was born, and the idea of having a list of RMTasks that could be anything by simply reimplementing the draw() call. I saw in the code that the list was called “OTList” and, while the name obviously rings a bell to me, I don’t recall what it means. BTW, “RM” stands for Roasted Moths of course; some classes in the source code begins with “FP” instead; that’s “Falling Pumpkins” which was the original title of the game. When I reimplemented the game, I went for full screen drawing, without dirty rectangles. I think i was positive that computers were fast enough for it, and in fact it did work quite well. I remember I quite optimized sprite drawing routines; for instance, most sprites are RLE-encoded as a way to quickly skip transparent pixels, and to avoid compiled sprites because there was simply too many sprites to compile them all without having memory issues. The game was running 60 fps on a Pentium 2, so that was good enough for us. The ’30s (sepia) mode was a nice touch, but I remember it was noticeably slower at the time as it was an additional pass over the screen, so the framerate was dropping quite noticeably. To build the rooms, setup background animations, decide rectangles of interactions with objects, etc. we built a so-called “location editor” (we actually used the word “location” for what is usually called “room” in adventures), whose source code I think has been lost. It was able to load a .loc file, modify it, and save it back. So both the game and the editor was using the same file format. At some point, we realized that it was better to separate the two formats, because the editor needed more information in basic format, while the game engine might use, for instance, sprites that were already rle-compressed instead of rle-compressing on the fly at load time; so the “lox” format was born. I think the game engine still opens the original loc files, but the final game assets only contains lox files. One guy in the team (Marco) was one of those magic resources in game teams that is both an artist and a programmer; I think it’s mostly impossible nowadays, and used to be just rare at the time. So he was in charge of both maintaining the editor and drawing the background animations and using the editor to insert them into the locations. So that’s one hell of “eating multiple levels of dogfood” :) In fact, he was the one that prodded me to add support for “slot positions” to the game engine; with “slot positions”, we meant having an optional x,y offset associated to a graphic frame within a animation; I remember we discussed whether this was worth it, but at the end of the day, he was in a better position to know, since he was using the editor after all. Later in the game, it proved extremely useful in one specific animation: to animate the beast walking out of its cage. In fact, the game engine has no concept of actors (the only “actor” is Tony), so every other actor in the game is just an animated background object; in fact, they just don’t walk around. So, when the designer required the beast to walk out, Marco faked it through manually settings x,y offsets in the editor within the whole animation, making it scroll away. It took him a while of course, and won the title of “slot position master” for this achievement :) Stuffing all files in a single compressed “resource” file was very common at the time. I don’t think there was a rationale for doing it, it was just the standard way of doing it. Lucas was doing it, so why shouldn’t we? :) I think it just looked cool, in a way. We were using LZO as a compressor because it was very fast at decompression; you might have noticed also that LZO is GPL, which means that the game was in blatant violation. I don’t think I have knew what free software was and what a free software license was. I don’t recall the details, but I wouldn’t be surprised if I simply altavista’d for “fast compression”, found that source code, downloaded it at 64 kbit/s, and dumped it into the game. I’m now deep into free software at many levels, I even give talks and do trainings about free software licenses from time to time, so I hope Markus of LZO can forgive the young me for not even realizing what I was doing. Speeches gave me quite a few headaches. For a start, I realized that simply exporting all texts from MPAL to a txt/html file wasn’t enough, because actors need context to meaningfully act. So I ended up writing a program that exported HTML file divided by rooms, with some contexts added, and even manually adding comments to explain them. This has been helpful and was important to get good speeches from them. I remember it was really fun when the actors director called us and played us over the phone the first recordings of character voice tests made by the actors. I think we actually voted between a few options to decide which voice sounded best for Tony. When I got the first speeches files back from them, I had some latency issues, especially when running off CDs. I think I ended up caching the main index in RAM and maybe precaching something (don’t remember the details). I think I also changed the code so to delay display of subtitles to the moment I could effectively start playing the speech, because it was very unfriendly to first see the text on screen, and the hear the speech 1 second later. MPAL was very very basic. I actually didn’t have a clue how to properly code a VM with bytecode and stuff, and I didn’t have any proper compiler theory training, so in retrospect it’s amazing I even managed to parse and compile files. So basically MPAL can only assign to variables (which are all globals, plus a weird namespace thingie for locality), call “custom functions” (aka C++ code stored in a pointer table) and do basic arithmetic. That’s it. Not even a proper language, isn’t it? :) No loop constructors, no ifs, no jumps, nothing. So MPAL was a collection of flat routines, each one associated to a specific verb (action), specific object (eg. door), under a specific condition (eg: when open, that is when global variable room1_door_open==1). Since you couldn’t have conditions within a MPAL routine but only to select which routine to run, you can see that cut &amp; paste was a useful tool for scripters :) In fact, we didn’t evolve MPAL much during the main game development. We basically went with what we had on the DOS version, and we were using the same compiler/linker binary for months/years like we had no source code for it. In fact, having written most of it in 1996 (2 yrs before), with zero experience on writing compilers, it was kind of “magical” in my eyes that it was somehow working, and I was almost scared to touch it, let alone refactoring. I remember that, near the end of development, the scripts hit some internal hard-coded limit of the compiler (say, too many total variables), and I was terrified to simply open the project in Visual Studio, bump that limit, and recompile everything. In retrospect, I think it was more of a psychological thing, since the compiler worked wonderfully for the whole development and did its job. There were no actors in MPAL simply because the game didn’t really require them, so at some point we decided to simply avoid implementing it and tweak the storyboard accordingly. The game designer, Stefano, wasn’t very happy about it but we eventually found a deal and I simply added a way to run background tasks in MPAL (actually, through a custom verb “Idle”, so not to modify the compiler!), to let actors at least chat and animate in background, but without ever walking. In fact, the game engine had already been designed for multiple actors in mind (this is why you have the RMCharacter class separated from RMTony), but there was nothing in MPAL, and of course development time is limited. Given my ignorance of “advanced” programming techniques, I think I simply couldn’t think of how one could execute a linear (blocking) piece of script code without recurring to multi-threading. So I think I didn’t even explore alternatives to multithreading. Obviously multithreading programming isn’t easy, so custom C++ functions, called from MPAL, were full of locking issues wrt to the main thread that redraws the screen. The game was developed under Windows 95 and in fact was released before Windows 2000 was out; on the NT kernel, the game didn’t work too well and crashed often because of race conditions. I see that you debugged and fixed at least few those bugs, well done! Those simply weren’t triggering on a 9x kernel. Another issue with MPAL is that there’s no way to skip cutscenes; I don’t remember whether I couldn’t think of a good way of doing it, or whether all methods I devised would require too much workload on scripters that were already quite full. I think it’s my #1 technical regret when I see the game, and in fact I would quite love if you found a way to implement it now. I think this ends my braindump of today. Feel free to ask questions of course. Thanks again for your work!" }, { "title": "Disable Hot Corner Hover in Linux Mint", "url": "/blog/2012/11/02/disable-hot-corner-hover-in-linux-mint-13/", "categories": "Linux, Configuration", "tags": "linux, mint, cinnamon", "date": "2012-11-02 08:01:00 -0400", "snippet": "UPDATE For Linux Mint 16, the hotCorner settings have been moved to /usr/share/cinnamon/js/ui/hotCorner.js.I use Synergy on all my computers to share a common mouse and keyboard, but I’ve found tha...", "content": "UPDATE For Linux Mint 16, the hotCorner settings have been moved to /usr/share/cinnamon/js/ui/hotCorner.js.I use Synergy on all my computers to share a common mouse and keyboard, but I’ve found that with Gnome 3 based distributions, the hot corner was causing me some grief.The beauty of using a Linux-based system though is that you can pretty much change anything you’re unhappy with, so that’s what I’m here to do.By default, Linux Mint uses the Cinnamon desktop, so the configuration file we’re looking for is at /usr/share/cinammon/js/ui/layout.js.For Linux Mint 12, which still used Gnome Shell, the file was at /usr/share/gnome-shell/js/ui/layout.js.Edit the appropriate file$ sudo nano /usr/share/cinammon/js/ui/layout.jsLocate the following section (I just searched for hot-corner)this._corner = new Clutter.Rectangle({ name: 'hot-corner', width: 1, height: 1, opacity: 0, reactive: true });And change the value of reactive from true to false:this._corner = new Clutter.Rectangle({ name: 'hot-corner', width: 1, height: 1, opacity: 0, reactive: false });Log off, then back on. Booya!" }, { "title": "Fixing Broken Sudo", "url": "/blog/2012/10/30/fixing-broken-sudo/", "categories": "Linux", "tags": "linux, ubuntu", "date": "2012-10-30 14:58:00 -0400", "snippet": "This is pretty much a transcription of http://www.psychocats.net/ubuntu/fixsudo, which is just such a good article I wanted to keep a copy for reference.How does sudo work?The way that Ubuntu has i...", "content": "This is pretty much a transcription of http://www.psychocats.net/ubuntu/fixsudo, which is just such a good article I wanted to keep a copy for reference.How does sudo work?The way that Ubuntu has implemented sudo, the /etc/sudoers file says that users in the admin group can (after a password authentication) temporarily escalate to system-wide privileges for particular tasks. And then the /etc/groups file says which users are in the admin group.You can read more on the community documentation about Ubuntu’s implementation of sudo.Cause and Symptomssudo breaks when one or more of the following occurs: the /etc/sudoers file has been altered to no longer allow users in the admin group to escalate privilege the permissions on the /etc/sudoers file are changed to something other than 0440 a user who should not have been has been taken out of the admin groupIf sudo is broken this way, you may notice an error saying you’re not in the _sudo_ers file and the incident is going to be reported. Or you may just see the next command prompt without any action being executed.Booting into recovery modeSince fixing sudo involves editing system files, and you would otherwise need sudo to do so, you’ll have to boot into recovery mode to gain root (system-wide) access in order to repair sudo.If you have a single-boot (Ubuntu is the only operating system on your computer), to get the boot menu to show, you have to hold down the Shift key during bootup.If you have a dual-boot (Ubuntu is installed next to Windows, another Linux operating system, or Mac OS X; and you choose at boot time which operating system to boot into), the boot menu should appear without the need to hold down the Shift key.From the boot menu, select recovery mode, which is usually the second boot option.After you select recovery mode and wait for all the boot-up processes to finish, you’ll be presented with a few options. In this case, you want the Drop to root shell prompt option so press the Down arrow to get to that option, and then press Enter to select it.The root account is the ultimate administrator and can do anything to the Ubuntu installation (including erase it), so please be careful with what commands you enter in the root terminal.In recent versions of Ubuntu, the filesystem is mounted as read-only, so you need to enter the follow command to get it to remount as read-write, which will allow you to make changes:mount -o rw,remount /Do the actual repairCase 1If you’d removed your last admin user from the admin group, then typeadduser username adminwhere username is your actual username.Case 2If you had previously edited the /etc/_sudo_ers file and screwed it up, then typesudo cp /etc/sudoers /etc/sudoers.backupsudo nano /etc/sudoers(the proper command is actually sudo visudo, which checks syntax before you save the /etc/sudoers file, but in some older versions of Ubuntu, that command uses the vi editor, which can be confusing to new users, as opposed to nano, which is more straightforward)and make it sure it looks like this:## This file MUST be edited with the 'visudo' command as root.## Please consider adding local content in /etc/sudoers.d/ instead of# directly modifying this file.## See the man page for details on how to write a sudoers file.#Defaults env_resetDefaults secure_path=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"# Host alias specification# User alias specification# Cmnd alias specification# User privilege specificationroot ALL=(ALL:ALL) ALL# Members of the admin group may gain root privileges%admin ALL=(ALL) ALL# Allow members of group sudo to execute any command%sudo ALL=(ALL:ALL) ALL# See sudoers(5) for more information on \"#include\" directives:#includedir /etc/sudoers.dWhen you’re done making changes, press Control-X, Y, Enter.Case 3If you are trying to fix the error where it says sudo is mode _____, should be 0440, then you’ll want to typechmod 0440 /etc/sudoersWhen you’re done with whatever commands you needed to enter, typeexitThis will bring you back to the recovery menu.Choose to resume a normal boot. Then you should be able to sudo again." }, { "title": "Install Latest MongoDB in Ubuntu", "url": "/blog/2012/08/29/install-latest-mongodb-in-ubuntu/", "categories": "Linux", "tags": "ubuntu, mongodb, bash", "date": "2012-08-29 13:46:00 -0400", "snippet": "A couple projects I work on use MongoDB as the database, and I’m generally not satisfied to use the (often outdated) version that ships with Ubuntu.As a result, I wrote this script to automate fetc...", "content": "A couple projects I work on use MongoDB as the database, and I’m generally not satisfied to use the (often outdated) version that ships with Ubuntu.As a result, I wrote this script to automate fetching, extracting and linking the latest version.To configure the script, just replace the PKG information with whatever value is most relevant for your configuration at http://www.mongodb.org/downloads.#!/bin/bashPKG=mongodb-linux-x86_64-2.2.0URL=http://fastdl.mongodb.org/linuxif [ -f /etc/init.d/mongod ]then echo &quot;mongod already installed ... stopping&quot; sudo service mongod stopelse echo &quot;installing mongod script&quot; wget https://raw.github.com/gist/3516078/713ad981715236473999f30636bca2ee3dcc5f24/mongod sudo mv mongod /etc/init.d/mongod sudo chmod +x /etc/init.d/mongod echo &quot;creating mongodb user&quot; sudo useradd mongodb echo &quot;creating directories&quot; sudo mkdir -p /var/lib/mongodb sudo mkdir -p /var/log/mongodb sudo chown mongodb.mongodb /var/lib/mongodb sudo chown mongodb.mongodb /var/log/mongodb sudo update-rc.d mongod defaultsfiwget $URL/$PKG.tgzsudo tar -xvzf $PKG.tgz -C /usr/local/if [ -d /usr/local/mongodb ]then echo &quot;removing existing mongodb symlink&quot; sudo rm -rf /usr/local/mongodb sudo ln -s /usr/local/$PKG /usr/local/mongodbelse echo &quot;creating symlinks&quot; sudo ln -s /usr/local/$PKG /usr/local/mongodb sudo ln -s /usr/local/mongodb/bin/bsondump /usr/local/bin/bsondump sudo ln -s /usr/local/mongodb/bin/mongo /usr/local/bin/mongo sudo ln -s /usr/local/mongodb/bin/mongod /usr/local/bin/mongod sudo ln -s /usr/local/mongodb/bin/mongodump /usr/local/bin/mongodump sudo ln -s /usr/local/mongodb/bin/mongoexport /usr/local/bin/mongoexport sudo ln -s /usr/local/mongodb/bin/mongofiles /usr/local/bin/mongofiles sudo ln -s /usr/local/mongodb/bin/mongoimport /usr/local/bin/mongoimport sudo ln -s /usr/local/mongodb/bin/mongorestore /usr/local/bin/mongorestore sudo ln -s /usr/local/mongodb/bin/mongos /usr/local/bin/mongos sudo ln -s /usr/local/mongodb/bin/mongosniff /usr/local/bin/mongosniff sudo ln -s /usr/local/mongodb/bin/mongostat /usr/local/bin/mongostatfiecho &quot;cleaning up&quot;rm $PKG.tgzecho &quot;starting mongod service&quot;sudo service mongod startNote that this script pulls mongod from a gist which I created. This script is originally from Ijonas Kisselbach’s dotfiles." }, { "title": "Keeping Pry Breakpoints out of Git", "url": "/blog/2012/08/23/keeping-pry-breakpoints-out-of-git/", "categories": "Ruby", "tags": "ruby, pry, git", "date": "2012-08-23 07:57:00 -0400", "snippet": "My Ruby workflow as of late has almost always contained Git for version control, and Pry for debugging.Although it’s extremely convenient during development to add a quick breakpoint using binding....", "content": "My Ruby workflow as of late has almost always contained Git for version control, and Pry for debugging.Although it’s extremely convenient during development to add a quick breakpoint using binding.pry, it can be a bit frustrating to clients if you accidentally deploy with these breakpoints still intact.After hunting around for a bit, I decided to write a pre-commit hook that would check the files I was about to check in to ensure that I didn’t accidentally still have breakpoints enabled.# Git pre-commit hook to check all staged Ruby (*.rb/haml/coffee) files # for Pry binding references## Installation## ln -s /path/to/pre-commit.sh /path/to/project/.git/hooks/pre-commit## Based on ## http://codeinthehole.com/writing/tips-for-using-a-git-pre-commit-hook/# http://mark-story.com/posts/view/using-git-commit-hooks-to-prevent-stupid-mistakes# https://gist.github.com/3266940#FILES_PATTERN=&#39;\\.(rb|haml|coffee)(\\..+)?$&#39;FORBIDDEN=&#39;binding.pry&#39;git diff --cached --name-only | \\ grep -E $FILES_PATTERN | \\ GREP_COLOR=&#39;4;5;37;41&#39; xargs grep --color --with-filename -n $FORBIDDEN &amp;&amp; \\ echo &#39;COMMIT REJECTED&#39; &amp;&amp; \\ exit 1exit 0This file just needs to be saved to /path/to/source/.git/hooks/pre-commit and made executable.HOOK_URL=\"https://gist.githubusercontent.com/alexbevi/3436040/raw/pre-commit.sh\"curl $HOOK_URL &gt; /path/to/source/.git/hooks/pre-commitchmod +x /path/to/source/.git/hooks/pre-commitIf you happen to leave a breakpoint intact, the next time you try to commit your changes, the commit will fail and indicate where these breakpoints are, and what files need to be updated to allow the commit to succeed." }, { "title": "Ubuntu 12.04 Desktop WITHOUT Unity", "url": "/blog/2012/08/10/ubuntu-12-dot-04-desktop-without-unity/", "categories": "Linux, Configuration", "tags": "linux, ubuntu", "date": "2012-08-10 08:03:00 -0400", "snippet": "As much as I enjoy Ubuntu, I haven’t warmed to their Unity desktop. I personally find it’s too similar to OS X, I don’t really like the launcher with larger icons, the global menu, the shifted wind...", "content": "As much as I enjoy Ubuntu, I haven’t warmed to their Unity desktop. I personally find it’s too similar to OS X, I don’t really like the launcher with larger icons, the global menu, the shifted window control buttons, notification area changes .. etc.Since it’s based on GTK3, I know you can modify this all, but I’d rather just use a desktop environment that doesn’t require that level of tweaking.Enter Cinnamon. Cinnamon is developed by the Linux Mint team, which has a distribution based on Ubuntu.Over at the LinuxBSDOS blog, there was an article on how to get Cinnamon installed in the latest Ubuntu.I found that after doing this, I ended up with no sound. To fix this, AskUbuntu has an article that I found useful." }, { "title": "Shoutcast Streaming from the Command Line", "url": "/blog/2012/07/18/shoutcast-streaming-from-the-command-line/", "categories": "Linux, Scripting", "tags": "linux, ubuntu, shoutcast", "date": "2012-07-18 08:20:00 -0400", "snippet": "I spend a lot of time working in a terminal, and I like to spend that time listening to music. Since I work primarily in Linux, I was hoping there would be an easy way to merge these two activities...", "content": "I spend a lot of time working in a terminal, and I like to spend that time listening to music. Since I work primarily in Linux, I was hoping there would be an easy way to merge these two activities … and it turns out there was :)After searching around, i found a post on the crunchbang forums that provided exactly the script I was looking for.I modified it a tiny bit to check for dependencies:#!/bin/bash# search shoutcast and send url to radiotray or another player# needs Bash 4, curl, [radiotray], [xsel to send url to X selection for pasting]# (comment out line 53 \"printf '%s'...\" if you don't use xsel)command -v curl &gt; /dev/null 2&gt;&amp;1 || { echo \"curl required.\" &gt;&amp;2; exit 1; }command -v xsel &gt; /dev/null 2&gt;&amp;1 || { echo \"xsel required.\" &gt;&amp;2; exit 1; }command -v radiotray &gt; /dev/null 2&gt;&amp;1 || { echo \"radiotray required.\" &gt;&amp;2; exit 1; }# choose player (&amp; options if necessary): radio url will be sent to it.radioplay() { radiotray \"$1\"# mplayer -playlist \"$1\" # replace 'mplayer -playlist' to taste, $1 will hold the url# exec mplayer -playlist \"$1\" # add 'exec' if you'd rather launch player and leave script}# start up radiotray in background if it's not already running# Comment out this line if you don't use radiotray.pgrep radiotray &gt;/dev/null || ( radiotray &gt;/dev/null 2&gt;&amp;1 &amp; )##########################################################################while truedoecho \"Please enter keyword(s)\"read keywordkeyword=\"${keyword// /%20}\" # escape spaces for urlresults=$( curl -s \"http://www.shoutcast.com/Internet-Radio/$keyword\" |awk 'BEGIN { RS=\"&lt;div class=\\\"dirlist\\\"&gt;\" FS=\"&gt;\"}NR &lt; 2 {next}{url = name = $2sub(/^.*title=\\\"/,\"\",name)sub(/\\\".*$/,\"\",name)sub(/^.*href=\\\"/,\"\",url)sub(/\\\".*$/,\"\",url)print url,name }' )[[ $results ]] || { echo \"Sorry, no results for $keyword\"; continue;}unset listdeclare -A list # make associative arraywhile read url name # read in awk's outputdo list[\"$name\"]=\"$url\"done &lt;&lt;&lt; \"$results\"PS3='Please enter the number of your choice &gt; 'while truedo select station in \"${!list[@]}\" 'Search Again' Quit do [[ $station = 'Search Again' ]] &amp;&amp; break 2 [[ $station = Quit ]] &amp;&amp; { echo 'Goodbye...'; exit; } [[ $station ]] &amp;&amp; { printf '%s' \"${list[$station]}\" | xsel --input #--clipboard # can paste url radioplay \"${list[$station]}\" break } doneecho \"Last station chosen was $station ( ${list[$station]} )\"donedone # closes loop started at line 18exit" }, { "title": "Here we go again ...", "url": "/blog/2012/07/18/here-we-go-again-dot-dot-dot/", "categories": "Writing", "tags": "blog", "date": "2012-07-18 07:53:00 -0400", "snippet": "So, another year, another blogging engine, another crack at blogging.This time around I’m trying out Octopress. There’s something very appealing about being able to interact with this blog via rake...", "content": "So, another year, another blogging engine, another crack at blogging.This time around I’m trying out Octopress. There’s something very appealing about being able to interact with this blog via rake tasks and Git.This page was generated using rake new_post[\"Here we go again ...\"]Octopress is essentially Jekyll, which means it can be deployed very easily to either Github or Heroku.Why all the links you may ask? Because I can write posts using Markdown, and I sometimes mix up the syntax between Markdown and Textile, so I’m just trying to hammer it into my brain ;)" } ]
