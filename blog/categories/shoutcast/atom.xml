<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Shoutcast | THAT THING I SENT YOU]]></title>
  <link href="http://alexbevi.com/blog/categories/shoutcast/atom.xml" rel="self"/>
  <link href="http://alexbevi.com/"/>
  <updated>2012-07-18T09:10:01-04:00</updated>
  <id>http://alexbevi.com/</id>
  <author>
    <name><![CDATA[Alex Bevilacqua]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Shoutcast Streaming from the Command Line]]></title>
    <link href="http://alexbevi.com/blog/2012/07/18/shoutcast-streaming-from-the-command-line/"/>
    <updated>2012-07-18T08:20:00-04:00</updated>
    <id>http://alexbevi.com/blog/2012/07/18/shoutcast-streaming-from-the-command-line</id>
    <content type="html"><![CDATA[<p>I spend a lot of time working in a terminal, and I like to spend that time listening to music. Since I work primarly in Linux, I was hoping there would be an easy way to merge these two activities ... and it turns out there was :)</p>

<!-- more -->


<p>After searching around, i found a <a href="http://crunchbanglinux.org/forums/post/150587/#p150587">post on the crunchbang forums</a> that provided exactly the script I was looking for.</p>

<p>I modified it a tiny bit to check for dependencies:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Linux Shoutcast Search and Streaming - shoutcast.sh  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;search shoutcast and send url to radiotray or another player&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;needs Bash 4, curl, <span class="o">[</span>radiotray<span class="o">]</span>, <span class="o">[</span>xsel to send url to X selection <span class="k">for </span>pasting<span class="o">]</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">(</span>comment out line 53 <span class="s2">&quot;printf &#39;%s&#39;...&quot;</span> <span class="k">if </span>you don<span class="s1">&#39;t use xsel)&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">&lt;p&gt;command -v curl &gt; /dev/null 2&gt;&amp;amp;1 || { echo &quot;curl required.&quot; &gt;&amp;2; exit 1; }</span>
</span><span class='line'><span class="s1">command -v xsel &gt; /dev/null 2&gt;&amp;amp;1 || { echo &quot;xsel required.&quot; &gt;&amp;2; exit 1; }</span>
</span><span class='line'><span class="s1">command -v radiotray &gt; /dev/null 2&gt;&amp;amp;1 || { echo &quot;radiotray required.&quot; &gt;&amp;2; exit 1; }&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">&lt;h1&gt;choose player (&amp;amp; options if necessary): radio url will be sent to it.&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">&lt;p&gt;radioplay() {&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">&lt;pre&gt;&lt;code&gt;radiotray &quot;$1&quot;</span>
</span><span class='line'><span class="s1">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">&lt;h1&gt;mplayer -playlist &quot;$1&quot; # replace &#39;</span>mplayer -playlist<span class="s1">&#39; to taste, $1 will hold the url&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">&lt;h1&gt;exec mplayer -playlist &quot;$1&quot; # add &#39;</span><span class="nb">exec</span><span class="s1">&#39; if you&#39;</span>d rather launch player and leave script&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">}</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;start up radiotray in background <span class="k">if </span>it<span class="s1">&#39;s not already running&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">&lt;h1&gt;Comment out this line if you don&#39;</span>t use radiotray.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;pgrep radiotray &gt;/dev/null <span class="o">||</span> <span class="o">(</span> radiotray &gt;/dev/null 2&gt;&amp;amp;1 &amp;amp; <span class="o">)</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h6&gt;#&lt;/h6&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;while <span class="nb">true</span>
</span><span class='line'><span class="k">do</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Please enter keyword(s)&quot;</span>
</span><span class='line'><span class="nb">read </span>keyword
</span><span class='line'><span class="nv">keyword</span><span class="o">=</span><span class="s2">&quot;${keyword// /%20}&quot;</span> <span class="c"># escape spaces for url</span>
</span><span class='line'><span class="nv">results</span><span class="o">=</span><span class="k">$(</span> curl -s <span class="s2">&quot;http://www.shoutcast.com/Internet-Radio/$keyword&quot;</span> |awk <span class="s1">&#39;</span>
</span><span class='line'><span class="s1">BEGIN {&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">&lt;pre&gt;&lt;code&gt;RS=&quot;&amp;lt;div class=\&quot;dirlist\&quot;&amp;gt;&quot;</span>
</span><span class='line'><span class="s1">FS=&quot;&amp;gt;&quot;</span>
</span><span class='line'><span class="s1">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">&lt;p&gt;}</span>
</span><span class='line'><span class="s1">NR &amp;lt; 2 {next}</span>
</span><span class='line'><span class="s1">{url = name = $2</span>
</span><span class='line'><span class="s1">sub(/&lt;sup&gt;.*title=\&quot;/,&quot;&quot;,name)&lt;/sup&gt;</span>
</span><span class='line'><span class="s1">sub(/\&quot;.&lt;em&gt;$/,&quot;&quot;,name)</span>
</span><span class='line'><span class="s1">sub(/&lt;sup&gt;.*href=\&quot;/,&quot;&quot;,url)&lt;/sup&gt;</span>
</span><span class='line'><span class="s1">sub(/\&quot;.&lt;/em&gt;$/,&quot;&quot;,url)</span>
</span><span class='line'><span class="s1">print url,name }</span>
</span><span class='line'><span class="s1">&#39;</span> <span class="k">)</span>
</span><span class='line'><span class="o">[[</span> <span class="nv">$results</span> <span class="o">]]</span> <span class="o">||</span> <span class="o">{</span> <span class="nb">echo</span> <span class="s2">&quot;Sorry, no results for $keyword&quot;</span>; <span class="k">continue</span>;<span class="o">}</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;unset list
</span><span class='line'><span class="nb">declare</span> -A list <span class="c"># make associative array</span>
</span><span class='line'><span class="k">while </span><span class="nb">read </span>url name <span class="c"># read in awk&#39;s output</span>
</span><span class='line'><span class="k">do</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;list<span class="o">[</span><span class="s2">&quot;$name&quot;</span><span class="o">]=</span><span class="s2">&quot;$url&quot;</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;done &amp;lt;&amp;lt;&amp;lt; <span class="s2">&quot;$results&quot;</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;PS3<span class="o">=</span><span class="s1">&#39;Please enter the number of your choice &gt; &#39;</span>
</span><span class='line'><span class="k">while </span><span class="nb">true</span>
</span><span class='line'><span class="k">do</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;select station in <span class="s2">&quot;${!list[@]}&quot;</span> <span class="s1">&#39;Search Again&#39;</span> Quit
</span><span class='line'><span class="k">do</span>
</span><span class='line'>    <span class="o">[[</span> <span class="nv">$station</span> <span class="o">=</span> <span class="s1">&#39;Search Again&#39;</span> <span class="o">]]</span> &amp;amp;&amp;amp; <span class="nb">break </span>2
</span><span class='line'>    <span class="o">[[</span> <span class="nv">$station</span> <span class="o">=</span> Quit <span class="o">]]</span> &amp;amp;&amp;amp; <span class="o">{</span> <span class="nb">echo</span> <span class="s1">&#39;Goodbye...&#39;</span>; <span class="nb">exit</span>; <span class="o">}</span>
</span><span class='line'>    <span class="o">[[</span> <span class="nv">$station</span> <span class="o">]]</span> &amp;amp;&amp;amp; <span class="o">{</span>
</span><span class='line'>    <span class="nb">printf</span> <span class="s1">&#39;%s&#39;</span> <span class="s2">&quot;${list[$station]}&quot;</span> | xsel --input <span class="c">#--clipboard  # can paste url</span>
</span><span class='line'>    radioplay <span class="s2">&quot;${list[$station]}&quot;</span>
</span><span class='line'>    <span class="nb">break</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="k">done</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;echo <span class="s2">&quot;</span>
</span><span class='line'><span class="s2">Last station chosen was $station ( ${list[$station]} )</span>
</span><span class='line'><span class="s2">&quot;</span>
</span><span class='line'><span class="k">done</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;done <span class="c"># closes loop started at line 18</span>
</span><span class='line'><span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
