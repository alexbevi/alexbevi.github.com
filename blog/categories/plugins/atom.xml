<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[Category: plugins | ALEX BEVILACQUA]]></title>
    <link href="http://www.alexbevi.com/blog/categories/plugins/atom.xml" rel="self"/>
    <link href="http://www.alexbevi.com/"/>
    <updated>2018-08-20T16:00:29-04:00</updated>
    <id>http://www.alexbevi.com/</id>
    <author>
        <name><![CDATA[Alex Bevilacqua]]></name>
        <email><![CDATA[alex@alexbevi.com]]></email>
      </author>
    <generator uri="http://octopress.org/">Octopress</generator>

    
    <entry>
        <title type="html"><![CDATA[Gallery Tag for Octopress]]></title>
        <link href="http://www.alexbevi.com/blog/2014/10/07/gallery-tag-for-octopress/"/>
        <updated>2014-10-07T08:31:08-04:00</updated>
        <id>http://www.alexbevi.com/blog/2014/10/07/gallery-tag-for-octopress</id>
        <content type="html"><![CDATA[While working on my post about finishing [Robotrek](http://en.wikipedia.org/wiki/Robotrek), I found that I had taken a lot more screenshots than would fit nicely with the amount of copy I intended to write.

<small>I hope to be done the *just finished ...* article soon-ish ...</small>

Since I didn't really want to discard any, I figured I'd just throw the execss screenshots into a carousel or gallery.

I found [an excellent example](https://gist.github.com/kyv/5667902), but it didn't quite produce the results I was looking for.

<!-- more -->

I ended up forking the gist in order to implement a Gallery tag for Jekyll/Octopress that could work with the [Galleria](http://galleria.io/) jQuery plugin.

Now I can build a gallery from my extra screenshots by simply adding


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{% galleria %}
</span><span class='line'>/images/robotrek/Robotrek_(USA).000.png
</span><span class='line'>/images/robotrek/Robotrek_(USA).001.png
</span><span class='line'>/images/robotrek/Robotrek_(USA).002.png
</span><span class='line'>/images/robotrek/Robotrek_(USA).003.png
</span><span class='line'>/images/robotrek/Robotrek_(USA).004.png
</span><span class='line'>/images/robotrek/Robotrek_(USA).005.png
</span><span class='line'>/images/robotrek/Robotrek_(USA).006.png
</span><span class='line'>/images/robotrek/Robotrek_(USA).007.png
</span><span class='line'>/images/robotrek/Robotrek_(USA).008.png
</span><span class='line'>/images/robotrek/Robotrek_(USA).009.png
</span><span class='line'>/images/robotrek/Robotrek_(USA).010.png
</span><span class='line'>{% endgalleria %}</span></code></pre></td></tr></table></div></figure>


to my post, which will produce the following gallery:

<div id="galleria"><img src="/images/robotrek/Robotrek_(USA).000.png" data-title="/images/robotrek/Robotrek_(USA).000.png" /><img src="/images/robotrek/Robotrek_(USA).001.png" data-title="/images/robotrek/Robotrek_(USA).001.png" /><img src="/images/robotrek/Robotrek_(USA).002.png" data-title="/images/robotrek/Robotrek_(USA).002.png" /><img src="/images/robotrek/Robotrek_(USA).003.png" data-title="/images/robotrek/Robotrek_(USA).003.png" /><img src="/images/robotrek/Robotrek_(USA).004.png" data-title="/images/robotrek/Robotrek_(USA).004.png" /><img src="/images/robotrek/Robotrek_(USA).005.png" data-title="/images/robotrek/Robotrek_(USA).005.png" /><img src="/images/robotrek/Robotrek_(USA).006.png" data-title="/images/robotrek/Robotrek_(USA).006.png" /><img src="/images/robotrek/Robotrek_(USA).007.png" data-title="/images/robotrek/Robotrek_(USA).007.png" /><img src="/images/robotrek/Robotrek_(USA).008.png" data-title="/images/robotrek/Robotrek_(USA).008.png" /><img src="/images/robotrek/Robotrek_(USA).009.png" data-title="/images/robotrek/Robotrek_(USA).009.png" /><img src="/images/robotrek/Robotrek_(USA).010.png" data-title="/images/robotrek/Robotrek_(USA).010.png" /></div><script>  Galleria.configure('transition', 'fade');  Galleria.run('#galleria');</script>

I've included the gist below. If you want to download and install this yourself, just download the gist to `/path/to/octopress/plugins`.

<noscript><pre># Title: Galleria Tag for Jekyll
# Authors: Alex Bevilacqua
# Description: incorporate the Galleria gallery jquery plugin 
#
# Adaption of &quot;Photos tag for Jekyll&quot; by Devin Weaver, and the derived 
# &quot;Gallery Tag for Jekyll&quot; by Kevin Brown.
#
# Installation:
#
# {% galleria_includes %}
#
# This macro should be added to your `source/_includes/custom/head.html`
# in order to load the libraries needed by Galleria
#
# Example:
#
# {% galleria %}
# photo1.jpg
# /path/to/photos/photo2.jpg:title
# {% endgalleria %}
#
module Jekyll

  PLUGIN_GALLERIA_VERSION = &quot;1.4.2&quot;
  PLUGIN_JQUERY_VERSION   = &quot;2.1.1&quot;

  class PhotosUtil
    def initialize(context)
      @context = context
    end

    def path_for(filename)
      filename = filename.strip
      prefix = (@context.environments.first[&#39;site&#39;][&#39;photos_prefix&#39;] unless filename =~ /^(?:\/|http)/i) || &quot;&quot;
      &quot;#{prefix}#{filename}&quot;
    end
  end

  class GalleriaScriptIncludePatch &lt; Liquid::Tag
    def render(context)
      return &lt;&lt;-eof
&lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/jquery/#{PLUGIN_JQUERY_VERSION}/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/galleria/#{PLUGIN_GALLERIA_VERSION}/galleria.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/galleria/#{PLUGIN_GALLERIA_VERSION}/themes/classic/galleria.classic.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;link href=&quot;//cdnjs.cloudflare.com/ajax/libs/galleria/#{PLUGIN_GALLERIA_VERSION}/themes/classic/galleria.classic.min.css&quot; media=&quot;screen, projection&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;
&lt;style&gt;
  /* This rule is read by Galleria to define the gallery height: */
  #galleria{height:320px}
&lt;/style&gt;
      eof
    end
  end

  class GalleriaTag &lt; Liquid::Block
    def initialize(tag_name, markup, tokens)
      # No initializing needed
      super
    end

    def render(context)
      # Convert the entire content array into one large string
      lines = super
      # split the text by newlines
      lines = lines.split(&quot;\n&quot;)
      
      p = PhotosUtil.new(context)
      gallery = &quot;&lt;div id=\&quot;galleria\&quot;&gt;&quot;

      lines.each_with_index do |line, i|
        next if line.empty?
        filename, title = line.split(&quot;:&quot;)
        title = (title.nil?) ? &quot;&quot; : title.strip
        gallery &lt;&lt; &quot;&lt;img src=\&quot;#{p.path_for(filename)}\&quot; data-title=\&quot;#{title}\&quot; /&gt;&quot;
      end
      gallery &lt;&lt; &quot;&lt;/div&gt;&quot;
      gallery &lt;&lt; &quot;&lt;script&gt;&quot;
      gallery &lt;&lt; &quot;  Galleria.configure(&#39;transition&#39;, &#39;fade&#39;);&quot;
      gallery &lt;&lt; &quot;  Galleria.run(&#39;#galleria&#39;);&quot;
      gallery &lt;&lt; &quot;&lt;/script&gt;&quot;
      gallery
    end
  end

end

Liquid::Template.register_tag(&#39;galleria&#39;, Jekyll::GalleriaTag)
Liquid::Template.register_tag(&#39;galleria_includes&#39;, Jekyll::GalleriaScriptIncludePatch)
</pre></noscript><script src="https://gist.github.com/alexbevi/1c185c6a037d63f6aec7.js"> </script>]]></content>
    </entry>
    
</feed>
