<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ubuntu | ALEX BEVILACQUA]]></title>
  <link href="http://alexbevi.com/blog/categories/ubuntu/atom.xml" rel="self"/>
  <link href="http://alexbevi.com/"/>
  <updated>2014-02-04T08:48:42-05:00</updated>
  <id>http://alexbevi.com/</id>
  <author>
    <name><![CDATA[Alex Bevilacqua]]></name>
    <email><![CDATA[alexbevi@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fixing Broken Sudo]]></title>
    <link href="http://alexbevi.com/blog/2012/10/30/fixing-broken-sudo/"/>
    <updated>2012-10-30T14:58:00-04:00</updated>
    <id>http://alexbevi.com/blog/2012/10/30/fixing-broken-sudo</id>
    <content type="html"><![CDATA[<p>This is pretty much a transcription of <a href="http://www.psychocats.net/ubuntu/fixsudo">http://www.psychocats.net/ubuntu/fixsudo</a>, which is just such a good article I wanted to keep a copy for reference.</p>

<h2>How does <em>sudo</em> work?</h2>

<p>The way that Ubuntu has implemented <em>sudo</em>, the <code>/etc/sudoers</code> file says that users in the admin group can (after a password authentication) temporarily escalate to system-wide privileges for particular tasks. And then the <code>/etc/groups</code> file says which users are in the admin group.</p>

<p>You can read more on <a href="https://help.ubuntu.com/community/RootSudo">the community documentation</a> about Ubuntu&rsquo;s implementation of <em>sudo</em>.</p>

<!-- more -->


<h2>Cause and Symptoms</h2>

<p><em>sudo</em> breaks when one or more of the following occurs:</p>

<ul>
<li>the <code>/etc/sudoers</code> file has been altered to no longer allow users in the admin group to escalate privilege</li>
<li>the permissions on the <code>/etc/sudoers</code> file are changed to something other than 0440</li>
<li>a user who should not have been has been taken out of the <em>admin</em> group</li>
</ul>


<p><img class="center" src="/images/fixsudoprecise01.jpg"></p>

<p>If <em>sudo</em> is broken this way, you may notice an error saying you&rsquo;re not in the _sudo_ers file and the incident is going to be reported. Or you may just see the next command prompt without any action being executed.</p>

<h2>Booting into recovery mode</h2>

<p>Since fixing <em>sudo</em> involves editing system files, and you would otherwise need <em>sudo</em> to do so, you&rsquo;ll have to boot into recovery mode to gain root (system-wide) access in order to repair <em>sudo</em>.</p>

<p>If you have a single-boot (Ubuntu is the only operating system on your computer), to get the boot menu to show, you have to hold down the Shift key during bootup.</p>

<p>If you have a dual-boot (Ubuntu is installed next to Windows, another Linux operating system, or Mac OS X; and you choose at boot time which operating system to boot into), the boot menu should appear without the need to hold down the <em>Shift</em> key.</p>

<p><img class="center" src="/images/fixsudoprecise02.jpg"></p>

<p>From the boot menu, select <em>recovery mode</em>, which is usually the second boot option.</p>

<p><img class="center" src="/images/fixsudoprecise03.jpg"></p>

<p>After you select recovery mode and wait for all the boot-up processes to finish, you&rsquo;ll be presented with a few options. In this case, you want the <em>Drop to root shell</em> prompt option so press the Down arrow to get to that option, and then press Enter to select it.</p>

<p>The root account is the ultimate administrator and can do anything to the Ubuntu installation (including erase it), so please be careful with what commands you enter in the root terminal.</p>

<p>In recent versions of Ubuntu, the filesystem is mounted as read-only, so you need to enter the follow command to get it to remount as read-write, which will allow you to make changes:</p>

<pre><code>mount -o rw,remount /
</code></pre>

<h2>Do the actual repair</h2>

<h3>Case 1</h3>

<p>If you&rsquo;d removed your last <em>admin</em> user from the <em>admin</em> group, then type</p>

<pre><code>adduser username admin
</code></pre>

<p>where <em>username</em> is your actual username.</p>

<h3>Case 2</h3>

<p>If you had previously edited the /etc/_sudo_ers file and screwed it up, then type</p>

<pre><code>sudo cp /etc/sudoers /etc/sudoers.backup
sudo nano /etc/sudoers
</code></pre>

<p>(the proper command is actually <code>sudo visudo</code>, which checks syntax before you save the <code>/etc/sudoers</code> file, but in some older versions of Ubuntu, that command uses the vi editor, which can be confusing to new users, as opposed to nano, which is more straightforward)
and make it sure it looks like this:</p>

<pre><code>#
# This file MUST be edited with the 'visudo' command as root.
#
# Please consider adding local content in /etc/sudoers.d/ instead of
# directly modifying this file.
#
# See the man page for details on how to write a sudoers file.
#
Defaults  env_reset
Defaults  secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
# Host alias specification

# User alias specification

# Cmnd alias specification

# User privilege specification
root  ALL=(ALL:ALL) ALL

# Members of the admin group may gain root privileges
%admin ALL=(ALL) ALL

# Allow members of group sudo to execute any command
%sudo ALL=(ALL:ALL) ALL

# See sudoers(5) for more information on "#include" directives:

#includedir /etc/sudoers.d
</code></pre>

<p>When you&rsquo;re done making changes, press <em>Control-X, Y, Enter</em>.</p>

<h3>Case 3</h3>

<p>If you are trying to fix the error where it says <em>sudo</em> is mode _____, should be 0440, then you&rsquo;ll want to type</p>

<pre><code>chmod 0440 /etc/sudoers
</code></pre>

<p>When you&rsquo;re done with whatever commands you needed to enter, type</p>

<pre><code>exit
</code></pre>

<p>This will bring you back to the recovery menu.</p>

<p><img class="center" src="/images/fixsudoprecise04.jpg">
<img class="center" src="/images/fixsudoprecise05.jpg"></p>

<p>Choose to resume a normal boot. Then you should be able to <em>sudo</em> again.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Latest MongoDB in Ubuntu]]></title>
    <link href="http://alexbevi.com/blog/2012/08/29/install-latest-mongodb-in-ubuntu/"/>
    <updated>2012-08-29T13:46:00-04:00</updated>
    <id>http://alexbevi.com/blog/2012/08/29/install-latest-mongodb-in-ubuntu</id>
    <content type="html"><![CDATA[<p>A couple projects I work on use <a href="http://www.mongodb.org/">MongoDB</a> as the database, and I&rsquo;m generally not satisfied to use the (often outdated) version that ships with Ubuntu.</p>

<p>As a result, I wrote this script to automate fetching, extracting and linking the latest version.</p>

<!-- more -->


<p>To configure the script, just replace the <code>PKG</code> information with whatever value is most relevant for your configuration at <a href="http://www.mongodb.org/downloads">http://www.mongodb.org/downloads</a>.</p>

<p><div><script src='https://gist.github.com/3516100.js'></script>
<noscript><pre><code>#!/bin/bash

PKG=mongodb-linux-x86_64-2.2.0
URL=http://fastdl.mongodb.org/linux

if [ -f /etc/init.d/mongod ]
then
  echo &quot;mongod already installed ... stopping&quot;
  sudo service mongod stop
else
  echo &quot;installing mongod script&quot;
  wget https://raw.github.com/gist/3516078/713ad981715236473999f30636bca2ee3dcc5f24/mongod
  sudo mv mongod /etc/init.d/mongod
  sudo chmod +x /etc/init.d/mongod
  echo &quot;creating mongodb user&quot;
  sudo useradd mongodb
  echo &quot;creating directories&quot;
  sudo mkdir -p /var/lib/mongodb
  sudo mkdir -p /var/log/mongodb
  sudo chown mongodb.mongodb /var/lib/mongodb
  sudo chown mongodb.mongodb /var/log/mongodb
  sudo update-rc.d mongod defaults
fi

wget $URL/$PKG.tgz
sudo tar -xvzf $PKG.tgz -C /usr/local/

if [ -d /usr/local/mongodb ]
then
  echo &quot;removing existing mongodb symlink&quot;
  sudo rm -rf /usr/local/mongodb
  sudo ln -s /usr/local/$PKG /usr/local/mongodb
else
  echo &quot;creating symlinks&quot;
  sudo ln -s /usr/local/$PKG /usr/local/mongodb
  sudo ln -s /usr/local/mongodb/bin/bsondump /usr/local/bin/bsondump
  sudo ln -s /usr/local/mongodb/bin/mongo /usr/local/bin/mongo
  sudo ln -s /usr/local/mongodb/bin/mongod /usr/local/bin/mongod
  sudo ln -s /usr/local/mongodb/bin/mongodump /usr/local/bin/mongodump
  sudo ln -s /usr/local/mongodb/bin/mongoexport /usr/local/bin/mongoexport
  sudo ln -s /usr/local/mongodb/bin/mongofiles /usr/local/bin/mongofiles
  sudo ln -s /usr/local/mongodb/bin/mongoimport /usr/local/bin/mongoimport
  sudo ln -s /usr/local/mongodb/bin/mongorestore /usr/local/bin/mongorestore
  sudo ln -s /usr/local/mongodb/bin/mongos /usr/local/bin/mongos
  sudo ln -s /usr/local/mongodb/bin/mongosniff /usr/local/bin/mongosniff
  sudo ln -s /usr/local/mongodb/bin/mongostat /usr/local/bin/mongostat
fi

echo &quot;cleaning up&quot;
rm $PKG.tgz

echo &quot;starting mongod service&quot;
sudo service mongod start</code></pre></noscript></div>
</p>

<p>Note that this script pulls <code>mongod</code> from a gist which I created. This script is originally from <a href="https://github.com/ijonas">Ijonas Kisselbach</a>&rsquo;s <a href="https://raw.github.com/ijonas/dotfiles/master/etc/init.d/mongod">dotfiles</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 12.04 Desktop WITHOUT Unity]]></title>
    <link href="http://alexbevi.com/blog/2012/08/10/ubuntu-12-dot-04-desktop-without-unity/"/>
    <updated>2012-08-10T08:03:00-04:00</updated>
    <id>http://alexbevi.com/blog/2012/08/10/ubuntu-12-dot-04-desktop-without-unity</id>
    <content type="html"><![CDATA[<p>As much as I enjoy Ubuntu, I haven&rsquo;t warmed to their Unity desktop. I personally find it&rsquo;s too similar to OS X, I don&rsquo;t really like the launcher with larger icons, the global menu, the shifted window control buttons, notification area changes .. etc.</p>

<p>Since it&rsquo;s based on GTK3, I know you can modify this all, but I&rsquo;d rather just use a desktop environment that doesn&rsquo;t require that level of tweaking.</p>

<p>Enter Cinnamon. Cinnamon is developed by the Linux Mint team, which has a distribution based on Ubuntu.</p>

<p>Over at the <a href="http://www.linuxbsdos.com/2012/04/26/install-the-latest-and-greatest-cinnamon-desktop-on-ubuntu-12-04/">LinuxBSDOS</a> blog, there was an article on how to get Cinnamon installed in the latest Ubuntu.</p>

<p>I found that after doing this, I ended up with no sound. To fix this, <a href="http://askubuntu.com/questions/135778/no-sound-on-ubuntu-12-04/153470#153470">AskUbuntu</a> has an article that I found useful.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shoutcast Streaming from the Command Line]]></title>
    <link href="http://alexbevi.com/blog/2012/07/18/shoutcast-streaming-from-the-command-line/"/>
    <updated>2012-07-18T08:20:00-04:00</updated>
    <id>http://alexbevi.com/blog/2012/07/18/shoutcast-streaming-from-the-command-line</id>
    <content type="html"><![CDATA[<p>I spend a lot of time working in a terminal, and I like to spend that time listening to music. Since I work primarly in Linux, I was hoping there would be an easy way to merge these two activities &hellip; and it turns out there was :)</p>

<!-- more -->


<p>After searching around, i found a <a href="http://crunchbanglinux.org/forums/post/150587/#p150587">post on the crunchbang forums</a> that provided exactly the script I was looking for.</p>

<p>I modified it a tiny bit to check for dependencies:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Linux Shoutcast Search and Streaming &ndash; shoutcast.sh </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;search shoutcast and send url to radiotray or another player&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;needs Bash 4, curl, <span class="o">[</span>radiotray<span class="o">]</span>, <span class="o">[</span>xsel to send url to X selection <span class="k">for </span>pasting<span class="o">]</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">(</span>comment out line 53 &amp;ldquo;printf &amp;lsquo;%s&amp;rsquo;&amp;hellip;&amp;rdquo; <span class="k">if </span>you don&amp;rsquo;t use xsel<span class="o">)</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;command -v curl &gt; /dev/null 2&gt;&amp;amp;1 <span class="o">||</span> <span class="o">{</span> <span class="nb">echo</span> &amp;ldquo;curl required.&amp;rdquo; &gt;&amp;2; <span class="nb">exit </span>1; <span class="o">}</span>
</span><span class='line'><span class="nb">command</span> -v xsel &gt; /dev/null 2&gt;&amp;amp;1 <span class="o">||</span> <span class="o">{</span> <span class="nb">echo</span> &amp;ldquo;xsel required.&amp;rdquo; &gt;&amp;2; <span class="nb">exit </span>1; <span class="o">}</span>
</span><span class='line'><span class="nb">command</span> -v radiotray &gt; /dev/null 2&gt;&amp;amp;1 <span class="o">||</span> <span class="o">{</span> <span class="nb">echo</span> &amp;ldquo;radiotray required.&amp;rdquo; &gt;&amp;2; <span class="nb">exit </span>1; <span class="o">}</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;choose player <span class="o">(</span>&amp;amp; options <span class="k">if </span>necessary<span class="o">)</span>: radio url will be sent to it.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;radioplay<span class="o">()</span> <span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;radiotray <span class="s2">&quot;$1&quot;</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;mplayer -playlist &amp;ldquo;<span class="nv">$1</span>&amp;rdquo; <span class="c"># replace &amp;lsquo;mplayer -playlist&amp;rsquo; to taste, $1 will hold the url&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;exec mplayer -playlist &amp;ldquo;<span class="nv">$1</span>&amp;rdquo; <span class="c"># add &amp;lsquo;exec&amp;rsquo; if you&amp;rsquo;d rather launch player and leave script&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">}</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;start up radiotray in background <span class="k">if </span>it&amp;rsquo;s not already running&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Comment out this line <span class="k">if </span>you don&amp;rsquo;t use radiotray.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;pgrep radiotray &gt;/dev/null <span class="o">||</span> <span class="o">(</span> radiotray &gt;/dev/null 2&gt;&amp;amp;1 &amp;amp; <span class="o">)</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h6&gt;#&lt;/h6&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;while <span class="nb">true</span>
</span><span class='line'><span class="k">do</span>
</span><span class='line'><span class="nb">echo</span> &amp;ldquo;Please enter keyword<span class="o">(</span>s<span class="o">)</span>&amp;rdquo;
</span><span class='line'><span class="nb">read </span>keyword
</span><span class='line'><span class="nv">keyword</span><span class="o">=</span>&amp;ldquo;<span class="k">${</span><span class="nv">keyword</span><span class="p">// /%20</span><span class="k">}</span>&amp;rdquo; <span class="c"># escape spaces for url</span>
</span><span class='line'><span class="nv">results</span><span class="o">=</span><span class="k">$(</span> curl -s &amp;ldquo;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;http://www.shoutcast.com/Internet-Radio/$keyword&quot;</span>&gt;http://www.shoutcast.com/Internet-Radio/<span class="nv">$keyword</span>&lt;/a&gt;&amp;rdquo; |awk &amp;lsquo;
</span><span class='line'>BEGIN <span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;RS<span class="o">=</span><span class="s2">&quot;&amp;lt;div class=\&quot;dirlist\&quot;&amp;gt;&quot;</span>
</span><span class='line'><span class="nv">FS</span><span class="o">=</span><span class="s2">&quot;&amp;gt;&quot;</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">}</span>
</span><span class='line'>NR &amp;lt; 2 <span class="o">{</span>next<span class="o">}</span>
</span><span class='line'><span class="o">{</span><span class="nv">url</span> <span class="o">=</span> <span class="nv">name</span> <span class="o">=</span> <span class="nv">$2</span>
</span><span class='line'>sub<span class="o">(</span>/^.&lt;em&gt;title<span class="o">=</span><span class="se">\&amp;</span>ldquo;/,&amp;rdquo;&amp;ldquo;,name<span class="k">)</span>
</span><span class='line'>sub<span class="o">(</span>/<span class="se">\&amp;</span>rdquo;.&lt;/em&gt;<span class="nv">$/</span>,&amp;ldquo;&amp;rdquo;,name<span class="o">)</span>
</span><span class='line'>sub<span class="o">(</span>/^.&lt;em&gt;href<span class="o">=</span><span class="se">\&amp;</span>ldquo;/,&amp;rdquo;&amp;ldquo;,url<span class="o">)</span>
</span><span class='line'>sub<span class="o">(</span>/<span class="se">\&amp;</span>rdquo;.&lt;/em&gt;<span class="nv">$/</span>,&amp;ldquo;&amp;rdquo;,url<span class="o">)</span>
</span><span class='line'>print url,name <span class="o">}</span>
</span><span class='line'>&amp;lsquo; <span class="o">)</span>
</span><span class='line'><span class="o">[[</span> <span class="nv">$results</span> <span class="o">]]</span> <span class="o">||</span> <span class="o">{</span> <span class="nb">echo</span> &amp;ldquo;Sorry, no results <span class="k">for</span> <span class="nv">$keyword</span>&amp;rdquo;; <span class="k">continue</span>;<span class="o">}</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;unset list
</span><span class='line'><span class="nb">declare</span> -A list <span class="c"># make associative array</span>
</span><span class='line'><span class="k">while </span><span class="nb">read </span>url name <span class="c"># read in awk&amp;rsquo;s output</span>
</span><span class='line'><span class="k">do</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;list<span class="o">[</span><span class="s2">&quot;$name&quot;</span><span class="o">]=</span><span class="s2">&quot;$url&quot;</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;done &amp;lt;&amp;lt;&amp;lt; &amp;ldquo;<span class="nv">$results</span>&amp;rdquo;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;PS3<span class="o">=</span>&amp;lsquo;Please enter the number of your choice &gt; &amp;rsquo;
</span><span class='line'><span class="k">while </span><span class="nb">true</span>
</span><span class='line'><span class="k">do</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;select station in <span class="s2">&quot;${!list[@]}&quot;</span> <span class="s1">&#39;Search Again&#39;</span> Quit
</span><span class='line'><span class="k">do</span>
</span><span class='line'>    <span class="o">[[</span> <span class="nv">$station</span> <span class="o">=</span> <span class="s1">&#39;Search Again&#39;</span> <span class="o">]]</span> &amp;amp;&amp;amp; <span class="nb">break </span>2
</span><span class='line'>    <span class="o">[[</span> <span class="nv">$station</span> <span class="o">=</span> Quit <span class="o">]]</span> &amp;amp;&amp;amp; <span class="o">{</span> <span class="nb">echo</span> <span class="s1">&#39;Goodbye...&#39;</span>; <span class="nb">exit</span>; <span class="o">}</span>
</span><span class='line'>    <span class="o">[[</span> <span class="nv">$station</span> <span class="o">]]</span> &amp;amp;&amp;amp; <span class="o">{</span>
</span><span class='line'>    <span class="nb">printf</span> <span class="s1">&#39;%s&#39;</span> <span class="s2">&quot;${list[$station]}&quot;</span> | xsel --input <span class="c">#--clipboard  # can paste url</span>
</span><span class='line'>    radioplay <span class="s2">&quot;${list[$station]}&quot;</span>
</span><span class='line'>    <span class="nb">break</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="k">done</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;echo &amp;ldquo;
</span><span class='line'>Last station chosen was <span class="nv">$station</span> <span class="o">(</span> <span class="k">${</span><span class="nv">list</span><span class="p">[</span><span class="nv">$station</span><span class="p">]</span><span class="k">}</span> <span class="o">)</span>
</span><span class='line'>&amp;rdquo;
</span><span class='line'><span class="k">done</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;done <span class="c"># closes loop started at line 18</span>
</span><span class='line'><span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
