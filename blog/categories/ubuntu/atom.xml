<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ubuntu | ALEX BEVILACQUA]]></title>
  <link href="http://alexbevi.com/blog/categories/ubuntu/atom.xml" rel="self"/>
  <link href="http://alexbevi.com/"/>
  <updated>2014-01-27T16:08:40-05:00</updated>
  <id>http://alexbevi.com/</id>
  <author>
    <name><![CDATA[Alex Bevilacqua]]></name>
    <email><![CDATA[alexbevi@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fixing Broken Sudo]]></title>
    <link href="http://alexbevi.com/blog/2012/10/30/fixing-broken-sudo/"/>
    <updated>2012-10-30T14:58:00-04:00</updated>
    <id>http://alexbevi.com/blog/2012/10/30/fixing-broken-sudo</id>
    <content type="html"><![CDATA[<p>This is pretty much a transcription of <a href="http://www.psychocats.net/ubuntu/fixsudo">http://www.psychocats.net/ubuntu/fixsudo</a>, which is just such a good article I wanted to keep a copy for reference.</p>

<h2>How does <em>sudo</em> work?</h2>

<p>The way that Ubuntu has implemented <em>sudo</em>, the <code>/etc/sudoers</code> file says that users in the admin group can (after a password authentication) temporarily escalate to system-wide privileges for particular tasks. And then the <code>/etc/groups</code> file says which users are in the admin group.</p>

<p>You can read more on <a href="https://help.ubuntu.com/community/RootSudo">the community documentation</a> about Ubuntu&rsquo;s implementation of <em>sudo</em>.</p>

<!-- more -->


<h2>Cause and Symptoms</h2>

<p><em>sudo</em> breaks when one or more of the following occurs:</p>

<ul>
<li>the <code>/etc/sudoers</code> file has been altered to no longer allow users in the admin group to escalate privilege</li>
<li>the permissions on the <code>/etc/sudoers</code> file are changed to something other than 0440</li>
<li>a user who should not have been has been taken out of the <em>admin</em> group</li>
</ul>


<p>{% img center /images/fixsudoprecise01.jpg %}</p>

<p>If <em>sudo</em> is broken this way, you may notice an error saying you&rsquo;re not in the _sudo_ers file and the incident is going to be reported. Or you may just see the next command prompt without any action being executed.</p>

<h2>Booting into recovery mode</h2>

<p>Since fixing <em>sudo</em> involves editing system files, and you would otherwise need <em>sudo</em> to do so, you&rsquo;ll have to boot into recovery mode to gain root (system-wide) access in order to repair <em>sudo</em>.</p>

<p>If you have a single-boot (Ubuntu is the only operating system on your computer), to get the boot menu to show, you have to hold down the Shift key during bootup.</p>

<p>If you have a dual-boot (Ubuntu is installed next to Windows, another Linux operating system, or Mac OS X; and you choose at boot time which operating system to boot into), the boot menu should appear without the need to hold down the <em>Shift</em> key.</p>

<p>{% img center /images/fixsudoprecise02.jpg %}</p>

<p>From the boot menu, select <em>recovery mode</em>, which is usually the second boot option.</p>

<p>{% img center /images/fixsudoprecise03.jpg %}</p>

<p>After you select recovery mode and wait for all the boot-up processes to finish, you&rsquo;ll be presented with a few options. In this case, you want the <em>Drop to root shell</em> prompt option so press the Down arrow to get to that option, and then press Enter to select it.</p>

<p>The root account is the ultimate administrator and can do anything to the Ubuntu installation (including erase it), so please be careful with what commands you enter in the root terminal.</p>

<p>In recent versions of Ubuntu, the filesystem is mounted as read-only, so you need to enter the follow command to get it to remount as read-write, which will allow you to make changes:</p>

<pre><code>mount -o rw,remount /
</code></pre>

<h2>Do the actual repair</h2>

<h3>Case 1</h3>

<p>If you&rsquo;d removed your last <em>admin</em> user from the <em>admin</em> group, then type</p>

<pre><code>adduser username admin
</code></pre>

<p>where <em>username</em> is your actual username.</p>

<h3>Case 2</h3>

<p>If you had previously edited the /etc/_sudo_ers file and screwed it up, then type</p>

<pre><code>sudo cp /etc/sudoers /etc/sudoers.backup
sudo nano /etc/sudoers
</code></pre>

<p>(the proper command is actually <code>sudo visudo</code>, which checks syntax before you save the <code>/etc/sudoers</code> file, but in some older versions of Ubuntu, that command uses the vi editor, which can be confusing to new users, as opposed to nano, which is more straightforward)
and make it sure it looks like this:</p>

<pre><code>#
# This file MUST be edited with the 'visudo' command as root.
#
# Please consider adding local content in /etc/sudoers.d/ instead of
# directly modifying this file.
#
# See the man page for details on how to write a sudoers file.
#
Defaults  env_reset
Defaults  secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
# Host alias specification

# User alias specification

# Cmnd alias specification

# User privilege specification
root  ALL=(ALL:ALL) ALL

# Members of the admin group may gain root privileges
%admin ALL=(ALL) ALL

# Allow members of group sudo to execute any command
%sudo ALL=(ALL:ALL) ALL

# See sudoers(5) for more information on "#include" directives:

#includedir /etc/sudoers.d
</code></pre>

<p>When you&rsquo;re done making changes, press <em>Control-X, Y, Enter</em>.</p>

<h3>Case 3</h3>

<p>If you are trying to fix the error where it says <em>sudo</em> is mode _____, should be 0440, then you&rsquo;ll want to type</p>

<pre><code>chmod 0440 /etc/sudoers
</code></pre>

<p>When you&rsquo;re done with whatever commands you needed to enter, type</p>

<pre><code>exit
</code></pre>

<p>This will bring you back to the recovery menu.</p>

<p>{% img center /images/fixsudoprecise04.jpg %}
{% img center /images/fixsudoprecise05.jpg %}</p>

<p>Choose to resume a normal boot. Then you should be able to <em>sudo</em> again.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Latest MongoDB in Ubuntu]]></title>
    <link href="http://alexbevi.com/blog/2012/08/29/install-latest-mongodb-in-ubuntu/"/>
    <updated>2012-08-29T13:46:00-04:00</updated>
    <id>http://alexbevi.com/blog/2012/08/29/install-latest-mongodb-in-ubuntu</id>
    <content type="html"><![CDATA[<p>A couple projects I work on use <a href="http://www.mongodb.org/">MongoDB</a> as the database, and I&rsquo;m generally not satisfied to use the (often outdated) version that ships with Ubuntu.</p>

<p>As a result, I wrote this script to automate fetching, extracting and linking the latest version.</p>

<!-- more -->


<p>To configure the script, just replace the <code>PKG</code> information with whatever value is most relevant for your configuration at <a href="http://www.mongodb.org/downloads">http://www.mongodb.org/downloads</a>.</p>

<p>{% gist 3516100 %}</p>

<p>Note that this script pulls <code>mongod</code> from a gist which I created. This script is originally from <a href="https://github.com/ijonas">Ijonas Kisselbach</a>&rsquo;s <a href="https://raw.github.com/ijonas/dotfiles/master/etc/init.d/mongod">dotfiles</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 12.04 Desktop WITHOUT Unity]]></title>
    <link href="http://alexbevi.com/blog/2012/08/10/ubuntu-12-dot-04-desktop-without-unity/"/>
    <updated>2012-08-10T08:03:00-04:00</updated>
    <id>http://alexbevi.com/blog/2012/08/10/ubuntu-12-dot-04-desktop-without-unity</id>
    <content type="html"><![CDATA[<p>As much as I enjoy Ubuntu, I haven&rsquo;t warmed to their Unity desktop. I personally find it&rsquo;s too similar to OS X, I don&rsquo;t really like the launcher with larger icons, the global menu, the shifted window control buttons, notification area changes .. etc.</p>

<p>Since it&rsquo;s based on GTK3, I know you can modify this all, but I&rsquo;d rather just use a desktop environment that doesn&rsquo;t require that level of tweaking.</p>

<p>Enter Cinnamon. Cinnamon is developed by the Linux Mint team, which has a distribution based on Ubuntu.</p>

<p>Over at the <a href="http://www.linuxbsdos.com/2012/04/26/install-the-latest-and-greatest-cinnamon-desktop-on-ubuntu-12-04/">LinuxBSDOS</a> blog, there was an article on how to get Cinnamon installed in the latest Ubuntu.</p>

<p>I found that after doing this, I ended up with no sound. To fix this, <a href="http://askubuntu.com/questions/135778/no-sound-on-ubuntu-12-04/153470#153470">AskUbuntu</a> has an article that I found useful.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shoutcast Streaming from the Command Line]]></title>
    <link href="http://alexbevi.com/blog/2012/07/18/shoutcast-streaming-from-the-command-line/"/>
    <updated>2012-07-18T08:20:00-04:00</updated>
    <id>http://alexbevi.com/blog/2012/07/18/shoutcast-streaming-from-the-command-line</id>
    <content type="html"><![CDATA[<p>I spend a lot of time working in a terminal, and I like to spend that time listening to music. Since I work primarly in Linux, I was hoping there would be an easy way to merge these two activities &hellip; and it turns out there was :)</p>

<!-- more -->


<p>After searching around, i found a <a href="http://crunchbanglinux.org/forums/post/150587/#p150587">post on the crunchbang forums</a> that provided exactly the script I was looking for.</p>

<p>I modified it a tiny bit to check for dependencies:</p>

<p>{% codeblock Linux Shoutcast Search and Streaming &ndash; shoutcast.sh lang:bash %}</p>

<h1>!/bin/bash</h1>

<h1>search shoutcast and send url to radiotray or another player</h1>

<h1>needs Bash 4, curl, [radiotray], [xsel to send url to X selection for pasting]</h1>

<h1>(comment out line 53 &ldquo;printf &lsquo;%s&rsquo;&hellip;&rdquo; if you don&rsquo;t use xsel)</h1>

<p>command -v curl > /dev/null 2>&amp;1 || { echo &ldquo;curl required.&rdquo; >&2; exit 1; }
command -v xsel > /dev/null 2>&amp;1 || { echo &ldquo;xsel required.&rdquo; >&2; exit 1; }
command -v radiotray > /dev/null 2>&amp;1 || { echo &ldquo;radiotray required.&rdquo; >&2; exit 1; }</p>

<h1>choose player (&amp; options if necessary): radio url will be sent to it.</h1>

<p>radioplay() {</p>

<pre><code>radiotray "$1"
</code></pre>

<h1>mplayer -playlist &ldquo;$1&rdquo; # replace &lsquo;mplayer -playlist&rsquo; to taste, $1 will hold the url</h1>

<h1>exec mplayer -playlist &ldquo;$1&rdquo; # add &lsquo;exec&rsquo; if you&rsquo;d rather launch player and leave script</h1>

<p>}</p>

<h1>start up radiotray in background if it&rsquo;s not already running</h1>

<h1>Comment out this line if you don&rsquo;t use radiotray.</h1>

<p>pgrep radiotray >/dev/null || ( radiotray >/dev/null 2>&amp;1 &amp; )</p>

<h6>#</h6>

<p>while true
do
echo &ldquo;Please enter keyword(s)&rdquo;
read keyword
keyword=&ldquo;${keyword// /%20}&rdquo; # escape spaces for url
results=$( curl -s &ldquo;<a href="http://www.shoutcast.com/Internet-Radio/$keyword">http://www.shoutcast.com/Internet-Radio/$keyword</a>&rdquo; |awk &lsquo;
BEGIN {</p>

<pre><code>RS="&lt;div class=\"dirlist\"&gt;"
FS="&gt;"
</code></pre>

<p>}
NR &lt; 2 {next}
{url = name = $2
sub(/^.<em>title=\&ldquo;/,&rdquo;&ldquo;,name)
sub(/\&rdquo;.</em>$/,&ldquo;&rdquo;,name)
sub(/^.<em>href=\&ldquo;/,&rdquo;&ldquo;,url)
sub(/\&rdquo;.</em>$/,&ldquo;&rdquo;,url)
print url,name }
&lsquo; )
[[ $results ]] || { echo &ldquo;Sorry, no results for $keyword&rdquo;; continue;}</p>

<p>unset list
declare -A list # make associative array
while read url name # read in awk&rsquo;s output
do</p>

<pre><code>list["$name"]="$url"
</code></pre>

<p>done &lt;&lt;&lt; &ldquo;$results&rdquo;</p>

<p>PS3=&lsquo;Please enter the number of your choice > &rsquo;
while true
do</p>

<pre><code>select station in "${!list[@]}" 'Search Again' Quit
do
    [[ $station = 'Search Again' ]] &amp;&amp; break 2
    [[ $station = Quit ]] &amp;&amp; { echo 'Goodbye...'; exit; }
    [[ $station ]] &amp;&amp; {
    printf '%s' "${list[$station]}" | xsel --input #--clipboard  # can paste url
    radioplay "${list[$station]}"
    break
    }
done
</code></pre>

<p>echo &ldquo;
Last station chosen was $station ( ${list[$station]} )
&rdquo;
done</p>

<p>done # closes loop started at line 18
exit
{% endcodeblock %}</p>
]]></content>
  </entry>
  
</feed>
