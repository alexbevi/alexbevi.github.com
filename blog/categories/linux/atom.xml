<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | ALEX BEVILACQUA]]></title>
  <link href="http://www.alexbevi.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://www.alexbevi.com/"/>
  <updated>2014-07-15T16:06:19-04:00</updated>
  <id>http://www.alexbevi.com/</id>
  <author>
    <name><![CDATA[Alex Bevilacqua]]></name>
    <email><![CDATA[alex@alexbevi.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Accessing a running process' STDOUT]]></title>
    <link href="http://www.alexbevi.com/blog/2014/06/02/accessing-stdout-of-a-running-process/"/>
    <updated>2014-06-02T09:16:54-04:00</updated>
    <id>http://www.alexbevi.com/blog/2014/06/02/accessing-stdout-of-a-running-process</id>
    <content type="html"><![CDATA[I'm currently doing a lot of scripting at work. Although the primary environment is Windows, I have to manage some Linux processes as well.

One example is a series of PowerShell scripts I've written which abstract away various ETL tasks tha we need in order to get legacy data extracted, updated and inserted into other databases.

<img src="/images/20140602-001.jpg">

<!-- more -->

One of the longer running processes I have is a Ruby Rake task that processes an uploaded CSV file. This can potentially take a long time, and although I could modify the script to feed progress data back, I'd like to demonstrate how to followup from another terminal session.

Any Rake task I write that can potentially take a while, I tend to jazz up a bit with progress details. For this current example, I am using the [progress_bar](https://github.com/paul/progress_bar) gem, which writes an ASCII progress bar to the terminal along with some other useful progress information.

If I were to execute the task directly, I could watch the progress directly. Since we're running this script remotely though, this information isn't directly accessible.

In order to gain access to the progress info for this taks, we'll need to access the process' STDOUT from an alternate session.

The first step is to find the PID of the process we would like:

    ps aux | grep ruby

    >> 1001     16544 67.7 29.4 1319420 506456 ?      Rl   13:00   3:02 ruby rake phoenix:sync_locations_from_csv

Now that we have the PID, we can pass this to [strace](http://en.wikipedia.org/wiki/Strace) in order to gain a bit more insight into the current process.

    sudo strace -p 16544 -s 80 -e write 2>&1 | grep "write(2, \"\["

<img src="/images/20140602-002.jpg">

We're redirecting the output of *strace* in order to further filter the results using [grep](http://en.wikipedia.org/wiki/Grep). Depending on what process you're looking to monitor you may need to adjust your grep conditions.

You can also exclude the redirect and grep entirely, but this may result in too much information to be useful ;)
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disable Hot Corner Hover in Linux Mint]]></title>
    <link href="http://www.alexbevi.com/blog/2012/11/02/disable-hot-corner-hover-in-linux-mint-13/"/>
    <updated>2012-11-02T08:01:00-04:00</updated>
    <id>http://www.alexbevi.com/blog/2012/11/02/disable-hot-corner-hover-in-linux-mint-13</id>
    <content type="html"><![CDATA[**UPDATE** For Linux Mint 16, the `hotCorner` settings have been moved to `/usr/share/cinnamon/js/ui/hotCorner.js`.

I use [Synergy](http://www.synergy-foss.org) on all my computers to share a common mouse and keyboard, but I've found that with Gnome 3 based distributions, the hot corner was causing me some grief.

The beauty of using a Linux-based system though is that you can pretty much change anything you're unhappy with, so that's what I'm here to do.

<!-- more -->

By default, [Linux Mint](http://linuxmint.com) uses the [Cinnamon](http://cinnamon.linuxmint.com) desktop, so the configuration file we're looking for is at `/usr/share/cinammon/js/ui/layout.js`. 

For Linux Mint 12, which still used [Gnome Shell](https://live.gnome.org/GnomeShell), the file was at `/usr/share/gnome-shell/js/ui/layout.js`.

Edit the appropriate file

    $ sudo nano /usr/share/cinammon/js/ui/layout.js

Locate the following section (I just searched for _hot-corner_)

``` javascript
this._corner = new Clutter.Rectangle({ name: 'hot-corner',
                                       width: 1,
                                       height: 1,
                                       opacity: 0,
                                       reactive: true });
```

And change the value of `reactive` from _true_ to _false_:

``` javascript
this._corner = new Clutter.Rectangle({ name: 'hot-corner',
                                       width: 1,
                                       height: 1,
                                       opacity: 0,
                                       reactive: false });
```

Log off, then back on. Booya!]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing Broken Sudo]]></title>
    <link href="http://www.alexbevi.com/blog/2012/10/30/fixing-broken-sudo/"/>
    <updated>2012-10-30T14:58:00-04:00</updated>
    <id>http://www.alexbevi.com/blog/2012/10/30/fixing-broken-sudo</id>
    <content type="html"><![CDATA[This is pretty much a transcription of [http://www.psychocats.net/ubuntu/fixsudo](http://www.psychocats.net/ubuntu/fixsudo), which is just such a good article I wanted to keep a copy for reference.

## How does _sudo_ work?

The way that Ubuntu has implemented _sudo_, the `/etc/sudoers` file says that users in the admin group can (after a password authentication) temporarily escalate to system-wide privileges for particular tasks. And then the `/etc/groups` file says which users are in the admin group.

You can read more on [the community documentation](https://help.ubuntu.com/community/RootSudo) about Ubuntu's implementation of _sudo_.

<!-- more -->

## Cause and Symptoms

_sudo_ breaks when one or more of the following occurs:

* the `/etc/sudoers` file has been altered to no longer allow users in the admin group to escalate privilege
* the permissions on the `/etc/sudoers` file are changed to something other than 0440
* a user who should not have been has been taken out of the _admin_ group

<img class="center" src="/images/fixsudoprecise01.jpg">

If _sudo_ is broken this way, you may notice an error saying you're not in the _sudo_ers file and the incident is going to be reported. Or you may just see the next command prompt without any action being executed.


## Booting into recovery mode

Since fixing _sudo_ involves editing system files, and you would otherwise need _sudo_ to do so, you'll have to boot into recovery mode to gain root (system-wide) access in order to repair _sudo_.

If you have a single-boot (Ubuntu is the only operating system on your computer), to get the boot menu to show, you have to hold down the Shift key during bootup.

If you have a dual-boot (Ubuntu is installed next to Windows, another Linux operating system, or Mac OS X; and you choose at boot time which operating system to boot into), the boot menu should appear without the need to hold down the _Shift_ key.

<img class="center" src="/images/fixsudoprecise02.jpg">

From the boot menu, select _recovery mode_, which is usually the second boot option.

<img class="center" src="/images/fixsudoprecise03.jpg">

After you select recovery mode and wait for all the boot-up processes to finish, you'll be presented with a few options. In this case, you want the *Drop to root shell* prompt option so press the Down arrow to get to that option, and then press Enter to select it.

The root account is the ultimate administrator and can do anything to the Ubuntu installation (including erase it), so please be careful with what commands you enter in the root terminal.

In recent versions of Ubuntu, the filesystem is mounted as read-only, so you need to enter the follow command to get it to remount as read-write, which will allow you to make changes:

    mount -o rw,remount /

## Do the actual repair

### Case 1

If you'd removed your last _admin_ user from the _admin_ group, then type

    adduser username admin

where _username_ is your actual username.

### Case 2

If you had previously edited the /etc/_sudo_ers file and screwed it up, then type

    sudo cp /etc/sudoers /etc/sudoers.backup
    sudo nano /etc/sudoers

(the proper command is actually `sudo visudo`, which checks syntax before you save the `/etc/sudoers` file, but in some older versions of Ubuntu, that command uses the vi editor, which can be confusing to new users, as opposed to nano, which is more straightforward)
and make it sure it looks like this:

    #
    # This file MUST be edited with the 'visudo' command as root.
    #
    # Please consider adding local content in /etc/sudoers.d/ instead of
    # directly modifying this file.
    #
    # See the man page for details on how to write a sudoers file.
    #
    Defaults  env_reset
    Defaults  secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    # Host alias specification

    # User alias specification

    # Cmnd alias specification

    # User privilege specification
    root  ALL=(ALL:ALL) ALL

    # Members of the admin group may gain root privileges
    %admin ALL=(ALL) ALL

    # Allow members of group sudo to execute any command
    %sudo ALL=(ALL:ALL) ALL

    # See sudoers(5) for more information on "#include" directives:

    #includedir /etc/sudoers.d

When you're done making changes, press _Control-X, Y, Enter_.

### Case 3

If you are trying to fix the error where it says _sudo_ is mode _____, should be 0440, then you'll want to type
    
    chmod 0440 /etc/sudoers

When you're done with whatever commands you needed to enter, type

    exit

This will bring you back to the recovery menu.

<img class="center" src="/images/fixsudoprecise04.jpg">
<img class="center" src="/images/fixsudoprecise05.jpg">

Choose to resume a normal boot. Then you should be able to _sudo_ again.]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 12.04 Desktop WITHOUT Unity]]></title>
    <link href="http://www.alexbevi.com/blog/2012/08/10/ubuntu-12-dot-04-desktop-without-unity/"/>
    <updated>2012-08-10T08:03:00-04:00</updated>
    <id>http://www.alexbevi.com/blog/2012/08/10/ubuntu-12-dot-04-desktop-without-unity</id>
    <content type="html"><![CDATA[As much as I enjoy Ubuntu, I haven't warmed to their Unity desktop. I personally find it's too similar to OS X, I don't really like the launcher with larger icons, the global menu, the shifted window control buttons, notification area changes .. etc.

Since it's based on GTK3, I know you can modify this all, but I'd rather just use a desktop environment that doesn't require that level of tweaking.

Enter Cinnamon. Cinnamon is developed by the Linux Mint team, which has a distribution based on Ubuntu.

Over at the [LinuxBSDOS](http://www.linuxbsdos.com/2012/04/26/install-the-latest-and-greatest-cinnamon-desktop-on-ubuntu-12-04/) blog, there was an article on how to get Cinnamon installed in the latest Ubuntu.

I found that after doing this, I ended up with no sound. To fix this, [AskUbuntu](http://askubuntu.com/questions/135778/no-sound-on-ubuntu-12-04/153470#153470) has an article that I found useful.]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shoutcast Streaming from the Command Line]]></title>
    <link href="http://www.alexbevi.com/blog/2012/07/18/shoutcast-streaming-from-the-command-line/"/>
    <updated>2012-07-18T08:20:00-04:00</updated>
    <id>http://www.alexbevi.com/blog/2012/07/18/shoutcast-streaming-from-the-command-line</id>
    <content type="html"><![CDATA[I spend a lot of time working in a terminal, and I like to spend that time listening to music. Since I work primarly in Linux, I was hoping there would be an easy way to merge these two activities ... and it turns out there was :)

<!-- more -->

After searching around, i found a [post on the crunchbang forums](http://crunchbanglinux.org/forums/post/150587/#p150587) that provided exactly the script I was looking for.

I modified it a tiny bit to check for dependencies:

<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Linux Shoutcast Search and Streaming - shoutcast.sh </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="c"># search shoutcast and send url to radiotray or another player</span>
</span><span class='line'><span class="c"># needs Bash 4, curl, [radiotray], [xsel to send url to X selection for pasting]</span>
</span><span class='line'><span class="c"># (comment out line 53 &quot;printf &#39;%s&#39;...&quot; if you don&#39;t use xsel)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">command</span> -v curl &gt; /dev/null 2&gt;&amp;1 <span class="o">||</span> <span class="o">{</span> <span class="nb">echo</span> <span class="s2">&quot;curl required.&quot;</span> &gt;&amp;2; <span class="nb">exit </span>1; <span class="o">}</span>
</span><span class='line'><span class="nb">command</span> -v xsel &gt; /dev/null 2&gt;&amp;1 <span class="o">||</span> <span class="o">{</span> <span class="nb">echo</span> <span class="s2">&quot;xsel required.&quot;</span> &gt;&amp;2; <span class="nb">exit </span>1; <span class="o">}</span>
</span><span class='line'><span class="nb">command</span> -v radiotray &gt; /dev/null 2&gt;&amp;1 <span class="o">||</span> <span class="o">{</span> <span class="nb">echo</span> <span class="s2">&quot;radiotray required.&quot;</span> &gt;&amp;2; <span class="nb">exit </span>1; <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># choose player (&amp; options if necessary): radio url will be sent to it.</span>
</span><span class='line'>radioplay<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    radiotray <span class="s2">&quot;$1&quot;</span>
</span><span class='line'><span class="c">#    mplayer -playlist &quot;$1&quot; # replace &#39;mplayer -playlist&#39; to taste, $1 will hold the url</span>
</span><span class='line'><span class="c">#    exec mplayer -playlist &quot;$1&quot; # add &#39;exec&#39; if you&#39;d rather launch player and leave script</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># start up radiotray in background if it&#39;s not already running</span>
</span><span class='line'><span class="c"># Comment out this line if you don&#39;t use radiotray.</span>
</span><span class='line'>pgrep radiotray &gt;/dev/null <span class="o">||</span> <span class="o">(</span> radiotray &gt;/dev/null 2&gt;&amp;1 &amp; <span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">##########################################################################</span>
</span><span class='line'><span class="k">while </span><span class="nb">true</span>
</span><span class='line'><span class="k">do</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Please enter keyword(s)&quot;</span>
</span><span class='line'><span class="nb">read </span>keyword
</span><span class='line'><span class="nv">keyword</span><span class="o">=</span><span class="s2">&quot;${keyword// /%20}&quot;</span> <span class="c"># escape spaces for url</span>
</span><span class='line'><span class="nv">results</span><span class="o">=</span><span class="k">$(</span> curl -s <span class="s2">&quot;http://www.shoutcast.com/Internet-Radio/$keyword&quot;</span> |awk <span class="s1">&#39;</span>
</span><span class='line'><span class="s1">BEGIN {</span>
</span><span class='line'><span class="s1">    RS=&quot;&lt;div class=\&quot;dirlist\&quot;&gt;&quot;</span>
</span><span class='line'><span class="s1">    FS=&quot;&gt;&quot;</span>
</span><span class='line'><span class="s1">}</span>
</span><span class='line'><span class="s1">NR &lt; 2 {next}</span>
</span><span class='line'><span class="s1">{url = name = $2</span>
</span><span class='line'><span class="s1">sub(/^.*title=\&quot;/,&quot;&quot;,name)</span>
</span><span class='line'><span class="s1">sub(/\&quot;.*$/,&quot;&quot;,name)</span>
</span><span class='line'><span class="s1">sub(/^.*href=\&quot;/,&quot;&quot;,url)</span>
</span><span class='line'><span class="s1">sub(/\&quot;.*$/,&quot;&quot;,url)</span>
</span><span class='line'><span class="s1">print url,name }</span>
</span><span class='line'><span class="s1">&#39;</span> <span class="k">)</span>
</span><span class='line'><span class="o">[[</span> <span class="nv">$results</span> <span class="o">]]</span> <span class="o">||</span> <span class="o">{</span> <span class="nb">echo</span> <span class="s2">&quot;Sorry, no results for $keyword&quot;</span>; <span class="k">continue</span>;<span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nb">unset </span>list
</span><span class='line'><span class="nb">declare</span> -A list <span class="c"># make associative array</span>
</span><span class='line'><span class="k">while </span><span class="nb">read </span>url name <span class="c"># read in awk&#39;s output</span>
</span><span class='line'><span class="k">do</span>
</span><span class='line'><span class="k">    </span>list<span class="o">[</span><span class="s2">&quot;$name&quot;</span><span class="o">]=</span><span class="s2">&quot;$url&quot;</span>
</span><span class='line'><span class="k">done</span> &lt;&lt;&lt; <span class="s2">&quot;$results&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">PS3</span><span class="o">=</span><span class="s1">&#39;Please enter the number of your choice &gt; &#39;</span>
</span><span class='line'><span class="k">while </span><span class="nb">true</span>
</span><span class='line'><span class="k">do</span>
</span><span class='line'><span class="k">    select </span>station in <span class="s2">&quot;${!list[@]}&quot;</span> <span class="s1">&#39;Search Again&#39;</span> Quit
</span><span class='line'>    <span class="k">do</span>
</span><span class='line'>        <span class="o">[[</span> <span class="nv">$station</span> <span class="o">=</span> <span class="s1">&#39;Search Again&#39;</span> <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="nb">break </span>2
</span><span class='line'>        <span class="o">[[</span> <span class="nv">$station</span> <span class="o">=</span> Quit <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="o">{</span> <span class="nb">echo</span> <span class="s1">&#39;Goodbye...&#39;</span>; <span class="nb">exit</span>; <span class="o">}</span>
</span><span class='line'>        <span class="o">[[</span> <span class="nv">$station</span> <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="o">{</span>
</span><span class='line'>        <span class="nb">printf</span> <span class="s1">&#39;%s&#39;</span> <span class="s2">&quot;${list[$station]}&quot;</span> | xsel --input <span class="c">#--clipboard  # can paste url</span>
</span><span class='line'>        radioplay <span class="s2">&quot;${list[$station]}&quot;</span>
</span><span class='line'>        <span class="nb">break</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="k">done</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;</span>
</span><span class='line'><span class="s2">Last station chosen was $station ( ${list[$station]} )</span>
</span><span class='line'><span class="s2">&quot;</span>
</span><span class='line'><span class="k">done</span>
</span><span class='line'>
</span><span class='line'><span class="k">done</span> <span class="c"># closes loop started at line 18</span>
</span><span class='line'><span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>]]></content>
  </entry>
  
</feed>
