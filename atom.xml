<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ALEX BEVILACQUA]]></title>
  <link href="http://alexbevi.com/atom.xml" rel="self"/>
  <link href="http://alexbevi.com/"/>
  <updated>2012-08-23T10:38:52-04:00</updated>
  <id>http://alexbevi.com/</id>
  <author>
    <name><![CDATA[Alex Bevilacqua]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Keeping Pry Breakpoints out of Git]]></title>
    <link href="http://alexbevi.com/blog/2012/08/23/keeping-pry-breakpoints-out-of-git/"/>
    <updated>2012-08-23T07:57:00-04:00</updated>
    <id>http://alexbevi.com/blog/2012/08/23/keeping-pry-breakpoints-out-of-git</id>
    <content type="html"><![CDATA[<p>My Ruby workflow as of late has almost always contained <a href="http://www.git-scm.com">Git</a> for version control, and <a href="http://pryrepl.org/">Pry</a> for debugging.</p>

<p>Although it&#8217;s extremely convenient during development to add a quick breakpoint using <code>binding.pry</code>, it can be a bit frustrating to clients if you accidentally deploy with these breakpoints still intact.</p>

<!-- more -->


<p>After hunting around for a bit, I decided to write a pre-commit <a href="http://git-scm.com/book/en/Customizing-Git-Git-Hooks">hook</a> that would check the files I was about to check in to ensure that I didn&#8217;t accidentally still have breakpoints enabled.</p>

<div><script src='https://gist.github.com/3436040.js?file='></script>
<noscript><pre><code># Git pre-commit hook
#
# Check all Ruby (*.rb) files for Pry breakpoint references
#
# Based on http://codeinthehole.com/writing/tips-for-using-a-git-pre-commit-hook/
#
# Intallation:
#       ln -s /path/to/pre-commit.sh /path/to/project/.git/hooks/pre-commit
#
FORBIDDEN='binding.pry'
git diff --cached --name-only | \
    find -name '*.rb' | \
    GREP_COLOR='4;5;37;41' xargs grep --color --with-filename -n $FORBIDDEN &amp;&amp; \
    echo 'COMMIT REJECTED Found &quot;$FORBIDDEN&quot; references. Please remove them before commiting' &amp;&amp; \
    exit 1</code></pre></noscript></div>


<p>This file just needs to be saved to <code>/path/to/source/.git/hooks/pre-commit</code> and made exectuable.</p>

<p>If you happen to leave a breakpoint intact, the next time you try to commit your changes, the commit will fail and indicate where these breakpoints are, and what files need to be updated to allow the commit to succeed.</p>

<p><img src="http://alexbevi.com/images/2012-08-23-ss.png"></p>

<p>Note that this is just a quick sample for Ruby source. If you wanted to search your template files <code>(haml|erb|rhtml ... etc)</code>, you could replace the <code>find</code> with a <code>grep -E</code> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 12.04 Desktop WITHOUT Unity]]></title>
    <link href="http://alexbevi.com/blog/2012/08/10/ubuntu-12-dot-04-desktop-without-unity/"/>
    <updated>2012-08-10T08:03:00-04:00</updated>
    <id>http://alexbevi.com/blog/2012/08/10/ubuntu-12-dot-04-desktop-without-unity</id>
    <content type="html"><![CDATA[<p>As much as I enjoy Ubuntu, I haven&#8217;t warmed to their Unity desktop. I personally find it&#8217;s too similar to OS X, I don&#8217;t really like the launcher with larger icons, the global menu, the shifted window control buttons, notification area changes .. etc.</p>

<p>Since it&#8217;s based on GTK3, I know you can modify this all, but I&#8217;d rather just use a desktop environment that doesn&#8217;t require that level of tweaking.</p>

<p>Enter Cinnamon. Cinnamon is developed by the Linux Mint team, which has a distribution based on Ubuntu.</p>

<p>Over at the <a href="http://www.linuxbsdos.com/2012/04/26/install-the-latest-and-greatest-cinnamon-desktop-on-ubuntu-12-04/">LinuxBSDOS</a> blog, there was an article on how to get Cinnamon installed in the latest Ubuntu.</p>

<p>I found that after doing this, I ended up with no sound. To fix this, <a href="http://askubuntu.com/questions/135778/no-sound-on-ubuntu-12-04/153470#153470">AskUbuntu</a> has an article that I found useful.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shoutcast Streaming from the Command Line]]></title>
    <link href="http://alexbevi.com/blog/2012/07/18/shoutcast-streaming-from-the-command-line/"/>
    <updated>2012-07-18T08:20:00-04:00</updated>
    <id>http://alexbevi.com/blog/2012/07/18/shoutcast-streaming-from-the-command-line</id>
    <content type="html"><![CDATA[<p>I spend a lot of time working in a terminal, and I like to spend that time listening to music. Since I work primarly in Linux, I was hoping there would be an easy way to merge these two activities &#8230; and it turns out there was :)</p>

<!-- more -->


<p>After searching around, i found a <a href="http://crunchbanglinux.org/forums/post/150587/#p150587">post on the crunchbang forums</a> that provided exactly the script I was looking for.</p>

<p>I modified it a tiny bit to check for dependencies:</p>

<figure class='code'><figcaption><span>Linux Shoutcast Search and Streaming - shoutcast.sh  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="c"># search shoutcast and send url to radiotray or another player</span>
</span><span class='line'><span class="c"># needs Bash 4, curl, [radiotray], [xsel to send url to X selection for pasting]</span>
</span><span class='line'><span class="c"># (comment out line 53 &quot;printf &#39;%s&#39;...&quot; if you don&#39;t use xsel)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">command</span> -v curl &gt; /dev/null 2&gt;&amp;1 <span class="o">||</span> <span class="o">{</span> <span class="nb">echo</span> <span class="s2">&quot;curl required.&quot;</span> &gt;&amp;2; <span class="nb">exit </span>1; <span class="o">}</span>
</span><span class='line'><span class="nb">command</span> -v xsel &gt; /dev/null 2&gt;&amp;1 <span class="o">||</span> <span class="o">{</span> <span class="nb">echo</span> <span class="s2">&quot;xsel required.&quot;</span> &gt;&amp;2; <span class="nb">exit </span>1; <span class="o">}</span>
</span><span class='line'><span class="nb">command</span> -v radiotray &gt; /dev/null 2&gt;&amp;1 <span class="o">||</span> <span class="o">{</span> <span class="nb">echo</span> <span class="s2">&quot;radiotray required.&quot;</span> &gt;&amp;2; <span class="nb">exit </span>1; <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># choose player (&amp; options if necessary): radio url will be sent to it.</span>
</span><span class='line'>radioplay<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    radiotray <span class="s2">&quot;$1&quot;</span>
</span><span class='line'><span class="c">#    mplayer -playlist &quot;$1&quot; # replace &#39;mplayer -playlist&#39; to taste, $1 will hold the url</span>
</span><span class='line'><span class="c">#    exec mplayer -playlist &quot;$1&quot; # add &#39;exec&#39; if you&#39;d rather launch player and leave script</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># start up radiotray in background if it&#39;s not already running</span>
</span><span class='line'><span class="c"># Comment out this line if you don&#39;t use radiotray.</span>
</span><span class='line'>pgrep radiotray &gt;/dev/null <span class="o">||</span> <span class="o">(</span> radiotray &gt;/dev/null 2&gt;&amp;1 &amp; <span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">##########################################################################</span>
</span><span class='line'><span class="k">while </span><span class="nb">true</span>
</span><span class='line'><span class="k">do</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Please enter keyword(s)&quot;</span>
</span><span class='line'><span class="nb">read </span>keyword
</span><span class='line'><span class="nv">keyword</span><span class="o">=</span><span class="s2">&quot;${keyword// /%20}&quot;</span> <span class="c"># escape spaces for url</span>
</span><span class='line'><span class="nv">results</span><span class="o">=</span><span class="k">$(</span> curl -s <span class="s2">&quot;http://www.shoutcast.com/Internet-Radio/$keyword&quot;</span> |awk <span class="s1">&#39;</span>
</span><span class='line'><span class="s1">BEGIN {</span>
</span><span class='line'><span class="s1">    RS=&quot;&lt;div class=\&quot;dirlist\&quot;&gt;&quot;</span>
</span><span class='line'><span class="s1">    FS=&quot;&gt;&quot;</span>
</span><span class='line'><span class="s1">}</span>
</span><span class='line'><span class="s1">NR &lt; 2 {next}</span>
</span><span class='line'><span class="s1">{url = name = $2</span>
</span><span class='line'><span class="s1">sub(/^.*title=\&quot;/,&quot;&quot;,name)</span>
</span><span class='line'><span class="s1">sub(/\&quot;.*$/,&quot;&quot;,name)</span>
</span><span class='line'><span class="s1">sub(/^.*href=\&quot;/,&quot;&quot;,url)</span>
</span><span class='line'><span class="s1">sub(/\&quot;.*$/,&quot;&quot;,url)</span>
</span><span class='line'><span class="s1">print url,name }</span>
</span><span class='line'><span class="s1">&#39;</span> <span class="k">)</span>
</span><span class='line'><span class="o">[[</span> <span class="nv">$results</span> <span class="o">]]</span> <span class="o">||</span> <span class="o">{</span> <span class="nb">echo</span> <span class="s2">&quot;Sorry, no results for $keyword&quot;</span>; <span class="k">continue</span>;<span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nb">unset </span>list
</span><span class='line'><span class="nb">declare</span> -A list <span class="c"># make associative array</span>
</span><span class='line'><span class="k">while </span><span class="nb">read </span>url name <span class="c"># read in awk&#39;s output</span>
</span><span class='line'><span class="k">do</span>
</span><span class='line'><span class="k">    </span>list<span class="o">[</span><span class="s2">&quot;$name&quot;</span><span class="o">]=</span><span class="s2">&quot;$url&quot;</span>
</span><span class='line'><span class="k">done</span> &lt;&lt;&lt; <span class="s2">&quot;$results&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">PS3</span><span class="o">=</span><span class="s1">&#39;Please enter the number of your choice &gt; &#39;</span>
</span><span class='line'><span class="k">while </span><span class="nb">true</span>
</span><span class='line'><span class="k">do</span>
</span><span class='line'><span class="k">    select </span>station in <span class="s2">&quot;${!list[@]}&quot;</span> <span class="s1">&#39;Search Again&#39;</span> Quit
</span><span class='line'>    <span class="k">do</span>
</span><span class='line'>        <span class="o">[[</span> <span class="nv">$station</span> <span class="o">=</span> <span class="s1">&#39;Search Again&#39;</span> <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="nb">break </span>2
</span><span class='line'>        <span class="o">[[</span> <span class="nv">$station</span> <span class="o">=</span> Quit <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="o">{</span> <span class="nb">echo</span> <span class="s1">&#39;Goodbye...&#39;</span>; <span class="nb">exit</span>; <span class="o">}</span>
</span><span class='line'>        <span class="o">[[</span> <span class="nv">$station</span> <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="o">{</span>
</span><span class='line'>        <span class="nb">printf</span> <span class="s1">&#39;%s&#39;</span> <span class="s2">&quot;${list[$station]}&quot;</span> | xsel --input <span class="c">#--clipboard  # can paste url</span>
</span><span class='line'>        radioplay <span class="s2">&quot;${list[$station]}&quot;</span>
</span><span class='line'>        <span class="nb">break</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="k">done</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;</span>
</span><span class='line'><span class="s2">Last station chosen was $station ( ${list[$station]} )</span>
</span><span class='line'><span class="s2">&quot;</span>
</span><span class='line'><span class="k">done</span>
</span><span class='line'>
</span><span class='line'><span class="k">done</span> <span class="c"># closes loop started at line 18</span>
</span><span class='line'><span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Here we go again ...]]></title>
    <link href="http://alexbevi.com/blog/2012/07/18/here-we-go-again-dot-dot-dot/"/>
    <updated>2012-07-18T07:53:00-04:00</updated>
    <id>http://alexbevi.com/blog/2012/07/18/here-we-go-again-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>So, another year, another blogging engine, another crack at blogging.</p>

<p>This time around I&#8217;m trying out <a href="http://octopress.org">Octopress</a>. There&#8217;s something very appealing about being able to interact with this blog via rake tasks and <a href="http://git-scm.com">Git</a>.</p>

<!-- more -->


<p>This page was generated using <code>rake new_post["Here we go again ..."]</code></p>

<p>Octopress is essentially <a href="https://github.com/mojombo/jekyll/">Jekyll</a>, which means it can be deployed very easily to either <a href="https://github.com">Github</a> or <a href="http://www.heroku.com">Heroku</a>.</p>

<p>Why all the links you may ask? Because I can write posts using <a href="http://daringfireball.net/projects/markdown">Markdown</a>, and I sometimes mix up the syntax between Markdown and <a href="http://www.textism.com/tools/textile/">Textile</a>, so I&#8217;m just trying to hammer it into my brain ;)</p>
]]></content>
  </entry>
  
</feed>
